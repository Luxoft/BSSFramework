//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleSystem.BLL
{
    
    
    #region 
	static
    public class SampleSystemSecurityOperation
    {
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _approveWorkflowOperation = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ApproveWorkflowOperation);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _approvingWorkflowOperation = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ApprovingWorkflowOperation);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _authorizationImpersonate = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.AuthorizationImpersonate);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitHrDepartmentEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitHrDepartmentView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitManagerCommissionLinkEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitManagerCommissionLinkView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitTypeEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitTypeView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _businessUnitView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView, Framework.HierarchicalExpand.HierarchicalExpandType.All);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _companyLegalEntityEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _companyLegalEntityView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _countryEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.CountryEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _countryView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.CountryView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _createManagementUnitStart = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.CreateManagementUnitStart, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.DisabledSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _disabled = new Framework.SecuritySystem.DisabledSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>();
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeeEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeePersonalCellPhoneEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeePersonalCellPhoneView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeePositionEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeePositionView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeeRoleDegreeView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleDegreeView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeeRoleView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeeSpecializationView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeeSpecializationView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _employeeView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _hRDepartmentAdvancedEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentAdvancedEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _hRDepartmentEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _hRDepartmentView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _locationEdit = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.LocationEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _locationOpenModule = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.LocationOpenModule);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _locationView = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.LocationView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitAndBusinessUnitLinkEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitAndBusinessUnitLinkView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitAndHRDepartmentLinkEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitAndHRDepartmentLinkView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitChangeEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitChangeEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitChangeView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitChangeView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitEdit = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _managementUnitView = new Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView, Framework.HierarchicalExpand.HierarchicalExpandType.All);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _searchNotificationOperation = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.SearchNotificationOperation);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> _systemIntegration = new Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration);
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ApproveWorkflowOperation
        {
            get
            {
                return _approveWorkflowOperation;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ApprovingWorkflowOperation
        {
            get
            {
                return _approvingWorkflowOperation;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> AuthorizationImpersonate
        {
            get
            {
                return _authorizationImpersonate;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitEdit
        {
            get
            {
                return _businessUnitEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitHrDepartmentEdit
        {
            get
            {
                return _businessUnitHrDepartmentEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitHrDepartmentView
        {
            get
            {
                return _businessUnitHrDepartmentView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitManagerCommissionLinkEdit
        {
            get
            {
                return _businessUnitManagerCommissionLinkEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitManagerCommissionLinkView
        {
            get
            {
                return _businessUnitManagerCommissionLinkView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitTypeEdit
        {
            get
            {
                return _businessUnitTypeEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitTypeView
        {
            get
            {
                return _businessUnitTypeView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> BusinessUnitView
        {
            get
            {
                return _businessUnitView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> CompanyLegalEntityEdit
        {
            get
            {
                return _companyLegalEntityEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> CompanyLegalEntityView
        {
            get
            {
                return _companyLegalEntityView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> CountryEdit
        {
            get
            {
                return _countryEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> CountryView
        {
            get
            {
                return _countryView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> CreateManagementUnitStart
        {
            get
            {
                return _createManagementUnitStart;
            }
        }
        
        public static Framework.SecuritySystem.DisabledSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> Disabled
        {
            get
            {
                return _disabled;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeeEdit
        {
            get
            {
                return _employeeEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeePersonalCellPhoneEdit
        {
            get
            {
                return _employeePersonalCellPhoneEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeePersonalCellPhoneView
        {
            get
            {
                return _employeePersonalCellPhoneView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeePositionEdit
        {
            get
            {
                return _employeePositionEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeePositionView
        {
            get
            {
                return _employeePositionView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeeRoleDegreeView
        {
            get
            {
                return _employeeRoleDegreeView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeeRoleView
        {
            get
            {
                return _employeeRoleView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeeSpecializationView
        {
            get
            {
                return _employeeSpecializationView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> EmployeeView
        {
            get
            {
                return _employeeView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> HRDepartmentAdvancedEdit
        {
            get
            {
                return _hRDepartmentAdvancedEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> HRDepartmentEdit
        {
            get
            {
                return _hRDepartmentEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> HRDepartmentView
        {
            get
            {
                return _hRDepartmentView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> LocationEdit
        {
            get
            {
                return _locationEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> LocationOpenModule
        {
            get
            {
                return _locationOpenModule;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> LocationView
        {
            get
            {
                return _locationView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitAndBusinessUnitLinkEdit
        {
            get
            {
                return _managementUnitAndBusinessUnitLinkEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitAndBusinessUnitLinkView
        {
            get
            {
                return _managementUnitAndBusinessUnitLinkView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitAndHRDepartmentLinkEdit
        {
            get
            {
                return _managementUnitAndHRDepartmentLinkEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitAndHRDepartmentLinkView
        {
            get
            {
                return _managementUnitAndHRDepartmentLinkView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitChangeEdit
        {
            get
            {
                return _managementUnitChangeEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitChangeView
        {
            get
            {
                return _managementUnitChangeView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitEdit
        {
            get
            {
                return _managementUnitEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> ManagementUnitView
        {
            get
            {
                return _managementUnitView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> SearchNotificationOperation
        {
            get
            {
                return _searchNotificationOperation;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> SystemIntegration
        {
            get
            {
                return _systemIntegration;
            }
        }
        
        public static Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> GetByCode(SampleSystem.SampleSystemSecurityOperationCode code)
        {
            if ((code == SampleSystem.SampleSystemSecurityOperationCode.Disabled))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.Disabled;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeeView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeeView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeeEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitTypeView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitTypeEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitManagerCommissionLinkView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitManagerCommissionLinkEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitHrDepartmentView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.BusinessUnitHrDepartmentEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitChangeEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitChangeEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitChangeView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitChangeView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.CreateManagementUnitStart))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.CreateManagementUnitStart;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitAndBusinessUnitLinkView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitAndBusinessUnitLinkEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitAndHRDepartmentLinkView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ManagementUnitAndHRDepartmentLinkEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeeSpecializationView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeeSpecializationView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeeRoleView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleDegreeView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeeRoleDegreeView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.HRDepartmentView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.HRDepartmentEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentAdvancedEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.HRDepartmentAdvancedEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.LocationOpenModule))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.LocationOpenModule;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.LocationView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.LocationView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.LocationEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.LocationEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.CountryView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.CountryView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.CountryEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.CountryEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.CompanyLegalEntityView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.CompanyLegalEntityEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeePositionView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeePositionEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.SearchNotificationOperation))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.SearchNotificationOperation;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.AuthorizationImpersonate))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.AuthorizationImpersonate;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeePersonalCellPhoneView;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.EmployeePersonalCellPhoneEdit;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.SystemIntegration;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ApproveWorkflowOperation))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ApproveWorkflowOperation;
            }
            else if ((code == SampleSystem.SampleSystemSecurityOperationCode.ApprovingWorkflowOperation))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.ApprovingWorkflowOperation;
            }
            else
            {
                throw new System.ArgumentOutOfRangeException("code");
            }
        }
        
        public static Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> GetByMode<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode mode)
            where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase
        {
            SampleSystem.SampleSystemSecurityOperationCode securityOperationCode = SampleSystem.BLL.SampleSystemSecurityOperation.GetCodeByMode<TDomainObject>(mode);
            if ((securityOperationCode == SampleSystem.SampleSystemSecurityOperationCode.Disabled))
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.Disabled;
            }
            else
            {
                return SampleSystem.BLL.SampleSystemSecurityOperation.GetByCode(securityOperationCode);
            }
        }
        
        public static SampleSystem.SampleSystemSecurityOperationCode GetCodeByMode(System.Type domainType, Framework.SecuritySystem.BLLSecurityMode mode)
        {
            if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.AuthPerformanceObject) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.BusinessUnit) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.BusinessUnit) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.BusinessUnitHrDepartment) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.BusinessUnitHrDepartment) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.BusinessUnitManagerCommissionLink) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.BusinessUnitManagerCommissionLink) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.BusinessUnitType) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.BusinessUnitType) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.CompanyLegalEntity) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.CompanyLegalEntity) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Country) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.CountryView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.Country) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.CountryEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Employee) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.Employee) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeeCellPhone) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeeInformation) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeePersonalCellPhone) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.EmployeePersonalCellPhone) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeePhoto) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.EmployeePhoto) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeePosition) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.EmployeePosition) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeeRegistrationType) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeeRole) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeeRoleDegree) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleDegreeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EmployeeSpecialization) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeSpecializationView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EnversBug1676.Location1676) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.EnversBug1676.WorkingCalendar1676) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Example1) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.LocationView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.Example1) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.LocationEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.HRDepartment) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.HRDepartment) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.IMRequest) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Information) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Location) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.LocationView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.Location) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.LocationEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.ManagementUnit) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.ManagementUnit) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.ManagementUnitAndBusinessUnitLink) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.ManagementUnitAndBusinessUnitLink) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.ManagementUnitAndHRDepartmentLink) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.ManagementUnitAndHRDepartmentLink) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.ManagementUnitFluentMapping) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.ManagementUnitFluentMapping) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Principal) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.Principal) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Projections.CustomCompanyLegalEntity) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.AuthorizationImpersonate;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.Projections.TestLegacyEmployee) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.Projections.TestLegacyEmployee) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.SqlParserTestObj) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.SqlParserTestObj) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.SqlParserTestObjContainer) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.SqlParserTestObjContainer) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.TestImmutableObj) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(SampleSystem.Domain.TestImmutableObj) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.TestPerformanceObject) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.TestPlainAuthObject) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(SampleSystem.Domain.TestRootSecurityObj) == domainType))
            {
                return SampleSystem.SampleSystemSecurityOperationCode.EmployeeView;
            }
            else
            {
                return SampleSystem.SampleSystemSecurityOperationCode.Disabled;
            }
        }
        
        private static SampleSystem.SampleSystemSecurityOperationCode GetCodeByMode<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode mode)
            where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase
        {
            return SampleSystem.BLL.SampleSystemSecurityOperation.GetCodeByMode(typeof(TDomainObject), mode);
        }
    }
    #endregion
    
    public partial class SampleSystemBLLContext : Framework.DomainDriven.BLL.Security.SecurityBLLBaseContext<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.DomainObjectBase, System.Guid, SampleSystem.BLL.ISampleSystemBLLFactoryContainer, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode, System.Guid>>>, SampleSystem.BLL.ISampleSystemBLLContext
    {
        
        Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.IDefaultBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid>> Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.IDefaultBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid>>>.Logics
        {
            get
            {
                return this.Logics;
            }
        }
        
        Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode, System.Guid>> Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode, System.Guid>>>.Logics
        {
            get
            {
                return this.Logics;
            }
        }
        
        public override Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> GetSecurityOperation(SampleSystem.SampleSystemSecurityOperationCode securityOperationCode)
        {
            return SampleSystem.BLL.SampleSystemSecurityOperation.GetByCode(securityOperationCode);
        }
        
        public override Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode> GetSecurityOperation<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode securitMode)
        {
            return SampleSystem.BLL.SampleSystemSecurityOperation.GetByMode<TDomainObject>(securitMode);
        }
    }
    
    public partial interface ISampleSystemBLLContext : Framework.DomainDriven.BLL.Security.IAccessDeniedExceptionServiceContainer<SampleSystem.Domain.PersistentDomainObjectBase>, Framework.DomainDriven.BLL.Security.ISecurityServiceContainer<SampleSystem.BLL.ISampleSystemSecurityService>, Framework.DomainDriven.BLL.IBLLFactoryContainerContext<SampleSystem.BLL.ISampleSystemBLLFactoryContainer>, Framework.DomainDriven.IFetchServiceContainer<SampleSystem.Domain.PersistentDomainObjectBase, Framework.DomainDriven.FetchBuildRule>, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        new SampleSystem.BLL.ISampleSystemBLLFactoryContainer Logics
        {
            get;
        }
    }
    
    public partial class DomainBLLBase<TDomainObject, TOperation> : Framework.DomainDriven.BLL.DefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.DomainObjectBase, TDomainObject, System.Guid, TOperation>
        where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase
        where TOperation :  struct, System.Enum
    {
        
        public DomainBLLBase(SampleSystem.BLL.ISampleSystemBLLContext context, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, specificationEvaluator)
        {
        }
    }
    
    public abstract partial class SecurityDomainBLLBase<TDomainObject, TOperation> : Framework.DomainDriven.BLL.Security.DefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.DomainObjectBase, TDomainObject, System.Guid, TOperation>
        where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase
        where TOperation :  struct, System.Enum
    {
        
        protected SecurityDomainBLLBase(SampleSystem.BLL.ISampleSystemBLLContext context, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, specificationEvaluator)
        {
        }
        
        protected SecurityDomainBLLBase(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityOperation, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityOperation, specificationEvaluator)
        {
        }
    }
    
    public partial class DomainBLLBase<TDomainObject> : SampleSystem.BLL.DomainBLLBase<TDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>
        where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase
    {
        
        public DomainBLLBase(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SecurityDomainBLLBase<TDomainObject> : SampleSystem.BLL.SecurityDomainBLLBase<TDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>
        where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase
    {
        
        public SecurityDomainBLLBase(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public SecurityDomainBLLBase(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityOperation) : 
                base(context, securityOperation)
        {
        }
    }
    
    public partial class SampleSystemSecurityService : SampleSystem.BLL.SampleSystemSecurityServiceBase, SampleSystem.BLL.ISampleSystemSecurityService
    {
        
        public SampleSystemSecurityService(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public abstract partial class SampleSystemSecurityServiceBase : Framework.DomainDriven.BLL.Security.RootSecurityService<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        protected SampleSystemSecurityServiceBase(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public static void Register(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.AuthPerformanceObject, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemAuthPerformanceObjectSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.AuthPerformanceObject>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.AuthPerformanceObject, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemBusinessUnitSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitHrDepartment, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemBusinessUnitHrDepartmentSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitHrDepartment>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitHrDepartment, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitManagerCommissionLink, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemBusinessUnitManagerCommissionLinkSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitManagerCommissionLink>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitManagerCommissionLink, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitType, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemBusinessUnitTypeSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitType>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitType, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.CompanyLegalEntity, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemCompanyLegalEntitySecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.CompanyLegalEntity>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.CompanyLegalEntity, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Country, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemCountrySecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Country>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Country, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Employee, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeSecurityService<SampleSystem.Domain.Employee, SampleSystem.Domain.BusinessUnit, SampleSystem.Domain.HRDepartment, SampleSystem.Domain.Location, SampleSystem.Domain.Employee>>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Employee>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Employee, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeCellPhone, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeCellPhoneSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeCellPhone>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeCellPhone, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeInformation, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeInformationSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeInformation>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeInformation, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePersonalCellPhone, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeePersonalCellPhoneSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePersonalCellPhone>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePersonalCellPhone, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePhoto, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeePhotoSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePhoto>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePhoto, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePosition, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeePositionSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePosition>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeePosition, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRegistrationType, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeRegistrationTypeSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRegistrationType>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRegistrationType, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRole, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeRoleSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRole>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRole, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRoleDegree, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeRoleDegreeSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRoleDegree>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeRoleDegree, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeSpecialization, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeSpecializationSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeSpecialization>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EmployeeSpecialization, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EnversBug1676.Location1676, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemLocation1676SecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EnversBug1676.Location1676>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EnversBug1676.Location1676, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EnversBug1676.WorkingCalendar1676, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemWorkingCalendar1676SecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EnversBug1676.WorkingCalendar1676>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.EnversBug1676.WorkingCalendar1676, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Example1, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemExample1SecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Example1>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Example1, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.HRDepartment, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemHRDepartmentSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.HRDepartment>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.HRDepartment, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.IMRequest, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemIMRequestSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.IMRequest>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.IMRequest, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Information, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemInformationSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Information>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Information, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Location, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemLocationSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Location>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Location, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnit, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemManagementUnitSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnit>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnit, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemManagementUnitAndBusinessUnitLinkSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemManagementUnitAndHRDepartmentLinkSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitFluentMapping, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemManagementUnitFluentMappingSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitFluentMapping>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManagementUnitFluentMapping, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestManualEmployeeProjectionSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Principal, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemPrincipalSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Principal>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Principal, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.BusinessUnitIdentity, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemBusinessUnitIdentitySecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.BusinessUnitIdentity>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.BusinessUnitIdentity, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.BusinessUnitProgramClass, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemBusinessUnitProgramClassSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.BusinessUnitProgramClass>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.BusinessUnitProgramClass, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.CustomCompanyLegalEntity, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemCustomCompanyLegalEntitySecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.CustomCompanyLegalEntity>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.CustomCompanyLegalEntity, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.HerBusinessUnit, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemHerBusinessUnitSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.HerBusinessUnit>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.HerBusinessUnit, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestBusinessUnit, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestBusinessUnitSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestBusinessUnit>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestBusinessUnit, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestBusinessUnitType, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestBusinessUnitTypeSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestBusinessUnitType>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestBusinessUnitType, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestCustomContextSecurityObjProjectionSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestDepartment, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestDepartmentSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestDepartment>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestDepartment, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestEmployee, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestEmployeeSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestEmployee>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestEmployee, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestIMRequest, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestIMRequestSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestIMRequest>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestIMRequest, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLegacyEmployee, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemEmployeeSecurityService<SampleSystem.Domain.Projections.TestLegacyEmployee, SampleSystem.Domain.Projections.SecurityBusinessUnit, SampleSystem.Domain.Projections.SecurityHRDepartment, SampleSystem.Domain.Projections.SecurityLocation, SampleSystem.Domain.Projections.SecurityEmployee>>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLegacyEmployee>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLegacyEmployee, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLocation, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestLocationSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLocation>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLocation, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLocationCollectionProperties, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestLocationCollectionPropertiesSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLocationCollectionProperties>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestLocationCollectionProperties, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestSecurityObjItemProjection, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestSecurityObjItemProjectionSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestSecurityObjItemProjection>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.TestSecurityObjItemProjection, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.VisualEmployee, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemVisualEmployeeSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.VisualEmployee>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Projections.VisualEmployee, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.SqlParserTestObj, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemSqlParserTestObjSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.SqlParserTestObj>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.SqlParserTestObj, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.SqlParserTestObjContainer, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemSqlParserTestObjContainerSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.SqlParserTestObjContainer>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.SqlParserTestObjContainer, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestCustomContextSecurityObj, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestCustomContextSecurityObjSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestCustomContextSecurityObj>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestCustomContextSecurityObj, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestImmutableObj, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestImmutableObjSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestImmutableObj>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestImmutableObj, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestPerformanceObject, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestPerformanceObjectSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestPerformanceObject>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestPerformanceObject, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestPlainAuthObject, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestPlainAuthObjectSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestPlainAuthObject>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestPlainAuthObject, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestRootSecurityObj, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestRootSecurityObjSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestRootSecurityObj>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestRootSecurityObj, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecurityObjItem, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestSecurityObjItemSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecurityObjItem>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecurityObjItem, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestSecuritySubObjItemSecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem2, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestSecuritySubObjItem2SecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem2>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem2, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem3, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.SampleSystemTestSecuritySubObjItem3SecurityService>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem3>, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecuritySubObjItem3, SampleSystem.SampleSystemSecurityOperationCode>>(serviceCollection);
        }
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.AuthPerformanceObject> GetAuthPerformanceObjectSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnitHrDepartment> GetBusinessUnitHrDepartmentSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnitManagerCommissionLink> GetBusinessUnitManagerCommissionLinkSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnit> GetBusinessUnitSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeeCellPhone> GetEmployeeCellPhoneSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeePhoto> GetEmployeePhotoSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeePosition> GetEmployeePositionSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<TDomainObject> GetEmployeeSecurityPath<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee>()
            where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, SampleSystem.Domain.IBusinessUnitSecurityElement<TBusinessUnit>, SampleSystem.Domain.IDepartmentSecurityElement<TDepartment>, SampleSystem.Domain.IEmployeeSecurityElement<TEmployee, TBusinessUnit, TDepartment, TLocation>, SampleSystem.Domain.IEmployeeSecurityElement<TEmployee>
            where TBusinessUnit : SampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TDepartment : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ILocationSecurityElement<TLocation>
            where TLocation : SampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TEmployee : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, Framework.SecuritySystem.ISecurityContext;
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink> GetManagementUnitAndBusinessUnitLinkSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink> GetManagementUnitAndHRDepartmentLinkSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitFluentMapping> GetManagementUnitFluentMappingSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnit> GetManagementUnitSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestPerformanceObject> GetTestPerformanceObjectSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestPlainAuthObject> GetTestPlainAuthObjectSecurityPath();
        
        public abstract Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestRootSecurityObj> GetTestRootSecurityObjSecurityPath();
    }
    
    public partial interface ISampleSystemSecurityService : Framework.DomainDriven.BLL.Security.IRootSecurityService<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode>, SampleSystem.BLL.ISampleSystemSecurityPathContainer
    {
    }
    
    public partial interface ISampleSystemSecurityPathContainer
    {
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.AuthPerformanceObject> GetAuthPerformanceObjectSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnitHrDepartment> GetBusinessUnitHrDepartmentSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnitManagerCommissionLink> GetBusinessUnitManagerCommissionLinkSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnit> GetBusinessUnitSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeeCellPhone> GetEmployeeCellPhoneSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeePhoto> GetEmployeePhotoSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeePosition> GetEmployeePositionSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<TDomainObject> GetEmployeeSecurityPath<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee>()
            where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, SampleSystem.Domain.IBusinessUnitSecurityElement<TBusinessUnit>, SampleSystem.Domain.IDepartmentSecurityElement<TDepartment>, SampleSystem.Domain.IEmployeeSecurityElement<TEmployee, TBusinessUnit, TDepartment, TLocation>, SampleSystem.Domain.IEmployeeSecurityElement<TEmployee>
            where TBusinessUnit : SampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TDepartment : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ILocationSecurityElement<TLocation>
            where TLocation : SampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TEmployee : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, Framework.SecuritySystem.ISecurityContext;
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink> GetManagementUnitAndBusinessUnitLinkSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink> GetManagementUnitAndHRDepartmentLinkSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitFluentMapping> GetManagementUnitFluentMappingSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnit> GetManagementUnitSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestPerformanceObject> GetTestPerformanceObjectSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestPlainAuthObject> GetTestPlainAuthObjectSecurityPath();
        
        Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestRootSecurityObj> GetTestRootSecurityObjSecurityPath();
    }
    
    public partial class SampleSystemAuthPerformanceObjectSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.AuthPerformanceObject, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemAuthPerformanceObjectSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.AuthPerformanceObject> GetSecurityPath()
        {
            return this.securityPathContainer.GetAuthPerformanceObjectSecurityPath();
        }
    }
    
    public partial class SampleSystemBusinessUnitSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnit, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnit> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitSecurityPath();
        }
    }
    
    public partial class SampleSystemBusinessUnitHrDepartmentSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitHrDepartment, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemBusinessUnitHrDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnitHrDepartment> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitHrDepartmentSecurityPath();
        }
    }
    
    public partial class SampleSystemBusinessUnitManagerCommissionLinkSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemBusinessUnitManagerCommissionLinkSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.BusinessUnitManagerCommissionLink> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitManagerCommissionLinkSecurityPath();
        }
    }
    
    public partial class SampleSystemBusinessUnitTypeSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitType, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemBusinessUnitTypeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemCompanyLegalEntitySecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.CompanyLegalEntity, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemCompanyLegalEntitySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemCountrySecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Country, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemCountrySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemEmployeeSecurityService<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee> : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
        where TDomainObject : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, SampleSystem.Domain.IBusinessUnitSecurityElement<TBusinessUnit>, SampleSystem.Domain.IDepartmentSecurityElement<TDepartment>, SampleSystem.Domain.IEmployeeSecurityElement<TEmployee, TBusinessUnit, TDepartment, TLocation>, SampleSystem.Domain.IEmployeeSecurityElement<TEmployee>
        where TBusinessUnit : SampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
        where TDepartment : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ILocationSecurityElement<TLocation>
        where TLocation : SampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
        where TEmployee : SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, Framework.SecuritySystem.ISecurityContext
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        protected override Framework.SecuritySystem.SecurityPath<TDomainObject> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeeSecurityPath<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee>();
        }
    }
    
    public partial class SampleSystemEmployeeCellPhoneSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeCellPhone, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemEmployeeCellPhoneSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeeCellPhone> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeeCellPhoneSecurityPath();
        }
    }
    
    public partial class SampleSystemEmployeeInformationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeInformation, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemEmployeeInformationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemEmployeePersonalCellPhoneSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePersonalCellPhone, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemEmployeePersonalCellPhoneSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemEmployeePhotoSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePhoto, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemEmployeePhotoSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeePhoto> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeePhotoSecurityPath();
        }
    }
    
    public partial class SampleSystemEmployeePositionSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePosition, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemEmployeePositionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.EmployeePosition> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeePositionSecurityPath();
        }
    }
    
    public partial class SampleSystemEmployeeRegistrationTypeSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRegistrationType, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemEmployeeRegistrationTypeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemEmployeeRoleSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRole, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemEmployeeRoleSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemEmployeeRoleDegreeSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRoleDegree, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemEmployeeRoleDegreeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemEmployeeSpecializationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeSpecialization, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemEmployeeSpecializationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemLocation1676SecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EnversBug1676.Location1676, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemLocation1676SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemWorkingCalendar1676SecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemWorkingCalendar1676SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemExample1SecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Example1, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemExample1SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemHRDepartmentSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.HRDepartment, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemHRDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemIMRequestSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IMRequest, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemIMRequestSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemInformationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Information, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemInformationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemLocationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Location, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemLocationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemManagementUnitSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnit, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemManagementUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnit> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitSecurityPath();
        }
    }
    
    public partial class SampleSystemManagementUnitAndBusinessUnitLinkSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemManagementUnitAndBusinessUnitLinkSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitAndBusinessUnitLinkSecurityPath();
        }
    }
    
    public partial class SampleSystemManagementUnitAndHRDepartmentLinkSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemManagementUnitAndHRDepartmentLinkSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitAndHRDepartmentLinkSecurityPath();
        }
    }
    
    public partial class SampleSystemManagementUnitFluentMappingSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitFluentMapping, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemManagementUnitFluentMappingSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.ManagementUnitFluentMapping> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitFluentMappingSecurityPath();
        }
    }
    
    public partial class SampleSystemTestManualEmployeeProjectionSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, SampleSystem.Domain.Employee, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestManualEmployeeProjectionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Employee, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemPrincipalSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Principal, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemPrincipalSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemBusinessUnitIdentitySecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.BusinessUnitIdentity, SampleSystem.Domain.BusinessUnit, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemBusinessUnitIdentitySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemBusinessUnitProgramClassSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.BusinessUnitProgramClass, SampleSystem.Domain.BusinessUnit, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemBusinessUnitProgramClassSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemCustomCompanyLegalEntitySecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.CustomCompanyLegalEntity, SampleSystem.Domain.CompanyLegalEntity, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemCustomCompanyLegalEntitySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.CompanyLegalEntity, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemHerBusinessUnitSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.HerBusinessUnit, SampleSystem.Domain.BusinessUnit, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemHerBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestBusinessUnitSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestBusinessUnit, SampleSystem.Domain.BusinessUnit, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnit, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestBusinessUnitTypeSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestBusinessUnitType, SampleSystem.Domain.BusinessUnitType, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestBusinessUnitTypeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.BusinessUnitType, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestCustomContextSecurityObjProjectionSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, SampleSystem.Domain.TestCustomContextSecurityObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestCustomContextSecurityObjProjectionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestCustomContextSecurityObj, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestDepartmentSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestDepartment, SampleSystem.Domain.HRDepartment, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.HRDepartment, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestEmployeeSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestEmployee, SampleSystem.Domain.Employee, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestEmployeeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Employee, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestIMRequestSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestIMRequest, SampleSystem.Domain.IMRequest, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestIMRequestSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.IMRequest, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestLocationSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLocation, SampleSystem.Domain.Location, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestLocationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Location, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestLocationCollectionPropertiesSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLocationCollectionProperties, SampleSystem.Domain.Location, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestLocationCollectionPropertiesSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Location, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemTestSecurityObjItemProjectionSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestSecurityObjItemProjection, SampleSystem.Domain.TestSecurityObjItem, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestSecurityObjItemProjectionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecurityObjItem, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemVisualEmployeeSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.VisualEmployee, SampleSystem.Domain.Employee, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemVisualEmployeeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.Employee, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class SampleSystemSqlParserTestObjSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.SqlParserTestObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemSqlParserTestObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemSqlParserTestObjContainerSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.SqlParserTestObjContainer, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemSqlParserTestObjContainerSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemTestCustomContextSecurityObjSecurityService : Framework.SecuritySystem.ContextDomainSecurityServiceBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestCustomContextSecurityObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestCustomContextSecurityObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
        }
    }
    
    public partial class SampleSystemTestImmutableObjSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestImmutableObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestImmutableObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class SampleSystemTestPerformanceObjectSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestPerformanceObject, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemTestPerformanceObjectSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestPerformanceObject> GetSecurityPath()
        {
            return this.securityPathContainer.GetTestPerformanceObjectSecurityPath();
        }
    }
    
    public partial class SampleSystemTestPlainAuthObjectSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestPlainAuthObject, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemTestPlainAuthObjectSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestPlainAuthObject> GetSecurityPath()
        {
            return this.securityPathContainer.GetTestPlainAuthObjectSecurityPath();
        }
    }
    
    public partial class SampleSystemTestRootSecurityObjSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestRootSecurityObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        private SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer;
        
        public SampleSystemTestRootSecurityObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, SampleSystem.BLL.ISampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPath<SampleSystem.Domain.TestRootSecurityObj> GetSecurityPath()
        {
            return this.securityPathContainer.GetTestRootSecurityObjSecurityPath();
        }
    }
    
    public partial class SampleSystemTestSecurityObjItemSecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecurityObjItem, SampleSystem.Domain.TestRootSecurityObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestSecurityObjItemSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestRootSecurityObj, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<SampleSystem.Domain.TestSecurityObjItem, SampleSystem.Domain.TestRootSecurityObj>> Selector
        {
            get
            {
                return domainObject => domainObject.FirstMaster;
            }
        }
    }
    
    public partial class SampleSystemTestSecuritySubObjItemSecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem, SampleSystem.Domain.TestSecurityObjItem, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestSecuritySubObjItemSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestSecurityObjItem, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<SampleSystem.Domain.TestSecuritySubObjItem, SampleSystem.Domain.TestSecurityObjItem>> Selector
        {
            get
            {
                return domainObject => domainObject.InnerMaster;
            }
        }
    }
    
    public partial class SampleSystemTestSecuritySubObjItem2SecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem2, SampleSystem.Domain.TestRootSecurityObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestSecuritySubObjItem2SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestRootSecurityObj, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<SampleSystem.Domain.TestSecuritySubObjItem2, SampleSystem.Domain.TestRootSecurityObj>> Selector
        {
            get
            {
                return domainObject => domainObject.RootSecurityObj;
            }
        }
    }
    
    public partial class SampleSystemTestSecuritySubObjItem3SecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem3, SampleSystem.Domain.TestRootSecurityObj, System.Guid, SampleSystem.SampleSystemSecurityOperationCode>
    {
        
        public SampleSystemTestSecuritySubObjItem3SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<SampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<SampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<SampleSystem.Domain.TestRootSecurityObj, SampleSystem.SampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<SampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<SampleSystem.Domain.TestSecuritySubObjItem3, SampleSystem.Domain.TestRootSecurityObj>> Selector
        {
            get
            {
                return domainObject => domainObject.InnerMaster.FirstMaster;
            }
        }
    }
    
    public partial interface ISampleSystemBLLFactoryContainer : Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.SampleSystemSecurityOperationCode, System.Guid>>
    {
        
        SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLL ApprovePermissionWorkflowDomainObject
        {
            get;
        }
        
        SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLLFactory ApprovePermissionWorkflowDomainObjectFactory
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitBLL BusinessUnit
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitBLLFactory BusinessUnitFactory
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitHrDepartmentBLL BusinessUnitHrDepartment
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory BusinessUnitHrDepartmentFactory
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL BusinessUnitManagerCommissionLink
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory BusinessUnitManagerCommissionLinkFactory
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitProgramClassBLL BusinessUnitProgramClass
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitProgramClassBLLFactory BusinessUnitProgramClassFactory
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitTypeBLL BusinessUnitType
        {
            get;
        }
        
        SampleSystem.BLL.IBusinessUnitTypeBLLFactory BusinessUnitTypeFactory
        {
            get;
        }
        
        SampleSystem.BLL.ICompanyLegalEntityBLL CompanyLegalEntity
        {
            get;
        }
        
        SampleSystem.BLL.ICompanyLegalEntityBLLFactory CompanyLegalEntityFactory
        {
            get;
        }
        
        SampleSystem.BLL.ICountryBLL Country
        {
            get;
        }
        
        SampleSystem.BLL.ICountryBLLFactory CountryFactory
        {
            get;
        }
        
        SampleSystem.BLL.ICustomCompanyLegalEntityBLL CustomCompanyLegalEntity
        {
            get;
        }
        
        SampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory CustomCompanyLegalEntityFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeBLL Employee
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeBLLFactory EmployeeFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeInformationBLL EmployeeInformation
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeInformationBLLFactory EmployeeInformationFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeePhotoBLL EmployeePhoto
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeePhotoBLLFactory EmployeePhotoFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeePositionBLL EmployeePosition
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeePositionBLLFactory EmployeePositionFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeRegistrationTypeBLL EmployeeRegistrationType
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory EmployeeRegistrationTypeFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeRoleBLL EmployeeRole
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeRoleDegreeBLL EmployeeRoleDegree
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeRoleDegreeBLLFactory EmployeeRoleDegreeFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeRoleBLLFactory EmployeeRoleFactory
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeSpecializationBLL EmployeeSpecialization
        {
            get;
        }
        
        SampleSystem.BLL.IEmployeeSpecializationBLLFactory EmployeeSpecializationFactory
        {
            get;
        }
        
        SampleSystem.BLL.IExample1BLL Example1
        {
            get;
        }
        
        SampleSystem.BLL.IExample1BLLFactory Example1Factory
        {
            get;
        }
        
        SampleSystem.BLL.IHRDepartmentBLL HRDepartment
        {
            get;
        }
        
        SampleSystem.BLL.IHRDepartmentBLLFactory HRDepartmentFactory
        {
            get;
        }
        
        SampleSystem.BLL.IIMRequestBLL IMRequest
        {
            get;
        }
        
        SampleSystem.BLL.IIMRequestBLLFactory IMRequestFactory
        {
            get;
        }
        
        SampleSystem.BLL.IInformationBLL Information
        {
            get;
        }
        
        SampleSystem.BLL.IInformationBLLFactory InformationFactory
        {
            get;
        }
        
        SampleSystem.BLL.IIntegrationVersionContainer1BLL IntegrationVersionContainer1
        {
            get;
        }
        
        SampleSystem.BLL.IIntegrationVersionContainer1BLLFactory IntegrationVersionContainer1Factory
        {
            get;
        }
        
        SampleSystem.BLL.IIntegrationVersionContainer2BLL IntegrationVersionContainer2
        {
            get;
        }
        
        SampleSystem.BLL.IIntegrationVersionContainer2BLLFactory IntegrationVersionContainer2Factory
        {
            get;
        }
        
        SampleSystem.BLL.ILocationBLL Location
        {
            get;
        }
        
        SampleSystem.BLL.ILocation1676BLL Location1676
        {
            get;
        }
        
        SampleSystem.BLL.ILocation1676BLLFactory Location1676Factory
        {
            get;
        }
        
        SampleSystem.BLL.ILocationBLLFactory LocationFactory
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitBLL ManagementUnit
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL ManagementUnitAndBusinessUnitLink
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory ManagementUnitAndBusinessUnitLinkFactory
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL ManagementUnitAndHRDepartmentLink
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory ManagementUnitAndHRDepartmentLinkFactory
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitBLLFactory ManagementUnitFactory
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitFluentMappingBLL ManagementUnitFluentMapping
        {
            get;
        }
        
        SampleSystem.BLL.IManagementUnitFluentMappingBLLFactory ManagementUnitFluentMappingFactory
        {
            get;
        }
        
        SampleSystem.BLL.INamedLockBLL NamedLock
        {
            get;
        }
        
        SampleSystem.BLL.INamedLockBLLFactory NamedLockFactory
        {
            get;
        }
        
        SampleSystem.BLL.IPrincipalBLL Principal
        {
            get;
        }
        
        SampleSystem.BLL.IPrincipalBLLFactory PrincipalFactory
        {
            get;
        }
        
        SampleSystem.BLL.IRoleRoleDegreeLinkBLL RoleRoleDegreeLink
        {
            get;
        }
        
        SampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory RoleRoleDegreeLinkFactory
        {
            get;
        }
        
        SampleSystem.BLL.ISqlParserTestObjBLL SqlParserTestObj
        {
            get;
        }
        
        SampleSystem.BLL.ISqlParserTestObjContainerBLL SqlParserTestObjContainer
        {
            get;
        }
        
        SampleSystem.BLL.ISqlParserTestObjContainerBLLFactory SqlParserTestObjContainerFactory
        {
            get;
        }
        
        SampleSystem.BLL.ISqlParserTestObjBLLFactory SqlParserTestObjFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestBusinessUnitBLL TestBusinessUnit
        {
            get;
        }
        
        SampleSystem.BLL.ITestBusinessUnitBLLFactory TestBusinessUnitFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestCustomContextSecurityObjBLL TestCustomContextSecurityObj
        {
            get;
        }
        
        SampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory TestCustomContextSecurityObjFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL TestCustomContextSecurityObjProjection
        {
            get;
        }
        
        SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory TestCustomContextSecurityObjProjectionFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestDepartmentBLL TestDepartment
        {
            get;
        }
        
        SampleSystem.BLL.ITestDepartmentBLLFactory TestDepartmentFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestEmployeeBLL TestEmployee
        {
            get;
        }
        
        SampleSystem.BLL.ITestEmployeeBLLFactory TestEmployeeFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestImmutableObjBLL TestImmutableObj
        {
            get;
        }
        
        SampleSystem.BLL.ITestImmutableObjBLLFactory TestImmutableObjFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestIMRequestBLL TestIMRequest
        {
            get;
        }
        
        SampleSystem.BLL.ITestIMRequestBLLFactory TestIMRequestFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestLegacyEmployeeBLL TestLegacyEmployee
        {
            get;
        }
        
        SampleSystem.BLL.ITestLegacyEmployeeBLLFactory TestLegacyEmployeeFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestLocationBLL TestLocation
        {
            get;
        }
        
        SampleSystem.BLL.ITestLocationCollectionPropertiesBLL TestLocationCollectionProperties
        {
            get;
        }
        
        SampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory TestLocationCollectionPropertiesFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestLocationBLLFactory TestLocationFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestManualEmployeeProjectionBLL TestManualEmployeeProjection
        {
            get;
        }
        
        SampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory TestManualEmployeeProjectionFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestPerformanceObjectBLL TestPerformanceObject
        {
            get;
        }
        
        SampleSystem.BLL.ITestPerformanceObjectBLLFactory TestPerformanceObjectFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestPlainAuthObjectBLL TestPlainAuthObject
        {
            get;
        }
        
        SampleSystem.BLL.ITestPlainAuthObjectBLLFactory TestPlainAuthObjectFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestRootSecurityObjBLL TestRootSecurityObj
        {
            get;
        }
        
        SampleSystem.BLL.ITestRootSecurityObjBLLFactory TestRootSecurityObjFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecurityObjItemBLL TestSecurityObjItem
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecurityObjItemBLLFactory TestSecurityObjItemFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecurityObjItemProjectionBLL TestSecurityObjItemProjection
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory TestSecurityObjItemProjectionFactory
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecuritySubObjItemBLL TestSecuritySubObjItem
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecuritySubObjItem2BLL TestSecuritySubObjItem2
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory TestSecuritySubObjItem2Factory
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecuritySubObjItem3BLL TestSecuritySubObjItem3
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory TestSecuritySubObjItem3Factory
        {
            get;
        }
        
        SampleSystem.BLL.ITestSecuritySubObjItemBLLFactory TestSecuritySubObjItemFactory
        {
            get;
        }
        
        SampleSystem.BLL.IWorkflowCoreExecutionErrorBLL WorkflowCoreExecutionError
        {
            get;
        }
        
        SampleSystem.BLL.IWorkflowCoreExecutionErrorBLLFactory WorkflowCoreExecutionErrorFactory
        {
            get;
        }
        
        SampleSystem.BLL.IWorkflowCoreInstanceBLL WorkflowCoreInstance
        {
            get;
        }
        
        SampleSystem.BLL.IWorkflowCoreInstanceBLLFactory WorkflowCoreInstanceFactory
        {
            get;
        }
        
        SampleSystem.BLL.IWorkingCalendar1676BLL WorkingCalendar1676
        {
            get;
        }
        
        SampleSystem.BLL.IWorkingCalendar1676BLLFactory WorkingCalendar1676Factory
        {
            get;
        }
    }
    
    public partial interface IApprovePermissionWorkflowDomainObjectBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ApprovePermissionWorkflowDomainObject, System.Guid>
    {
    }
    
    public partial interface IApprovePermissionWorkflowDomainObjectBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ApprovePermissionWorkflowDomainObject>>
    {
    }
    
    public partial interface IBusinessUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnit, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitHrDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitHrDepartment, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitHrDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitHrDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnitHrDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitHrDepartmentBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitHrDepartmentBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitHrDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnitManagerCommissionLink>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitTypeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitType, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitTypeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitTypeBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnitType>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitTypeBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitTypeBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitTypeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ICompanyLegalEntityBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.CompanyLegalEntity, System.Guid>
    {
    }
    
    public partial interface ICompanyLegalEntityBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICompanyLegalEntityBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.CompanyLegalEntity>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICompanyLegalEntityBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICompanyLegalEntityBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICompanyLegalEntityBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ICountryBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Country, System.Guid>
    {
    }
    
    public partial interface ICountryBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICountryBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Country>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICountryBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICountryBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICountryBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Employee, System.Guid>
    {
        
        SampleSystem.Domain.Employee ChangeByEmail(SampleSystem.Domain.EmployeeEmailChangeModel changeModel);
        
        SampleSystem.Domain.Employee ComplexChange(SampleSystem.Domain.EmployeeComplexChangeModel changeModel);
        
        SampleSystem.Domain.EmployeeEmailChangeModel GetChangeByEmail(SampleSystem.Domain.Employee employee);
        
        System.Collections.Generic.List<SampleSystem.Domain.Employee> GetListBy(SampleSystem.Domain.Models.Filters.EmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Employee> fetchs);
        
        SampleSystem.Domain.EmployeeEmailMassChangeModel GetMassChangeByEmail(System.Collections.Generic.List<SampleSystem.Domain.Employee> employees);
        
        SampleSystem.Domain.Employee IntegrationSave(SampleSystem.Domain.EmployeeCustomIntegrationSaveModel integrationSaveModel);
        
        System.Collections.Generic.List<SampleSystem.Domain.Employee> MassChangeByEmail(SampleSystem.Domain.EmployeeEmailMassChangeModel changeModel);
    }
    
    public partial interface IEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Employee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeInformationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeInformation, System.Guid>
    {
    }
    
    public partial interface IEmployeeInformationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeInformationBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeInformation>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeInformationBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeInformationBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeInformationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeePhotoBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePhoto, System.Guid>
    {
    }
    
    public partial interface IEmployeePhotoBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePhotoBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeePhoto>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePhotoBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePhotoBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePhotoBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeePositionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePosition, System.Guid>
    {
    }
    
    public partial interface IEmployeePositionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePositionBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeePosition>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePositionBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePositionBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeePositionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeRegistrationTypeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRegistrationType, System.Guid>
    {
    }
    
    public partial interface IEmployeeRegistrationTypeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRegistrationTypeBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeRegistrationType>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRegistrationTypeBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRegistrationTypeBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRegistrationTypeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeRoleBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRole, System.Guid>
    {
    }
    
    public partial interface IEmployeeRoleBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeRole>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeRoleDegreeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRoleDegree, System.Guid>
    {
    }
    
    public partial interface IEmployeeRoleDegreeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleDegreeBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeRoleDegree>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleDegreeBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleDegreeBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeRoleDegreeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeSpecializationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeSpecialization, System.Guid>
    {
    }
    
    public partial interface IEmployeeSpecializationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeSpecializationBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeSpecialization>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeSpecializationBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeSpecializationBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IEmployeeSpecializationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ILocation1676BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EnversBug1676.Location1676, System.Guid>
    {
    }
    
    public partial interface ILocation1676BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocation1676BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EnversBug1676.Location1676>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocation1676BLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocation1676BLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocation1676BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IWorkingCalendar1676BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.Guid>
    {
    }
    
    public partial interface IWorkingCalendar1676BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IWorkingCalendar1676BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EnversBug1676.WorkingCalendar1676>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IWorkingCalendar1676BLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IWorkingCalendar1676BLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IWorkingCalendar1676BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IExample1BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Example1, System.Guid>
    {
    }
    
    public partial interface IExample1BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IExample1BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Example1>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IExample1BLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IExample1BLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IExample1BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IHRDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.HRDepartment, System.Guid>
    {
    }
    
    public partial interface IHRDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.HRDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IHRDepartmentBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IIMRequestBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IMRequest, System.Guid>
    {
    }
    
    public partial interface IIMRequestBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IIMRequestBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.IMRequest>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IIMRequestBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IIMRequestBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IIMRequestBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IInformationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Information, System.Guid>
    {
    }
    
    public partial interface IInformationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IInformationBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Information>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IInformationBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IInformationBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IInformationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IIntegrationVersionContainer1BLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.Guid>
    {
        
        SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1 IntegrationSave(SampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel integrationSaveModel);
    }
    
    public partial interface IIntegrationVersionContainer1BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IIntegrationVersionContainer1BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>>
    {
    }
    
    public partial interface IIntegrationVersionContainer2BLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.Guid>
    {
    }
    
    public partial interface IIntegrationVersionContainer2BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IIntegrationVersionContainer2BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>>
    {
    }
    
    public partial interface ILocationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Location, System.Guid>
    {
    }
    
    public partial interface ILocationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Location>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocationBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnit, System.Guid>
    {
    }
    
    public partial interface IManagementUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid>
    {
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid>
    {
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitFluentMappingBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitFluentMapping, System.Guid>
    {
    }
    
    public partial interface IManagementUnitFluentMappingBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitFluentMappingBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnitFluentMapping>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitFluentMappingBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitFluentMappingBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IManagementUnitFluentMappingBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestManualEmployeeProjectionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, System.Guid>
    {
    }
    
    public partial interface ITestManualEmployeeProjectionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestManualEmployeeProjectionBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestManualEmployeeProjectionBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestManualEmployeeProjectionBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestManualEmployeeProjectionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface INamedLockBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.NamedLock, System.Guid>
    {
    }
    
    public partial interface INamedLockBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.INamedLockBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.NamedLock>>
    {
    }
    
    public partial interface IPrincipalBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Principal, System.Guid>
    {
    }
    
    public partial interface IPrincipalBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IPrincipalBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Principal>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IPrincipalBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IPrincipalBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IPrincipalBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitProgramClassBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.BusinessUnitProgramClass, System.Guid>
    {
        
        Framework.OData.SelectOperationResult<SampleSystem.Domain.Projections.BusinessUnitProgramClass> GetObjectsByOData(Framework.OData.SelectOperation<SampleSystem.Domain.Projections.BusinessUnitProgramClass> selectOperation, SampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.BusinessUnitProgramClass> fetchs);
    }
    
    public partial interface IBusinessUnitProgramClassBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitProgramClassBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.BusinessUnitProgramClass>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitProgramClassBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitProgramClassBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IBusinessUnitProgramClassBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ICustomCompanyLegalEntityBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.CustomCompanyLegalEntity, System.Guid>
    {
    }
    
    public partial interface ICustomCompanyLegalEntityBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICustomCompanyLegalEntityBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.CustomCompanyLegalEntity>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICustomCompanyLegalEntityBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICustomCompanyLegalEntityBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ICustomCompanyLegalEntityBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestBusinessUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestBusinessUnit, System.Guid>
    {
        
        Framework.OData.SelectOperationResult<Framework.Persistent.HierarchicalNode<SampleSystem.Domain.Projections.TestBusinessUnit, System.Guid>> GetTreeByOData(Framework.OData.SelectOperation<SampleSystem.Domain.Projections.TestBusinessUnit> selectOperation, SampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.TestBusinessUnit> fetchs);
    }
    
    public partial interface ITestBusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestBusinessUnitBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestBusinessUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestBusinessUnitBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestBusinessUnitBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestBusinessUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjProjectionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, System.Guid>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjProjectionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestDepartment, System.Guid>
    {
    }
    
    public partial interface ITestDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestDepartmentBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestDepartmentBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestEmployee, System.Guid>
    {
        
        System.Collections.Generic.List<SampleSystem.Domain.Projections.TestEmployee> GetListBy(SampleSystem.Domain.TestEmployeeFilter filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.TestEmployee> fetchs);
        
        System.Collections.Generic.List<SampleSystem.Domain.Projections.TestEmployee> GetListBy(SampleSystem.Domain.Models.Filters.EmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.TestEmployee> fetchs);
        
        SampleSystem.Domain.Projections.TestEmployee GetObjectBy(SampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.TestEmployee> fetchs);
        
        Framework.OData.SelectOperationResult<SampleSystem.Domain.Projections.TestEmployee> GetObjectsByOData(Framework.OData.SelectOperation<SampleSystem.Domain.Projections.TestEmployee> selectOperation, SampleSystem.Domain.TestEmployeeFilter filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.TestEmployee> fetchs);
    }
    
    public partial interface ITestEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestEmployee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestEmployeeBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestEmployeeBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestIMRequestBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestIMRequest, System.Guid>
    {
    }
    
    public partial interface ITestIMRequestBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestIMRequestBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestIMRequest>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestIMRequestBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestIMRequestBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestIMRequestBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestLegacyEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLegacyEmployee, System.Guid>
    {
        
        System.Collections.Generic.List<SampleSystem.Domain.Projections.TestLegacyEmployee> GetListBy(SampleSystem.Domain.Models.Filters.EmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<SampleSystem.Domain.Projections.TestLegacyEmployee> fetchs);
    }
    
    public partial interface ITestLegacyEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLegacyEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestLegacyEmployee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLegacyEmployeeBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLegacyEmployeeBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLegacyEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestLocationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLocation, System.Guid>
    {
    }
    
    public partial interface ITestLocationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestLocation>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestLocationCollectionPropertiesBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLocationCollectionProperties, System.Guid>
    {
    }
    
    public partial interface ITestLocationCollectionPropertiesBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationCollectionPropertiesBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestLocationCollectionProperties>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationCollectionPropertiesBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationCollectionPropertiesBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestLocationCollectionPropertiesBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecurityObjItemProjectionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestSecurityObjItemProjection, System.Guid>
    {
    }
    
    public partial interface ITestSecurityObjItemProjectionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemProjectionBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestSecurityObjItemProjection>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemProjectionBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemProjectionBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemProjectionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IRoleRoleDegreeLinkBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.RoleRoleDegreeLink, System.Guid>
    {
    }
    
    public partial interface IRoleRoleDegreeLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IRoleRoleDegreeLinkBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.RoleRoleDegreeLink>>
    {
    }
    
    public partial interface ISqlParserTestObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.SqlParserTestObj, System.Guid>
    {
    }
    
    public partial interface ISqlParserTestObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.SqlParserTestObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ISqlParserTestObjContainerBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.SqlParserTestObjContainer, System.Guid>
    {
    }
    
    public partial interface ISqlParserTestObjContainerBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjContainerBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.SqlParserTestObjContainer>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjContainerBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjContainerBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ISqlParserTestObjContainerBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestCustomContextSecurityObj, System.Guid>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestCustomContextSecurityObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestCustomContextSecurityObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestImmutableObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestImmutableObj, System.Guid>
    {
    }
    
    public partial interface ITestImmutableObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestImmutableObjBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestImmutableObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestImmutableObjBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestImmutableObjBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestImmutableObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestPerformanceObjectBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestPerformanceObject, System.Guid>
    {
    }
    
    public partial interface ITestPerformanceObjectBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPerformanceObjectBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestPerformanceObject>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPerformanceObjectBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPerformanceObjectBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPerformanceObjectBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestPlainAuthObjectBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestPlainAuthObject, System.Guid>
    {
    }
    
    public partial interface ITestPlainAuthObjectBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPlainAuthObjectBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestPlainAuthObject>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPlainAuthObjectBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPlainAuthObjectBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestPlainAuthObjectBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestRootSecurityObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestRootSecurityObj, System.Guid>
    {
    }
    
    public partial interface ITestRootSecurityObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestRootSecurityObjBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestRootSecurityObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestRootSecurityObjBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestRootSecurityObjBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestRootSecurityObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecurityObjItemBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecurityObjItem, System.Guid>
    {
    }
    
    public partial interface ITestSecurityObjItemBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecurityObjItem>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecurityObjItemBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecuritySubObjItemBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem, System.Guid>
    {
    }
    
    public partial interface ITestSecuritySubObjItemBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItemBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecuritySubObjItem>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItemBLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItemBLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItemBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecuritySubObjItem2BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem2, System.Guid>
    {
    }
    
    public partial interface ITestSecuritySubObjItem2BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem2BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecuritySubObjItem2>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem2BLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem2BLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem2BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecuritySubObjItem3BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem3, System.Guid>
    {
    }
    
    public partial interface ITestSecuritySubObjItem3BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem3BLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecuritySubObjItem3>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem3BLL, SampleSystem.SampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem3BLL, Framework.SecuritySystem.SecurityOperation<SampleSystem.SampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.ITestSecuritySubObjItem3BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IWorkflowCoreExecutionErrorBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.WorkflowCoreExecutionError, System.Guid>
    {
    }
    
    public partial interface IWorkflowCoreExecutionErrorBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IWorkflowCoreExecutionErrorBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.WorkflowCoreExecutionError>>
    {
    }
    
    public partial interface IWorkflowCoreInstanceBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.WorkflowCoreInstance, System.Guid>
    {
    }
    
    public partial interface IWorkflowCoreInstanceBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<SampleSystem.BLL.IWorkflowCoreInstanceBLL, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.WorkflowCoreInstance>>
    {
    }
}
