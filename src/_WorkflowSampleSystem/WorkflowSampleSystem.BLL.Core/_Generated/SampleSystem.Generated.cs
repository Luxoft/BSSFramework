//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkflowSampleSystem.BLL
{
    
    
    #region 
	static
    public class WorkflowSampleSystemSecurityOperation
    {
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _authorizationImpersonate = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.AuthorizationImpersonate);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitHrDepartmentEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitHrDepartmentView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitManagerCommissionLinkEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitManagerCommissionLinkView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitTypeEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitTypeView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView, Framework.HierarchicalExpand.HierarchicalExpandType.All);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _companyLegalEntityEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _companyLegalEntityView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _countryEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _countryEditAttachment = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryEditAttachment);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _countryView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _countryViewAttachment = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryViewAttachment);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _createManagementUnitStart = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CreateManagementUnitStart, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.DisabledSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _disabled = new Framework.SecuritySystem.DisabledSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>();
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeePersonalCellPhoneEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeePersonalCellPhoneView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeePositionEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeePositionView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeRoleDegreeView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleDegreeView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeRoleView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeSpecializationView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeSpecializationView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _hRDepartmentAdvancedEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentAdvancedEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _hRDepartmentEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _hRDepartmentView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _locationEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _locationOpenModule = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationOpenModule);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _locationView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitAndBusinessUnitLinkEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitAndBusinessUnitLinkView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitAndHRDepartmentLinkEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitAndHRDepartmentLinkView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitChangeEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitChangeEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitChangeView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitChangeView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _managementUnitView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView, Framework.HierarchicalExpand.HierarchicalExpandType.All);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _systemIntegration = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration);
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> AuthorizationImpersonate
        {
            get
            {
                return _authorizationImpersonate;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitEdit
        {
            get
            {
                return _businessUnitEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitHrDepartmentEdit
        {
            get
            {
                return _businessUnitHrDepartmentEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitHrDepartmentView
        {
            get
            {
                return _businessUnitHrDepartmentView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitManagerCommissionLinkEdit
        {
            get
            {
                return _businessUnitManagerCommissionLinkEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitManagerCommissionLinkView
        {
            get
            {
                return _businessUnitManagerCommissionLinkView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitTypeEdit
        {
            get
            {
                return _businessUnitTypeEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitTypeView
        {
            get
            {
                return _businessUnitTypeView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitView
        {
            get
            {
                return _businessUnitView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CompanyLegalEntityEdit
        {
            get
            {
                return _companyLegalEntityEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CompanyLegalEntityView
        {
            get
            {
                return _companyLegalEntityView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CountryEdit
        {
            get
            {
                return _countryEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CountryEditAttachment
        {
            get
            {
                return _countryEditAttachment;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CountryView
        {
            get
            {
                return _countryView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CountryViewAttachment
        {
            get
            {
                return _countryViewAttachment;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> CreateManagementUnitStart
        {
            get
            {
                return _createManagementUnitStart;
            }
        }
        
        public static Framework.SecuritySystem.DisabledSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> Disabled
        {
            get
            {
                return _disabled;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeEdit
        {
            get
            {
                return _employeeEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeePersonalCellPhoneEdit
        {
            get
            {
                return _employeePersonalCellPhoneEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeePersonalCellPhoneView
        {
            get
            {
                return _employeePersonalCellPhoneView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeePositionEdit
        {
            get
            {
                return _employeePositionEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeePositionView
        {
            get
            {
                return _employeePositionView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeRoleDegreeView
        {
            get
            {
                return _employeeRoleDegreeView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeRoleView
        {
            get
            {
                return _employeeRoleView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeSpecializationView
        {
            get
            {
                return _employeeSpecializationView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeView
        {
            get
            {
                return _employeeView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> HRDepartmentAdvancedEdit
        {
            get
            {
                return _hRDepartmentAdvancedEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> HRDepartmentEdit
        {
            get
            {
                return _hRDepartmentEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> HRDepartmentView
        {
            get
            {
                return _hRDepartmentView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> LocationEdit
        {
            get
            {
                return _locationEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> LocationOpenModule
        {
            get
            {
                return _locationOpenModule;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> LocationView
        {
            get
            {
                return _locationView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitAndBusinessUnitLinkEdit
        {
            get
            {
                return _managementUnitAndBusinessUnitLinkEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitAndBusinessUnitLinkView
        {
            get
            {
                return _managementUnitAndBusinessUnitLinkView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitAndHRDepartmentLinkEdit
        {
            get
            {
                return _managementUnitAndHRDepartmentLinkEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitAndHRDepartmentLinkView
        {
            get
            {
                return _managementUnitAndHRDepartmentLinkView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitChangeEdit
        {
            get
            {
                return _managementUnitChangeEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitChangeView
        {
            get
            {
                return _managementUnitChangeView;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitEdit
        {
            get
            {
                return _managementUnitEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ManagementUnitView
        {
            get
            {
                return _managementUnitView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> SystemIntegration
        {
            get
            {
                return _systemIntegration;
            }
        }
        
        public static Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetByCode(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode code)
        {
            if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.Disabled;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitTypeView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitTypeEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitManagerCommissionLinkView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitManagerCommissionLinkEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitHrDepartmentView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitHrDepartmentEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitChangeEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitChangeEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitChangeView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitChangeView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CreateManagementUnitStart))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CreateManagementUnitStart;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitAndBusinessUnitLinkView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitAndBusinessUnitLinkEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitAndHRDepartmentLinkView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ManagementUnitAndHRDepartmentLinkEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeSpecializationView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeSpecializationView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeRoleView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleDegreeView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeRoleDegreeView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.HRDepartmentView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.HRDepartmentEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentAdvancedEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.HRDepartmentAdvancedEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationOpenModule))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.LocationOpenModule;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.LocationView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.LocationEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CountryView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CountryEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryViewAttachment))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CountryViewAttachment;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryEditAttachment))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CountryEditAttachment;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CompanyLegalEntityView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.CompanyLegalEntityEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeePositionView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeePositionEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.AuthorizationImpersonate))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.AuthorizationImpersonate;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeePersonalCellPhoneView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeePersonalCellPhoneEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.SystemIntegration;
            }
            else
            {
                throw new System.ArgumentOutOfRangeException("code");
            }
        }
        
        public static Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetByMode<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode mode)
            where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        {
            WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode securityOperationCode = WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetCodeByMode<TDomainObject>(mode);
            if ((securityOperationCode == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.Disabled;
            }
            else
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetByCode(securityOperationCode);
            }
        }
        
        public static WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode GetCodeByMode(System.Type domainType, Framework.SecuritySystem.BLLSecurityMode mode)
        {
            if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.BusinessUnit) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.BusinessUnit) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.BusinessUnitType) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.BusinessUnitType) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Country) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Country) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Employee) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Employee) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeeInformation) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeePhoto) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.EmployeePhoto) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeePosition) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.EmployeePosition) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeeRole) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleDegreeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeSpecializationView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Example1) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Example1) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.HRDepartment) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.HRDepartment) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.IMRequest) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Information) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Location) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Location) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.ManagementUnit) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.ManagementUnit) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Principal) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Principal) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Projections.CustomCompanyLegalEntity) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.AuthorizationImpersonate;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.SqlParserTestObj) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.SqlParserTestObj) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.TestImmutableObj) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.TestImmutableObj) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView;
            }
            else
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
        }
        
        private static WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode GetCodeByMode<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode mode)
            where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        {
            return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetCodeByMode(typeof(TDomainObject), mode);
        }
    }
    #endregion
    
    public partial class WorkflowSampleSystemSecurityPath<TDomainObject> : Framework.SecuritySystem.SecurityPathWrapper<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
    {
        
        private WorkflowSampleSystemSecurityPath(Framework.SecuritySystem.SecurityPath<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> securityPath) : 
                base(securityPath)
        {
        }
        
        public static implicit operator WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<TDomainObject> (Framework.SecuritySystem.SecurityPath<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> securityPath)
        {
            return new WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<TDomainObject>(securityPath);
        }
    }
    
    public partial class WorkflowSampleSystemBLLContext : Framework.DomainDriven.BLL.Security.SecurityBLLBaseContext<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.DomainObjectBase, System.Guid, WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>>>, WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext
    {
        
        Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.IDefaultBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>> Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.IDefaultBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>>>.Logics
        {
            get
            {
                return this.Logics;
            }
        }
        
        Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>> Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>>>.Logics
        {
            get
            {
                return this.Logics;
            }
        }
        
        public override Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetSecurityOperation(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode securityOperationCode)
        {
            return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetByCode(securityOperationCode);
        }
        
        public override Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetSecurityOperation<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode securitMode)
        {
            return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetByMode<TDomainObject>(securitMode);
        }
    }
    
    public partial interface IWorkflowSampleSystemBLLContext : Framework.DomainDriven.BLL.Security.IAccessDeniedExceptionServiceContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase>, Framework.DomainDriven.BLL.Security.ISecurityServiceContainer<WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityService>, Framework.DomainDriven.BLL.IBLLFactoryContainerContext<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer>, Framework.DomainDriven.IFetchServiceContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.DomainDriven.FetchBuildRule>, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        new WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer Logics
        {
            get;
        }
    }
    
    public partial class DomainBLLBase<TDomainObject, TOperation> : Framework.DomainDriven.BLL.DefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.DomainObjectBase, TDomainObject, System.Guid, TOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        where TOperation :  struct, System.Enum
    {
        
        public DomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, specificationEvaluator)
        {
        }
    }
    
    public abstract partial class SecurityDomainBLLBase<TDomainObject, TOperation> : Framework.DomainDriven.BLL.Security.DefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.DomainObjectBase, TDomainObject, System.Guid, TOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        where TOperation :  struct, System.Enum
    {
        
        protected SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, specificationEvaluator)
        {
        }
        
        protected SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityOperation, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityOperation, specificationEvaluator)
        {
        }
    }
    
    public partial class DomainBLLBase<TDomainObject> : WorkflowSampleSystem.BLL.DomainBLLBase<TDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
    {
        
        public DomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SecurityDomainBLLBase<TDomainObject> : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<TDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
    {
        
        public SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityOperation) : 
                base(context, securityOperation)
        {
        }
    }
    
    public partial class WorkflowSampleSystemSecurityService : WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityServiceBase, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityService
    {
        
        public WorkflowSampleSystemSecurityService(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public abstract partial class WorkflowSampleSystemSecurityServiceBase : Framework.DomainDriven.BLL.Security.RootSecurityService<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        protected WorkflowSampleSystemSecurityServiceBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public static void Register(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitHrDepartmentSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitManagerCommissionLinkSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnitType, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitTypeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.CompanyLegalEntity, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemCompanyLegalEntitySecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Country, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemCountrySecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeSecurityService<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location, WorkflowSampleSystem.Domain.Employee>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeeCellPhone, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeCellPhoneSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeeInformation, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeInformationSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeePersonalCellPhoneSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeePhoto, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeePhotoSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeePosition, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeePositionSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeeRegistrationType, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeRegistrationTypeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeeRole, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeRoleSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeeRoleDegree, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeRoleDegreeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EmployeeSpecialization, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeSpecializationSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemLocation1676SecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemWorkingCalendar1676SecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Example1, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemExample1SecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemHRDepartmentSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.IMRequest, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemIMRequestSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Information, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemInformationSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Location, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemLocationSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.ManagementUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemManagementUnitSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemManagementUnitAndBusinessUnitLinkSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemManagementUnitAndHRDepartmentLinkSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemManagementUnitFluentMappingSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestManualEmployeeProjectionSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Principal, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemPrincipalSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.BusinessUnitIdentity, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitIdentitySecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitProgramClassSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.CustomCompanyLegalEntity, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemCustomCompanyLegalEntitySecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.HerBusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemHerBusinessUnitSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestBusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestBusinessUnitSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestBusinessUnitType, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestBusinessUnitTypeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestCustomContextSecurityObjProjectionSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestDepartment, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestDepartmentSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestEmployee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestEmployeeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestIMRequest, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestIMRequestSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeSecurityService<WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee, WorkflowSampleSystem.Domain.Projections.SecurityBusinessUnit, WorkflowSampleSystem.Domain.Projections.SecurityHRDepartment, WorkflowSampleSystem.Domain.Projections.SecurityLocation, WorkflowSampleSystem.Domain.Projections.SecurityEmployee>>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestLocation, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestLocationSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestLocationCollectionProperties, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestLocationCollectionPropertiesSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.TestSecurityObjItemProjection, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestSecurityObjItemProjectionSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Projections.VisualEmployee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemVisualEmployeeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.SqlParserTestObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemSqlParserTestObjSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemSqlParserTestObjContainerSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestCustomContextSecurityObjSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestImmutableObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestImmutableObjSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestRootSecurityObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestRootSecurityObjSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestSecurityObjItem, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestSecurityObjItemSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestSecuritySubObjItemSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestSecuritySubObjItem2SecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemTestSecuritySubObjItem3SecurityService>(serviceCollection);
        }
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment> GetBusinessUnitHrDepartmentSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink> GetBusinessUnitManagerCommissionLinkSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnit> GetBusinessUnitSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.EmployeeCellPhone> GetEmployeeCellPhoneSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.EmployeePhoto> GetEmployeePhotoSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.EmployeePosition> GetEmployeePositionSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<TDomainObject> GetEmployeeSecurityPath<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee>()
            where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, WorkflowSampleSystem.Domain.IBusinessUnitSecurityElement<TBusinessUnit>, WorkflowSampleSystem.Domain.IDepartmentSecurityElement<TDepartment>, WorkflowSampleSystem.Domain.IEmployeeSecurityElement<TEmployee, TBusinessUnit, TDepartment, TLocation>, WorkflowSampleSystem.Domain.IEmployeeSecurityElement<TEmployee>
            where TBusinessUnit : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TDepartment : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ILocationSecurityElement<TLocation>
            where TLocation : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TEmployee : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, Framework.SecuritySystem.ISecurityContext;
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink> GetManagementUnitAndBusinessUnitLinkSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink> GetManagementUnitAndHRDepartmentLinkSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping> GetManagementUnitFluentMappingSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnit> GetManagementUnitSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.TestRootSecurityObj> GetTestRootSecurityObjSecurityPath();
    }
    
    public partial interface IWorkflowSampleSystemSecurityService : Framework.DomainDriven.BLL.Security.IRootSecurityService<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer
    {
    }
    
    public partial interface IWorkflowSampleSystemSecurityPathContainer
    {
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment> GetBusinessUnitHrDepartmentSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink> GetBusinessUnitManagerCommissionLinkSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnit> GetBusinessUnitSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.EmployeeCellPhone> GetEmployeeCellPhoneSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.EmployeePhoto> GetEmployeePhotoSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.EmployeePosition> GetEmployeePositionSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<TDomainObject> GetEmployeeSecurityPath<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee>()
            where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, WorkflowSampleSystem.Domain.IBusinessUnitSecurityElement<TBusinessUnit>, WorkflowSampleSystem.Domain.IDepartmentSecurityElement<TDepartment>, WorkflowSampleSystem.Domain.IEmployeeSecurityElement<TEmployee, TBusinessUnit, TDepartment, TLocation>, WorkflowSampleSystem.Domain.IEmployeeSecurityElement<TEmployee>
            where TBusinessUnit : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TDepartment : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ILocationSecurityElement<TLocation>
            where TLocation : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
            where TEmployee : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, Framework.SecuritySystem.ISecurityContext;
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink> GetManagementUnitAndBusinessUnitLinkSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink> GetManagementUnitAndHRDepartmentLinkSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping> GetManagementUnitFluentMappingSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.ManagementUnit> GetManagementUnitSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.TestRootSecurityObj> GetTestRootSecurityObjSecurityPath();
    }
    
    public partial class WorkflowSampleSystemBusinessUnitSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemBusinessUnitHrDepartmentSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemBusinessUnitHrDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitHrDepartmentSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemBusinessUnitManagerCommissionLinkSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemBusinessUnitManagerCommissionLinkSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitManagerCommissionLinkSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemBusinessUnitTypeSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitType, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemBusinessUnitTypeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemCompanyLegalEntitySecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemCompanyLegalEntitySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemCountrySecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Country, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemCountrySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeSecurityService<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee> : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, WorkflowSampleSystem.Domain.IBusinessUnitSecurityElement<TBusinessUnit>, WorkflowSampleSystem.Domain.IDepartmentSecurityElement<TDepartment>, WorkflowSampleSystem.Domain.IEmployeeSecurityElement<TEmployee, TBusinessUnit, TDepartment, TLocation>, WorkflowSampleSystem.Domain.IEmployeeSecurityElement<TEmployee>
        where TBusinessUnit : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
        where TDepartment : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ILocationSecurityElement<TLocation>
        where TLocation : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.SecuritySystem.ISecurityContext
        where TEmployee : WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IEmployeeSecurity<TBusinessUnit, TDepartment, TLocation>, Framework.SecuritySystem.ISecurityContext
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeeSecurityPath<TDomainObject, TBusinessUnit, TDepartment, TLocation, TEmployee>();
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeCellPhoneSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeCellPhone, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemEmployeeCellPhoneSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeCellPhone, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeeCellPhoneSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeInformationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeInformation, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemEmployeeInformationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemEmployeePersonalCellPhoneSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemEmployeePersonalCellPhoneSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemEmployeePhotoSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePhoto, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemEmployeePhotoSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePhoto, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeePhotoSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemEmployeePositionSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePosition, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemEmployeePositionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePosition, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeePositionSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeRegistrationTypeSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeRegistrationType, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemEmployeeRegistrationTypeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeRoleSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeRole, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemEmployeeRoleSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeRoleDegreeSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeRoleDegree, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemEmployeeRoleDegreeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeSpecializationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeSpecialization, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemEmployeeSpecializationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemLocation1676SecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemLocation1676SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemWorkingCalendar1676SecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemWorkingCalendar1676SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemExample1SecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Example1, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemExample1SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemHRDepartmentSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.HRDepartment, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemHRDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemIMRequestSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IMRequest, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemIMRequestSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemInformationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Information, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemInformationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemLocationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Location, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemLocationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemManagementUnitSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemManagementUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnit, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemManagementUnitAndBusinessUnitLinkSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemManagementUnitAndBusinessUnitLinkSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitAndBusinessUnitLinkSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemManagementUnitAndHRDepartmentLinkSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemManagementUnitAndHRDepartmentLinkSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitAndHRDepartmentLinkSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemManagementUnitFluentMappingSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemManagementUnitFluentMappingSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetManagementUnitFluentMappingSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemTestManualEmployeeProjectionSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, WorkflowSampleSystem.Domain.Employee, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestManualEmployeeProjectionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemPrincipalSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Principal, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemPrincipalSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemBusinessUnitIdentitySecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.BusinessUnitIdentity, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemBusinessUnitIdentitySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemBusinessUnitProgramClassSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemBusinessUnitProgramClassSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemCustomCompanyLegalEntitySecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.CustomCompanyLegalEntity, WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemCustomCompanyLegalEntitySecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.CompanyLegalEntity, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemHerBusinessUnitSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.HerBusinessUnit, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemHerBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestBusinessUnitSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestBusinessUnit, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestBusinessUnitTypeSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestBusinessUnitType, WorkflowSampleSystem.Domain.BusinessUnitType, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestBusinessUnitTypeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnitType, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestCustomContextSecurityObjProjectionSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestCustomContextSecurityObjProjectionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestDepartmentSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestDepartment, WorkflowSampleSystem.Domain.HRDepartment, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestEmployeeSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestEmployee, WorkflowSampleSystem.Domain.Employee, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestEmployeeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestIMRequestSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestIMRequest, WorkflowSampleSystem.Domain.IMRequest, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestIMRequestSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.IMRequest, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestLocationSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestLocation, WorkflowSampleSystem.Domain.Location, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestLocationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Location, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestLocationCollectionPropertiesSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestLocationCollectionProperties, WorkflowSampleSystem.Domain.Location, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestLocationCollectionPropertiesSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Location, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestSecurityObjItemProjectionSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestSecurityObjItemProjection, WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestSecurityObjItemProjectionSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestSecurityObjItem, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemVisualEmployeeSecurityService : Framework.SecuritySystem.UntypedDependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.VisualEmployee, WorkflowSampleSystem.Domain.Employee, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemVisualEmployeeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
    }
    
    public partial class WorkflowSampleSystemSqlParserTestObjSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.SqlParserTestObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemSqlParserTestObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemSqlParserTestObjContainerSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemSqlParserTestObjContainerSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestCustomContextSecurityObjSecurityService : Framework.SecuritySystem.ContextDomainSecurityServiceBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestCustomContextSecurityObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestImmutableObjSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestImmutableObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestImmutableObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemTestRootSecurityObjSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemTestRootSecurityObjSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetTestRootSecurityObjSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemTestSecurityObjItemSecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecurityObjItem, WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestSecurityObjItemSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestRootSecurityObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<WorkflowSampleSystem.Domain.TestSecurityObjItem, WorkflowSampleSystem.Domain.TestRootSecurityObj>> Selector
        {
            get
            {
                return domainObject => domainObject.FirstMaster;
            }
        }
    }
    
    public partial class WorkflowSampleSystemTestSecuritySubObjItemSecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecuritySubObjItem, WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestSecuritySubObjItemSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestSecurityObjItem, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, WorkflowSampleSystem.Domain.TestSecurityObjItem>> Selector
        {
            get
            {
                return domainObject => domainObject.InnerMaster;
            }
        }
    }
    
    public partial class WorkflowSampleSystemTestSecuritySubObjItem2SecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestSecuritySubObjItem2SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestRootSecurityObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, WorkflowSampleSystem.Domain.TestRootSecurityObj>> Selector
        {
            get
            {
                return domainObject => domainObject.RootSecurityObj;
            }
        }
    }
    
    public partial class WorkflowSampleSystemTestSecuritySubObjItem3SecurityService : Framework.SecuritySystem.DependencyDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemTestSecuritySubObjItem3SecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.TestRootSecurityObj, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> baseDomainSecurityService, Framework.QueryableSource.IQueryableSource<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> queryableSource) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, baseDomainSecurityService, queryableSource)
        {
        }
        
        protected override System.Linq.Expressions.Expression<System.Func<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, WorkflowSampleSystem.Domain.TestRootSecurityObj>> Selector
        {
            get
            {
                return domainObject => domainObject.InnerMaster.FirstMaster;
            }
        }
    }
    
    public partial interface IWorkflowSampleSystemBLLFactoryContainer : Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>>
    {
        
        WorkflowSampleSystem.BLL.IBusinessUnitBLL BusinessUnit
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory BusinessUnitFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitHrDepartmentBLL BusinessUnitHrDepartment
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory BusinessUnitHrDepartmentFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL BusinessUnitManagerCommissionLink
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory BusinessUnitManagerCommissionLinkFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitProgramClassBLL BusinessUnitProgramClass
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitProgramClassBLLFactory BusinessUnitProgramClassFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitTypeBLL BusinessUnitType
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitTypeBLLFactory BusinessUnitTypeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ICompanyLegalEntityBLL CompanyLegalEntity
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ICompanyLegalEntityBLLFactory CompanyLegalEntityFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ICountryBLL Country
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ICountryBLLFactory CountryFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ICustomCompanyLegalEntityBLL CustomCompanyLegalEntity
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory CustomCompanyLegalEntityFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeBLL Employee
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeBLLFactory EmployeeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeInformationBLL EmployeeInformation
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeInformationBLLFactory EmployeeInformationFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeePhotoBLL EmployeePhoto
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeePhotoBLLFactory EmployeePhotoFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeePositionBLL EmployeePosition
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeePositionBLLFactory EmployeePositionFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeRegistrationTypeBLL EmployeeRegistrationType
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory EmployeeRegistrationTypeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeRoleBLL EmployeeRole
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeRoleDegreeBLL EmployeeRoleDegree
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeRoleDegreeBLLFactory EmployeeRoleDegreeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeRoleBLLFactory EmployeeRoleFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeSpecializationBLL EmployeeSpecialization
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeSpecializationBLLFactory EmployeeSpecializationFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IExample1BLL Example1
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IExample1BLLFactory Example1Factory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IHRDepartmentBLL HRDepartment
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory HRDepartmentFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IIMRequestBLL IMRequest
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IIMRequestBLLFactory IMRequestFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IInformationBLL Information
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IInformationBLLFactory InformationFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IIntegrationVersionContainer1BLL IntegrationVersionContainer1
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IIntegrationVersionContainer1BLLFactory IntegrationVersionContainer1Factory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IIntegrationVersionContainer2BLL IntegrationVersionContainer2
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IIntegrationVersionContainer2BLLFactory IntegrationVersionContainer2Factory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ILocationBLL Location
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ILocation1676BLL Location1676
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ILocation1676BLLFactory Location1676Factory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ILocationBLLFactory LocationFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitBLL ManagementUnit
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL ManagementUnitAndBusinessUnitLink
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory ManagementUnitAndBusinessUnitLinkFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL ManagementUnitAndHRDepartmentLink
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory ManagementUnitAndHRDepartmentLinkFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitBLLFactory ManagementUnitFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitFluentMappingBLL ManagementUnitFluentMapping
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IManagementUnitFluentMappingBLLFactory ManagementUnitFluentMappingFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.INamedLockBLL NamedLock
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.INamedLockBLLFactory NamedLockFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IPrincipalBLL Principal
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IPrincipalBLLFactory PrincipalFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IRoleRoleDegreeLinkBLL RoleRoleDegreeLink
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory RoleRoleDegreeLinkFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ISqlParserTestObjBLL SqlParserTestObj
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ISqlParserTestObjContainerBLL SqlParserTestObjContainer
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ISqlParserTestObjContainerBLLFactory SqlParserTestObjContainerFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ISqlParserTestObjBLLFactory SqlParserTestObjFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestBusinessUnitBLL TestBusinessUnit
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestBusinessUnitBLLFactory TestBusinessUnitFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjBLL TestCustomContextSecurityObj
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory TestCustomContextSecurityObjFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL TestCustomContextSecurityObjProjection
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory TestCustomContextSecurityObjProjectionFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestDepartmentBLL TestDepartment
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestDepartmentBLLFactory TestDepartmentFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestEmployeeBLL TestEmployee
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestEmployeeBLLFactory TestEmployeeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestImmutableObjBLL TestImmutableObj
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestImmutableObjBLLFactory TestImmutableObjFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestIMRequestBLL TestIMRequest
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestIMRequestBLLFactory TestIMRequestFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestLegacyEmployeeBLL TestLegacyEmployee
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestLegacyEmployeeBLLFactory TestLegacyEmployeeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestLocationBLL TestLocation
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestLocationCollectionPropertiesBLL TestLocationCollectionProperties
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory TestLocationCollectionPropertiesFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestLocationBLLFactory TestLocationFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestManualEmployeeProjectionBLL TestManualEmployeeProjection
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory TestManualEmployeeProjectionFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestRootSecurityObjBLL TestRootSecurityObj
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestRootSecurityObjBLLFactory TestRootSecurityObjFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecurityObjItemBLL TestSecurityObjItem
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecurityObjItemBLLFactory TestSecurityObjItemFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecurityObjItemProjectionBLL TestSecurityObjItemProjection
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory TestSecurityObjItemProjectionFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecuritySubObjItemBLL TestSecuritySubObjItem
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecuritySubObjItem2BLL TestSecuritySubObjItem2
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory TestSecuritySubObjItem2Factory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecuritySubObjItem3BLL TestSecuritySubObjItem3
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory TestSecuritySubObjItem3Factory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ITestSecuritySubObjItemBLLFactory TestSecuritySubObjItemFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IWorkingCalendar1676BLL WorkingCalendar1676
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IWorkingCalendar1676BLLFactory WorkingCalendar1676Factory
        {
            get;
        }
    }
    
    public partial interface IBusinessUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.BusinessUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitHrDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitHrDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitHrDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitHrDepartmentBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitHrDepartmentBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitHrDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitTypeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnitType, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitTypeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitTypeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.BusinessUnitType>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitTypeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitTypeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitTypeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ICompanyLegalEntityBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Guid>
    {
    }
    
    public partial interface ICompanyLegalEntityBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICompanyLegalEntityBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.CompanyLegalEntity>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICompanyLegalEntityBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICompanyLegalEntityBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICompanyLegalEntityBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ICountryBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Country, System.Guid>
    {
    }
    
    public partial interface ICountryBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICountryBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Country>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICountryBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICountryBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICountryBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid>
    {
        
        WorkflowSampleSystem.Domain.Employee ChangeByEmail(WorkflowSampleSystem.Domain.EmployeeEmailChangeModel changeModel);
        
        WorkflowSampleSystem.Domain.Employee ComplexChange(WorkflowSampleSystem.Domain.EmployeeComplexChangeModel changeModel);
        
        WorkflowSampleSystem.Domain.EmployeeEmailChangeModel GetChangeByEmail(WorkflowSampleSystem.Domain.Employee employee);
        
        System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee> GetListBy(WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Employee> fetchs);
        
        WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel GetMassChangeByEmail(System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee> employees);
        
        WorkflowSampleSystem.Domain.Employee IntegrationSave(WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel integrationSaveModel);
        
        System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee> MassChangeByEmail(WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel changeModel);
    }
    
    public partial interface IEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Employee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeInformationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeInformation, System.Guid>
    {
    }
    
    public partial interface IEmployeeInformationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeInformationBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeeInformation>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeInformationBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeInformationBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeInformationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeePhotoBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePhoto, System.Guid>
    {
    }
    
    public partial interface IEmployeePhotoBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePhotoBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeePhoto>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePhotoBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePhotoBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePhotoBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeePositionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeePosition, System.Guid>
    {
    }
    
    public partial interface IEmployeePositionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePositionBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeePosition>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePositionBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePositionBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeePositionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeRegistrationTypeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeRegistrationType, System.Guid>
    {
    }
    
    public partial interface IEmployeeRegistrationTypeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRegistrationTypeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeeRegistrationType>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRegistrationTypeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRegistrationTypeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRegistrationTypeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeRoleBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeRole, System.Guid>
    {
    }
    
    public partial interface IEmployeeRoleBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeeRole>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeRoleDegreeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeRoleDegree, System.Guid>
    {
    }
    
    public partial interface IEmployeeRoleDegreeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleDegreeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeeRoleDegree>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleDegreeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleDegreeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeRoleDegreeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeSpecializationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EmployeeSpecialization, System.Guid>
    {
    }
    
    public partial interface IEmployeeSpecializationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeSpecializationBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EmployeeSpecialization>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeSpecializationBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeSpecializationBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeSpecializationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ILocation1676BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.Guid>
    {
    }
    
    public partial interface ILocation1676BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocation1676BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocation1676BLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocation1676BLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocation1676BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IWorkingCalendar1676BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.Guid>
    {
    }
    
    public partial interface IWorkingCalendar1676BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkingCalendar1676BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkingCalendar1676BLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkingCalendar1676BLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IWorkingCalendar1676BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IExample1BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Example1, System.Guid>
    {
    }
    
    public partial interface IExample1BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IExample1BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Example1>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IExample1BLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IExample1BLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IExample1BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IHRDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.HRDepartment, System.Guid>
    {
    }
    
    public partial interface IHRDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.HRDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IIMRequestBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IMRequest, System.Guid>
    {
    }
    
    public partial interface IIMRequestBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IIMRequestBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.IMRequest>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IIMRequestBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IIMRequestBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IIMRequestBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IInformationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Information, System.Guid>
    {
    }
    
    public partial interface IInformationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IInformationBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Information>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IInformationBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IInformationBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IInformationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IIntegrationVersionContainer1BLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.Guid>
    {
        
        WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1 IntegrationSave(WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel integrationSaveModel);
    }
    
    public partial interface IIntegrationVersionContainer1BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IIntegrationVersionContainer1BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>>
    {
    }
    
    public partial interface IIntegrationVersionContainer2BLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.Guid>
    {
    }
    
    public partial interface IIntegrationVersionContainer2BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IIntegrationVersionContainer2BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>>
    {
    }
    
    public partial interface ILocationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Location, System.Guid>
    {
    }
    
    public partial interface ILocationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Location>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnit, System.Guid>
    {
    }
    
    public partial interface IManagementUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.ManagementUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid>
    {
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid>
    {
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IManagementUnitFluentMappingBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.Guid>
    {
    }
    
    public partial interface IManagementUnitFluentMappingBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitFluentMappingBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitFluentMappingBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitFluentMappingBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IManagementUnitFluentMappingBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestManualEmployeeProjectionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, System.Guid>
    {
    }
    
    public partial interface ITestManualEmployeeProjectionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestManualEmployeeProjectionBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.ManualProjections.TestManualEmployeeProjection>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestManualEmployeeProjectionBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestManualEmployeeProjectionBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestManualEmployeeProjectionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface INamedLockBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.NamedLock, System.Guid>
    {
    }
    
    public partial interface INamedLockBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.INamedLockBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.NamedLock>>
    {
    }
    
    public partial interface IPrincipalBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Principal, System.Guid>
    {
    }
    
    public partial interface IPrincipalBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IPrincipalBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Principal>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IPrincipalBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IPrincipalBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IPrincipalBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IBusinessUnitProgramClassBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass, System.Guid>
    {
        
        Framework.OData.SelectOperationResult<WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass> GetObjectsByOData(Framework.OData.SelectOperation<WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass> selectOperation, WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass> fetchs);
    }
    
    public partial interface IBusinessUnitProgramClassBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitProgramClassBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.BusinessUnitProgramClass>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitProgramClassBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitProgramClassBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitProgramClassBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ICustomCompanyLegalEntityBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.CustomCompanyLegalEntity, System.Guid>
    {
    }
    
    public partial interface ICustomCompanyLegalEntityBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICustomCompanyLegalEntityBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.CustomCompanyLegalEntity>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICustomCompanyLegalEntityBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICustomCompanyLegalEntityBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ICustomCompanyLegalEntityBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestBusinessUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestBusinessUnit, System.Guid>
    {
        
        Framework.OData.SelectOperationResult<Framework.Persistent.HierarchicalNode<WorkflowSampleSystem.Domain.Projections.TestBusinessUnit, System.Guid>> GetTreeByOData(Framework.OData.SelectOperation<WorkflowSampleSystem.Domain.Projections.TestBusinessUnit> selectOperation, WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.TestBusinessUnit> fetchs);
    }
    
    public partial interface ITestBusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestBusinessUnitBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestBusinessUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestBusinessUnitBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestBusinessUnitBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestBusinessUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjProjectionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, System.Guid>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjProjectionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestDepartment, System.Guid>
    {
    }
    
    public partial interface ITestDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestDepartmentBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestDepartmentBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestEmployee, System.Guid>
    {
        
        System.Collections.Generic.List<WorkflowSampleSystem.Domain.Projections.TestEmployee> GetListBy(WorkflowSampleSystem.Domain.TestEmployeeFilter filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.TestEmployee> fetchs);
        
        System.Collections.Generic.List<WorkflowSampleSystem.Domain.Projections.TestEmployee> GetListBy(WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.TestEmployee> fetchs);
        
        WorkflowSampleSystem.Domain.Projections.TestEmployee GetObjectBy(WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.TestEmployee> fetchs);
        
        Framework.OData.SelectOperationResult<WorkflowSampleSystem.Domain.Projections.TestEmployee> GetObjectsByOData(Framework.OData.SelectOperation<WorkflowSampleSystem.Domain.Projections.TestEmployee> selectOperation, WorkflowSampleSystem.Domain.TestEmployeeFilter filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.TestEmployee> fetchs);
    }
    
    public partial interface ITestEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestEmployee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestEmployeeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestEmployeeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestIMRequestBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestIMRequest, System.Guid>
    {
    }
    
    public partial interface ITestIMRequestBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestIMRequestBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestIMRequest>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestIMRequestBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestIMRequestBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestIMRequestBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestLegacyEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee, System.Guid>
    {
        
        System.Collections.Generic.List<WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee> GetListBy(WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel filter, Framework.DomainDriven.IFetchContainer<WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee> fetchs);
    }
    
    public partial interface ITestLegacyEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLegacyEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestLegacyEmployee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLegacyEmployeeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLegacyEmployeeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLegacyEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestLocationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestLocation, System.Guid>
    {
    }
    
    public partial interface ITestLocationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestLocation>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestLocationCollectionPropertiesBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestLocationCollectionProperties, System.Guid>
    {
    }
    
    public partial interface ITestLocationCollectionPropertiesBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationCollectionPropertiesBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestLocationCollectionProperties>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationCollectionPropertiesBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationCollectionPropertiesBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestLocationCollectionPropertiesBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecurityObjItemProjectionBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Projections.TestSecurityObjItemProjection, System.Guid>
    {
    }
    
    public partial interface ITestSecurityObjItemProjectionBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemProjectionBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Projections.TestSecurityObjItemProjection>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemProjectionBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemProjectionBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemProjectionBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IRoleRoleDegreeLinkBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.RoleRoleDegreeLink, System.Guid>
    {
    }
    
    public partial interface IRoleRoleDegreeLinkBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IRoleRoleDegreeLinkBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>>
    {
    }
    
    public partial interface ISqlParserTestObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.SqlParserTestObj, System.Guid>
    {
    }
    
    public partial interface ISqlParserTestObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.SqlParserTestObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ISqlParserTestObjContainerBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.Guid>
    {
    }
    
    public partial interface ISqlParserTestObjContainerBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjContainerBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjContainerBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjContainerBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ISqlParserTestObjContainerBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.Guid>
    {
    }
    
    public partial interface ITestCustomContextSecurityObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestCustomContextSecurityObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestImmutableObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestImmutableObj, System.Guid>
    {
    }
    
    public partial interface ITestImmutableObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestImmutableObjBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestImmutableObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestImmutableObjBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestImmutableObjBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestImmutableObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestRootSecurityObjBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Guid>
    {
    }
    
    public partial interface ITestRootSecurityObjBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestRootSecurityObjBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestRootSecurityObj>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestRootSecurityObjBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestRootSecurityObjBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestRootSecurityObjBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecurityObjItemBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Guid>
    {
    }
    
    public partial interface ITestSecurityObjItemBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestSecurityObjItem>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecurityObjItemBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecuritySubObjItemBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecuritySubObjItem, System.Guid>
    {
    }
    
    public partial interface ITestSecuritySubObjItemBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItemBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItemBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItemBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItemBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecuritySubObjItem2BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, System.Guid>
    {
    }
    
    public partial interface ITestSecuritySubObjItem2BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem2BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem2BLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem2BLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem2BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ITestSecuritySubObjItem3BLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, System.Guid>
    {
    }
    
    public partial interface ITestSecuritySubObjItem3BLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem3BLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem3BLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem3BLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ITestSecuritySubObjItem3BLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
}
