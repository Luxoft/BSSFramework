//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.Configuration.Generated.DTO
{
    
    
    public partial interface IConfigurationClientDTOMappingService
    {
        
        void MapBaseAuditPersistentToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapFullToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO currentSource);
        
        void MapFullToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO currentSource);
        
        void MapFullToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO currentSource);
        
        void MapFullToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentFullDTO currentSource);
        
        void MapFullToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO currentSource);
        
        void MapFullToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO currentSource);
        
        void MapFullToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagFullDTO currentSource);
        
        void MapFullToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO currentSource);
        
        void MapFullToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsFullDTO currentSource);
        
        void MapFullToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO currentSource);
        
        void MapFullToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO currentSource);
        
        void MapFullToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO currentSource);
        
        void MapFullToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO currentSource);
        
        void MapFullToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO currentSource);
        
        void MapFullToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeFullDTO currentSource);
        
        void MapFullToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO currentSource);
        
        void MapFullToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO currentSource);
        
        void MapFullToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO currentSource);
        
        void MapFullToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.LogMessageFullDTO currentSource);
        
        void MapFullToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.NamedLockFullDTO currentSource);
        
        void MapFullToStrictForQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO target, Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO currentSource);
        
        void MapFullToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.ReportFullDTO currentSource);
        
        void MapFullToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.ReportFilterFullDTO currentSource);
        
        void MapFullToStrictForReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO currentSource);
        
        void MapFullToStrictForReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO currentSource);
        
        void MapFullToStrictForReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO currentSource);
        
        void MapFullToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterFullDTO currentSource);
        
        void MapFullToStrictForReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO currentSource);
        
        void MapFullToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.ReportPropertyFullDTO currentSource);
        
        void MapFullToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.SentMessageFullDTO currentSource);
        
        void MapFullToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceFullDTO currentSource);
        
        void MapFullToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO currentSource);
        
        void MapFullToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantFullDTO currentSource);
        
        void MapFullToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemFullDTO currentSource);
        
        void MapFullToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.UserActionFullDTO currentSource);
        
        void MapFullToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO currentSource);
        
        void MapFullToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectFullDTO currentSource);
        
        void MapFullToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO currentSource);
        
        void MapFullToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO currentSource);
        
        void MapRichToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO currentSource);
        
        void MapRichToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO currentSource);
        
        void MapRichToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO currentSource);
        
        void MapRichToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentRichDTO currentSource);
        
        void MapRichToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO currentSource);
        
        void MapRichToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO currentSource);
        
        void MapRichToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagRichDTO currentSource);
        
        void MapRichToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO currentSource);
        
        void MapRichToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsRichDTO currentSource);
        
        void MapRichToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO currentSource);
        
        void MapRichToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO currentSource);
        
        void MapRichToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO currentSource);
        
        void MapRichToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO currentSource);
        
        void MapRichToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO currentSource);
        
        void MapRichToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRichDTO currentSource);
        
        void MapRichToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO currentSource);
        
        void MapRichToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO currentSource);
        
        void MapRichToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO currentSource);
        
        void MapRichToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.LogMessageRichDTO currentSource);
        
        void MapRichToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.NamedLockRichDTO currentSource);
        
        void MapRichToStrictForQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO target, Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO currentSource);
        
        void MapRichToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.ReportRichDTO currentSource);
        
        void MapRichToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.ReportFilterRichDTO currentSource);
        
        void MapRichToStrictForReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO currentSource);
        
        void MapRichToStrictForReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO currentSource);
        
        void MapRichToStrictForReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO currentSource);
        
        void MapRichToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterRichDTO currentSource);
        
        void MapRichToStrictForReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO currentSource);
        
        void MapRichToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.ReportPropertyRichDTO currentSource);
        
        void MapRichToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.SentMessageRichDTO currentSource);
        
        void MapRichToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRichDTO currentSource);
        
        void MapRichToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO currentSource);
        
        void MapRichToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRichDTO currentSource);
        
        void MapRichToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRichDTO currentSource);
        
        void MapRichToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.UserActionRichDTO currentSource);
        
        void MapRichToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO currentSource);
        
        void MapRichToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRichDTO currentSource);
        
        void MapRichToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO currentSource);
        
        void MapRichToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO currentSource);
        
        void MapSimpleToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO currentSource);
        
        void MapSimpleToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO currentSource);
        
        void MapSimpleToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO currentSource);
        
        void MapSimpleToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentSimpleDTO currentSource);
        
        void MapSimpleToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO currentSource);
        
        void MapSimpleToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO currentSource);
        
        void MapSimpleToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO currentSource);
        
        void MapSimpleToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO currentSource);
        
        void MapSimpleToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO currentSource);
        
        void MapSimpleToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO currentSource);
        
        void MapSimpleToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO currentSource);
        
        void MapSimpleToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.LogMessageSimpleDTO currentSource);
        
        void MapSimpleToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.NamedLockSimpleDTO currentSource);
        
        void MapSimpleToStrictForQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO target, Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO currentSource);
        
        void MapSimpleToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.ReportSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO currentSource);
        
        void MapSimpleToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO currentSource);
        
        void MapSimpleToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.SentMessageSimpleDTO currentSource);
        
        void MapSimpleToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceSimpleDTO currentSource);
        
        void MapSimpleToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO currentSource);
        
        void MapSimpleToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO currentSource);
        
        void MapSimpleToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.UserActionSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO currentSource);
    }
    
    public abstract partial class ConfigurationClientPrimitiveDTOMappingServiceBase : Framework.Persistent.ClientDTOMappingServiceBase, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService
    {
        
        public virtual void MapBaseAuditPersistentToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Active = source.Active;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Active = source.Active;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapBasePersistentToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapBasePersistentToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Id = source.Id;
        }
        
        public virtual void MapFullToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.DomainType, null))
            {
                target.DomainType = source.DomainType.Identity;
            }
            else
            {
                target.DomainType = default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.DomainType, null))
            {
                target.DomainType = source.DomainType.Identity;
            }
            else
            {
                target.DomainType = default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Parent, null))
            {
                target.Parent = source.Parent.Identity;
            }
            else
            {
                target.Parent = default(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Operation, null))
            {
                target.Operation = source.Operation.Identity;
            }
            else
            {
                target.Operation = default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.DomainType, null))
            {
                target.DomainType = source.DomainType.Identity;
            }
            else
            {
                target.DomainType = default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Operation, null))
            {
                target.Operation = source.Operation.Identity;
            }
            else
            {
                target.Operation = default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.TargetSystem, null))
            {
                target.TargetSystem = source.TargetSystem.Identity;
            }
            else
            {
                target.TargetSystem = default(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.LogMessageFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.NamedLockFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO target, Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.ReportFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.ReportFilterFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Report, null))
            {
                target.Report = source.Report.Identity;
            }
            else
            {
                target.Report = default(Framework.Configuration.Generated.DTO.ReportIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Parameter, null))
            {
                target.Parameter = source.Parameter.Identity;
            }
            else
            {
                target.Parameter = default(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.ReportParameter, null))
            {
                target.ReportParameter = source.ReportParameter.Identity;
            }
            else
            {
                target.ReportParameter = default(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.ReportPropertyFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.SentMessageFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.UserActionFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.DomainType, null))
            {
                target.DomainType = source.DomainType.Identity;
            }
            else
            {
                target.DomainType = default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO);
            }
        }
        
        public virtual void MapFullToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapFullToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Content, null))
            {
                target.Content = System.Linq.Enumerable.ToArray(source.Content);
            }
            else
            {
                target.Content = null;
            }
            if (!object.ReferenceEquals(source.Tags, null))
            {
                target.Tags = Framework.Core.EnumerableExtensions.ToList(source.Tags, attachmentTag => new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(attachmentTag));
            }
        }
        
        public virtual void MapRichToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Attachments, null))
            {
                target.Attachments = Framework.Core.EnumerableExtensions.ToList(source.Attachments, attachment => new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(attachment));
            }
        }
        
        public virtual void MapRichToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Children, null))
            {
                target.Children = Framework.Core.EnumerableExtensions.ToList(source.Children, controlSettings => new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(controlSettings));
            }
            if (!object.ReferenceEquals(source.ControlSettingsParams, null))
            {
                target.ControlSettingsParams = Framework.Core.EnumerableExtensions.ToList(source.ControlSettingsParams, controlSettingsParam => new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(controlSettingsParam));
            }
        }
        
        public virtual void MapRichToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.ControlSettingsParamValues, null))
            {
                target.ControlSettingsParamValues = Framework.Core.EnumerableExtensions.ToList(source.ControlSettingsParamValues, controlSettingsParamValue => new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(controlSettingsParamValue));
            }
        }
        
        public virtual void MapRichToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DomainObjectIdents = source.DomainObjectIdents;
        }
        
        public virtual void MapRichToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.InnerException, null))
            {
                target.InnerException = new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(source.InnerException);
            }
            else
            {
                target.InnerException = null;
            }
        }
        
        public virtual void MapRichToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.LogMessageRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.NamedLockRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO target, Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.ReportRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.AccessableBusinessRoles, null))
            {
                target.AccessableBusinessRoles = Framework.Core.EnumerableExtensions.ToList(source.AccessableBusinessRoles, accessableBusinessRoleReportRight => new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO(accessableBusinessRoleReportRight));
            }
            if (!object.ReferenceEquals(source.AccessableOperations, null))
            {
                target.AccessableOperations = Framework.Core.EnumerableExtensions.ToList(source.AccessableOperations, accessableOperationReportRight => new Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO(accessableOperationReportRight));
            }
            if (!object.ReferenceEquals(source.AccessablePrincipals, null))
            {
                target.AccessablePrincipals = Framework.Core.EnumerableExtensions.ToList(source.AccessablePrincipals, accessablePrincipalReportRight => new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO(accessablePrincipalReportRight));
            }
            if (!object.ReferenceEquals(source.Filters, null))
            {
                target.Filters = Framework.Core.EnumerableExtensions.ToList(source.Filters, reportFilter => new Framework.Configuration.Generated.DTO.ReportFilterStrictDTO(reportFilter));
            }
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(source.Parameters, reportParameter => new Framework.Configuration.Generated.DTO.ReportParameterStrictDTO(reportParameter));
            }
            if (!object.ReferenceEquals(source.Properties, null))
            {
                target.Properties = Framework.Core.EnumerableExtensions.ToList(source.Properties, reportProperty => new Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO(reportProperty));
            }
        }
        
        public virtual void MapRichToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.ReportFilterRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Items, null))
            {
                target.Items = Framework.Core.EnumerableExtensions.ToList(source.Items, reportGenerationValue => new Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO(reportGenerationValue));
            }
        }
        
        public virtual void MapRichToStrictForReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(source.Parameters, reportParameter => reportParameter.Identity);
            }
            target.TypeMetadatas = source.TypeMetadatas;
        }
        
        public virtual void MapRichToStrictForReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.ReportPropertyRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.SentMessageRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.UserActionRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.ObjectIdentities, null))
            {
                target.ObjectIdentities = Framework.Core.EnumerableExtensions.ToList(source.ObjectIdentities, userActionObject => new Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO(userActionObject));
            }
        }
        
        public virtual void MapRichToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (!object.ReferenceEquals(source.ObjectIdentities, null))
            {
                target.ObjectIdentities = Framework.Core.EnumerableExtensions.ToList(source.ObjectIdentities, userActionObjectModel => new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(userActionObjectModel));
            }
        }
        
        public virtual void MapRichToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapRichToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.ActionNames = source.ActionNames;
            target.DomainTypeNames = source.DomainTypeNames;
        }
        
        public virtual void MapSimpleToStrictForAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO target, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
        }
        
        public virtual void MapSimpleToStrictForAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.ObjectId = source.ObjectId;
        }
        
        public virtual void MapSimpleToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.ObjectId = source.ObjectId;
        }
        
        public virtual void MapSimpleToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
            target.Type = source.Type;
        }
        
        public virtual void MapSimpleToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Type = source.Type;
        }
        
        public virtual void MapSimpleToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Culture = source.Culture;
            target.Value = source.Value;
            target.ValueTypeName = source.ValueTypeName;
        }
        
        public virtual void MapSimpleToStrictForDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DomainObjectId = source.DomainObjectId;
            target.QueueTag = source.QueueTag;
            target.Revision = source.Revision;
            target.SerializeData = source.SerializeData;
            target.SerializeType = source.SerializeType;
            target.Size = source.Size;
        }
        
        public virtual void MapSimpleToStrictForDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DomainObjectId = source.DomainObjectId;
            target.Processed = source.Processed;
            target.Revision = source.Revision;
            target.Type = source.Type;
            target.Version = source.Version;
        }
        
        public virtual void MapSimpleToStrictForDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO target, Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.SerializeData = source.SerializeData;
            target.Size = source.Size;
        }
        
        public virtual void MapSimpleToStrictForDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Revision = source.Revision;
        }
        
        public virtual void MapSimpleToStrictForDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
        }
        
        public virtual void MapSimpleToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Message = source.Message;
            target.MessageType = source.MessageType;
            target.StackTrace = source.StackTrace;
        }
        
        public virtual void MapSimpleToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.IsRoot = source.IsRoot;
            target.Period = source.Period;
        }
        
        public virtual void MapSimpleToStrictForLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO target, Framework.Configuration.Generated.DTO.LogMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Action = source.Action;
            target.InputMessage = source.InputMessage;
            target.OutputMessage = source.OutputMessage;
            target.Period = source.Period;
            target.UserName = source.UserName;
        }
        
        public virtual void MapSimpleToStrictForNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO target, Framework.Configuration.Generated.DTO.NamedLockSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.LockOperation = source.LockOperation;
        }
        
        public virtual void MapSimpleToStrictForQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO target, Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.LastProcessedItemDateTime = source.LastProcessedItemDateTime;
            target.UnprocessedCount = source.UnprocessedCount;
        }
        
        public virtual void MapSimpleToStrictForReport(Framework.Configuration.Generated.DTO.ReportStrictDTO target, Framework.Configuration.Generated.DTO.ReportSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Description = source.Description;
            target.DomainTypeName = source.DomainTypeName;
            target.Name = source.Name;
            target.Owner = source.Owner;
            target.ReportType = source.ReportType;
            target.SecurityOperationCode = source.SecurityOperationCode;
            target.Version = source.Version;
        }
        
        public virtual void MapSimpleToStrictForReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO target, Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.FilterOperator = source.FilterOperator;
            target.IsValueFromParameters = source.IsValueFromParameters;
            target.Property = source.Property;
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DesignValue = source.DesignValue;
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DisplayValueProperty = source.DisplayValueProperty;
            target.IsCollection = source.IsCollection;
            target.IsRequired = source.IsRequired;
            target.Name = source.Name;
            target.Order = source.Order;
            target.TypeName = source.TypeName;
        }
        
        public virtual void MapSimpleToStrictForReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO target, Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DesignValue = source.DesignValue;
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO target, Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Alias = source.Alias;
            target.Formula = source.Formula;
            target.Order = source.Order;
            target.PropertyPath = source.PropertyPath;
            target.SortOrdered = source.SortOrdered;
            target.SortType = source.SortType;
        }
        
        public virtual void MapSimpleToStrictForSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO target, Framework.Configuration.Generated.DTO.SentMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
            target.Number = source.Number;
        }
        
        public virtual void MapSimpleToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Description = source.Description;
            target.Value = source.Value;
        }
        
        public virtual void MapSimpleToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
        }
        
        public virtual void MapSimpleToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
            target.SubscriptionEnabled = source.SubscriptionEnabled;
        }
        
        public virtual void MapSimpleToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.IsMain = source.IsMain;
            target.IsRevision = source.IsRevision;
            target.SubscriptionEnabled = source.SubscriptionEnabled;
        }
        
        public virtual void MapSimpleToStrictForUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO target, Framework.Configuration.Generated.DTO.UserActionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
        }
        
        public virtual void MapSimpleToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.DomainType = source.DomainType;
            target.Name = source.Name;
        }
        
        public virtual void MapSimpleToStrictForUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
            target.ObjectIdentity = source.ObjectIdentity;
        }
        
        public virtual void MapSimpleToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.Name = source.Name;
            target.ObjectIdentity = source.ObjectIdentity;
        }
        
        public virtual void MapSimpleToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            target.CountingEntities = source.CountingEntities;
            target.Period = source.Period;
        }
    }
    
    public partial class ConfigurationClientPrimitiveDTOMappingService : Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingServiceBase
    {
        
        private static Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService _default = new Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService();
        
        public static Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService Default
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService._default;
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Attachment), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class AttachmentIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AttachmentIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public AttachmentIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public AttachmentIdentityDTO(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public AttachmentIdentityDTO(Framework.Configuration.Domain.Attachment domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public AttachmentIdentityDTO()
        {
        }
        
        public AttachmentIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AttachmentIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AttachmentIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Attachment ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachment(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainer), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class AttachmentContainerIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public AttachmentContainerIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public AttachmentContainerIdentityDTO(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public AttachmentContainerIdentityDTO(Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public AttachmentContainerIdentityDTO()
        {
        }
        
        public AttachmentContainerIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.AttachmentContainer ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentContainer(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentTag), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class AttachmentTagIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public AttachmentTagIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public AttachmentTagIdentityDTO(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public AttachmentTagIdentityDTO(Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public AttachmentTagIdentityDTO()
        {
        }
        
        public AttachmentTagIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.AttachmentTag ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentTag(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SubscriptionEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SubscriptionView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscription), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class CodeFirstSubscriptionIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public CodeFirstSubscriptionIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public CodeFirstSubscriptionIdentityDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public CodeFirstSubscriptionIdentityDTO(Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public CodeFirstSubscriptionIdentityDTO()
        {
        }
        
        public CodeFirstSubscriptionIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity1, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity1, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.CodeFirstSubscription ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToCodeFirstSubscription(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettings), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ControlSettingsIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ControlSettingsIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ControlSettingsIdentityDTO(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ControlSettingsIdentityDTO(Framework.Configuration.Domain.ControlSettings domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ControlSettingsIdentityDTO()
        {
        }
        
        public ControlSettingsIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.ControlSettings ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettings(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParam), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ControlSettingsParamIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ControlSettingsParamIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ControlSettingsParamIdentityDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ControlSettingsParamIdentityDTO(Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ControlSettingsParamIdentityDTO()
        {
        }
        
        public ControlSettingsParamIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.ControlSettingsParam ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParam(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParamValue), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ControlSettingsParamValueIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ControlSettingsParamValueIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ControlSettingsParamValueIdentityDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ControlSettingsParamValueIdentityDTO(Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ControlSettingsParamValueIdentityDTO()
        {
        }
        
        public ControlSettingsParamValueIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.ControlSettingsParamValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParamValue(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectEvent), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class DomainObjectEventIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public DomainObjectEventIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public DomainObjectEventIdentityDTO(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public DomainObjectEventIdentityDTO(Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public DomainObjectEventIdentityDTO()
        {
        }
        
        public DomainObjectEventIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.DomainObjectEvent ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectEvent(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectModification), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class DomainObjectModificationIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public DomainObjectModificationIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public DomainObjectModificationIdentityDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public DomainObjectModificationIdentityDTO(Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public DomainObjectModificationIdentityDTO()
        {
        }
        
        public DomainObjectModificationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.DomainObjectModification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectModification(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectNotification), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class DomainObjectNotificationIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public DomainObjectNotificationIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public DomainObjectNotificationIdentityDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public DomainObjectNotificationIdentityDTO(Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public DomainObjectNotificationIdentityDTO()
        {
        }
        
        public DomainObjectNotificationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.DomainObjectNotification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectNotification(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainType), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class DomainTypeIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public DomainTypeIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public DomainTypeIdentityDTO(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public DomainTypeIdentityDTO(Framework.Configuration.Domain.DomainType domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public DomainTypeIdentityDTO()
        {
        }
        
        public DomainTypeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.DomainType ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainType(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventOperation), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class DomainTypeEventOperationIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public DomainTypeEventOperationIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public DomainTypeEventOperationIdentityDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public DomainTypeEventOperationIdentityDTO(Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public DomainTypeEventOperationIdentityDTO()
        {
        }
        
        public DomainTypeEventOperationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.DomainTypeEventOperation ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeEventOperation(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ExceptionMessageView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessage), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ExceptionMessageIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ExceptionMessageIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ExceptionMessageIdentityDTO(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ExceptionMessageIdentityDTO(Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ExceptionMessageIdentityDTO()
        {
        }
        
        public ExceptionMessageIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.ExceptionMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToExceptionMessage(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.LogMessage), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class LogMessageIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.LogMessageIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.LogMessageIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.LogMessageIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public LogMessageIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public LogMessageIdentityDTO(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public LogMessageIdentityDTO(Framework.Configuration.Domain.LogMessage domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public LogMessageIdentityDTO()
        {
        }
        
        public LogMessageIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.LogMessageIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.LogMessageIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.LogMessageIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.LogMessageIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.LogMessageIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.LogMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToLogMessage(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.NamedLock), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class NamedLockIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.NamedLockIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.NamedLockIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.NamedLockIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public NamedLockIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public NamedLockIdentityDTO(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public NamedLockIdentityDTO(Framework.Configuration.Domain.NamedLock domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public NamedLockIdentityDTO()
        {
        }
        
        public NamedLockIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.NamedLockIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.NamedLockIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO identity1, Framework.Configuration.Generated.DTO.NamedLockIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO identity1, Framework.Configuration.Generated.DTO.NamedLockIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.NamedLockIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.NamedLock ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToNamedLock(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class AccessableBusinessRoleReportRightIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public AccessableBusinessRoleReportRightIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public AccessableBusinessRoleReportRightIdentityDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public AccessableBusinessRoleReportRightIdentityDTO(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public AccessableBusinessRoleReportRightIdentityDTO()
        {
        }
        
        public AccessableBusinessRoleReportRightIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO identity1, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO identity1, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableBusinessRoleReportRight(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableOperationReportRight), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class AccessableOperationReportRightIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public AccessableOperationReportRightIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public AccessableOperationReportRightIdentityDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public AccessableOperationReportRightIdentityDTO(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public AccessableOperationReportRightIdentityDTO()
        {
        }
        
        public AccessableOperationReportRightIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO identity1, Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO identity1, Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableOperationReportRight(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class AccessablePrincipalReportRightIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public AccessablePrincipalReportRightIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public AccessablePrincipalReportRightIdentityDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public AccessablePrincipalReportRightIdentityDTO(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public AccessablePrincipalReportRightIdentityDTO()
        {
        }
        
        public AccessablePrincipalReportRightIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO identity1, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO identity1, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessablePrincipalReportRight(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ReportEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ReportView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.Report), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ReportIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ReportIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ReportIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ReportIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ReportIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ReportIdentityDTO(Framework.Configuration.Generated.DTO.ReportSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ReportIdentityDTO(Framework.Configuration.Domain.Reports.Report domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ReportIdentityDTO()
        {
        }
        
        public ReportIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ReportIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ReportIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ReportIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ReportIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ReportIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ReportIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ReportIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ReportIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.Report ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReport(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportFilter), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ReportFilterIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ReportFilterIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ReportFilterIdentityDTO(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ReportFilterIdentityDTO(Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ReportFilterIdentityDTO()
        {
        }
        
        public ReportFilterIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.ReportFilter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportFilter(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportParameter), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ReportParameterIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ReportParameterIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ReportParameterIdentityDTO(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ReportParameterIdentityDTO(Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ReportParameterIdentityDTO()
        {
        }
        
        public ReportParameterIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.ReportParameter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportParameter(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportProperty), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class ReportPropertyIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public ReportPropertyIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public ReportPropertyIdentityDTO(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public ReportPropertyIdentityDTO(Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public ReportPropertyIdentityDTO()
        {
        }
        
        public ReportPropertyIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Reports.ReportProperty ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportProperty(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SentMessage), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class SentMessageIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.SentMessageIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.SentMessageIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.SentMessageIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public SentMessageIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public SentMessageIdentityDTO(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public SentMessageIdentityDTO(Framework.Configuration.Domain.SentMessage domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public SentMessageIdentityDTO()
        {
        }
        
        public SentMessageIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.SentMessageIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.SentMessageIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.SentMessageIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.SentMessageIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.SentMessageIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.SentMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSentMessage(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SequenceEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SequenceView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Sequence), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class SequenceIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.SequenceIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public SequenceIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public SequenceIdentityDTO(Framework.Configuration.Generated.DTO.SequenceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public SequenceIdentityDTO(Framework.Configuration.Domain.Sequence domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public SequenceIdentityDTO()
        {
        }
        
        public SequenceIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.SequenceIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity1, Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity1, Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.SequenceIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.SequenceIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.SequenceIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.SequenceIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.Sequence ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequence(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SystemConstantEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SystemConstantView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstant), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class SystemConstantIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public SystemConstantIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public SystemConstantIdentityDTO(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public SystemConstantIdentityDTO(Framework.Configuration.Domain.SystemConstant domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public SystemConstantIdentityDTO()
        {
        }
        
        public SystemConstantIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity1, Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity1, Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.SystemConstant ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSystemConstant(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.TargetSystemEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.TargetSystemView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystem), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class TargetSystemIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public TargetSystemIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public TargetSystemIdentityDTO(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public TargetSystemIdentityDTO(Framework.Configuration.Domain.TargetSystem domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public TargetSystemIdentityDTO()
        {
        }
        
        public TargetSystemIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity1, Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity1, Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.TargetSystem ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToTargetSystem(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.UserActionView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserAction), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class UserActionIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.UserActionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.UserActionIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.UserActionIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public UserActionIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public UserActionIdentityDTO(Framework.Configuration.Generated.DTO.UserActionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public UserActionIdentityDTO(Framework.Configuration.Domain.UserAction domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public UserActionIdentityDTO()
        {
        }
        
        public UserActionIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.UserActionIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.UserActionIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.UserActionIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.UserActionIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.UserActionIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.UserAction ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserAction(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserActionObject), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public class UserActionObjectIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO(System.Guid.Empty);
        
        private System.Guid _id;
        
        public UserActionObjectIdentityDTO(System.Guid id)
        {
            this._id = id;
        }
        
        public UserActionObjectIdentityDTO(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this._id = source.Id;
        }
        
        public UserActionObjectIdentityDTO(Framework.Configuration.Domain.UserActionObject domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this._id = domainObject.Id;
        }
        
        public UserActionObjectIdentityDTO()
        {
        }
        
        public UserActionObjectIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO.EmptyField;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity2)
        {
            return object.ReferenceEquals(identity1, identity2) || !object.ReferenceEquals(identity1, default(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO)) && identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO other)
        {
            return !object.ReferenceEquals(other, null) && (this._id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public Framework.Configuration.Domain.UserActionObject ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObject(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectBase), "BaseAbstractDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public abstract partial class BaseAbstractDTO
    {
        
        protected BaseAbstractDTO()
        {
        }
        
        protected BaseAbstractDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectBase domainObject)
        {
            mappingService.MapDomainObjectBase(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.PersistentDomainObjectBase), "BasePersistentDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public abstract partial class BasePersistentDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private System.Guid _id;
        
        protected BasePersistentDTO()
        {
        }
        
        protected BasePersistentDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.PersistentDomainObjectBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapPersistentDomainObjectBase(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsNew
        {
            get
            {
                return (default(System.Guid) == this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AuditPersistentDomainObjectBase), "BaseAuditPersistentDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public abstract partial class BaseAuditPersistentDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO
    {
        
        private bool _active;
        
        private System.DateTime? _createDate;
        
        private string _createdBy;
        
        private string _modifiedBy;
        
        private System.DateTime? _modifyDate;
        
        protected BaseAuditPersistentDTO()
        {
        }
        
        protected BaseAuditPersistentDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AuditPersistentDomainObjectBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAuditPersistentDomainObjectBase(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                this._active = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? CreateDate
        {
            get
            {
                return this._createDate;
            }
            set
            {
                this._createDate = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return this._createdBy;
            }
            set
            {
                this._createdBy = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy
        {
            get
            {
                return this._modifiedBy;
            }
            set
            {
                this._modifiedBy = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ModifyDate
        {
            get
            {
                return this._modifyDate;
            }
            set
            {
                this._modifyDate = value;
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Attachment), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>
    {
        
        private string _name;
        
        public AttachmentVisualDTO()
        {
        }
        
        public AttachmentVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachment(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject)
        {
            mappingService.MapAttachment(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Attachment), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentRichDTO))]
    public partial class AttachmentSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>
    {
        
        private string _name;
        
        public AttachmentSimpleDTO()
        {
        }
        
        public AttachmentSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachment(domainObject, this);
        }
        
        public AttachmentSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject)
        {
            mappingService.MapAttachment(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Attachment ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachment(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Attachment), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentRichDTO))]
    public partial class AttachmentFullDTO : Framework.Configuration.Generated.DTO.AttachmentSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO _container;
        
        public AttachmentFullDTO()
        {
        }
        
        public AttachmentFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachment(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO Container
        {
            get
            {
                return this._container;
            }
            set
            {
                this._container = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachment(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Attachment), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentRichDTO : Framework.Configuration.Generated.DTO.AttachmentFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment>
    {
        
        private byte[] _content;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> _tags = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO>();
        
        public AttachmentRichDTO()
        {
        }
        
        public AttachmentRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachment(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                return this._content;
            }
            set
            {
                this._content = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> Tags
        {
            get
            {
                return this._tags;
            }
            set
            {
                this._tags = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachment(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Attachment ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachment(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Attachment), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Attachment>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>
    {
        
        private byte[] _content;
        
        private System.Guid _id;
        
        private string _name;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO> _tags = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO>();
        
        public AttachmentStrictDTO()
        {
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachment(this, source);
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachment(this, source);
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachment(this, source);
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAttachment(this, source);
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAttachment(this, source);
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                return this._content;
            }
            set
            {
                this._content = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO> Tags
        {
            get
            {
                return this._tags;
            }
            set
            {
                this._tags = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Attachment domainObject)
        {
            mappingService.MapAttachment(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Attachment ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachment(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainer), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO))]
    public partial class AttachmentContainerSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO>
    {
        
        private System.Guid _objectId;
        
        public AttachmentContainerSimpleDTO()
        {
        }
        
        public AttachmentContainerSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentContainer(domainObject, this);
        }
        
        public AttachmentContainerSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                this._objectId = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            mappingService.MapAttachmentContainer(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentContainer ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentContainer(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainer), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO))]
    public partial class AttachmentContainerFullDTO : Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public AttachmentContainerFullDTO()
        {
        }
        
        public AttachmentContainerFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentContainer(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachmentContainer(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainer), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerRichDTO : Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentRichDTO> _attachments = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentRichDTO>();
        
        public AttachmentContainerRichDTO()
        {
        }
        
        public AttachmentContainerRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentContainer(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentRichDTO> Attachments
        {
            get
            {
                return this._attachments;
            }
            set
            {
                this._attachments = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachmentContainer(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentContainer ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentContainer(this);
        }
        
        public Framework.Configuration.Domain.AttachmentContainer ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToAttachmentContainer(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainer), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainer>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentStrictDTO> _attachments = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentStrictDTO>();
        
        private Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO _domainType;
        
        private System.Guid _id;
        
        private System.Guid _objectId;
        
        public AttachmentContainerStrictDTO()
        {
        }
        
        public AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachmentContainer(this, source);
        }
        
        public AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachmentContainer(this, source);
        }
        
        public AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachmentContainer(this, source);
        }
        
        public AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAttachmentContainer(this, source);
        }
        
        private AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAttachmentContainer(this, source);
        }
        
        private AttachmentContainerStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentStrictDTO> Attachments
        {
            get
            {
                return this._attachments;
            }
            set
            {
                this._attachments = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                this._objectId = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            mappingService.MapAttachmentContainer(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentContainer ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentContainer(this);
        }
        
        public Framework.Configuration.Domain.AttachmentContainer ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToAttachmentContainer(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainerReference), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO))]
    public partial class AttachmentContainerReferenceSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainerReference>
    {
        
        private System.Guid _objectId;
        
        public AttachmentContainerReferenceSimpleDTO()
        {
        }
        
        public AttachmentContainerReferenceSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentContainerReference(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                this._objectId = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            mappingService.MapAttachmentContainerReference(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainerReference), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO))]
    public partial class AttachmentContainerReferenceFullDTO : Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainerReference>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public AttachmentContainerReferenceFullDTO()
        {
        }
        
        public AttachmentContainerReferenceFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentContainerReference(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachmentContainerReference(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainerReference), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerReferenceRichDTO : Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainerReference>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainerReference>
    {
        
        public AttachmentContainerReferenceRichDTO()
        {
        }
        
        public AttachmentContainerReferenceRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentContainerReference(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachmentContainerReference(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentContainerReference ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentContainerReference(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentContainerReference), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerReferenceStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainerReference>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentContainerReference>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO _domainType;
        
        private System.Guid _objectId;
        
        public AttachmentContainerReferenceStrictDTO()
        {
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachmentContainerReference(this, source);
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachmentContainerReference(this, source);
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachmentContainerReference(this, source);
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                this._objectId = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            mappingService.MapAttachmentContainerReference(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentContainerReference ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentContainerReference(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentTag), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentTagVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO>
    {
        
        private string _name;
        
        public AttachmentTagVisualDTO()
        {
        }
        
        public AttachmentTagVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentTag(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            mappingService.MapAttachmentTag(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentTag), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO))]
    public partial class AttachmentTagSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO>
    {
        
        private string _name;
        
        private string _value;
        
        public AttachmentTagSimpleDTO()
        {
        }
        
        public AttachmentTagSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentTag(domainObject, this);
        }
        
        public AttachmentTagSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            mappingService.MapAttachmentTag(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentTag ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentTag(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentTag), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO))]
    public partial class AttachmentTagFullDTO : Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.AttachmentSimpleDTO _attachment;
        
        public AttachmentTagFullDTO()
        {
        }
        
        public AttachmentTagFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentTag(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.AttachmentSimpleDTO Attachment
        {
            get
            {
                return this._attachment;
            }
            set
            {
                this._attachment = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachmentTag(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentTag), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentTagRichDTO : Framework.Configuration.Generated.DTO.AttachmentTagFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag>
    {
        
        public AttachmentTagRichDTO()
        {
        }
        
        public AttachmentTagRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAttachmentTag(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAttachmentTag(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentTag ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentTag(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.AttachmentTag), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentTagStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.AttachmentTag>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private string _value;
        
        public AttachmentTagStrictDTO()
        {
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentTagFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachmentTag(this, source);
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachmentTag(this, source);
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachmentTag(this, source);
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAttachmentTag(this, source);
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAttachmentTag(this, source);
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            mappingService.MapAttachmentTag(this, domainObject);
        }
        
        public Framework.Configuration.Domain.AttachmentTag ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAttachmentTag(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscription), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO))]
    public partial class CodeFirstSubscriptionSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO>
    {
        
        private string _code;
        
        public CodeFirstSubscriptionSimpleDTO()
        {
        }
        
        public CodeFirstSubscriptionSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCodeFirstSubscription(domainObject, this);
        }
        
        public CodeFirstSubscriptionSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this._code;
            }
            set
            {
                this._code = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(this.Id);
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            mappingService.MapCodeFirstSubscription(this, domainObject);
        }
        
        public Framework.Configuration.Domain.CodeFirstSubscription ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToCodeFirstSubscription(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscription), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO))]
    public partial class CodeFirstSubscriptionFullDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public CodeFirstSubscriptionFullDTO()
        {
        }
        
        public CodeFirstSubscriptionFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCodeFirstSubscription(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapCodeFirstSubscription(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscription), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionRichDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription>
    {
        
        public CodeFirstSubscriptionRichDTO()
        {
        }
        
        public CodeFirstSubscriptionRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCodeFirstSubscription(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapCodeFirstSubscription(this, domainObject);
        }
        
        public Framework.Configuration.Domain.CodeFirstSubscription ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToCodeFirstSubscription(this);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscription), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscription>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO>
    {
        
        private bool _active = true;
        
        private System.Guid _id;
        
        public CodeFirstSubscriptionStrictDTO()
        {
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCodeFirstSubscription(this, source);
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCodeFirstSubscription(this, source);
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCodeFirstSubscription(this, source);
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCodeFirstSubscription(this, source);
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCodeFirstSubscription(this, source);
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                this._active = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(this.Id);
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            mappingService.MapCodeFirstSubscription(this, domainObject);
        }
        
        public Framework.Configuration.Domain.CodeFirstSubscription ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToCodeFirstSubscription(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO))]
    public partial class CodeFirstSubscriptionRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>
    {
        
        public CodeFirstSubscriptionRootFilterModelSimpleDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCodeFirstSubscriptionRootFilterModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
            mappingService.MapCodeFirstSubscriptionRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO))]
    public partial class CodeFirstSubscriptionRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>
    {
        
        public CodeFirstSubscriptionRootFilterModelFullDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCodeFirstSubscriptionRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapCodeFirstSubscriptionRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>
    {
        
        public CodeFirstSubscriptionRootFilterModelRichDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCodeFirstSubscriptionRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapCodeFirstSubscriptionRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToCodeFirstSubscriptionRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>
    {
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCodeFirstSubscriptionRootFilterModel(this, source);
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCodeFirstSubscriptionRootFilterModel(this, source);
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCodeFirstSubscriptionRootFilterModel(this, source);
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
            mappingService.MapCodeFirstSubscriptionRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToCodeFirstSubscriptionRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettings), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>
    {
        
        private string _name;
        
        public ControlSettingsVisualDTO()
        {
        }
        
        public ControlSettingsVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettings(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            mappingService.MapControlSettings(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettings), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO))]
    public partial class ControlSettingsSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>
    {
        
        private string _accountName;
        
        private string _name;
        
        private Framework.Configuration.Domain.ControlSettingsType _type;
        
        public ControlSettingsSimpleDTO()
        {
        }
        
        public ControlSettingsSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettings(domainObject, this);
        }
        
        public ControlSettingsSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName
        {
            get
            {
                return this._accountName;
            }
            set
            {
                this._accountName = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.ControlSettingsType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            mappingService.MapControlSettings(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettings ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettings(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettings), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO))]
    public partial class ControlSettingsFullDTO : Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO _parent;
        
        public ControlSettingsFullDTO()
        {
        }
        
        public ControlSettingsFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettings(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                this._parent = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapControlSettings(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettings), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsRichDTO : Framework.Configuration.Generated.DTO.ControlSettingsFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> _children = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> _controlSettingsParams = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO>();
        
        public ControlSettingsRichDTO()
        {
        }
        
        public ControlSettingsRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettings(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                this._children = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> ControlSettingsParams
        {
            get
            {
                return this._controlSettingsParams;
            }
            set
            {
                this._controlSettingsParams = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapControlSettings(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettings ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettings(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettings), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettings>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO> _children = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO> _controlSettingsParams = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO>();
        
        private System.Guid _id;
        
        private string _name;
        
        private Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO _parent;
        
        private Framework.Configuration.Domain.ControlSettingsType _type;
        
        public ControlSettingsStrictDTO()
        {
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForControlSettings(this, source);
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForControlSettings(this, source);
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForControlSettings(this, source);
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForControlSettings(this, source);
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForControlSettings(this, source);
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                this._children = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO> ControlSettingsParams
        {
            get
            {
                return this._controlSettingsParams;
            }
            set
            {
                this._controlSettingsParams = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                this._parent = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.ControlSettingsType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            mappingService.MapControlSettings(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettings ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettings(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParam), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO))]
    public partial class ControlSettingsParamSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO>
    {
        
        private Framework.Configuration.Domain.ControlSettingParamType _type;
        
        public ControlSettingsParamSimpleDTO()
        {
        }
        
        public ControlSettingsParamSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettingsParam(domainObject, this);
        }
        
        public ControlSettingsParamSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.ControlSettingParamType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            mappingService.MapControlSettingsParam(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettingsParam ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParam(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParam), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO))]
    public partial class ControlSettingsParamFullDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO _controlSettings;
        
        public ControlSettingsParamFullDTO()
        {
        }
        
        public ControlSettingsParamFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettingsParam(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO ControlSettings
        {
            get
            {
                return this._controlSettings;
            }
            set
            {
                this._controlSettings = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapControlSettingsParam(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParam), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamRichDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> _controlSettingsParamValues = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO>();
        
        public ControlSettingsParamRichDTO()
        {
        }
        
        public ControlSettingsParamRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettingsParam(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> ControlSettingsParamValues
        {
            get
            {
                return this._controlSettingsParamValues;
            }
            set
            {
                this._controlSettingsParamValues = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapControlSettingsParam(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettingsParam ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParam(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParam), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParam>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO> _controlSettingsParamValues = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO>();
        
        private System.Guid _id;
        
        private Framework.Configuration.Domain.ControlSettingParamType _type;
        
        public ControlSettingsParamStrictDTO()
        {
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForControlSettingsParam(this, source);
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForControlSettingsParam(this, source);
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForControlSettingsParam(this, source);
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForControlSettingsParam(this, source);
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForControlSettingsParam(this, source);
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO> ControlSettingsParamValues
        {
            get
            {
                return this._controlSettingsParamValues;
            }
            set
            {
                this._controlSettingsParamValues = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.ControlSettingParamType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            mappingService.MapControlSettingsParam(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettingsParam ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParam(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParamValue), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO))]
    public partial class ControlSettingsParamValueSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO>
    {
        
        private string _culture;
        
        private string _value;
        
        private string _valueTypeName;
        
        public ControlSettingsParamValueSimpleDTO()
        {
        }
        
        public ControlSettingsParamValueSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettingsParamValue(domainObject, this);
        }
        
        public ControlSettingsParamValueSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return this._culture;
            }
            set
            {
                this._culture = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueTypeName
        {
            get
            {
                return this._valueTypeName;
            }
            set
            {
                this._valueTypeName = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            mappingService.MapControlSettingsParamValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettingsParamValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParamValue(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParamValue), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO))]
    public partial class ControlSettingsParamValueFullDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO _controlSettingsParam;
        
        public ControlSettingsParamValueFullDTO()
        {
        }
        
        public ControlSettingsParamValueFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettingsParamValue(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO ControlSettingsParam
        {
            get
            {
                return this._controlSettingsParam;
            }
            set
            {
                this._controlSettingsParam = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapControlSettingsParamValue(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParamValue), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamValueRichDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue>
    {
        
        public ControlSettingsParamValueRichDTO()
        {
        }
        
        public ControlSettingsParamValueRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapControlSettingsParamValue(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapControlSettingsParamValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettingsParamValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParamValue(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ControlSettingsParamValue), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamValueStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ControlSettingsParamValue>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO>
    {
        
        private string _culture;
        
        private System.Guid _id;
        
        private string _value;
        
        private string _valueTypeName;
        
        public ControlSettingsParamValueStrictDTO()
        {
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForControlSettingsParamValue(this, source);
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForControlSettingsParamValue(this, source);
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForControlSettingsParamValue(this, source);
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForControlSettingsParamValue(this, source);
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForControlSettingsParamValue(this, source);
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return this._culture;
            }
            set
            {
                this._culture = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueTypeName
        {
            get
            {
                return this._valueTypeName;
            }
            set
            {
                this._valueTypeName = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            mappingService.MapControlSettingsParamValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ControlSettingsParamValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToControlSettingsParamValue(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectEvent), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO))]
    public partial class DomainObjectEventSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO>
    {
        
        private System.Guid _domainObjectId;
        
        private string _hostName;
        
        private System.DateTime? _processDate;
        
        private string _queueTag;
        
        private long _revision;
        
        private string _serializeData;
        
        private string _serializeType;
        
        private int _size;
        
        private Framework.Configuration.Domain.QueueProgressStatus _status;
        
        public DomainObjectEventSimpleDTO()
        {
        }
        
        public DomainObjectEventSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectEvent(domainObject, this);
        }
        
        public DomainObjectEventSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                this._domainObjectId = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName
        {
            get
            {
                return this._hostName;
            }
            set
            {
                this._hostName = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ProcessDate
        {
            get
            {
                return this._processDate;
            }
            set
            {
                this._processDate = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueTag
        {
            get
            {
                return this._queueTag;
            }
            set
            {
                this._queueTag = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                this._revision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializeData
        {
            get
            {
                return this._serializeData;
            }
            set
            {
                this._serializeData = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializeType
        {
            get
            {
                return this._serializeType;
            }
            set
            {
                this._serializeType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size
        {
            get
            {
                return this._size;
            }
            set
            {
                this._size = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.QueueProgressStatus Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            mappingService.MapDomainObjectEvent(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectEvent ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectEvent(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectEvent), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO))]
    public partial class DomainObjectEventFullDTO : Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO _operation;
        
        public DomainObjectEventFullDTO()
        {
        }
        
        public DomainObjectEventFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectEvent(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO Operation
        {
            get
            {
                return this._operation;
            }
            set
            {
                this._operation = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainObjectEvent(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectEvent), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainObjectEventRichDTO : Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent>
    {
        
        public DomainObjectEventRichDTO()
        {
        }
        
        public DomainObjectEventRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectEvent(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainObjectEvent(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectEvent ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectEvent(this);
        }
        
        public Framework.Configuration.Domain.DomainObjectEvent ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToDomainObjectEvent(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectEvent), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainObjectEventStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectEvent>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO>
    {
        
        private System.Guid _domainObjectId;
        
        private System.Guid _id;
        
        private Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO _operation;
        
        private string _queueTag;
        
        private long _revision;
        
        private string _serializeData;
        
        private string _serializeType;
        
        private int _size;
        
        public DomainObjectEventStrictDTO()
        {
        }
        
        public DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainObjectEvent(this, source);
        }
        
        public DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainObjectEvent(this, source);
        }
        
        public DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainObjectEvent(this, source);
        }
        
        public DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForDomainObjectEvent(this, source);
        }
        
        private DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForDomainObjectEvent(this, source);
        }
        
        private DomainObjectEventStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                this._domainObjectId = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Operation
        {
            get
            {
                return this._operation;
            }
            set
            {
                this._operation = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueTag
        {
            get
            {
                return this._queueTag;
            }
            set
            {
                this._queueTag = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                this._revision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializeData
        {
            get
            {
                return this._serializeData;
            }
            set
            {
                this._serializeData = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializeType
        {
            get
            {
                return this._serializeType;
            }
            set
            {
                this._serializeType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size
        {
            get
            {
                return this._size;
            }
            set
            {
                this._size = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            mappingService.MapDomainObjectEvent(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectEvent ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectEvent(this);
        }
        
        public Framework.Configuration.Domain.DomainObjectEvent ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToDomainObjectEvent(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectModification), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO))]
    public partial class DomainObjectModificationSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO>
    {
        
        private System.Guid _domainObjectId;
        
        private bool _processed;
        
        private long _revision;
        
        private Framework.DomainDriven.DAL.Revisions.ModificationType _type;
        
        private long _version;
        
        public DomainObjectModificationSimpleDTO()
        {
        }
        
        public DomainObjectModificationSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectModification(domainObject, this);
        }
        
        public DomainObjectModificationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                this._domainObjectId = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Processed
        {
            get
            {
                return this._processed;
            }
            set
            {
                this._processed = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                this._revision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.DomainDriven.DAL.Revisions.ModificationType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                this._version = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            mappingService.MapDomainObjectModification(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectModification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectModification(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectModification), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO))]
    public partial class DomainObjectModificationFullDTO : Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public DomainObjectModificationFullDTO()
        {
        }
        
        public DomainObjectModificationFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectModification(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainObjectModification(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectModification), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainObjectModificationRichDTO : Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification>
    {
        
        public DomainObjectModificationRichDTO()
        {
        }
        
        public DomainObjectModificationRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectModification(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainObjectModification(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectModification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectModification(this);
        }
        
        public Framework.Configuration.Domain.DomainObjectModification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToDomainObjectModification(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectModification), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainObjectModificationStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectModification>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO>
    {
        
        private System.Guid _domainObjectId;
        
        private Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO _domainType;
        
        private System.Guid _id;
        
        private bool _processed;
        
        private long _revision;
        
        private Framework.DomainDriven.DAL.Revisions.ModificationType _type;
        
        private long _version;
        
        public DomainObjectModificationStrictDTO()
        {
        }
        
        public DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainObjectModification(this, source);
        }
        
        public DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainObjectModification(this, source);
        }
        
        public DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainObjectModification(this, source);
        }
        
        public DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForDomainObjectModification(this, source);
        }
        
        private DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForDomainObjectModification(this, source);
        }
        
        private DomainObjectModificationStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                this._domainObjectId = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Processed
        {
            get
            {
                return this._processed;
            }
            set
            {
                this._processed = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                this._revision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.DomainDriven.DAL.Revisions.ModificationType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                this._version = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            mappingService.MapDomainObjectModification(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectModification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectModification(this);
        }
        
        public Framework.Configuration.Domain.DomainObjectModification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToDomainObjectModification(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectNotification), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO))]
    public partial class DomainObjectNotificationSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO>
    {
        
        private string _hostName;
        
        private System.DateTime? _processDate;
        
        private string _serializeData;
        
        private int _size;
        
        private Framework.Configuration.Domain.QueueProgressStatus _status;
        
        public DomainObjectNotificationSimpleDTO()
        {
        }
        
        public DomainObjectNotificationSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectNotification(domainObject, this);
        }
        
        public DomainObjectNotificationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName
        {
            get
            {
                return this._hostName;
            }
            set
            {
                this._hostName = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ProcessDate
        {
            get
            {
                return this._processDate;
            }
            set
            {
                this._processDate = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializeData
        {
            get
            {
                return this._serializeData;
            }
            set
            {
                this._serializeData = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size
        {
            get
            {
                return this._size;
            }
            set
            {
                this._size = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.QueueProgressStatus Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            mappingService.MapDomainObjectNotification(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectNotification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectNotification(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectNotification), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO))]
    public partial class DomainObjectNotificationFullDTO : Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification, System.Guid>
    {
        
        public DomainObjectNotificationFullDTO()
        {
        }
        
        public DomainObjectNotificationFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectNotification(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainObjectNotification(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectNotification), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainObjectNotificationRichDTO : Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification>
    {
        
        public DomainObjectNotificationRichDTO()
        {
        }
        
        public DomainObjectNotificationRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainObjectNotification(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainObjectNotification(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectNotification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectNotification(this);
        }
        
        public Framework.Configuration.Domain.DomainObjectNotification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToDomainObjectNotification(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainObjectNotification), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainObjectNotificationStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainObjectNotification>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _serializeData;
        
        private int _size;
        
        public DomainObjectNotificationStrictDTO()
        {
        }
        
        public DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainObjectNotification(this, source);
        }
        
        public DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainObjectNotification(this, source);
        }
        
        public DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainObjectNotification(this, source);
        }
        
        public DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForDomainObjectNotification(this, source);
        }
        
        private DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForDomainObjectNotification(this, source);
        }
        
        private DomainObjectNotificationStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializeData
        {
            get
            {
                return this._serializeData;
            }
            set
            {
                this._serializeData = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size
        {
            get
            {
                return this._size;
            }
            set
            {
                this._size = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            mappingService.MapDomainObjectNotification(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainObjectNotification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainObjectNotification(this);
        }
        
        public Framework.Configuration.Domain.DomainObjectNotification ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToDomainObjectNotification(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainType), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO>
    {
        
        private string _name;
        
        public DomainTypeVisualDTO()
        {
        }
        
        public DomainTypeVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainType(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject)
        {
            mappingService.MapDomainType(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainType), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRichDTO))]
    public partial class DomainTypeSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO>
    {
        
        private string _fullTypeName;
        
        private bool _hasSecurityAttachment;
        
        private string _name;
        
        private string _nameSpace;
        
        public DomainTypeSimpleDTO()
        {
        }
        
        public DomainTypeSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainType(domainObject, this);
        }
        
        public DomainTypeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullTypeName
        {
            get
            {
                return this._fullTypeName;
            }
            set
            {
                this._fullTypeName = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSecurityAttachment
        {
            get
            {
                return this._hasSecurityAttachment;
            }
            set
            {
                this._hasSecurityAttachment = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSpace
        {
            get
            {
                return this._nameSpace;
            }
            set
            {
                this._nameSpace = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject)
        {
            mappingService.MapDomainType(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainType ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainType(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainTypeStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainType), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRichDTO))]
    public partial class DomainTypeFullDTO : Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        public DomainTypeFullDTO()
        {
        }
        
        public DomainTypeFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainType(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                this._targetSystem = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainType(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainType), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeRichDTO : Framework.Configuration.Generated.DTO.DomainTypeFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> _eventOperations = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO>();
        
        public DomainTypeRichDTO()
        {
        }
        
        public DomainTypeRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainType(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> EventOperations
        {
            get
            {
                return this._eventOperations;
            }
            set
            {
                this._eventOperations = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainType(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainType ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainType(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainType), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainType>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO>
    {
        
        private System.Guid _id;
        
        public DomainTypeStrictDTO()
        {
        }
        
        public DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainType(this, source);
        }
        
        public DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainType(this, source);
        }
        
        public DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainType(this, source);
        }
        
        public DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForDomainType(this, source);
        }
        
        private DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForDomainType(this, source);
        }
        
        private DomainTypeStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(this.Id);
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainType domainObject)
        {
            mappingService.MapDomainType(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainType ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainType(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO))]
    public partial class DomainTypeEventModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventModel>
    {
        
        private long? _revision;
        
        public DomainTypeEventModelSimpleDTO()
        {
        }
        
        public DomainTypeEventModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long? Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                this._revision = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            mappingService.MapDomainTypeEventModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO))]
    public partial class DomainTypeEventModelFullDTO : Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventModel>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO _operation;
        
        public DomainTypeEventModelFullDTO()
        {
        }
        
        public DomainTypeEventModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO Operation
        {
            get
            {
                return this._operation;
            }
            set
            {
                this._operation = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainTypeEventModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventModelRichDTO : Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventModel>
    {
        
        private System.Collections.Generic.List<System.Guid> _domainObjectIdents = new System.Collections.Generic.List<System.Guid>();
        
        public DomainTypeEventModelRichDTO()
        {
        }
        
        public DomainTypeEventModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Guid> DomainObjectIdents
        {
            get
            {
                return this._domainObjectIdents;
            }
            set
            {
                this._domainObjectIdents = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainTypeEventModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeEventModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeEventModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventModel>
    {
        
        private System.Collections.Generic.List<System.Guid> _domainObjectIdents = new System.Collections.Generic.List<System.Guid>();
        
        private Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO _operation;
        
        private long? _revision;
        
        public DomainTypeEventModelStrictDTO()
        {
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainTypeEventModel(this, source);
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainTypeEventModel(this, source);
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainTypeEventModel(this, source);
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Guid> DomainObjectIdents
        {
            get
            {
                return this._domainObjectIdents;
            }
            set
            {
                this._domainObjectIdents = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Operation
        {
            get
            {
                return this._operation;
            }
            set
            {
                this._operation = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long? Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                this._revision = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            mappingService.MapDomainTypeEventModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeEventModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeEventModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventOperation), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventOperationVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO>
    {
        
        private string _name;
        
        public DomainTypeEventOperationVisualDTO()
        {
        }
        
        public DomainTypeEventOperationVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventOperation(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            mappingService.MapDomainTypeEventOperation(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventOperation), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO))]
    public partial class DomainTypeEventOperationSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO>
    {
        
        private string _name;
        
        public DomainTypeEventOperationSimpleDTO()
        {
        }
        
        public DomainTypeEventOperationSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventOperation(domainObject, this);
        }
        
        public DomainTypeEventOperationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            mappingService.MapDomainTypeEventOperation(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeEventOperation ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeEventOperation(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventOperation), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO))]
    public partial class DomainTypeEventOperationFullDTO : Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public DomainTypeEventOperationFullDTO()
        {
        }
        
        public DomainTypeEventOperationFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventOperation(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainTypeEventOperation(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventOperation), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventOperationRichDTO : Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation>
    {
        
        public DomainTypeEventOperationRichDTO()
        {
        }
        
        public DomainTypeEventOperationRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeEventOperation(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainTypeEventOperation(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeEventOperation ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeEventOperation(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeEventOperation), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventOperationStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeEventOperation>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        public DomainTypeEventOperationStrictDTO()
        {
        }
        
        public DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainTypeEventOperation(this, source);
        }
        
        public DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainTypeEventOperation(this, source);
        }
        
        public DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainTypeEventOperation(this, source);
        }
        
        public DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForDomainTypeEventOperation(this, source);
        }
        
        private DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForDomainTypeEventOperation(this, source);
        }
        
        private DomainTypeEventOperationStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            mappingService.MapDomainTypeEventOperation(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeEventOperation ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeEventOperation(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO))]
    public partial class DomainTypeRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel>
    {
        
        public DomainTypeRootFilterModelSimpleDTO()
        {
        }
        
        public DomainTypeRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeRootFilterModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
            mappingService.MapDomainTypeRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO))]
    public partial class DomainTypeRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel>
    {
        
        private Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        public DomainTypeRootFilterModelFullDTO()
        {
        }
        
        public DomainTypeRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeRootFilterModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                this._targetSystem = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainTypeRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel>
    {
        
        public DomainTypeRootFilterModelRichDTO()
        {
        }
        
        public DomainTypeRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapDomainTypeRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapDomainTypeRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.DomainTypeRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel>
    {
        
        private Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO _targetSystem;
        
        public DomainTypeRootFilterModelStrictDTO()
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                this._targetSystem = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
            mappingService.MapDomainTypeRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.DomainTypeRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToDomainTypeRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessage), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO))]
    public partial class ExceptionMessageSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO>
    {
        
        private bool _isClient;
        
        private bool _isRoot;
        
        private string _message;
        
        private string _messageType;
        
        private string _stackTrace;
        
        public ExceptionMessageSimpleDTO()
        {
        }
        
        public ExceptionMessageSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExceptionMessage(domainObject, this);
        }
        
        public ExceptionMessageSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClient
        {
            get
            {
                return this._isClient;
            }
            set
            {
                this._isClient = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                this._isRoot = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this._message;
            }
            set
            {
                this._message = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType
        {
            get
            {
                return this._messageType;
            }
            set
            {
                this._messageType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace
        {
            get
            {
                return this._stackTrace;
            }
            set
            {
                this._stackTrace = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            mappingService.MapExceptionMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ExceptionMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToExceptionMessage(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessage), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO))]
    public partial class ExceptionMessageFullDTO : Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage, System.Guid>
    {
        
        public ExceptionMessageFullDTO()
        {
        }
        
        public ExceptionMessageFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExceptionMessage(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapExceptionMessage(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessage), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageRichDTO : Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage>
    {
        
        private Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO _innerException;
        
        public ExceptionMessageRichDTO()
        {
        }
        
        public ExceptionMessageRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExceptionMessage(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO InnerException
        {
            get
            {
                return this._innerException;
            }
            set
            {
                this._innerException = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapExceptionMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ExceptionMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToExceptionMessage(this);
        }
        
        public Framework.Configuration.Domain.ExceptionMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToExceptionMessage(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessage), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessage>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO>
    {
        
        private System.Guid _id;
        
        private Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO _innerException;
        
        private string _message;
        
        private string _messageType;
        
        private string _stackTrace;
        
        public ExceptionMessageStrictDTO()
        {
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExceptionMessage(this, source);
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExceptionMessage(this, source);
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExceptionMessage(this, source);
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForExceptionMessage(this, source);
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForExceptionMessage(this, source);
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO InnerException
        {
            get
            {
                return this._innerException;
            }
            set
            {
                this._innerException = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this._message;
            }
            set
            {
                this._message = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType
        {
            get
            {
                return this._messageType;
            }
            set
            {
                this._messageType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace
        {
            get
            {
                return this._stackTrace;
            }
            set
            {
                this._stackTrace = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            mappingService.MapExceptionMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ExceptionMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToExceptionMessage(this);
        }
        
        public Framework.Configuration.Domain.ExceptionMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToExceptionMessage(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessageRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO))]
    public partial class ExceptionMessageRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>
    {
        
        private bool _isRoot;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public ExceptionMessageRootFilterModelSimpleDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExceptionMessageRootFilterModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                this._isRoot = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                this._period = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
            mappingService.MapExceptionMessageRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessageRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO))]
    public partial class ExceptionMessageRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>
    {
        
        public ExceptionMessageRootFilterModelFullDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExceptionMessageRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapExceptionMessageRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessageRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>
    {
        
        public ExceptionMessageRootFilterModelRichDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExceptionMessageRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapExceptionMessageRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ExceptionMessageRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToExceptionMessageRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.ExceptionMessageRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>
    {
        
        private bool _isRoot;
        
        private Framework.Core.Period _period;
        
        public ExceptionMessageRootFilterModelStrictDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExceptionMessageRootFilterModel(this, source);
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExceptionMessageRootFilterModel(this, source);
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExceptionMessageRootFilterModel(this, source);
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                this._isRoot = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                this._period = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
            mappingService.MapExceptionMessageRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.ExceptionMessageRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToExceptionMessageRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.LogMessage), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.LogMessageFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.LogMessageRichDTO))]
    public partial class LogMessageSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.LogMessageIdentityDTO>
    {
        
        private string _action;
        
        private string _inputMessage;
        
        private string _outputMessage;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        private string _userName;
        
        public LogMessageSimpleDTO()
        {
        }
        
        public LogMessageSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLogMessage(domainObject, this);
        }
        
        public LogMessageSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action
        {
            get
            {
                return this._action;
            }
            set
            {
                this._action = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.LogMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.LogMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputMessage
        {
            get
            {
                return this._inputMessage;
            }
            set
            {
                this._inputMessage = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputMessage
        {
            get
            {
                return this._outputMessage;
            }
            set
            {
                this._outputMessage = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                this._period = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                this._userName = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject)
        {
            mappingService.MapLogMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.LogMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToLogMessage(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.LogMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.LogMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.LogMessage), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.LogMessageRichDTO))]
    public partial class LogMessageFullDTO : Framework.Configuration.Generated.DTO.LogMessageSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage, System.Guid>
    {
        
        public LogMessageFullDTO()
        {
        }
        
        public LogMessageFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLogMessage(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapLogMessage(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.LogMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.LogMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.LogMessage), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class LogMessageRichDTO : Framework.Configuration.Generated.DTO.LogMessageFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage>
    {
        
        public LogMessageRichDTO()
        {
        }
        
        public LogMessageRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLogMessage(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapLogMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.LogMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToLogMessage(this);
        }
        
        public Framework.Configuration.Domain.LogMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToLogMessage(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.LogMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.LogMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.LogMessage), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class LogMessageStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.LogMessage>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.LogMessageIdentityDTO>
    {
        
        private string _action;
        
        private System.Guid _id;
        
        private string _inputMessage;
        
        private string _outputMessage;
        
        private Framework.Core.Period _period;
        
        private string _userName;
        
        public LogMessageStrictDTO()
        {
        }
        
        public LogMessageStrictDTO(Framework.Configuration.Generated.DTO.LogMessageRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.LogMessageFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForLogMessage(this, source);
        }
        
        public LogMessageStrictDTO(Framework.Configuration.Generated.DTO.LogMessageRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LogMessageStrictDTO(Framework.Configuration.Generated.DTO.LogMessageFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.LogMessageSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForLogMessage(this, source);
        }
        
        public LogMessageStrictDTO(Framework.Configuration.Generated.DTO.LogMessageFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LogMessageStrictDTO(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForLogMessage(this, source);
        }
        
        public LogMessageStrictDTO(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LogMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForLogMessage(this, source);
        }
        
        private LogMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LogMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForLogMessage(this, source);
        }
        
        private LogMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action
        {
            get
            {
                return this._action;
            }
            set
            {
                this._action = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.LogMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.LogMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputMessage
        {
            get
            {
                return this._inputMessage;
            }
            set
            {
                this._inputMessage = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputMessage
        {
            get
            {
                return this._outputMessage;
            }
            set
            {
                this._outputMessage = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                this._period = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this._userName;
            }
            set
            {
                this._userName = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.LogMessage domainObject)
        {
            mappingService.MapLogMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.LogMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToLogMessage(this);
        }
        
        public Framework.Configuration.Domain.LogMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToLogMessage(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionCreateModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO))]
    public partial class UserActionCreateModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>
    {
        
        private string _domainType;
        
        private string _name;
        
        public UserActionCreateModelSimpleDTO()
        {
        }
        
        public UserActionCreateModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionCreateModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            mappingService.MapUserActionCreateModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionCreateModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO))]
    public partial class UserActionCreateModelFullDTO : Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>
    {
        
        public UserActionCreateModelFullDTO()
        {
        }
        
        public UserActionCreateModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionCreateModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionCreateModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionCreateModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionCreateModelRichDTO : Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> _objectIdentities = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO>();
        
        public UserActionCreateModelRichDTO()
        {
        }
        
        public UserActionCreateModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionCreateModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                this._objectIdentities = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionCreateModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Create.UserActionCreateModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionCreateModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionCreateModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionCreateModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>
    {
        
        private string _domainType;
        
        private string _name;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO> _objectIdentities = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO>();
        
        public UserActionCreateModelStrictDTO()
        {
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionCreateModel(this, source);
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionCreateModel(this, source);
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionCreateModel(this, source);
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                this._objectIdentities = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            mappingService.MapUserActionCreateModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Create.UserActionCreateModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionCreateModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionObjectModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO))]
    public partial class UserActionObjectModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>
    {
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        public UserActionObjectModelSimpleDTO()
        {
        }
        
        public UserActionObjectModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObjectModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                this._objectIdentity = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
            mappingService.MapUserActionObjectModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionObjectModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO))]
    public partial class UserActionObjectModelFullDTO : Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>
    {
        
        public UserActionObjectModelFullDTO()
        {
        }
        
        public UserActionObjectModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObjectModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionObjectModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionObjectModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectModelRichDTO : Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>
    {
        
        public UserActionObjectModelRichDTO()
        {
        }
        
        public UserActionObjectModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObjectModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionObjectModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Create.UserActionObjectModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObjectModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Create.UserActionObjectModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>
    {
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        public UserActionObjectModelStrictDTO()
        {
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionObjectModel(this, source);
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionObjectModel(this, source);
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionObjectModel(this, source);
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                this._objectIdentity = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
            mappingService.MapUserActionObjectModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Create.UserActionObjectModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObjectModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO))]
    public partial class ReportGenerationModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>
    {
        
        public ReportGenerationModelSimpleDTO()
        {
        }
        
        public ReportGenerationModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            mappingService.MapReportGenerationModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO))]
    public partial class ReportGenerationModelFullDTO : Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public ReportGenerationModelFullDTO()
        {
        }
        
        public ReportGenerationModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportGenerationModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportGenerationModelRichDTO : Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO> _items = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO>();
        
        public ReportGenerationModelRichDTO()
        {
        }
        
        public ReportGenerationModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO> Items
        {
            get
            {
                return this._items;
            }
            set
            {
                this._items = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportGenerationModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportGenerationModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportGenerationModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO> _items = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO>();
        
        private Framework.Configuration.Generated.DTO.ReportIdentityDTO _report;
        
        public ReportGenerationModelStrictDTO()
        {
        }
        
        public ReportGenerationModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportGenerationModel(this, source);
        }
        
        public ReportGenerationModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportGenerationModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportGenerationModel(this, source);
        }
        
        public ReportGenerationModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportGenerationModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportGenerationModel(this, source);
        }
        
        public ReportGenerationModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO> Items
        {
            get
            {
                return this._items;
            }
            set
            {
                this._items = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportIdentityDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            mappingService.MapReportGenerationModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportGenerationModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO))]
    public partial class ReportGenerationRequestModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>
    {
        
        public ReportGenerationRequestModelSimpleDTO()
        {
        }
        
        public ReportGenerationRequestModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationRequestModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
            mappingService.MapReportGenerationRequestModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO))]
    public partial class ReportGenerationRequestModelFullDTO : Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>
    {
        
        public ReportGenerationRequestModelFullDTO()
        {
        }
        
        public ReportGenerationRequestModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationRequestModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportGenerationRequestModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportGenerationRequestModelRichDTO : Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO> _parameters = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO>();
        
        private System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata> _typeMetadatas = new System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata>();
        
        public ReportGenerationRequestModelRichDTO()
        {
        }
        
        public ReportGenerationRequestModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationRequestModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                this._parameters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata> TypeMetadatas
        {
            get
            {
                return this._typeMetadatas;
            }
            set
            {
                this._typeMetadatas = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportGenerationRequestModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportGenerationRequestModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportGenerationRequestModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO> _parameters = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO>();
        
        private System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata> _typeMetadatas = new System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata>();
        
        public ReportGenerationRequestModelStrictDTO()
        {
        }
        
        public ReportGenerationRequestModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportGenerationRequestModel(this, source);
        }
        
        public ReportGenerationRequestModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportGenerationRequestModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportGenerationRequestModel(this, source);
        }
        
        public ReportGenerationRequestModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportGenerationRequestModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportGenerationRequestModel(this, source);
        }
        
        public ReportGenerationRequestModelStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                this._parameters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata> TypeMetadatas
        {
            get
            {
                return this._typeMetadatas;
            }
            set
            {
                this._typeMetadatas = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
            mappingService.MapReportGenerationRequestModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportGenerationRequestModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO))]
    public partial class ReportGenerationValueSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>
    {
        
        private string _designValue;
        
        private string _value;
        
        public ReportGenerationValueSimpleDTO()
        {
        }
        
        public ReportGenerationValueSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationValue(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignValue
        {
            get
            {
                return this._designValue;
            }
            set
            {
                this._designValue = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            mappingService.MapReportGenerationValue(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO))]
    public partial class ReportGenerationValueFullDTO : Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>
    {
        
        private Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO _parameter;
        
        public ReportGenerationValueFullDTO()
        {
        }
        
        public ReportGenerationValueFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationValue(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO Parameter
        {
            get
            {
                return this._parameter;
            }
            set
            {
                this._parameter = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportGenerationValue(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportGenerationValueRichDTO : Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>
    {
        
        public ReportGenerationValueRichDTO()
        {
        }
        
        public ReportGenerationValueRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportGenerationValue(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportGenerationValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportGenerationValue(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportGenerationValueStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>
    {
        
        private string _designValue;
        
        private Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO _parameter;
        
        private string _value;
        
        public ReportGenerationValueStrictDTO()
        {
        }
        
        public ReportGenerationValueStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportGenerationValue(this, source);
        }
        
        public ReportGenerationValueStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportGenerationValueStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportGenerationValue(this, source);
        }
        
        public ReportGenerationValueStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportGenerationValueStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportGenerationValue(this, source);
        }
        
        public ReportGenerationValueStrictDTO(Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignValue
        {
            get
            {
                return this._designValue;
            }
            set
            {
                this._designValue = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO Parameter
        {
            get
            {
                return this._parameter;
            }
            set
            {
                this._parameter = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            mappingService.MapReportGenerationValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportGenerationValue(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO))]
    public partial class ReportParameterValueSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>
    {
        
        private string _designValue;
        
        private string _value;
        
        public ReportParameterValueSimpleDTO()
        {
        }
        
        public ReportParameterValueSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportParameterValue(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignValue
        {
            get
            {
                return this._designValue;
            }
            set
            {
                this._designValue = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            mappingService.MapReportParameterValue(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO))]
    public partial class ReportParameterValueFullDTO : Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>
    {
        
        private Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO _reportParameter;
        
        public ReportParameterValueFullDTO()
        {
        }
        
        public ReportParameterValueFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportParameterValue(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO ReportParameter
        {
            get
            {
                return this._reportParameter;
            }
            set
            {
                this._reportParameter = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportParameterValue(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportParameterValueRichDTO : Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>
    {
        
        public ReportParameterValueRichDTO()
        {
        }
        
        public ReportParameterValueRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportParameterValue(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportParameterValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportParameterValue(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportParameterValueStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>
    {
        
        private string _designValue;
        
        private Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO _reportParameter;
        
        private string _value;
        
        public ReportParameterValueStrictDTO()
        {
        }
        
        public ReportParameterValueStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportParameterValue(this, source);
        }
        
        public ReportParameterValueStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportParameterValueStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportParameterValue(this, source);
        }
        
        public ReportParameterValueStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportParameterValueStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportParameterValue(this, source);
        }
        
        public ReportParameterValueStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignValue
        {
            get
            {
                return this._designValue;
            }
            set
            {
                this._designValue = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO ReportParameter
        {
            get
            {
                return this._reportParameter;
            }
            set
            {
                this._reportParameter = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            mappingService.MapReportParameterValue(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportParameterValue(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO))]
    public partial class UserActionObjectRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>
    {
        
        private int _countingEntities;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public UserActionObjectRootFilterModelSimpleDTO()
        {
        }
        
        public UserActionObjectRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObjectRootFilterModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountingEntities
        {
            get
            {
                return this._countingEntities;
            }
            set
            {
                this._countingEntities = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                this._period = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            mappingService.MapUserActionObjectRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO))]
    public partial class UserActionObjectRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>
    {
        
        public UserActionObjectRootFilterModelFullDTO()
        {
        }
        
        public UserActionObjectRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObjectRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionObjectRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>
    {
        
        private System.Collections.Generic.List<string> _actionNames = new System.Collections.Generic.List<string>();
        
        private System.Collections.Generic.List<string> _domainTypeNames = new System.Collections.Generic.List<string>();
        
        public UserActionObjectRootFilterModelRichDTO()
        {
        }
        
        public UserActionObjectRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObjectRootFilterModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ActionNames
        {
            get
            {
                return this._actionNames;
            }
            set
            {
                this._actionNames = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DomainTypeNames
        {
            get
            {
                return this._domainTypeNames;
            }
            set
            {
                this._domainTypeNames = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionObjectRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObjectRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>
    {
        
        private System.Collections.Generic.List<string> _actionNames = new System.Collections.Generic.List<string>();
        
        private int _countingEntities;
        
        private System.Collections.Generic.List<string> _domainTypeNames = new System.Collections.Generic.List<string>();
        
        private Framework.Core.Period _period;
        
        public UserActionObjectRootFilterModelStrictDTO()
        {
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionObjectRootFilterModel(this, source);
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionObjectRootFilterModel(this, source);
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionObjectRootFilterModel(this, source);
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ActionNames
        {
            get
            {
                return this._actionNames;
            }
            set
            {
                this._actionNames = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountingEntities
        {
            get
            {
                return this._countingEntities;
            }
            set
            {
                this._countingEntities = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DomainTypeNames
        {
            get
            {
                return this._domainTypeNames;
            }
            set
            {
                this._domainTypeNames = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                this._period = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            mappingService.MapUserActionObjectRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObjectRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.NamedLock), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.NamedLockFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.NamedLockRichDTO))]
    public partial class NamedLockSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.NamedLockIdentityDTO>
    {
        
        private Framework.Configuration.Domain.NamedLockOperation _lockOperation;
        
        public NamedLockSimpleDTO()
        {
        }
        
        public NamedLockSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapNamedLock(domainObject, this);
        }
        
        public NamedLockSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.NamedLockIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.NamedLockIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.NamedLockOperation LockOperation
        {
            get
            {
                return this._lockOperation;
            }
            set
            {
                this._lockOperation = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject)
        {
            mappingService.MapNamedLock(this, domainObject);
        }
        
        public Framework.Configuration.Domain.NamedLock ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToNamedLock(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.NamedLockStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.NamedLockStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.NamedLock), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.NamedLockRichDTO))]
    public partial class NamedLockFullDTO : Framework.Configuration.Generated.DTO.NamedLockSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock, System.Guid>
    {
        
        public NamedLockFullDTO()
        {
        }
        
        public NamedLockFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapNamedLock(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapNamedLock(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.NamedLockStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.NamedLockStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.NamedLock), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class NamedLockRichDTO : Framework.Configuration.Generated.DTO.NamedLockFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock>
    {
        
        public NamedLockRichDTO()
        {
        }
        
        public NamedLockRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapNamedLock(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapNamedLock(this, domainObject);
        }
        
        public Framework.Configuration.Domain.NamedLock ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToNamedLock(this);
        }
        
        public Framework.Configuration.Domain.NamedLock ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToNamedLock(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.NamedLockStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.NamedLockStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.NamedLock), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class NamedLockStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.NamedLock>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.NamedLockIdentityDTO>
    {
        
        private System.Guid _id;
        
        private Framework.Configuration.Domain.NamedLockOperation _lockOperation;
        
        public NamedLockStrictDTO()
        {
        }
        
        public NamedLockStrictDTO(Framework.Configuration.Generated.DTO.NamedLockRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.NamedLockFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForNamedLock(this, source);
        }
        
        public NamedLockStrictDTO(Framework.Configuration.Generated.DTO.NamedLockRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public NamedLockStrictDTO(Framework.Configuration.Generated.DTO.NamedLockFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.NamedLockSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForNamedLock(this, source);
        }
        
        public NamedLockStrictDTO(Framework.Configuration.Generated.DTO.NamedLockFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public NamedLockStrictDTO(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForNamedLock(this, source);
        }
        
        public NamedLockStrictDTO(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private NamedLockStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForNamedLock(this, source);
        }
        
        private NamedLockStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private NamedLockStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForNamedLock(this, source);
        }
        
        private NamedLockStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.NamedLockIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.NamedLockIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Domain.NamedLockOperation LockOperation
        {
            get
            {
                return this._lockOperation;
            }
            set
            {
                this._lockOperation = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.NamedLock domainObject)
        {
            mappingService.MapNamedLock(this, domainObject);
        }
        
        public Framework.Configuration.Domain.NamedLock ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToNamedLock(this);
        }
        
        public Framework.Configuration.Domain.NamedLock ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToNamedLock(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.QueueProcessingState), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO))]
    public partial class QueueProcessingStateSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.QueueProcessingState>
    {
        
        private System.DateTime? _lastProcessedItemDateTime;
        
        private int _unprocessedCount;
        
        public QueueProcessingStateSimpleDTO()
        {
        }
        
        public QueueProcessingStateSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapQueueProcessingState(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastProcessedItemDateTime
        {
            get
            {
                return this._lastProcessedItemDateTime;
            }
            set
            {
                this._lastProcessedItemDateTime = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnprocessedCount
        {
            get
            {
                return this._unprocessedCount;
            }
            set
            {
                this._unprocessedCount = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
            mappingService.MapQueueProcessingState(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.QueueProcessingState), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO))]
    public partial class QueueProcessingStateFullDTO : Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.QueueProcessingState>
    {
        
        public QueueProcessingStateFullDTO()
        {
        }
        
        public QueueProcessingStateFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapQueueProcessingState(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapQueueProcessingState(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.QueueProcessingState), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class QueueProcessingStateRichDTO : Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.QueueProcessingState>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.QueueProcessingState>
    {
        
        public QueueProcessingStateRichDTO()
        {
        }
        
        public QueueProcessingStateRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapQueueProcessingState(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapQueueProcessingState(this, domainObject);
        }
        
        public Framework.Configuration.Domain.QueueProcessingState ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToQueueProcessingState(this);
        }
        
        public override Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.QueueProcessingState), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class QueueProcessingStateStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.QueueProcessingState>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.QueueProcessingState>
    {
        
        private System.DateTime? _lastProcessedItemDateTime;
        
        private int _unprocessedCount;
        
        public QueueProcessingStateStrictDTO()
        {
        }
        
        public QueueProcessingStateStrictDTO(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForQueueProcessingState(this, source);
        }
        
        public QueueProcessingStateStrictDTO(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public QueueProcessingStateStrictDTO(Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForQueueProcessingState(this, source);
        }
        
        public QueueProcessingStateStrictDTO(Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public QueueProcessingStateStrictDTO(Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForQueueProcessingState(this, source);
        }
        
        public QueueProcessingStateStrictDTO(Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastProcessedItemDateTime
        {
            get
            {
                return this._lastProcessedItemDateTime;
            }
            set
            {
                this._lastProcessedItemDateTime = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnprocessedCount
        {
            get
            {
                return this._unprocessedCount;
            }
            set
            {
                this._unprocessedCount = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
            mappingService.MapQueueProcessingState(this, domainObject);
        }
        
        public Framework.Configuration.Domain.QueueProcessingState ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToQueueProcessingState(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO))]
    public partial class AccessableBusinessRoleReportRightSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO>
    {
        
        private System.Guid _value;
        
        public AccessableBusinessRoleReportRightSimpleDTO()
        {
        }
        
        public AccessableBusinessRoleReportRightSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessableBusinessRoleReportRight(domainObject, this);
        }
        
        public AccessableBusinessRoleReportRightSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            mappingService.MapAccessableBusinessRoleReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableBusinessRoleReportRight(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO))]
    public partial class AccessableBusinessRoleReportRightFullDTO : Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public AccessableBusinessRoleReportRightFullDTO()
        {
        }
        
        public AccessableBusinessRoleReportRightFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessableBusinessRoleReportRight(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAccessableBusinessRoleReportRight(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AccessableBusinessRoleReportRightRichDTO : Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>
    {
        
        public AccessableBusinessRoleReportRightRichDTO()
        {
        }
        
        public AccessableBusinessRoleReportRightRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessableBusinessRoleReportRight(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAccessableBusinessRoleReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableBusinessRoleReportRight(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AccessableBusinessRoleReportRightStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO>
    {
        
        private System.Guid _id;
        
        private System.Guid _value;
        
        public AccessableBusinessRoleReportRightStrictDTO()
        {
        }
        
        public AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAccessableBusinessRoleReportRight(this, source);
        }
        
        public AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAccessableBusinessRoleReportRight(this, source);
        }
        
        public AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAccessableBusinessRoleReportRight(this, source);
        }
        
        public AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAccessableBusinessRoleReportRight(this, source);
        }
        
        private AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAccessableBusinessRoleReportRight(this, source);
        }
        
        private AccessableBusinessRoleReportRightStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            mappingService.MapAccessableBusinessRoleReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableBusinessRoleReportRight(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableOperationReportRight), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO))]
    public partial class AccessableOperationReportRightSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO>
    {
        
        private System.Guid _value;
        
        public AccessableOperationReportRightSimpleDTO()
        {
        }
        
        public AccessableOperationReportRightSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessableOperationReportRight(domainObject, this);
        }
        
        public AccessableOperationReportRightSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            mappingService.MapAccessableOperationReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableOperationReportRight(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableOperationReportRight), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO))]
    public partial class AccessableOperationReportRightFullDTO : Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public AccessableOperationReportRightFullDTO()
        {
        }
        
        public AccessableOperationReportRightFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessableOperationReportRight(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAccessableOperationReportRight(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableOperationReportRight), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AccessableOperationReportRightRichDTO : Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>
    {
        
        public AccessableOperationReportRightRichDTO()
        {
        }
        
        public AccessableOperationReportRightRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessableOperationReportRight(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAccessableOperationReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableOperationReportRight(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessableOperationReportRight), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AccessableOperationReportRightStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO>
    {
        
        private System.Guid _id;
        
        private System.Guid _value;
        
        public AccessableOperationReportRightStrictDTO()
        {
        }
        
        public AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAccessableOperationReportRight(this, source);
        }
        
        public AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAccessableOperationReportRight(this, source);
        }
        
        public AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAccessableOperationReportRight(this, source);
        }
        
        public AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAccessableOperationReportRight(this, source);
        }
        
        private AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAccessableOperationReportRight(this, source);
        }
        
        private AccessableOperationReportRightStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            mappingService.MapAccessableOperationReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessableOperationReportRight(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO))]
    public partial class AccessablePrincipalReportRightSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO>
    {
        
        private string _value;
        
        public AccessablePrincipalReportRightSimpleDTO()
        {
        }
        
        public AccessablePrincipalReportRightSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessablePrincipalReportRight(domainObject, this);
        }
        
        public AccessablePrincipalReportRightSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            mappingService.MapAccessablePrincipalReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessablePrincipalReportRight(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO))]
    public partial class AccessablePrincipalReportRightFullDTO : Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public AccessablePrincipalReportRightFullDTO()
        {
        }
        
        public AccessablePrincipalReportRightFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessablePrincipalReportRight(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAccessablePrincipalReportRight(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AccessablePrincipalReportRightRichDTO : Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>
    {
        
        public AccessablePrincipalReportRightRichDTO()
        {
        }
        
        public AccessablePrincipalReportRightRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAccessablePrincipalReportRight(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapAccessablePrincipalReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessablePrincipalReportRight(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AccessablePrincipalReportRightStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _value;
        
        public AccessablePrincipalReportRightStrictDTO()
        {
        }
        
        public AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAccessablePrincipalReportRight(this, source);
        }
        
        public AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAccessablePrincipalReportRight(this, source);
        }
        
        public AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAccessablePrincipalReportRight(this, source);
        }
        
        public AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAccessablePrincipalReportRight(this, source);
        }
        
        private AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAccessablePrincipalReportRight(this, source);
        }
        
        private AccessablePrincipalReportRightStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            mappingService.MapAccessablePrincipalReportRight(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToAccessablePrincipalReportRight(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.Report), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportRichDTO))]
    public partial class ReportSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportIdentityDTO>
    {
        
        private string _description;
        
        private string _domainTypeName;
        
        private string _name;
        
        private string _owner;
        
        private Framework.Configuration.Core.ReportType _reportType;
        
        private int? _securityOperationCode;
        
        private string _sortBy;
        
        private long _version;
        
        public ReportSimpleDTO()
        {
        }
        
        public ReportSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReport(domainObject, this);
        }
        
        public ReportSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainTypeName
        {
            get
            {
                return this._domainTypeName;
            }
            set
            {
                this._domainTypeName = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                this._owner = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Core.ReportType ReportType
        {
            get
            {
                return this._reportType;
            }
            set
            {
                this._reportType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? SecurityOperationCode
        {
            get
            {
                return this._securityOperationCode;
            }
            set
            {
                this._securityOperationCode = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortBy
        {
            get
            {
                return this._sortBy;
            }
            set
            {
                this._sortBy = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                this._version = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            mappingService.MapReport(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.Report ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReport(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.Report), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportRichDTO))]
    public partial class ReportFullDTO : Framework.Configuration.Generated.DTO.ReportSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report, System.Guid>
    {
        
        public ReportFullDTO()
        {
        }
        
        public ReportFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReport(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReport(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.Report), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportRichDTO : Framework.Configuration.Generated.DTO.ReportFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO> _accessableBusinessRoles = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO> _accessableOperations = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO> _accessablePrincipals = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterRichDTO> _filters = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterRichDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterRichDTO> _parameters = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterRichDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyRichDTO> _properties = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyRichDTO>();
        
        public ReportRichDTO()
        {
        }
        
        public ReportRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReport(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO> AccessableBusinessRoles
        {
            get
            {
                return this._accessableBusinessRoles;
            }
            set
            {
                this._accessableBusinessRoles = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO> AccessableOperations
        {
            get
            {
                return this._accessableOperations;
            }
            set
            {
                this._accessableOperations = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO> AccessablePrincipals
        {
            get
            {
                return this._accessablePrincipals;
            }
            set
            {
                this._accessablePrincipals = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterRichDTO> Filters
        {
            get
            {
                return this._filters;
            }
            set
            {
                this._filters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                this._parameters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyRichDTO> Properties
        {
            get
            {
                return this._properties;
            }
            set
            {
                this._properties = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReport(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.Report ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReport(this);
        }
        
        public Framework.Configuration.Domain.Reports.Report ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToReport(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.Report), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.Report>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportIdentityDTO>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO> _accessableBusinessRoles = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO> _accessableOperations = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO> _accessablePrincipals = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO>();
        
        private bool _active = true;
        
        private string _description;
        
        private string _domainTypeName;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterStrictDTO> _filters = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterStrictDTO>();
        
        private System.Guid _id;
        
        private string _name;
        
        private string _owner;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterStrictDTO> _parameters = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterStrictDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO> _properties = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO>();
        
        private Framework.Configuration.Core.ReportType _reportType;
        
        private int? _securityOperationCode;
        
        private long _version;
        
        public ReportStrictDTO()
        {
        }
        
        public ReportStrictDTO(Framework.Configuration.Generated.DTO.ReportRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReport(this, source);
        }
        
        public ReportStrictDTO(Framework.Configuration.Generated.DTO.ReportRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportStrictDTO(Framework.Configuration.Generated.DTO.ReportFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReport(this, source);
        }
        
        public ReportStrictDTO(Framework.Configuration.Generated.DTO.ReportFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportStrictDTO(Framework.Configuration.Generated.DTO.ReportSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReport(this, source);
        }
        
        public ReportStrictDTO(Framework.Configuration.Generated.DTO.ReportSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForReport(this, source);
        }
        
        private ReportStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForReport(this, source);
        }
        
        private ReportStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO> AccessableBusinessRoles
        {
            get
            {
                return this._accessableBusinessRoles;
            }
            set
            {
                this._accessableBusinessRoles = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO> AccessableOperations
        {
            get
            {
                return this._accessableOperations;
            }
            set
            {
                this._accessableOperations = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO> AccessablePrincipals
        {
            get
            {
                return this._accessablePrincipals;
            }
            set
            {
                this._accessablePrincipals = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                this._active = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainTypeName
        {
            get
            {
                return this._domainTypeName;
            }
            set
            {
                this._domainTypeName = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterStrictDTO> Filters
        {
            get
            {
                return this._filters;
            }
            set
            {
                this._filters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                this._owner = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterStrictDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                this._parameters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO> Properties
        {
            get
            {
                return this._properties;
            }
            set
            {
                this._properties = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Core.ReportType ReportType
        {
            get
            {
                return this._reportType;
            }
            set
            {
                this._reportType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? SecurityOperationCode
        {
            get
            {
                return this._securityOperationCode;
            }
            set
            {
                this._securityOperationCode = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                this._version = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            mappingService.MapReport(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.Report ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReport(this);
        }
        
        public Framework.Configuration.Domain.Reports.Report ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToReport(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportFilter), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportFilterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportFilterRichDTO))]
    public partial class ReportFilterSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO>
    {
        
        private string _filterOperator;
        
        private string _filterOperatorViewName;
        
        private bool _isValueFromParameters;
        
        private string _property;
        
        private string _value;
        
        public ReportFilterSimpleDTO()
        {
        }
        
        public ReportFilterSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportFilter(domainObject, this);
        }
        
        public ReportFilterSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterOperator
        {
            get
            {
                return this._filterOperator;
            }
            set
            {
                this._filterOperator = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterOperatorViewName
        {
            get
            {
                return this._filterOperatorViewName;
            }
            set
            {
                this._filterOperatorViewName = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValueFromParameters
        {
            get
            {
                return this._isValueFromParameters;
            }
            set
            {
                this._isValueFromParameters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property
        {
            get
            {
                return this._property;
            }
            set
            {
                this._property = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            mappingService.MapReportFilter(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportFilter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportFilter(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportFilterStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportFilter), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportFilterRichDTO))]
    public partial class ReportFilterFullDTO : Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public ReportFilterFullDTO()
        {
        }
        
        public ReportFilterFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportFilter(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportFilter(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportFilterStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportFilter), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportFilterRichDTO : Framework.Configuration.Generated.DTO.ReportFilterFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter>
    {
        
        public ReportFilterRichDTO()
        {
        }
        
        public ReportFilterRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportFilter(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportFilter(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportFilter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportFilter(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportFilterStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportFilter), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportFilterStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportFilter>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO>
    {
        
        private string _filterOperator;
        
        private System.Guid _id;
        
        private bool _isValueFromParameters;
        
        private string _property;
        
        private string _value;
        
        public ReportFilterStrictDTO()
        {
        }
        
        public ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.ReportFilterRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportFilterFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportFilter(this, source);
        }
        
        public ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.ReportFilterRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.ReportFilterFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportFilter(this, source);
        }
        
        public ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.ReportFilterFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportFilter(this, source);
        }
        
        public ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForReportFilter(this, source);
        }
        
        private ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForReportFilter(this, source);
        }
        
        private ReportFilterStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterOperator
        {
            get
            {
                return this._filterOperator;
            }
            set
            {
                this._filterOperator = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValueFromParameters
        {
            get
            {
                return this._isValueFromParameters;
            }
            set
            {
                this._isValueFromParameters = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property
        {
            get
            {
                return this._property;
            }
            set
            {
                this._property = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            mappingService.MapReportFilter(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportFilter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportFilter(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportParameter), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportParameterRichDTO))]
    public partial class ReportParameterSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO>
    {
        
        private string _displayValueProperty;
        
        private bool _isCollection;
        
        private bool _isRequired;
        
        private string _name;
        
        private int _order;
        
        private string _typeName;
        
        public ReportParameterSimpleDTO()
        {
        }
        
        public ReportParameterSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportParameter(domainObject, this);
        }
        
        public ReportParameterSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayValueProperty
        {
            get
            {
                return this._displayValueProperty;
            }
            set
            {
                this._displayValueProperty = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCollection
        {
            get
            {
                return this._isCollection;
            }
            set
            {
                this._isCollection = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired
        {
            get
            {
                return this._isRequired;
            }
            set
            {
                this._isRequired = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order
        {
            get
            {
                return this._order;
            }
            set
            {
                this._order = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName
        {
            get
            {
                return this._typeName;
            }
            set
            {
                this._typeName = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            mappingService.MapReportParameter(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportParameter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportParameter(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportParameterStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportParameter), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportParameterRichDTO))]
    public partial class ReportParameterFullDTO : Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public ReportParameterFullDTO()
        {
        }
        
        public ReportParameterFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportParameter(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportParameter(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportParameterStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportParameter), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportParameterRichDTO : Framework.Configuration.Generated.DTO.ReportParameterFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter>
    {
        
        public ReportParameterRichDTO()
        {
        }
        
        public ReportParameterRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportParameter(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportParameter(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportParameter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportParameter(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportParameterStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportParameter), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportParameterStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO>
    {
        
        private string _displayValueProperty;
        
        private System.Guid _id;
        
        private bool _isCollection;
        
        private bool _isRequired;
        
        private string _name;
        
        private int _order;
        
        private string _typeName;
        
        public ReportParameterStrictDTO()
        {
        }
        
        public ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportParameterFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportParameter(this, source);
        }
        
        public ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportParameter(this, source);
        }
        
        public ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportParameter(this, source);
        }
        
        public ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForReportParameter(this, source);
        }
        
        private ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForReportParameter(this, source);
        }
        
        private ReportParameterStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayValueProperty
        {
            get
            {
                return this._displayValueProperty;
            }
            set
            {
                this._displayValueProperty = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCollection
        {
            get
            {
                return this._isCollection;
            }
            set
            {
                this._isCollection = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired
        {
            get
            {
                return this._isRequired;
            }
            set
            {
                this._isRequired = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order
        {
            get
            {
                return this._order;
            }
            set
            {
                this._order = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName
        {
            get
            {
                return this._typeName;
            }
            set
            {
                this._typeName = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            mappingService.MapReportParameter(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportParameter ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportParameter(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportProperty), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportPropertyFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO))]
    public partial class ReportPropertySimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO>
    {
        
        private string _alias;
        
        private string _formula;
        
        private int _order;
        
        private string _propertyPath;
        
        private int _sortOrdered;
        
        private int _sortType;
        
        public ReportPropertySimpleDTO()
        {
        }
        
        public ReportPropertySimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportProperty(domainObject, this);
        }
        
        public ReportPropertySimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return this._alias;
            }
            set
            {
                this._alias = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Formula
        {
            get
            {
                return this._formula;
            }
            set
            {
                this._formula = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order
        {
            get
            {
                return this._order;
            }
            set
            {
                this._order = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyPath
        {
            get
            {
                return this._propertyPath;
            }
            set
            {
                this._propertyPath = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrdered
        {
            get
            {
                return this._sortOrdered;
            }
            set
            {
                this._sortOrdered = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortType
        {
            get
            {
                return this._sortType;
            }
            set
            {
                this._sortType = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            mappingService.MapReportProperty(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportProperty ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportProperty(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportProperty), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO))]
    public partial class ReportPropertyFullDTO : Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.ReportSimpleDTO _report;
        
        public ReportPropertyFullDTO()
        {
        }
        
        public ReportPropertyFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportProperty(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ReportSimpleDTO Report
        {
            get
            {
                return this._report;
            }
            set
            {
                this._report = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportProperty(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportProperty), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportPropertyRichDTO : Framework.Configuration.Generated.DTO.ReportPropertyFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty>
    {
        
        public ReportPropertyRichDTO()
        {
        }
        
        public ReportPropertyRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapReportProperty(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapReportProperty(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportProperty ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportProperty(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Reports.ReportProperty), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ReportPropertyStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Reports.ReportProperty>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO>
    {
        
        private string _alias;
        
        private string _formula;
        
        private System.Guid _id;
        
        private int _order;
        
        private string _propertyPath;
        
        private int _sortOrdered;
        
        private int _sortType;
        
        public ReportPropertyStrictDTO()
        {
        }
        
        public ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportPropertyFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForReportProperty(this, source);
        }
        
        public ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.ReportPropertyFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForReportProperty(this, source);
        }
        
        public ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.ReportPropertyFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForReportProperty(this, source);
        }
        
        public ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForReportProperty(this, source);
        }
        
        private ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForReportProperty(this, source);
        }
        
        private ReportPropertyStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return this._alias;
            }
            set
            {
                this._alias = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Formula
        {
            get
            {
                return this._formula;
            }
            set
            {
                this._formula = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order
        {
            get
            {
                return this._order;
            }
            set
            {
                this._order = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyPath
        {
            get
            {
                return this._propertyPath;
            }
            set
            {
                this._propertyPath = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrdered
        {
            get
            {
                return this._sortOrdered;
            }
            set
            {
                this._sortOrdered = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortType
        {
            get
            {
                return this._sortType;
            }
            set
            {
                this._sortType = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            mappingService.MapReportProperty(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Reports.ReportProperty ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToReportProperty(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SentMessage), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SentMessageFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SentMessageRichDTO))]
    public partial class SentMessageSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SentMessageIdentityDTO>
    {
        
        private string _comment;
        
        private System.Guid? _contextObjectId;
        
        private string _contextObjectType;
        
        private string _copy;
        
        private string _from;
        
        private string _message;
        
        private string _replyTo;
        
        private string _subject;
        
        private string _templateName;
        
        private string _to;
        
        public SentMessageSimpleDTO()
        {
        }
        
        public SentMessageSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSentMessage(domainObject, this);
        }
        
        public SentMessageSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                this._comment = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid? ContextObjectId
        {
            get
            {
                return this._contextObjectId;
            }
            set
            {
                this._contextObjectId = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextObjectType
        {
            get
            {
                return this._contextObjectType;
            }
            set
            {
                this._contextObjectType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Copy
        {
            get
            {
                return this._copy;
            }
            set
            {
                this._copy = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From
        {
            get
            {
                return this._from;
            }
            set
            {
                this._from = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SentMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SentMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this._message;
            }
            set
            {
                this._message = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyTo
        {
            get
            {
                return this._replyTo;
            }
            set
            {
                this._replyTo = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this._subject;
            }
            set
            {
                this._subject = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName
        {
            get
            {
                return this._templateName;
            }
            set
            {
                this._templateName = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To
        {
            get
            {
                return this._to;
            }
            set
            {
                this._to = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject)
        {
            mappingService.MapSentMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SentMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSentMessage(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SentMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SentMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SentMessage), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SentMessageRichDTO))]
    public partial class SentMessageFullDTO : Framework.Configuration.Generated.DTO.SentMessageSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage, System.Guid>
    {
        
        public SentMessageFullDTO()
        {
        }
        
        public SentMessageFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSentMessage(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSentMessage(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.SentMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SentMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SentMessage), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SentMessageRichDTO : Framework.Configuration.Generated.DTO.SentMessageFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage>
    {
        
        public SentMessageRichDTO()
        {
        }
        
        public SentMessageRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSentMessage(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSentMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SentMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSentMessage(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SentMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SentMessageStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SentMessage), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SentMessageStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SentMessage>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SentMessageIdentityDTO>
    {
        
        private System.Guid _id;
        
        public SentMessageStrictDTO()
        {
        }
        
        public SentMessageStrictDTO(Framework.Configuration.Generated.DTO.SentMessageRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SentMessageFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSentMessage(this, source);
        }
        
        public SentMessageStrictDTO(Framework.Configuration.Generated.DTO.SentMessageRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SentMessageStrictDTO(Framework.Configuration.Generated.DTO.SentMessageFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SentMessageSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSentMessage(this, source);
        }
        
        public SentMessageStrictDTO(Framework.Configuration.Generated.DTO.SentMessageFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SentMessageStrictDTO(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSentMessage(this, source);
        }
        
        public SentMessageStrictDTO(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SentMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSentMessage(this, source);
        }
        
        private SentMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SentMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSentMessage(this, source);
        }
        
        private SentMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SentMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SentMessageIdentityDTO(this.Id);
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SentMessage domainObject)
        {
            mappingService.MapSentMessage(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SentMessage ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSentMessage(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Sequence), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>
    {
        
        private string _name;
        
        public SequenceVisualDTO()
        {
        }
        
        public SequenceVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequence(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.SequenceIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject)
        {
            mappingService.MapSequence(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Sequence), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRichDTO))]
    public partial class SequenceSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>
    {
        
        private string _name;
        
        private long _number;
        
        public SequenceSimpleDTO()
        {
        }
        
        public SequenceSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequence(domainObject, this);
        }
        
        public SequenceSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.SequenceIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Number
        {
            get
            {
                return this._number;
            }
            set
            {
                this._number = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject)
        {
            mappingService.MapSequence(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Sequence ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequence(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SequenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Sequence), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRichDTO))]
    public partial class SequenceFullDTO : Framework.Configuration.Generated.DTO.SequenceSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence, System.Guid>
    {
        
        public SequenceFullDTO()
        {
        }
        
        public SequenceFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequence(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSequence(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Sequence), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceRichDTO : Framework.Configuration.Generated.DTO.SequenceFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence>
    {
        
        public SequenceRichDTO()
        {
        }
        
        public SequenceRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequence(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSequence(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Sequence ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequence(this);
        }
        
        public Framework.Configuration.Domain.Sequence ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToSequence(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.Sequence), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.Sequence>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private long _number;
        
        public SequenceStrictDTO()
        {
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSequence(this, source);
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSequence(this, source);
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSequence(this, source);
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSequence(this, source);
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSequence(this, source);
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SequenceIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Number
        {
            get
            {
                return this._number;
            }
            set
            {
                this._number = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.Sequence domainObject)
        {
            mappingService.MapSequence(this, domainObject);
        }
        
        public Framework.Configuration.Domain.Sequence ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequence(this);
        }
        
        public Framework.Configuration.Domain.Sequence ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToSequence(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceCreateModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO))]
    public partial class SequenceCreateModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceCreateModel>
    {
        
        public SequenceCreateModelSimpleDTO()
        {
        }
        
        public SequenceCreateModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequenceCreateModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
            mappingService.MapSequenceCreateModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceCreateModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO))]
    public partial class SequenceCreateModelFullDTO : Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceCreateModel>
    {
        
        public SequenceCreateModelFullDTO()
        {
        }
        
        public SequenceCreateModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequenceCreateModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSequenceCreateModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceCreateModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceCreateModelRichDTO : Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceCreateModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceCreateModel>
    {
        
        public SequenceCreateModelRichDTO()
        {
        }
        
        public SequenceCreateModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequenceCreateModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSequenceCreateModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SequenceCreateModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequenceCreateModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceCreateModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceCreateModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceCreateModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceCreateModel>
    {
        
        public SequenceCreateModelStrictDTO()
        {
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSequenceCreateModel(this, source);
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSequenceCreateModel(this, source);
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSequenceCreateModel(this, source);
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
            mappingService.MapSequenceCreateModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SequenceCreateModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequenceCreateModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO))]
    public partial class SequenceRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceRootFilterModel>
    {
        
        public SequenceRootFilterModelSimpleDTO()
        {
        }
        
        public SequenceRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequenceRootFilterModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
            mappingService.MapSequenceRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO))]
    public partial class SequenceRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceRootFilterModel>
    {
        
        public SequenceRootFilterModelFullDTO()
        {
        }
        
        public SequenceRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequenceRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSequenceRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceRootFilterModel>
    {
        
        public SequenceRootFilterModelRichDTO()
        {
        }
        
        public SequenceRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSequenceRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSequenceRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SequenceRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequenceRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SequenceRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SequenceRootFilterModel>
    {
        
        public SequenceRootFilterModelStrictDTO()
        {
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSequenceRootFilterModel(this, source);
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSequenceRootFilterModel(this, source);
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSequenceRootFilterModel(this, source);
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
            mappingService.MapSequenceRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SequenceRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSequenceRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstant), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>
    {
        
        private string _code;
        
        public SystemConstantVisualDTO()
        {
        }
        
        public SystemConstantVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstant(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this._code;
            }
            set
            {
                this._code = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(this.Id);
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            mappingService.MapSystemConstant(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstant), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRichDTO))]
    public partial class SystemConstantSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>
    {
        
        private string _code;
        
        private string _description;
        
        private bool _isManual;
        
        private string _value;
        
        public SystemConstantSimpleDTO()
        {
        }
        
        public SystemConstantSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstant(domainObject, this);
        }
        
        public SystemConstantSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this._code;
            }
            set
            {
                this._code = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManual
        {
            get
            {
                return this._isManual;
            }
            set
            {
                this._isManual = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            mappingService.MapSystemConstant(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SystemConstant ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSystemConstant(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SystemConstantStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstant), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRichDTO))]
    public partial class SystemConstantFullDTO : Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _type;
        
        public SystemConstantFullDTO()
        {
        }
        
        public SystemConstantFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstant(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSystemConstant(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstant), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantRichDTO : Framework.Configuration.Generated.DTO.SystemConstantFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant>
    {
        
        public SystemConstantRichDTO()
        {
        }
        
        public SystemConstantRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstant(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSystemConstant(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SystemConstant ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSystemConstant(this);
        }
        
        public Framework.Configuration.Domain.SystemConstant ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToSystemConstant(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstant), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstant>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>
    {
        
        private string _description;
        
        private System.Guid _id;
        
        private string _value;
        
        public SystemConstantStrictDTO()
        {
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSystemConstant(this, source);
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSystemConstant(this, source);
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSystemConstant(this, source);
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSystemConstant(this, source);
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSystemConstant(this, source);
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            mappingService.MapSystemConstant(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SystemConstant ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSystemConstant(this);
        }
        
        public Framework.Configuration.Domain.SystemConstant ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToSystemConstant(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstantRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO))]
    public partial class SystemConstantRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel>
    {
        
        public SystemConstantRootFilterModelSimpleDTO()
        {
        }
        
        public SystemConstantRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstantRootFilterModel(domainObject, this);
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
            mappingService.MapSystemConstantRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstantRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO))]
    public partial class SystemConstantRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel>
    {
        
        public SystemConstantRootFilterModelFullDTO()
        {
        }
        
        public SystemConstantRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstantRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSystemConstantRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstantRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel>
    {
        
        public SystemConstantRootFilterModelRichDTO()
        {
        }
        
        public SystemConstantRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSystemConstantRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapSystemConstantRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SystemConstantRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSystemConstantRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.SystemConstantRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel>
    {
        
        public SystemConstantRootFilterModelStrictDTO()
        {
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSystemConstantRootFilterModel(this, source);
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSystemConstantRootFilterModel(this, source);
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSystemConstantRootFilterModel(this, source);
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
            mappingService.MapSystemConstantRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.SystemConstantRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToSystemConstantRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystem), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemVisualDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem, System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>
    {
        
        private string _name;
        
        public TargetSystemVisualDTO()
        {
        }
        
        public TargetSystemVisualDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystem(domainObject, this);
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            mappingService.MapTargetSystem(this, domainObject);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystem), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRichDTO))]
    public partial class TargetSystemSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>
    {
        
        private bool _isBase;
        
        private bool _isMain;
        
        private bool _isRevision;
        
        private string _name;
        
        private bool _subscriptionEnabled;
        
        public TargetSystemSimpleDTO()
        {
        }
        
        public TargetSystemSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystem(domainObject, this);
        }
        
        public TargetSystemSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBase
        {
            get
            {
                return this._isBase;
            }
            set
            {
                this._isBase = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                this._isMain = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRevision
        {
            get
            {
                return this._isRevision;
            }
            set
            {
                this._isRevision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                this._subscriptionEnabled = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            mappingService.MapTargetSystem(this, domainObject);
        }
        
        public Framework.Configuration.Domain.TargetSystem ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToTargetSystem(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.TargetSystemStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystem), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRichDTO))]
    public partial class TargetSystemFullDTO : Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem, System.Guid>
    {
        
        public TargetSystemFullDTO()
        {
        }
        
        public TargetSystemFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystem(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapTargetSystem(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystem), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemRichDTO : Framework.Configuration.Generated.DTO.TargetSystemFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> _domainTypes = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRichDTO>();
        
        public TargetSystemRichDTO()
        {
        }
        
        public TargetSystemRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystem(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> DomainTypes
        {
            get
            {
                return this._domainTypes;
            }
            set
            {
                this._domainTypes = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapTargetSystem(this, domainObject);
        }
        
        public Framework.Configuration.Domain.TargetSystem ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToTargetSystem(this);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystem), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystem>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private bool _subscriptionEnabled;
        
        public TargetSystemStrictDTO()
        {
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTargetSystem(this, source);
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTargetSystem(this, source);
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTargetSystem(this, source);
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTargetSystem(this, source);
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTargetSystem(this, source);
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                this._subscriptionEnabled = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            mappingService.MapTargetSystem(this, domainObject);
        }
        
        public Framework.Configuration.Domain.TargetSystem ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToTargetSystem(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystemRootFilterModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO))]
    public partial class TargetSystemRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel>
    {
        
        private bool? _isMain;
        
        private bool? _isRevision;
        
        private bool? _subscriptionEnabled;
        
        public TargetSystemRootFilterModelSimpleDTO()
        {
        }
        
        public TargetSystemRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystemRootFilterModel(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                this._isMain = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsRevision
        {
            get
            {
                return this._isRevision;
            }
            set
            {
                this._isRevision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                this._subscriptionEnabled = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
            mappingService.MapTargetSystemRootFilterModel(this, domainObject);
        }
        
        public virtual Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystemRootFilterModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO))]
    public partial class TargetSystemRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel>
    {
        
        public TargetSystemRootFilterModelFullDTO()
        {
        }
        
        public TargetSystemRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystemRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapTargetSystemRootFilterModel(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystemRootFilterModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel>
    {
        
        public TargetSystemRootFilterModelRichDTO()
        {
        }
        
        public TargetSystemRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTargetSystemRootFilterModel(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapTargetSystemRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.TargetSystemRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToTargetSystemRootFilterModel(this);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.TargetSystemRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel>
    {
        
        private bool? _isMain;
        
        private bool? _isRevision;
        
        private bool? _subscriptionEnabled;
        
        public TargetSystemRootFilterModelStrictDTO()
        {
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTargetSystemRootFilterModel(this, source);
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTargetSystemRootFilterModel(this, source);
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTargetSystemRootFilterModel(this, source);
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                this._isMain = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsRevision
        {
            get
            {
                return this._isRevision;
            }
            set
            {
                this._isRevision = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                this._subscriptionEnabled = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
            mappingService.MapTargetSystemRootFilterModel(this, domainObject);
        }
        
        public Framework.Configuration.Domain.TargetSystemRootFilterModel ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToTargetSystemRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserAction), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionRichDTO))]
    public partial class UserActionSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.UserActionIdentityDTO>
    {
        
        private string _name;
        
        public UserActionSimpleDTO()
        {
        }
        
        public UserActionSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserAction(domainObject, this);
        }
        
        public UserActionSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public Framework.Configuration.Generated.DTO.UserActionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.UserActionIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject)
        {
            mappingService.MapUserAction(this, domainObject);
        }
        
        public Framework.Configuration.Domain.UserAction ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserAction(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserAction), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionRichDTO))]
    public partial class UserActionFullDTO : Framework.Configuration.Generated.DTO.UserActionSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public UserActionFullDTO()
        {
        }
        
        public UserActionFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserAction(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserAction(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserAction), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionRichDTO : Framework.Configuration.Generated.DTO.UserActionFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> _objectIdentities = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO>();
        
        public UserActionRichDTO()
        {
        }
        
        public UserActionRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserAction(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                this._objectIdentities = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserAction(this, domainObject);
        }
        
        public Framework.Configuration.Domain.UserAction ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserAction(this);
        }
        
        public Framework.Configuration.Domain.UserAction ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToUserAction(this, allowCreate);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserAction), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserAction>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.UserActionIdentityDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO _domainType;
        
        private System.Guid _id;
        
        private string _name;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO> _objectIdentities = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO>();
        
        public UserActionStrictDTO()
        {
        }
        
        public UserActionStrictDTO(Framework.Configuration.Generated.DTO.UserActionRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserAction(this, source);
        }
        
        public UserActionStrictDTO(Framework.Configuration.Generated.DTO.UserActionRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionStrictDTO(Framework.Configuration.Generated.DTO.UserActionFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserAction(this, source);
        }
        
        public UserActionStrictDTO(Framework.Configuration.Generated.DTO.UserActionFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionStrictDTO(Framework.Configuration.Generated.DTO.UserActionSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserAction(this, source);
        }
        
        public UserActionStrictDTO(Framework.Configuration.Generated.DTO.UserActionSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private UserActionStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForUserAction(this, source);
        }
        
        private UserActionStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private UserActionStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForUserAction(this, source);
        }
        
        private UserActionStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                this._domainType = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.UserActionIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                this._objectIdentities = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserAction domainObject)
        {
            mappingService.MapUserAction(this, domainObject);
        }
        
        public Framework.Configuration.Domain.UserAction ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserAction(this);
        }
        
        public Framework.Configuration.Domain.UserAction ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToUserAction(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserActionObject), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO))]
    public partial class UserActionObjectSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO>
    {
        
        private string _domainTypeName;
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        private string _userActionName;
        
        public UserActionObjectSimpleDTO()
        {
        }
        
        public UserActionObjectSimpleDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObject(domainObject, this);
        }
        
        public UserActionObjectSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainTypeName
        {
            get
            {
                return this._domainTypeName;
            }
            set
            {
                this._domainTypeName = value;
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                this._objectIdentity = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserActionName
        {
            get
            {
                return this._userActionName;
            }
            set
            {
                this._userActionName = value;
            }
        }
        
        public virtual void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject)
        {
            mappingService.MapUserActionObject(this, domainObject);
        }
        
        public Framework.Configuration.Domain.UserActionObject ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObject(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserActionObject), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO))]
    public partial class UserActionObjectFullDTO : Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject, System.Guid>
    {
        
        private Framework.Configuration.Generated.DTO.UserActionSimpleDTO _userAction;
        
        public UserActionObjectFullDTO()
        {
        }
        
        public UserActionObjectFullDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObject(domainObject, this);
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.UserActionSimpleDTO UserAction
        {
            get
            {
                return this._userAction;
            }
            set
            {
                this._userAction = value;
            }
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionObject(this, domainObject);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserActionObject), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectRichDTO : Framework.Configuration.Generated.DTO.UserActionObjectFullDTO, Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject>
    {
        
        public UserActionObjectRichDTO()
        {
        }
        
        public UserActionObjectRichDTO(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapUserActionObject(domainObject, this);
        }
        
        public override void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject)
        {
            base.MapToDomainObject(mappingService, domainObject);
            mappingService.MapUserActionObject(this, domainObject);
        }
        
        public Framework.Configuration.Domain.UserActionObject ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObject(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(Framework.Configuration.Domain.UserActionObject), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectStrictDTO : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject, System.Guid>, Framework.DomainDriven.IConvertMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, Framework.Configuration.Domain.UserActionObject>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        public UserActionObjectStrictDTO()
        {
        }
        
        public UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionObject(this, source);
        }
        
        public UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionObject(this, source);
        }
        
        public UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionObject(this, source);
        }
        
        public UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForUserActionObject(this, source);
        }
        
        private UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForUserActionObject(this, source);
        }
        
        private UserActionObjectStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                this._objectIdentity = value;
            }
        }
        
        public void MapToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService, Framework.Configuration.Domain.UserActionObject domainObject)
        {
            mappingService.MapUserActionObject(this, domainObject);
        }
        
        public Framework.Configuration.Domain.UserActionObject ToDomainObject(Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return mappingService.ToUserActionObject(this);
        }
    }
    
    #region 
	static
    public class LambdaHelper
    {
        
        public static Framework.Configuration.Generated.DTO.AttachmentFullDTO ToFullDTO(this Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO ToFullDTO(this Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO ToFullDTO(this Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentTagFullDTO ToFullDTO(this Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO ToFullDTO(this Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsFullDTO ToFullDTO(this Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO ToFullDTO(this Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO ToFullDTO(this Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO ToFullDTO(this Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.LogMessageFullDTO ToFullDTO(this Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.LogMessageFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.NamedLockFullDTO ToFullDTO(this Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.NamedLockFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO ToFullDTO(this Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportFilterFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportPropertyFullDTO ToFullDTO(this Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertyFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SentMessageFullDTO ToFullDTO(this Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SentMessageFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceFullDTO ToFullDTO(this Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO ToFullDTO(this Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantFullDTO ToFullDTO(this Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemFullDTO ToFullDTO(this Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO ToFullDTO(this Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionFullDTO ToFullDTO(this Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionFullDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectFullDTO ToFullDTO(this Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectFullDTO(mappingService, domainObject);
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Attachment> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainer> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainerReference> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentTag> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscription> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectEvent> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectModification> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectNotification> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessageRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.LogMessageFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.LogMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Create.UserActionCreateModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Create.UserActionObjectModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.NamedLockFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.NamedLock> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.QueueProcessingState> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.Report> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SentMessageFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SentMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Sequence> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SequenceCreateModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SequenceRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstant> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstantRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystem> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystemRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserAction> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectFullDTO> ToFullDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserActionObject> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToFullDTO(domainObject, mappingService));
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Attachment domainObject)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.ControlSettings domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.DomainType domainObject)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.LogMessageIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.LogMessage domainObject)
        {
            return new Framework.Configuration.Generated.DTO.LogMessageIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.NamedLockIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.NamedLock domainObject)
        {
            return new Framework.Configuration.Generated.DTO.NamedLockIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.Report domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ReportIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SentMessageIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.SentMessage domainObject)
        {
            return new Framework.Configuration.Generated.DTO.SentMessageIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.Sequence domainObject)
        {
            return new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.SystemConstant domainObject)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.TargetSystem domainObject)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.UserAction domainObject)
        {
            return new Framework.Configuration.Generated.DTO.UserActionIdentityDTO(domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO ToIdentityDTO(this Framework.Configuration.Domain.UserActionObject domainObject)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO(domainObject);
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Attachment> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainer> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentTag> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscription> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectEvent> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectModification> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectNotification> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessage> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.LogMessageIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.LogMessage> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.NamedLockIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.NamedLock> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.Report> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SentMessageIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SentMessage> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Sequence> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstant> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystem> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserAction> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO> ToIdentityDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserActionObject> domainObjects)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToIdentityDTO(domainObject));
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentRichDTO ToRichDTO(this Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO ToRichDTO(this Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO ToRichDTO(this Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentTagRichDTO ToRichDTO(this Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO ToRichDTO(this Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsRichDTO ToRichDTO(this Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO ToRichDTO(this Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO ToRichDTO(this Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO ToRichDTO(this Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.LogMessageRichDTO ToRichDTO(this Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.LogMessageRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.NamedLockRichDTO ToRichDTO(this Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.NamedLockRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO ToRichDTO(this Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportFilterRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportPropertyRichDTO ToRichDTO(this Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertyRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SentMessageRichDTO ToRichDTO(this Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SentMessageRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceRichDTO ToRichDTO(this Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO ToRichDTO(this Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantRichDTO ToRichDTO(this Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemRichDTO ToRichDTO(this Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO ToRichDTO(this Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionRichDTO ToRichDTO(this Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionRichDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectRichDTO ToRichDTO(this Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRichDTO(mappingService, domainObject);
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Attachment> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainer> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainerReference> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentTag> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscription> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectEvent> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectModification> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectNotification> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessageRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.LogMessageRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.LogMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Create.UserActionCreateModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Create.UserActionObjectModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.NamedLockRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.NamedLock> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.QueueProcessingState> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.Report> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertyRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SentMessageRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SentMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Sequence> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SequenceCreateModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SequenceRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstant> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstantRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystem> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystemRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserAction> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> ToRichDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserActionObject> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject, mappingService));
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.LogMessageSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.LogMessageSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.NamedLockSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.NamedLockSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SentMessageSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SentMessageSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionSimpleDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO ToSimpleDTO(this Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO(mappingService, domainObject);
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Attachment> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainer> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentContainerReference> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentTag> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscription> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectEvent> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectModification> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainObjectNotification> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ExceptionMessageRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.LogMessageSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.LogMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Create.UserActionCreateModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Create.UserActionObjectModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.NamedLockSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.NamedLock> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.QueueProcessingState> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.Report> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SentMessageSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SentMessage> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Sequence> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SequenceCreateModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SequenceRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstant> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstantRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystem> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystemRootFilterModel> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserAction> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO> ToSimpleDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.UserActionObject> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject, mappingService));
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentVisualDTO ToVisualDTO(this Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO ToVisualDTO(this Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO ToVisualDTO(this Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeVisualDTO ToVisualDTO(this Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO ToVisualDTO(this Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceVisualDTO ToVisualDTO(this Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SequenceVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantVisualDTO ToVisualDTO(this Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantVisualDTO(mappingService, domainObject);
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemVisualDTO ToVisualDTO(this Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemVisualDTO(mappingService, domainObject);
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Attachment> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.AttachmentTag> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SequenceVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Sequence> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.SystemConstantVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.SystemConstant> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
        
        public static System.Collections.Generic.List<Framework.Configuration.Generated.DTO.TargetSystemVisualDTO> ToVisualDTOList(this System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.TargetSystem> domainObjects, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService mappingService)
        {
            return Framework.Core.EnumerableExtensions.ToList(domainObjects, domainObject => Framework.Configuration.Generated.DTO.LambdaHelper.ToVisualDTO(domainObject, mappingService));
        }
    }
    #endregion
    
    public partial interface IConfigurationDTOMappingService : Framework.DomainDriven.IDTOMappingService<Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO mappingObject);
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject);
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO mappingObject);
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject);
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO mappingObject);
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject);
        
        void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO mappingObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO mappingObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO mappingObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject);
        
        void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO mappingObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO mappingObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO mappingObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject);
        
        void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject);
        
        void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentVisualDTO mappingObject);
        
        void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentVisualDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject);
        
        void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentSimpleDTO mappingObject);
        
        void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject);
        
        void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentFullDTO mappingObject);
        
        void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentFullDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject);
        
        void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentRichDTO mappingObject);
        
        void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentRichDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject);
        
        void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject);
        
        void MapAttachmentContainer(Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO mappingObject);
        
        void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject);
        
        void MapAttachmentContainer(Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO mappingObject);
        
        void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject);
        
        void MapAttachmentContainer(Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO mappingObject);
        
        void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject);
        
        void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO mappingObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO mappingObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO mappingObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject);
        
        void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject);
        
        void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO mappingObject);
        
        void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject);
        
        void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO mappingObject);
        
        void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject);
        
        void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagFullDTO mappingObject);
        
        void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject);
        
        void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagRichDTO mappingObject);
        
        void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject);
        
        void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject);
        
        void MapAuditPersistentDomainObjectBase(Framework.Configuration.Domain.AuditPersistentDomainObjectBase domainObject, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO mappingObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO mappingObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO mappingObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO mappingObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject);
        
        void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO mappingObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO mappingObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO mappingObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject);
        
        void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject);
        
        void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO mappingObject);
        
        void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject);
        
        void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO mappingObject);
        
        void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject);
        
        void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsFullDTO mappingObject);
        
        void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject);
        
        void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsRichDTO mappingObject);
        
        void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject);
        
        void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject);
        
        void MapControlSettingsParam(Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO mappingObject);
        
        void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject);
        
        void MapControlSettingsParam(Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO mappingObject);
        
        void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject);
        
        void MapControlSettingsParam(Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO mappingObject);
        
        void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject);
        
        void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO mappingObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO mappingObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO mappingObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject);
        
        void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject);
        
        void MapDomainObjectBase(Framework.Configuration.Domain.DomainObjectBase domainObject, Framework.Configuration.Generated.DTO.BaseAbstractDTO mappingObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO mappingObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO mappingObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO mappingObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject);
        
        void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject);
        
        void MapDomainObjectModification(Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO mappingObject);
        
        void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject);
        
        void MapDomainObjectModification(Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO mappingObject);
        
        void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject);
        
        void MapDomainObjectModification(Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO mappingObject);
        
        void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject);
        
        void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO mappingObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO mappingObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO mappingObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject);
        
        void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject);
        
        void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeVisualDTO mappingObject);
        
        void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeVisualDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject);
        
        void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO mappingObject);
        
        void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject);
        
        void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeFullDTO mappingObject);
        
        void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeFullDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject);
        
        void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeRichDTO mappingObject);
        
        void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeRichDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject);
        
        void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO mappingObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO mappingObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO mappingObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject);
        
        void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO mappingObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO mappingObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO mappingObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO mappingObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject);
        
        void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO mappingObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO mappingObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO mappingObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject);
        
        void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject);
        
        void MapExceptionMessage(Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO mappingObject);
        
        void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject);
        
        void MapExceptionMessage(Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO mappingObject);
        
        void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject);
        
        void MapExceptionMessage(Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO mappingObject);
        
        void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject);
        
        void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO mappingObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO mappingObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO mappingObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject);
        
        void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject);
        
        void MapLogMessage(Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.LogMessageSimpleDTO mappingObject);
        
        void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject);
        
        void MapLogMessage(Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.LogMessageFullDTO mappingObject);
        
        void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageFullDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject);
        
        void MapLogMessage(Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.LogMessageRichDTO mappingObject);
        
        void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageRichDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject);
        
        void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject);
        
        void MapNamedLock(Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.NamedLockSimpleDTO mappingObject);
        
        void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject);
        
        void MapNamedLock(Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.NamedLockFullDTO mappingObject);
        
        void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockFullDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject);
        
        void MapNamedLock(Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.NamedLockRichDTO mappingObject);
        
        void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockRichDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject);
        
        void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject);
        
        void MapPersistentDomainObjectBase(Framework.Configuration.Domain.PersistentDomainObjectBase domainObject, Framework.Configuration.Generated.DTO.BasePersistentDTO mappingObject);
        
        void MapQueueProcessingState(Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO mappingObject);
        
        void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject);
        
        void MapQueueProcessingState(Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO mappingObject);
        
        void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject);
        
        void MapQueueProcessingState(Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO mappingObject);
        
        void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject);
        
        void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject);
        
        void MapReport(Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.ReportSimpleDTO mappingObject);
        
        void MapReport(Framework.Configuration.Generated.DTO.ReportSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject);
        
        void MapReport(Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.ReportFullDTO mappingObject);
        
        void MapReport(Framework.Configuration.Generated.DTO.ReportFullDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject);
        
        void MapReport(Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.ReportRichDTO mappingObject);
        
        void MapReport(Framework.Configuration.Generated.DTO.ReportRichDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject);
        
        void MapReport(Framework.Configuration.Generated.DTO.ReportStrictDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject);
        
        void MapReportFilter(Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO mappingObject);
        
        void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject);
        
        void MapReportFilter(Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.ReportFilterFullDTO mappingObject);
        
        void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterFullDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject);
        
        void MapReportFilter(Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.ReportFilterRichDTO mappingObject);
        
        void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterRichDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject);
        
        void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject);
        
        void MapReportGenerationModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO mappingObject);
        
        void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject);
        
        void MapReportGenerationModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO mappingObject);
        
        void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject);
        
        void MapReportGenerationModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO mappingObject);
        
        void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject);
        
        void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO mappingObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO mappingObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO mappingObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject);
        
        void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject);
        
        void MapReportGenerationValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO mappingObject);
        
        void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject);
        
        void MapReportGenerationValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO mappingObject);
        
        void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject);
        
        void MapReportGenerationValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO mappingObject);
        
        void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject);
        
        void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject);
        
        void MapReportParameter(Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO mappingObject);
        
        void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject);
        
        void MapReportParameter(Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.ReportParameterFullDTO mappingObject);
        
        void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterFullDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject);
        
        void MapReportParameter(Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.ReportParameterRichDTO mappingObject);
        
        void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterRichDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject);
        
        void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject);
        
        void MapReportParameterValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO mappingObject);
        
        void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject);
        
        void MapReportParameterValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO mappingObject);
        
        void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject);
        
        void MapReportParameterValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO mappingObject);
        
        void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject);
        
        void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject);
        
        void MapReportProperty(Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO mappingObject);
        
        void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject);
        
        void MapReportProperty(Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.ReportPropertyFullDTO mappingObject);
        
        void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyFullDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject);
        
        void MapReportProperty(Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.ReportPropertyRichDTO mappingObject);
        
        void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject);
        
        void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject);
        
        void MapSentMessage(Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.SentMessageSimpleDTO mappingObject);
        
        void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject);
        
        void MapSentMessage(Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.SentMessageFullDTO mappingObject);
        
        void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageFullDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject);
        
        void MapSentMessage(Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.SentMessageRichDTO mappingObject);
        
        void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageRichDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject);
        
        void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject);
        
        void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceVisualDTO mappingObject);
        
        void MapSequence(Framework.Configuration.Generated.DTO.SequenceVisualDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject);
        
        void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceSimpleDTO mappingObject);
        
        void MapSequence(Framework.Configuration.Generated.DTO.SequenceSimpleDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject);
        
        void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceFullDTO mappingObject);
        
        void MapSequence(Framework.Configuration.Generated.DTO.SequenceFullDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject);
        
        void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceRichDTO mappingObject);
        
        void MapSequence(Framework.Configuration.Generated.DTO.SequenceRichDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject);
        
        void MapSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO mappingObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO mappingObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO mappingObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject);
        
        void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO mappingObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO mappingObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO mappingObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject);
        
        void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject);
        
        void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantVisualDTO mappingObject);
        
        void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantVisualDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject);
        
        void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO mappingObject);
        
        void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject);
        
        void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantFullDTO mappingObject);
        
        void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantFullDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject);
        
        void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantRichDTO mappingObject);
        
        void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantRichDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject);
        
        void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO mappingObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO mappingObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO mappingObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject);
        
        void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject);
        
        void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemVisualDTO mappingObject);
        
        void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemVisualDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject);
        
        void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO mappingObject);
        
        void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject);
        
        void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemFullDTO mappingObject);
        
        void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemFullDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject);
        
        void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemRichDTO mappingObject);
        
        void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemRichDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject);
        
        void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO mappingObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO mappingObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO mappingObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject);
        
        void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject);
        
        void MapUserAction(Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.UserActionSimpleDTO mappingObject);
        
        void MapUserAction(Framework.Configuration.Generated.DTO.UserActionSimpleDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject);
        
        void MapUserAction(Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.UserActionFullDTO mappingObject);
        
        void MapUserAction(Framework.Configuration.Generated.DTO.UserActionFullDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject);
        
        void MapUserAction(Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.UserActionRichDTO mappingObject);
        
        void MapUserAction(Framework.Configuration.Generated.DTO.UserActionRichDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject);
        
        void MapUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO mappingObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO mappingObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO mappingObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject);
        
        void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject);
        
        void MapUserActionObject(Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO mappingObject);
        
        void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject);
        
        void MapUserActionObject(Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.UserActionObjectFullDTO mappingObject);
        
        void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectFullDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject);
        
        void MapUserActionObject(Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRichDTO mappingObject);
        
        void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject);
        
        void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO mappingObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO mappingObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO mappingObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject);
        
        void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO mappingObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO mappingObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO mappingObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject);
        
        void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject);
        
        Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO accessableBusinessRoleReportRightIdentityDTO);
        
        Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO accessableBusinessRoleReportRightSimpleDTO);
        
        Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO accessableBusinessRoleReportRightRichDTO);
        
        Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO accessableBusinessRoleReportRightStrictDTO);
        
        Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO accessableBusinessRoleReportRightStrictDTO, Framework.Configuration.Domain.Reports.Report master);
        
        Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO accessableOperationReportRightIdentityDTO);
        
        Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO accessableOperationReportRightSimpleDTO);
        
        Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO accessableOperationReportRightRichDTO);
        
        Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO accessableOperationReportRightStrictDTO);
        
        Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO accessableOperationReportRightStrictDTO, Framework.Configuration.Domain.Reports.Report master);
        
        Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO accessablePrincipalReportRightIdentityDTO);
        
        Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO accessablePrincipalReportRightSimpleDTO);
        
        Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO accessablePrincipalReportRightRichDTO);
        
        Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO accessablePrincipalReportRightStrictDTO);
        
        Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO accessablePrincipalReportRightStrictDTO, Framework.Configuration.Domain.Reports.Report master);
        
        Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO attachmentIdentityDTO);
        
        Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO attachmentSimpleDTO);
        
        Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentRichDTO attachmentRichDTO);
        
        Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO attachmentStrictDTO);
        
        Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO attachmentStrictDTO, Framework.Configuration.Domain.AttachmentContainer master);
        
        Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO attachmentContainerIdentityDTO);
        
        Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO attachmentContainerSimpleDTO);
        
        Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO attachmentContainerRichDTO);
        
        Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO attachmentContainerRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO attachmentContainerStrictDTO);
        
        Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO attachmentContainerStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.AttachmentContainerReference ToAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO attachmentContainerReferenceRichDTO);
        
        Framework.Configuration.Domain.AttachmentContainerReference ToAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO attachmentContainerReferenceStrictDTO);
        
        Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO attachmentTagIdentityDTO);
        
        Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO attachmentTagSimpleDTO);
        
        Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO attachmentTagRichDTO);
        
        Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO attachmentTagStrictDTO);
        
        Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO attachmentTagStrictDTO, Framework.Configuration.Domain.Attachment master);
        
        Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO codeFirstSubscriptionIdentityDTO);
        
        Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO codeFirstSubscriptionSimpleDTO);
        
        Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO codeFirstSubscriptionRichDTO);
        
        Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO codeFirstSubscriptionStrictDTO);
        
        Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel ToCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO codeFirstSubscriptionRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel ToCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO codeFirstSubscriptionRootFilterModelStrictDTO);
        
        Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO controlSettingsIdentityDTO);
        
        Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO controlSettingsSimpleDTO);
        
        Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO controlSettingsRichDTO);
        
        Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO controlSettingsStrictDTO);
        
        Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO controlSettingsStrictDTO, Framework.Configuration.Domain.ControlSettings master);
        
        Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO controlSettingsParamIdentityDTO);
        
        Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO controlSettingsParamSimpleDTO);
        
        Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO controlSettingsParamRichDTO);
        
        Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO controlSettingsParamStrictDTO);
        
        Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO controlSettingsParamStrictDTO, Framework.Configuration.Domain.ControlSettings master);
        
        Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO controlSettingsParamValueIdentityDTO);
        
        Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO controlSettingsParamValueSimpleDTO);
        
        Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO controlSettingsParamValueRichDTO);
        
        Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO controlSettingsParamValueStrictDTO);
        
        Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO controlSettingsParamValueStrictDTO, Framework.Configuration.Domain.ControlSettingsParam master);
        
        Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO domainObjectEventIdentityDTO);
        
        Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO domainObjectEventSimpleDTO);
        
        Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO domainObjectEventRichDTO);
        
        Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO domainObjectEventRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO domainObjectEventStrictDTO);
        
        Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO domainObjectEventStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO domainObjectModificationIdentityDTO);
        
        Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO domainObjectModificationSimpleDTO);
        
        Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO domainObjectModificationRichDTO);
        
        Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO domainObjectModificationRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO domainObjectModificationStrictDTO);
        
        Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO domainObjectModificationStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO domainObjectNotificationIdentityDTO);
        
        Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO domainObjectNotificationSimpleDTO);
        
        Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO domainObjectNotificationRichDTO);
        
        Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO domainObjectNotificationRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO domainObjectNotificationStrictDTO);
        
        Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO domainObjectNotificationStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO domainTypeIdentityDTO);
        
        Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO domainTypeSimpleDTO);
        
        Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeRichDTO domainTypeRichDTO);
        
        Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO domainTypeStrictDTO);
        
        Framework.Configuration.Domain.DomainTypeEventModel ToDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO domainTypeEventModelRichDTO);
        
        Framework.Configuration.Domain.DomainTypeEventModel ToDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO domainTypeEventModelStrictDTO);
        
        Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO domainTypeEventOperationIdentityDTO);
        
        Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO domainTypeEventOperationSimpleDTO);
        
        Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO domainTypeEventOperationRichDTO);
        
        Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO domainTypeEventOperationStrictDTO);
        
        Framework.Configuration.Domain.DomainTypeRootFilterModel ToDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO domainTypeRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.DomainTypeRootFilterModel ToDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO domainTypeRootFilterModelStrictDTO);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO exceptionMessageIdentityDTO);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO exceptionMessageSimpleDTO);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO exceptionMessageRichDTO);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO exceptionMessageRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO exceptionMessageStrictDTO);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO exceptionMessageStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO exceptionMessageStrictDTO, Framework.Configuration.Domain.ExceptionMessage master);
        
        Framework.Configuration.Domain.ExceptionMessageRootFilterModel ToExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO exceptionMessageRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.ExceptionMessageRootFilterModel ToExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO exceptionMessageRootFilterModelStrictDTO);
        
        Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO logMessageIdentityDTO);
        
        Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO logMessageSimpleDTO);
        
        Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageRichDTO logMessageRichDTO);
        
        Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageRichDTO logMessageRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO logMessageStrictDTO);
        
        Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO logMessageStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO namedLockIdentityDTO);
        
        Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO namedLockSimpleDTO);
        
        Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockRichDTO namedLockRichDTO);
        
        Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockRichDTO namedLockRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO namedLockStrictDTO);
        
        Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO namedLockStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.QueueProcessingState ToQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO queueProcessingStateRichDTO);
        
        Framework.Configuration.Domain.QueueProcessingState ToQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO queueProcessingStateStrictDTO);
        
        Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportIdentityDTO reportIdentityDTO);
        
        Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportSimpleDTO reportSimpleDTO);
        
        Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportRichDTO reportRichDTO);
        
        Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportRichDTO reportRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportStrictDTO reportStrictDTO);
        
        Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportStrictDTO reportStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO reportFilterIdentityDTO);
        
        Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO reportFilterSimpleDTO);
        
        Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterRichDTO reportFilterRichDTO);
        
        Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO reportFilterStrictDTO);
        
        Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO reportFilterStrictDTO, Framework.Configuration.Domain.Reports.Report master);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel ToReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO reportGenerationModelRichDTO);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel ToReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO reportGenerationModelStrictDTO);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel ToReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO reportGenerationRequestModelRichDTO);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel ToReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO reportGenerationRequestModelStrictDTO);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue ToReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO reportGenerationValueRichDTO);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue ToReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO reportGenerationValueStrictDTO);
        
        Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO reportParameterIdentityDTO);
        
        Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO reportParameterSimpleDTO);
        
        Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterRichDTO reportParameterRichDTO);
        
        Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO reportParameterStrictDTO);
        
        Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO reportParameterStrictDTO, Framework.Configuration.Domain.Reports.Report master);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue ToReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO reportParameterValueRichDTO);
        
        Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue ToReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO reportParameterValueStrictDTO);
        
        Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO reportPropertyIdentityDTO);
        
        Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO reportPropertySimpleDTO);
        
        Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO reportPropertyRichDTO);
        
        Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO reportPropertyStrictDTO);
        
        Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO reportPropertyStrictDTO, Framework.Configuration.Domain.Reports.Report master);
        
        Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO sentMessageIdentityDTO);
        
        Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO sentMessageSimpleDTO);
        
        Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageRichDTO sentMessageRichDTO);
        
        Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO sentMessageStrictDTO);
        
        Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceIdentityDTO sequenceIdentityDTO);
        
        Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceSimpleDTO sequenceSimpleDTO);
        
        Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceRichDTO sequenceRichDTO);
        
        Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceRichDTO sequenceRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO sequenceStrictDTO);
        
        Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO sequenceStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.SequenceCreateModel ToSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO sequenceCreateModelRichDTO);
        
        Framework.Configuration.Domain.SequenceCreateModel ToSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO sequenceCreateModelStrictDTO);
        
        Framework.Configuration.Domain.SequenceRootFilterModel ToSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO sequenceRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.SequenceRootFilterModel ToSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO sequenceRootFilterModelStrictDTO);
        
        Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO systemConstantIdentityDTO);
        
        Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO systemConstantSimpleDTO);
        
        Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantRichDTO systemConstantRichDTO);
        
        Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantRichDTO systemConstantRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO systemConstantStrictDTO);
        
        Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO systemConstantStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.SystemConstantRootFilterModel ToSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO systemConstantRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.SystemConstantRootFilterModel ToSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO systemConstantRootFilterModelStrictDTO);
        
        Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO targetSystemIdentityDTO);
        
        Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO targetSystemSimpleDTO);
        
        Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemRichDTO targetSystemRichDTO);
        
        Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO targetSystemStrictDTO);
        
        Framework.Configuration.Domain.TargetSystemRootFilterModel ToTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO targetSystemRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.TargetSystemRootFilterModel ToTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO targetSystemRootFilterModelStrictDTO);
        
        Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionIdentityDTO userActionIdentityDTO);
        
        Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionSimpleDTO userActionSimpleDTO);
        
        Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionRichDTO userActionRichDTO);
        
        Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionRichDTO userActionRichDTO, bool allowCreate);
        
        Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO userActionStrictDTO);
        
        Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO userActionStrictDTO, bool allowCreate);
        
        Framework.Configuration.Domain.Models.Create.UserActionCreateModel ToUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO userActionCreateModelRichDTO);
        
        Framework.Configuration.Domain.Models.Create.UserActionCreateModel ToUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO userActionCreateModelStrictDTO);
        
        Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO userActionObjectIdentityDTO);
        
        Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO userActionObjectSimpleDTO);
        
        Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO userActionObjectRichDTO);
        
        Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO userActionObjectStrictDTO);
        
        Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO userActionObjectStrictDTO, Framework.Configuration.Domain.UserAction master);
        
        Framework.Configuration.Domain.Models.Create.UserActionObjectModel ToUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO userActionObjectModelRichDTO);
        
        Framework.Configuration.Domain.Models.Create.UserActionObjectModel ToUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO userActionObjectModelStrictDTO);
        
        Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel ToUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO userActionObjectRootFilterModelRichDTO);
        
        Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel ToUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO userActionObjectRootFilterModelStrictDTO);
    }
    
    public abstract partial class ConfigurationServerPrimitiveDTOMappingServiceBase : Framework.DomainDriven.DTOMappingService<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.AuditPersistentDomainObjectBase, System.Guid, long>, Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService
    {
        
        protected ConfigurationServerPrimitiveDTOMappingServiceBase(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO mappingObject)
        {
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightFullDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO mappingObject)
        {
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
        }
        
        public virtual void MapAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight domainObject)
        {
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO mappingObject)
        {
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightFullDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject, Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO mappingObject)
        {
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
        }
        
        public virtual void MapAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO mappingObject, Framework.Configuration.Domain.Reports.AccessableOperationReportRight domainObject)
        {
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO mappingObject)
        {
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightFullDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject, Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO mappingObject)
        {
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
        }
        
        public virtual void MapAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO mappingObject, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight domainObject)
        {
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentVisualDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentSimpleDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Container, null))
            {
                mappingObject.Container = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Container, this);
            }
            else
            {
                mappingObject.Container = null;
            }
        }
        
        public virtual void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentFullDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject)
        {
        }
        
        public virtual void MapAttachment(Framework.Configuration.Domain.Attachment domainObject, Framework.Configuration.Generated.DTO.AttachmentRichDTO mappingObject)
        {
            mappingObject.Content = domainObject.Content;
            mappingObject.Tags = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Tags, this);
        }
        
        public virtual void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentRichDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject)
        {
            domainObject.Content = mappingObject.Content;
            if (!object.ReferenceEquals(mappingObject.Tags, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO, Framework.Configuration.Domain.AttachmentTag>(detailDTO => this.ToAttachmentTag(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Attachment, Framework.Configuration.Domain.AttachmentTag>(domainObject, detail)).Map(mappingObject.Tags, domainObject.Tags);
            }
        }
        
        public virtual void MapAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO mappingObject, Framework.Configuration.Domain.Attachment domainObject)
        {
            domainObject.Content = mappingObject.Content;
            domainObject.Name = mappingObject.Name;
            if (!object.ReferenceEquals(mappingObject.Tags, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO, Framework.Configuration.Domain.AttachmentTag>(detailDTO => this.ToAttachmentTag(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Attachment, Framework.Configuration.Domain.AttachmentTag>(domainObject, detail)).Map(mappingObject.Tags, domainObject.Tags);
            }
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO mappingObject)
        {
            mappingObject.ObjectId = domainObject.ObjectId;
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            domainObject.ObjectId = mappingObject.ObjectId;
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.DomainType, null))
            {
                mappingObject.DomainType = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.DomainType, this);
            }
            else
            {
                mappingObject.DomainType = null;
            }
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerFullDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Domain.AttachmentContainer domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO mappingObject)
        {
            mappingObject.Attachments = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Attachments, this);
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Attachments, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AttachmentRichDTO, Framework.Configuration.Domain.Attachment>(detailDTO => this.ToAttachment(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.AttachmentContainer, Framework.Configuration.Domain.Attachment>(domainObject, detail)).Map(mappingObject.Attachments, domainObject.Attachments);
            }
        }
        
        public virtual void MapAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO mappingObject, Framework.Configuration.Domain.AttachmentContainer domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Attachments, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AttachmentStrictDTO, Framework.Configuration.Domain.Attachment>(detailDTO => this.ToAttachment(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.AttachmentContainer, Framework.Configuration.Domain.Attachment>(domainObject, detail)).Map(mappingObject.Attachments, domainObject.Attachments);
            }
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
            domainObject.ObjectId = mappingObject.ObjectId;
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO mappingObject)
        {
            mappingObject.ObjectId = domainObject.ObjectId;
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            domainObject.ObjectId = mappingObject.ObjectId;
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.DomainType, null))
            {
                mappingObject.DomainType = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.DomainType, this);
            }
            else
            {
                mappingObject.DomainType = null;
            }
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Domain.AttachmentContainerReference domainObject, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO mappingObject)
        {
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
        }
        
        public virtual void MapAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO mappingObject, Framework.Configuration.Domain.AttachmentContainerReference domainObject)
        {
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
            domainObject.ObjectId = mappingObject.ObjectId;
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagVisualDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Attachment, null))
            {
                mappingObject.Attachment = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Attachment, this);
            }
            else
            {
                mappingObject.Attachment = null;
            }
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Domain.AttachmentTag domainObject, Framework.Configuration.Generated.DTO.AttachmentTagRichDTO mappingObject)
        {
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
        }
        
        public virtual void MapAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO mappingObject, Framework.Configuration.Domain.AttachmentTag domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapAuditPersistentDomainObjectBase(Framework.Configuration.Domain.AuditPersistentDomainObjectBase domainObject, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO mappingObject)
        {
            mappingObject.Active = domainObject.Active;
            mappingObject.CreateDate = domainObject.CreateDate;
            mappingObject.CreatedBy = domainObject.CreatedBy;
            mappingObject.ModifiedBy = domainObject.ModifiedBy;
            mappingObject.ModifyDate = domainObject.ModifyDate;
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO mappingObject)
        {
            mappingObject.Code = domainObject.Code;
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.DomainType, null))
            {
                mappingObject.DomainType = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.DomainType, this);
            }
            else
            {
                mappingObject.DomainType = null;
            }
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Domain.CodeFirstSubscription domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO mappingObject)
        {
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
        }
        
        public virtual void MapCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscription domainObject)
        {
            domainObject.Active = mappingObject.Active;
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
        }
        
        public virtual void MapCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel domainObject)
        {
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsVisualDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO mappingObject)
        {
            mappingObject.AccountName = domainObject.AccountName;
            mappingObject.Name = domainObject.Name;
            mappingObject.Type = domainObject.Type;
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.Type = mappingObject.Type;
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Parent, null))
            {
                mappingObject.Parent = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Parent, this);
            }
            else
            {
                mappingObject.Parent = null;
            }
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            if (!object.Equals(mappingObject.Parent, default(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO)))
            {
                domainObject.Parent = this.ToControlSettings(mappingObject.Parent);
            }
            else
            {
                domainObject.Parent = null;
            }
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Domain.ControlSettings domainObject, Framework.Configuration.Generated.DTO.ControlSettingsRichDTO mappingObject)
        {
            mappingObject.Children = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Children, this);
            mappingObject.ControlSettingsParams = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.ControlSettingsParams, this);
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.ControlSettingsParams, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO, Framework.Configuration.Domain.ControlSettingsParam>(detailDTO => this.ToControlSettingsParam(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.ControlSettings, Framework.Configuration.Domain.ControlSettingsParam>(domainObject, detail)).Map(mappingObject.ControlSettingsParams, domainObject.ControlSettingsParams);
            }
        }
        
        public virtual void MapControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO mappingObject, Framework.Configuration.Domain.ControlSettings domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Children, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO, Framework.Configuration.Domain.ControlSettings>(detailDTO => this.ToControlSettings(detailDTO.Identity), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.ControlSettings, Framework.Configuration.Domain.ControlSettings>(domainObject, detail)).Map(mappingObject.Children, domainObject.Children);
            }
            if (!object.ReferenceEquals(mappingObject.ControlSettingsParams, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO, Framework.Configuration.Domain.ControlSettingsParam>(detailDTO => this.ToControlSettingsParam(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.ControlSettings, Framework.Configuration.Domain.ControlSettingsParam>(domainObject, detail)).Map(mappingObject.ControlSettingsParams, domainObject.ControlSettingsParams);
            }
            domainObject.Name = mappingObject.Name;
            if (!object.Equals(mappingObject.Parent, default(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO)))
            {
                domainObject.Parent = this.ToControlSettings(mappingObject.Parent);
            }
            else
            {
                domainObject.Parent = null;
            }
            domainObject.Type = mappingObject.Type;
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO mappingObject)
        {
            mappingObject.Type = domainObject.Type;
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            domainObject.Type = mappingObject.Type;
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.ControlSettings, null))
            {
                mappingObject.ControlSettings = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.ControlSettings, this);
            }
            else
            {
                mappingObject.ControlSettings = null;
            }
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Domain.ControlSettingsParam domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO mappingObject)
        {
            mappingObject.ControlSettingsParamValues = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.ControlSettingsParamValues, this);
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.ControlSettingsParamValues, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO, Framework.Configuration.Domain.ControlSettingsParamValue>(detailDTO => this.ToControlSettingsParamValue(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.ControlSettingsParam, Framework.Configuration.Domain.ControlSettingsParamValue>(domainObject, detail)).Map(mappingObject.ControlSettingsParamValues, domainObject.ControlSettingsParamValues);
            }
        }
        
        public virtual void MapControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParam domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.ControlSettingsParamValues, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO, Framework.Configuration.Domain.ControlSettingsParamValue>(detailDTO => this.ToControlSettingsParamValue(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.ControlSettingsParam, Framework.Configuration.Domain.ControlSettingsParamValue>(domainObject, detail)).Map(mappingObject.ControlSettingsParamValues, domainObject.ControlSettingsParamValues);
            }
            domainObject.Type = mappingObject.Type;
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO mappingObject)
        {
            mappingObject.Culture = domainObject.Culture;
            mappingObject.Value = domainObject.Value;
            mappingObject.ValueTypeName = domainObject.ValueTypeName;
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            domainObject.Culture = mappingObject.Culture;
            domainObject.Value = mappingObject.Value;
            domainObject.ValueTypeName = mappingObject.ValueTypeName;
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.ControlSettingsParam, null))
            {
                mappingObject.ControlSettingsParam = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.ControlSettingsParam, this);
            }
            else
            {
                mappingObject.ControlSettingsParam = null;
            }
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Domain.ControlSettingsParamValue domainObject, Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO mappingObject)
        {
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
        }
        
        public virtual void MapControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO mappingObject, Framework.Configuration.Domain.ControlSettingsParamValue domainObject)
        {
            domainObject.Culture = mappingObject.Culture;
            domainObject.Value = mappingObject.Value;
            domainObject.ValueTypeName = mappingObject.ValueTypeName;
        }
        
        public virtual void MapDomainObjectBase(Framework.Configuration.Domain.DomainObjectBase domainObject, Framework.Configuration.Generated.DTO.BaseAbstractDTO mappingObject)
        {
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO mappingObject)
        {
            mappingObject.DomainObjectId = domainObject.DomainObjectId;
            mappingObject.HostName = domainObject.HostName;
            mappingObject.ProcessDate = domainObject.ProcessDate;
            mappingObject.QueueTag = domainObject.QueueTag;
            mappingObject.Revision = domainObject.Revision;
            mappingObject.SerializeData = domainObject.SerializeData;
            mappingObject.SerializeType = domainObject.SerializeType;
            mappingObject.Size = domainObject.Size;
            mappingObject.Status = domainObject.Status;
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            domainObject.DomainObjectId = mappingObject.DomainObjectId;
            domainObject.QueueTag = mappingObject.QueueTag;
            domainObject.Revision = mappingObject.Revision;
            domainObject.SerializeData = mappingObject.SerializeData;
            domainObject.SerializeType = mappingObject.SerializeType;
            domainObject.Size = mappingObject.Size;
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Operation, null))
            {
                mappingObject.Operation = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Operation, this);
            }
            else
            {
                mappingObject.Operation = null;
            }
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventFullDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            if (!object.Equals(mappingObject.Operation, default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO)))
            {
                domainObject.Operation = this.ToDomainTypeEventOperation(mappingObject.Operation);
            }
            else
            {
                domainObject.Operation = null;
            }
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Domain.DomainObjectEvent domainObject, Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO mappingObject)
        {
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
        }
        
        public virtual void MapDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO mappingObject, Framework.Configuration.Domain.DomainObjectEvent domainObject)
        {
            domainObject.DomainObjectId = mappingObject.DomainObjectId;
            if (!object.Equals(mappingObject.Operation, default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO)))
            {
                domainObject.Operation = this.ToDomainTypeEventOperation(mappingObject.Operation);
            }
            else
            {
                domainObject.Operation = null;
            }
            domainObject.QueueTag = mappingObject.QueueTag;
            domainObject.Revision = mappingObject.Revision;
            domainObject.SerializeData = mappingObject.SerializeData;
            domainObject.SerializeType = mappingObject.SerializeType;
            domainObject.Size = mappingObject.Size;
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO mappingObject)
        {
            mappingObject.DomainObjectId = domainObject.DomainObjectId;
            mappingObject.Processed = domainObject.Processed;
            mappingObject.Revision = domainObject.Revision;
            mappingObject.Type = domainObject.Type;
            mappingObject.Version = domainObject.Version;
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            domainObject.Version = this.VersionService.GetVersion(mappingObject.Version, domainObject);
            domainObject.DomainObjectId = mappingObject.DomainObjectId;
            domainObject.Processed = mappingObject.Processed;
            domainObject.Revision = mappingObject.Revision;
            domainObject.Type = mappingObject.Type;
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.DomainType, null))
            {
                mappingObject.DomainType = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.DomainType, this);
            }
            else
            {
                mappingObject.DomainType = null;
            }
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationFullDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Domain.DomainObjectModification domainObject, Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO mappingObject)
        {
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
        }
        
        public virtual void MapDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO mappingObject, Framework.Configuration.Domain.DomainObjectModification domainObject)
        {
            domainObject.Version = this.VersionService.GetVersion(mappingObject.Version, domainObject);
            domainObject.DomainObjectId = mappingObject.DomainObjectId;
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
            domainObject.Processed = mappingObject.Processed;
            domainObject.Revision = mappingObject.Revision;
            domainObject.Type = mappingObject.Type;
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO mappingObject)
        {
            mappingObject.HostName = domainObject.HostName;
            mappingObject.ProcessDate = domainObject.ProcessDate;
            mappingObject.SerializeData = domainObject.SerializeData;
            mappingObject.Size = domainObject.Size;
            mappingObject.Status = domainObject.Status;
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            domainObject.SerializeData = mappingObject.SerializeData;
            domainObject.Size = mappingObject.Size;
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO mappingObject)
        {
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationFullDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Domain.DomainObjectNotification domainObject, Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO mappingObject)
        {
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
        }
        
        public virtual void MapDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO mappingObject, Framework.Configuration.Domain.DomainObjectNotification domainObject)
        {
            domainObject.SerializeData = mappingObject.SerializeData;
            domainObject.Size = mappingObject.Size;
        }
        
        public virtual void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeVisualDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject)
        {
        }
        
        public virtual void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO mappingObject)
        {
            mappingObject.FullTypeName = domainObject.FullTypeName;
            mappingObject.HasSecurityAttachment = domainObject.HasSecurityAttachment;
            mappingObject.Name = domainObject.Name;
            mappingObject.NameSpace = domainObject.NameSpace;
        }
        
        public virtual void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject)
        {
        }
        
        public virtual void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.TargetSystem, null))
            {
                mappingObject.TargetSystem = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.TargetSystem, this);
            }
            else
            {
                mappingObject.TargetSystem = null;
            }
        }
        
        public virtual void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeFullDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject)
        {
        }
        
        public virtual void MapDomainType(Framework.Configuration.Domain.DomainType domainObject, Framework.Configuration.Generated.DTO.DomainTypeRichDTO mappingObject)
        {
            mappingObject.EventOperations = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.EventOperations, this);
        }
        
        public virtual void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeRichDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject)
        {
        }
        
        public virtual void MapDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO mappingObject, Framework.Configuration.Domain.DomainType domainObject)
        {
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO mappingObject)
        {
            mappingObject.Revision = domainObject.Revision;
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            domainObject.Revision = mappingObject.Revision;
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Operation, null))
            {
                mappingObject.Operation = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Operation, this);
            }
            else
            {
                mappingObject.Operation = null;
            }
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            if (!object.Equals(mappingObject.Operation, default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO)))
            {
                domainObject.Operation = this.ToDomainTypeEventOperation(mappingObject.Operation);
            }
            else
            {
                domainObject.Operation = null;
            }
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Domain.DomainTypeEventModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO mappingObject)
        {
            mappingObject.DomainObjectIdents = domainObject.DomainObjectIdents;
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            domainObject.DomainObjectIdents = mappingObject.DomainObjectIdents;
        }
        
        public virtual void MapDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventModel domainObject)
        {
            domainObject.DomainObjectIdents = mappingObject.DomainObjectIdents;
            if (!object.Equals(mappingObject.Operation, default(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO)))
            {
                domainObject.Operation = this.ToDomainTypeEventOperation(mappingObject.Operation);
            }
            else
            {
                domainObject.Operation = null;
            }
            domainObject.Revision = mappingObject.Revision;
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationVisualDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.DomainType, null))
            {
                mappingObject.DomainType = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.DomainType, this);
            }
            else
            {
                mappingObject.DomainType = null;
            }
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Domain.DomainTypeEventOperation domainObject, Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO mappingObject)
        {
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
        }
        
        public virtual void MapDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO mappingObject, Framework.Configuration.Domain.DomainTypeEventOperation domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.TargetSystem, null))
            {
                mappingObject.TargetSystem = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.TargetSystem, this);
            }
            else
            {
                mappingObject.TargetSystem = null;
            }
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
            if (!object.Equals(mappingObject.TargetSystem, default(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO)))
            {
                domainObject.TargetSystem = this.ToTargetSystem(mappingObject.TargetSystem);
            }
            else
            {
                domainObject.TargetSystem = null;
            }
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
        }
        
        public virtual void MapDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.DomainTypeRootFilterModel domainObject)
        {
            if (!object.Equals(mappingObject.TargetSystem, default(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO)))
            {
                domainObject.TargetSystem = this.ToTargetSystem(mappingObject.TargetSystem);
            }
            else
            {
                domainObject.TargetSystem = null;
            }
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO mappingObject)
        {
            mappingObject.IsClient = domainObject.IsClient;
            mappingObject.IsRoot = domainObject.IsRoot;
            mappingObject.Message = domainObject.Message;
            mappingObject.MessageType = domainObject.MessageType;
            mappingObject.StackTrace = domainObject.StackTrace;
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            domainObject.Message = mappingObject.Message;
            domainObject.MessageType = mappingObject.MessageType;
            domainObject.StackTrace = mappingObject.StackTrace;
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO mappingObject)
        {
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Domain.ExceptionMessage domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.InnerException, null))
            {
                mappingObject.InnerException = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTO(domainObject.InnerException, this);
            }
            else
            {
                mappingObject.InnerException = null;
            }
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            if (!object.Equals(mappingObject.InnerException, default(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO)))
            {
                domainObject.InnerException = this.ToExceptionMessage(mappingObject.InnerException, domainObject);
            }
            else
            {
                domainObject.InnerException = null;
            }
        }
        
        public virtual void MapExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO mappingObject, Framework.Configuration.Domain.ExceptionMessage domainObject)
        {
            if (!object.Equals(mappingObject.InnerException, default(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO)))
            {
                domainObject.InnerException = this.ToExceptionMessage(mappingObject.InnerException, domainObject);
            }
            else
            {
                domainObject.InnerException = null;
            }
            domainObject.Message = mappingObject.Message;
            domainObject.MessageType = mappingObject.MessageType;
            domainObject.StackTrace = mappingObject.StackTrace;
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO mappingObject)
        {
            mappingObject.IsRoot = domainObject.IsRoot;
            mappingObject.Period = domainObject.Period;
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
            domainObject.IsRoot = mappingObject.IsRoot;
            domainObject.Period = mappingObject.Period;
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
        }
        
        public virtual void MapExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.ExceptionMessageRootFilterModel domainObject)
        {
            domainObject.IsRoot = mappingObject.IsRoot;
            domainObject.Period = mappingObject.Period;
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.LogMessageSimpleDTO mappingObject)
        {
            mappingObject.Action = domainObject.Action;
            mappingObject.InputMessage = domainObject.InputMessage;
            mappingObject.OutputMessage = domainObject.OutputMessage;
            mappingObject.Period = domainObject.Period;
            mappingObject.UserName = domainObject.UserName;
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject)
        {
            domainObject.Action = mappingObject.Action;
            domainObject.InputMessage = mappingObject.InputMessage;
            domainObject.OutputMessage = mappingObject.OutputMessage;
            domainObject.Period = mappingObject.Period;
            domainObject.UserName = mappingObject.UserName;
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.LogMessageFullDTO mappingObject)
        {
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageFullDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject)
        {
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Domain.LogMessage domainObject, Framework.Configuration.Generated.DTO.LogMessageRichDTO mappingObject)
        {
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageRichDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject)
        {
        }
        
        public virtual void MapLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO mappingObject, Framework.Configuration.Domain.LogMessage domainObject)
        {
            domainObject.Action = mappingObject.Action;
            domainObject.InputMessage = mappingObject.InputMessage;
            domainObject.OutputMessage = mappingObject.OutputMessage;
            domainObject.Period = mappingObject.Period;
            domainObject.UserName = mappingObject.UserName;
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.NamedLockSimpleDTO mappingObject)
        {
            mappingObject.LockOperation = domainObject.LockOperation;
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject)
        {
            domainObject.LockOperation = mappingObject.LockOperation;
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.NamedLockFullDTO mappingObject)
        {
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockFullDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject)
        {
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Domain.NamedLock domainObject, Framework.Configuration.Generated.DTO.NamedLockRichDTO mappingObject)
        {
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockRichDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject)
        {
        }
        
        public virtual void MapNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO mappingObject, Framework.Configuration.Domain.NamedLock domainObject)
        {
            domainObject.LockOperation = mappingObject.LockOperation;
        }
        
        public virtual void MapPersistentDomainObjectBase(Framework.Configuration.Domain.PersistentDomainObjectBase domainObject, Framework.Configuration.Generated.DTO.BasePersistentDTO mappingObject)
        {
            mappingObject.Id = domainObject.Id;
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO mappingObject)
        {
            mappingObject.LastProcessedItemDateTime = domainObject.LastProcessedItemDateTime;
            mappingObject.UnprocessedCount = domainObject.UnprocessedCount;
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
            domainObject.LastProcessedItemDateTime = mappingObject.LastProcessedItemDateTime;
            domainObject.UnprocessedCount = mappingObject.UnprocessedCount;
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO mappingObject)
        {
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateFullDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Domain.QueueProcessingState domainObject, Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO mappingObject)
        {
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
        }
        
        public virtual void MapQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO mappingObject, Framework.Configuration.Domain.QueueProcessingState domainObject)
        {
            domainObject.LastProcessedItemDateTime = mappingObject.LastProcessedItemDateTime;
            domainObject.UnprocessedCount = mappingObject.UnprocessedCount;
        }
        
        public virtual void MapReport(Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.ReportSimpleDTO mappingObject)
        {
            mappingObject.Description = domainObject.Description;
            mappingObject.DomainTypeName = domainObject.DomainTypeName;
            mappingObject.Name = domainObject.Name;
            mappingObject.Owner = domainObject.Owner;
            mappingObject.ReportType = domainObject.ReportType;
            mappingObject.SecurityOperationCode = domainObject.SecurityOperationCode;
            mappingObject.SortBy = domainObject.SortBy;
            mappingObject.Version = domainObject.Version;
        }
        
        public virtual void MapReport(Framework.Configuration.Generated.DTO.ReportSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            domainObject.Version = this.VersionService.GetVersion(mappingObject.Version, domainObject);
            domainObject.Description = mappingObject.Description;
            domainObject.DomainTypeName = mappingObject.DomainTypeName;
            domainObject.Name = mappingObject.Name;
            domainObject.Owner = mappingObject.Owner;
            domainObject.ReportType = mappingObject.ReportType;
            domainObject.SecurityOperationCode = mappingObject.SecurityOperationCode;
        }
        
        public virtual void MapReport(Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.ReportFullDTO mappingObject)
        {
        }
        
        public virtual void MapReport(Framework.Configuration.Generated.DTO.ReportFullDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject)
        {
        }
        
        public virtual void MapReport(Framework.Configuration.Domain.Reports.Report domainObject, Framework.Configuration.Generated.DTO.ReportRichDTO mappingObject)
        {
            mappingObject.AccessableBusinessRoles = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.AccessableBusinessRoles, this);
            mappingObject.AccessableOperations = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.AccessableOperations, this);
            mappingObject.AccessablePrincipals = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.AccessablePrincipals, this);
            mappingObject.Filters = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Filters, this);
            mappingObject.Parameters = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Parameters, this);
            mappingObject.Properties = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Properties, this);
        }
        
        public virtual void MapReport(Framework.Configuration.Generated.DTO.ReportRichDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.AccessableBusinessRoles, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(detailDTO => this.ToAccessableBusinessRoleReportRight(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(domainObject, detail)).Map(mappingObject.AccessableBusinessRoles, domainObject.AccessableBusinessRoles);
            }
            if (!object.ReferenceEquals(mappingObject.AccessableOperations, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(detailDTO => this.ToAccessableOperationReportRight(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(domainObject, detail)).Map(mappingObject.AccessableOperations, domainObject.AccessableOperations);
            }
            if (!object.ReferenceEquals(mappingObject.AccessablePrincipals, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(detailDTO => this.ToAccessablePrincipalReportRight(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(domainObject, detail)).Map(mappingObject.AccessablePrincipals, domainObject.AccessablePrincipals);
            }
            if (!object.ReferenceEquals(mappingObject.Filters, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ReportFilterRichDTO, Framework.Configuration.Domain.Reports.ReportFilter>(detailDTO => this.ToReportFilter(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.ReportFilter>(domainObject, detail)).Map(mappingObject.Filters, domainObject.Filters);
            }
            if (!object.ReferenceEquals(mappingObject.Parameters, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ReportParameterRichDTO, Framework.Configuration.Domain.Reports.ReportParameter>(detailDTO => this.ToReportParameter(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.ReportParameter>(domainObject, detail)).Map(mappingObject.Parameters, domainObject.Parameters);
            }
            if (!object.ReferenceEquals(mappingObject.Properties, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ReportPropertyRichDTO, Framework.Configuration.Domain.Reports.ReportProperty>(detailDTO => this.ToReportProperty(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.ReportProperty>(domainObject, detail)).Map(mappingObject.Properties, domainObject.Properties);
            }
        }
        
        public virtual void MapReport(Framework.Configuration.Generated.DTO.ReportStrictDTO mappingObject, Framework.Configuration.Domain.Reports.Report domainObject)
        {
            domainObject.Version = this.VersionService.GetVersion(mappingObject.Version, domainObject);
            if (!object.ReferenceEquals(mappingObject.AccessableBusinessRoles, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(detailDTO => this.ToAccessableBusinessRoleReportRight(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(domainObject, detail)).Map(mappingObject.AccessableBusinessRoles, domainObject.AccessableBusinessRoles);
            }
            if (!object.ReferenceEquals(mappingObject.AccessableOperations, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(detailDTO => this.ToAccessableOperationReportRight(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(domainObject, detail)).Map(mappingObject.AccessableOperations, domainObject.AccessableOperations);
            }
            if (!object.ReferenceEquals(mappingObject.AccessablePrincipals, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(detailDTO => this.ToAccessablePrincipalReportRight(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(domainObject, detail)).Map(mappingObject.AccessablePrincipals, domainObject.AccessablePrincipals);
            }
            domainObject.Active = mappingObject.Active;
            domainObject.Description = mappingObject.Description;
            domainObject.DomainTypeName = mappingObject.DomainTypeName;
            if (!object.ReferenceEquals(mappingObject.Filters, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ReportFilterStrictDTO, Framework.Configuration.Domain.Reports.ReportFilter>(detailDTO => this.ToReportFilter(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.ReportFilter>(domainObject, detail)).Map(mappingObject.Filters, domainObject.Filters);
            }
            domainObject.Name = mappingObject.Name;
            domainObject.Owner = mappingObject.Owner;
            if (!object.ReferenceEquals(mappingObject.Parameters, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ReportParameterStrictDTO, Framework.Configuration.Domain.Reports.ReportParameter>(detailDTO => this.ToReportParameter(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.ReportParameter>(domainObject, detail)).Map(mappingObject.Parameters, domainObject.Parameters);
            }
            if (!object.ReferenceEquals(mappingObject.Properties, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO, Framework.Configuration.Domain.Reports.ReportProperty>(detailDTO => this.ToReportProperty(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.Reports.Report, Framework.Configuration.Domain.Reports.ReportProperty>(domainObject, detail)).Map(mappingObject.Properties, domainObject.Properties);
            }
            domainObject.ReportType = mappingObject.ReportType;
            domainObject.SecurityOperationCode = mappingObject.SecurityOperationCode;
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO mappingObject)
        {
            mappingObject.FilterOperator = domainObject.FilterOperator;
            mappingObject.FilterOperatorViewName = domainObject.FilterOperatorViewName;
            mappingObject.IsValueFromParameters = domainObject.IsValueFromParameters;
            mappingObject.Property = domainObject.Property;
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            domainObject.FilterOperator = mappingObject.FilterOperator;
            domainObject.IsValueFromParameters = mappingObject.IsValueFromParameters;
            domainObject.Property = mappingObject.Property;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.ReportFilterFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterFullDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Domain.Reports.ReportFilter domainObject, Framework.Configuration.Generated.DTO.ReportFilterRichDTO mappingObject)
        {
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterRichDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
        }
        
        public virtual void MapReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO mappingObject, Framework.Configuration.Domain.Reports.ReportFilter domainObject)
        {
            domainObject.FilterOperator = mappingObject.FilterOperator;
            domainObject.IsValueFromParameters = mappingObject.IsValueFromParameters;
            domainObject.Property = mappingObject.Property;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            if (!object.Equals(mappingObject.Report, default(Framework.Configuration.Generated.DTO.ReportSimpleDTO)))
            {
                domainObject.Report = this.ToReport(mappingObject.Report);
            }
            else
            {
                domainObject.Report = null;
            }
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO mappingObject)
        {
            mappingObject.Items = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.Items, this);
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Items, null))
            {
                domainObject.Items = Framework.Core.EnumerableExtensions.ToList(mappingObject.Items, v => this.ToReportGenerationValue(v));
            }
        }
        
        public virtual void MapReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Items, null))
            {
                domainObject.Items = Framework.Core.EnumerableExtensions.ToList(mappingObject.Items, v => this.ToReportGenerationValue(v));
            }
            if (!object.Equals(mappingObject.Report, default(Framework.Configuration.Generated.DTO.ReportIdentityDTO)))
            {
                domainObject.Report = this.ToReport(mappingObject.Report);
            }
            else
            {
                domainObject.Report = null;
            }
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject, Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO mappingObject)
        {
            mappingObject.Parameters = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTOList(domainObject.Parameters, this);
            mappingObject.TypeMetadatas = domainObject.TypeMetadatas;
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Parameters, null))
            {
                domainObject.Parameters = Framework.Core.EnumerableExtensions.ToList(mappingObject.Parameters, v => this.ToReportParameter(v));
            }
            domainObject.TypeMetadatas = mappingObject.TypeMetadatas;
        }
        
        public virtual void MapReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.Parameters, null))
            {
                domainObject.Parameters = Framework.Core.EnumerableExtensions.ToList(mappingObject.Parameters, v => this.ToReportParameter(v));
            }
            domainObject.TypeMetadatas = mappingObject.TypeMetadatas;
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO mappingObject)
        {
            mappingObject.DesignValue = domainObject.DesignValue;
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            domainObject.DesignValue = mappingObject.DesignValue;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Parameter, null))
            {
                mappingObject.Parameter = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Parameter, this);
            }
            else
            {
                mappingObject.Parameter = null;
            }
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            if (!object.Equals(mappingObject.Parameter, default(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO)))
            {
                domainObject.Parameter = this.ToReportParameter(mappingObject.Parameter);
            }
            else
            {
                domainObject.Parameter = null;
            }
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject, Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO mappingObject)
        {
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
        }
        
        public virtual void MapReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue domainObject)
        {
            domainObject.DesignValue = mappingObject.DesignValue;
            if (!object.Equals(mappingObject.Parameter, default(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO)))
            {
                domainObject.Parameter = this.ToReportParameter(mappingObject.Parameter);
            }
            else
            {
                domainObject.Parameter = null;
            }
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO mappingObject)
        {
            mappingObject.DisplayValueProperty = domainObject.DisplayValueProperty;
            mappingObject.IsCollection = domainObject.IsCollection;
            mappingObject.IsRequired = domainObject.IsRequired;
            mappingObject.Name = domainObject.Name;
            mappingObject.Order = domainObject.Order;
            mappingObject.TypeName = domainObject.TypeName;
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            domainObject.DisplayValueProperty = mappingObject.DisplayValueProperty;
            domainObject.IsCollection = mappingObject.IsCollection;
            domainObject.IsRequired = mappingObject.IsRequired;
            domainObject.Name = mappingObject.Name;
            domainObject.Order = mappingObject.Order;
            domainObject.TypeName = mappingObject.TypeName;
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.ReportParameterFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterFullDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Domain.Reports.ReportParameter domainObject, Framework.Configuration.Generated.DTO.ReportParameterRichDTO mappingObject)
        {
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterRichDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
        }
        
        public virtual void MapReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO mappingObject, Framework.Configuration.Domain.Reports.ReportParameter domainObject)
        {
            domainObject.DisplayValueProperty = mappingObject.DisplayValueProperty;
            domainObject.IsCollection = mappingObject.IsCollection;
            domainObject.IsRequired = mappingObject.IsRequired;
            domainObject.Name = mappingObject.Name;
            domainObject.Order = mappingObject.Order;
            domainObject.TypeName = mappingObject.TypeName;
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO mappingObject)
        {
            mappingObject.DesignValue = domainObject.DesignValue;
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            domainObject.DesignValue = mappingObject.DesignValue;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.ReportParameter, null))
            {
                mappingObject.ReportParameter = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.ReportParameter, this);
            }
            else
            {
                mappingObject.ReportParameter = null;
            }
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueFullDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            if (!object.Equals(mappingObject.ReportParameter, default(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO)))
            {
                domainObject.ReportParameter = this.ToReportParameter(mappingObject.ReportParameter);
            }
            else
            {
                domainObject.ReportParameter = null;
            }
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject, Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO mappingObject)
        {
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
        }
        
        public virtual void MapReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO mappingObject, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue domainObject)
        {
            domainObject.DesignValue = mappingObject.DesignValue;
            if (!object.Equals(mappingObject.ReportParameter, default(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO)))
            {
                domainObject.ReportParameter = this.ToReportParameter(mappingObject.ReportParameter);
            }
            else
            {
                domainObject.ReportParameter = null;
            }
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO mappingObject)
        {
            mappingObject.Alias = domainObject.Alias;
            mappingObject.Formula = domainObject.Formula;
            mappingObject.Order = domainObject.Order;
            mappingObject.PropertyPath = domainObject.PropertyPath;
            mappingObject.SortOrdered = domainObject.SortOrdered;
            mappingObject.SortType = domainObject.SortType;
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            domainObject.Alias = mappingObject.Alias;
            domainObject.Formula = mappingObject.Formula;
            domainObject.Order = mappingObject.Order;
            domainObject.PropertyPath = mappingObject.PropertyPath;
            domainObject.SortOrdered = mappingObject.SortOrdered;
            domainObject.SortType = mappingObject.SortType;
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.ReportPropertyFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Report, null))
            {
                mappingObject.Report = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Report, this);
            }
            else
            {
                mappingObject.Report = null;
            }
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyFullDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Domain.Reports.ReportProperty domainObject, Framework.Configuration.Generated.DTO.ReportPropertyRichDTO mappingObject)
        {
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
        }
        
        public virtual void MapReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO mappingObject, Framework.Configuration.Domain.Reports.ReportProperty domainObject)
        {
            domainObject.Alias = mappingObject.Alias;
            domainObject.Formula = mappingObject.Formula;
            domainObject.Order = mappingObject.Order;
            domainObject.PropertyPath = mappingObject.PropertyPath;
            domainObject.SortOrdered = mappingObject.SortOrdered;
            domainObject.SortType = mappingObject.SortType;
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.SentMessageSimpleDTO mappingObject)
        {
            mappingObject.Comment = domainObject.Comment;
            mappingObject.ContextObjectId = domainObject.ContextObjectId;
            mappingObject.ContextObjectType = domainObject.ContextObjectType;
            mappingObject.Copy = domainObject.Copy;
            mappingObject.From = domainObject.From;
            mappingObject.Message = domainObject.Message;
            mappingObject.ReplyTo = domainObject.ReplyTo;
            mappingObject.Subject = domainObject.Subject;
            mappingObject.TemplateName = domainObject.TemplateName;
            mappingObject.To = domainObject.To;
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject)
        {
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.SentMessageFullDTO mappingObject)
        {
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageFullDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject)
        {
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Domain.SentMessage domainObject, Framework.Configuration.Generated.DTO.SentMessageRichDTO mappingObject)
        {
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageRichDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject)
        {
        }
        
        public virtual void MapSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO mappingObject, Framework.Configuration.Domain.SentMessage domainObject)
        {
        }
        
        public virtual void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapSequence(Framework.Configuration.Generated.DTO.SequenceVisualDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceSimpleDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
            mappingObject.Number = domainObject.Number;
        }
        
        public virtual void MapSequence(Framework.Configuration.Generated.DTO.SequenceSimpleDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.Number = mappingObject.Number;
        }
        
        public virtual void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceFullDTO mappingObject)
        {
        }
        
        public virtual void MapSequence(Framework.Configuration.Generated.DTO.SequenceFullDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject)
        {
        }
        
        public virtual void MapSequence(Framework.Configuration.Domain.Sequence domainObject, Framework.Configuration.Generated.DTO.SequenceRichDTO mappingObject)
        {
        }
        
        public virtual void MapSequence(Framework.Configuration.Generated.DTO.SequenceRichDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject)
        {
        }
        
        public virtual void MapSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO mappingObject, Framework.Configuration.Domain.Sequence domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.Number = mappingObject.Number;
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Domain.SequenceCreateModel domainObject, Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
        }
        
        public virtual void MapSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO mappingObject, Framework.Configuration.Domain.SequenceCreateModel domainObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Domain.SequenceRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.SequenceRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantVisualDTO mappingObject)
        {
            mappingObject.Code = domainObject.Code;
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantVisualDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject)
        {
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO mappingObject)
        {
            mappingObject.Code = domainObject.Code;
            mappingObject.Description = domainObject.Description;
            mappingObject.IsManual = domainObject.IsManual;
            mappingObject.Value = domainObject.Value;
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            domainObject.Description = mappingObject.Description;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.Type, null))
            {
                mappingObject.Type = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.Type, this);
            }
            else
            {
                mappingObject.Type = null;
            }
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantFullDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject)
        {
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Domain.SystemConstant domainObject, Framework.Configuration.Generated.DTO.SystemConstantRichDTO mappingObject)
        {
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantRichDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject)
        {
        }
        
        public virtual void MapSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO mappingObject, Framework.Configuration.Domain.SystemConstant domainObject)
        {
            domainObject.Description = mappingObject.Description;
            domainObject.Value = mappingObject.Value;
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO mappingObject)
        {
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
        }
        
        public virtual void MapSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.SystemConstantRootFilterModel domainObject)
        {
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemVisualDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemVisualDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO mappingObject)
        {
            mappingObject.IsBase = domainObject.IsBase;
            mappingObject.IsMain = domainObject.IsMain;
            mappingObject.IsRevision = domainObject.IsRevision;
            mappingObject.Name = domainObject.Name;
            mappingObject.SubscriptionEnabled = domainObject.SubscriptionEnabled;
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.SubscriptionEnabled = mappingObject.SubscriptionEnabled;
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemFullDTO mappingObject)
        {
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemFullDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject)
        {
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Domain.TargetSystem domainObject, Framework.Configuration.Generated.DTO.TargetSystemRichDTO mappingObject)
        {
            mappingObject.DomainTypes = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.DomainTypes, this);
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemRichDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject)
        {
        }
        
        public virtual void MapTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO mappingObject, Framework.Configuration.Domain.TargetSystem domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.SubscriptionEnabled = mappingObject.SubscriptionEnabled;
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO mappingObject)
        {
            mappingObject.IsMain = domainObject.IsMain;
            mappingObject.IsRevision = domainObject.IsRevision;
            mappingObject.SubscriptionEnabled = domainObject.SubscriptionEnabled;
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
            domainObject.IsMain = mappingObject.IsMain;
            domainObject.IsRevision = mappingObject.IsRevision;
            domainObject.SubscriptionEnabled = mappingObject.SubscriptionEnabled;
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
        }
        
        public virtual void MapTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.TargetSystemRootFilterModel domainObject)
        {
            domainObject.IsMain = mappingObject.IsMain;
            domainObject.IsRevision = mappingObject.IsRevision;
            domainObject.SubscriptionEnabled = mappingObject.SubscriptionEnabled;
        }
        
        protected virtual void MapToDomainObject<TMappingObject, TDomainObject>(TMappingObject mappingObject, TDomainObject domainObject)
            where TMappingObject : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, TDomainObject>
            where TDomainObject : Framework.Configuration.Domain.DomainObjectBase
        {
            mappingObject.MapToDomainObject(this, domainObject);
        }
        
        public virtual void MapUserAction(Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.UserActionSimpleDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapUserAction(Framework.Configuration.Generated.DTO.UserActionSimpleDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject)
        {
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapUserAction(Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.UserActionFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.DomainType, null))
            {
                mappingObject.DomainType = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.DomainType, this);
            }
            else
            {
                mappingObject.DomainType = null;
            }
        }
        
        public virtual void MapUserAction(Framework.Configuration.Generated.DTO.UserActionFullDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject)
        {
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
        }
        
        public virtual void MapUserAction(Framework.Configuration.Domain.UserAction domainObject, Framework.Configuration.Generated.DTO.UserActionRichDTO mappingObject)
        {
            mappingObject.ObjectIdentities = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.ObjectIdentities, this);
        }
        
        public virtual void MapUserAction(Framework.Configuration.Generated.DTO.UserActionRichDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.ObjectIdentities, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO, Framework.Configuration.Domain.UserActionObject>(detailDTO => this.ToUserActionObject(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.UserAction, Framework.Configuration.Domain.UserActionObject>(domainObject, detail)).Map(mappingObject.ObjectIdentities, domainObject.ObjectIdentities);
            }
        }
        
        public virtual void MapUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO mappingObject, Framework.Configuration.Domain.UserAction domainObject)
        {
            if (!object.Equals(mappingObject.DomainType, default(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)))
            {
                domainObject.DomainType = this.ToDomainType(mappingObject.DomainType);
            }
            else
            {
                domainObject.DomainType = null;
            }
            domainObject.Name = mappingObject.Name;
            if (!object.ReferenceEquals(mappingObject.ObjectIdentities, null))
            {
                this.GetCollectionMappingService<Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO, Framework.Configuration.Domain.UserActionObject>(detailDTO => this.ToUserActionObject(detailDTO, domainObject), detail => Framework.Persistent.AddRemoveDetailHelper.RemoveDetail<Framework.Configuration.Domain.UserAction, Framework.Configuration.Domain.UserActionObject>(domainObject, detail)).Map(mappingObject.ObjectIdentities, domainObject.ObjectIdentities);
            }
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO mappingObject)
        {
            mappingObject.DomainType = domainObject.DomainType;
            mappingObject.Name = domainObject.Name;
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            domainObject.DomainType = mappingObject.DomainType;
            domainObject.Name = mappingObject.Name;
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject, Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO mappingObject)
        {
            mappingObject.ObjectIdentities = Framework.Configuration.Generated.DTO.LambdaHelper.ToRichDTOList(domainObject.ObjectIdentities, this);
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            if (!object.ReferenceEquals(mappingObject.ObjectIdentities, null))
            {
                domainObject.ObjectIdentities = Framework.Core.EnumerableExtensions.ToList(mappingObject.ObjectIdentities, v => this.ToUserActionObjectModel(v));
            }
        }
        
        public virtual void MapUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionCreateModel domainObject)
        {
            domainObject.DomainType = mappingObject.DomainType;
            domainObject.Name = mappingObject.Name;
            if (!object.ReferenceEquals(mappingObject.ObjectIdentities, null))
            {
                domainObject.ObjectIdentities = Framework.Core.EnumerableExtensions.ToList(mappingObject.ObjectIdentities, v => this.ToUserActionObjectModel(v));
            }
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO mappingObject)
        {
            mappingObject.DomainTypeName = domainObject.DomainTypeName;
            mappingObject.Name = domainObject.Name;
            mappingObject.ObjectIdentity = domainObject.ObjectIdentity;
            mappingObject.UserActionName = domainObject.UserActionName;
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.ObjectIdentity = mappingObject.ObjectIdentity;
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.UserActionObjectFullDTO mappingObject)
        {
            if (!object.ReferenceEquals(domainObject.UserAction, null))
            {
                mappingObject.UserAction = Framework.Configuration.Generated.DTO.LambdaHelper.ToSimpleDTO(domainObject.UserAction, this);
            }
            else
            {
                mappingObject.UserAction = null;
            }
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectFullDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject)
        {
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Domain.UserActionObject domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRichDTO mappingObject)
        {
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject)
        {
        }
        
        public virtual void MapUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO mappingObject, Framework.Configuration.Domain.UserActionObject domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.ObjectIdentity = mappingObject.ObjectIdentity;
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO mappingObject)
        {
            mappingObject.Name = domainObject.Name;
            mappingObject.ObjectIdentity = domainObject.ObjectIdentity;
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.ObjectIdentity = mappingObject.ObjectIdentity;
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO mappingObject)
        {
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
        }
        
        public virtual void MapUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Create.UserActionObjectModel domainObject)
        {
            domainObject.Name = mappingObject.Name;
            domainObject.ObjectIdentity = mappingObject.ObjectIdentity;
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO mappingObject)
        {
            mappingObject.CountingEntities = domainObject.CountingEntities;
            mappingObject.Period = domainObject.Period;
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            domainObject.CountingEntities = mappingObject.CountingEntities;
            domainObject.Period = mappingObject.Period;
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO mappingObject)
        {
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO mappingObject)
        {
            mappingObject.ActionNames = domainObject.ActionNames;
            mappingObject.DomainTypeNames = domainObject.DomainTypeNames;
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            domainObject.ActionNames = mappingObject.ActionNames;
            domainObject.DomainTypeNames = mappingObject.DomainTypeNames;
        }
        
        public virtual void MapUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO mappingObject, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel domainObject)
        {
            domainObject.ActionNames = mappingObject.ActionNames;
            domainObject.CountingEntities = mappingObject.CountingEntities;
            domainObject.DomainTypeNames = mappingObject.DomainTypeNames;
            domainObject.Period = mappingObject.Period;
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightIdentityDTO accessableBusinessRoleReportRightIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(accessableBusinessRoleReportRightIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightSimpleDTO accessableBusinessRoleReportRightSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(accessableBusinessRoleReportRightSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO accessableBusinessRoleReportRightRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(accessableBusinessRoleReportRightRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightRichDTO accessableBusinessRoleReportRightRichDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(accessableBusinessRoleReportRightRichDTO, () => new Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO accessableBusinessRoleReportRightStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(accessableBusinessRoleReportRightStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight ToAccessableBusinessRoleReportRight(Framework.Configuration.Generated.DTO.AccessableBusinessRoleReportRightStrictDTO accessableBusinessRoleReportRightStrictDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(accessableBusinessRoleReportRightStrictDTO, () => new Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightIdentityDTO accessableOperationReportRightIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(accessableOperationReportRightIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightSimpleDTO accessableOperationReportRightSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(accessableOperationReportRightSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO accessableOperationReportRightRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(accessableOperationReportRightRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightRichDTO accessableOperationReportRightRichDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(accessableOperationReportRightRichDTO, () => new Framework.Configuration.Domain.Reports.AccessableOperationReportRight(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO accessableOperationReportRightStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(accessableOperationReportRightStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessableOperationReportRight ToAccessableOperationReportRight(Framework.Configuration.Generated.DTO.AccessableOperationReportRightStrictDTO accessableOperationReportRightStrictDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(accessableOperationReportRightStrictDTO, () => new Framework.Configuration.Domain.Reports.AccessableOperationReportRight(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightIdentityDTO accessablePrincipalReportRightIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(accessablePrincipalReportRightIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightSimpleDTO accessablePrincipalReportRightSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(accessablePrincipalReportRightSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO accessablePrincipalReportRightRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(accessablePrincipalReportRightRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightRichDTO accessablePrincipalReportRightRichDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(accessablePrincipalReportRightRichDTO, () => new Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO accessablePrincipalReportRightStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(accessablePrincipalReportRightStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight ToAccessablePrincipalReportRight(Framework.Configuration.Generated.DTO.AccessablePrincipalReportRightStrictDTO accessablePrincipalReportRightStrictDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(accessablePrincipalReportRightStrictDTO, () => new Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight(report));
        }
        
        public virtual Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO attachmentIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Attachment>(attachmentIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO attachmentSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Attachment>(attachmentSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentRichDTO attachmentRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AttachmentRichDTO, Framework.Configuration.Domain.Attachment>(attachmentRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentRichDTO attachmentRichDTO, Framework.Configuration.Domain.AttachmentContainer attachmentContainer)
        {
            return this.ToDomainObject(attachmentRichDTO, () => new Framework.Configuration.Domain.Attachment(attachmentContainer));
        }
        
        public virtual Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO attachmentStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AttachmentStrictDTO, Framework.Configuration.Domain.Attachment>(attachmentStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Attachment ToAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO attachmentStrictDTO, Framework.Configuration.Domain.AttachmentContainer attachmentContainer)
        {
            return this.ToDomainObject(attachmentStrictDTO, () => new Framework.Configuration.Domain.Attachment(attachmentContainer));
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerIdentityDTO attachmentContainerIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.AttachmentContainer>(attachmentContainerIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO attachmentContainerSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.AttachmentContainer>(attachmentContainerSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO attachmentContainerRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO, Framework.Configuration.Domain.AttachmentContainer>(attachmentContainerRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerRichDTO attachmentContainerRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(attachmentContainerRichDTO, () => new Framework.Configuration.Domain.AttachmentContainer());
            }
            else
            {
                return this.ToAttachmentContainer(attachmentContainerRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO attachmentContainerStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO, Framework.Configuration.Domain.AttachmentContainer>(attachmentContainerStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainer ToAttachmentContainer(Framework.Configuration.Generated.DTO.AttachmentContainerStrictDTO attachmentContainerStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(attachmentContainerStrictDTO, () => new Framework.Configuration.Domain.AttachmentContainer());
            }
            else
            {
                return this.ToAttachmentContainer(attachmentContainerStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainerReference ToAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO attachmentContainerReferenceRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO, Framework.Configuration.Domain.AttachmentContainerReference>(attachmentContainerReferenceRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentContainerReference ToAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO attachmentContainerReferenceStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO, Framework.Configuration.Domain.AttachmentContainerReference>(attachmentContainerReferenceStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagIdentityDTO attachmentTagIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.AttachmentTag>(attachmentTagIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO attachmentTagSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.AttachmentTag>(attachmentTagSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO attachmentTagRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO, Framework.Configuration.Domain.AttachmentTag>(attachmentTagRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO attachmentTagRichDTO, Framework.Configuration.Domain.Attachment attachment)
        {
            return this.ToDomainObject(attachmentTagRichDTO, () => new Framework.Configuration.Domain.AttachmentTag(attachment));
        }
        
        public virtual Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO attachmentTagStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO, Framework.Configuration.Domain.AttachmentTag>(attachmentTagStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.AttachmentTag ToAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO attachmentTagStrictDTO, Framework.Configuration.Domain.Attachment attachment)
        {
            return this.ToDomainObject(attachmentTagStrictDTO, () => new Framework.Configuration.Domain.AttachmentTag(attachment));
        }
        
        public virtual Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO codeFirstSubscriptionIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.CodeFirstSubscription>(codeFirstSubscriptionIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO codeFirstSubscriptionSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.CodeFirstSubscription>(codeFirstSubscriptionSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO codeFirstSubscriptionRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO, Framework.Configuration.Domain.CodeFirstSubscription>(codeFirstSubscriptionRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.CodeFirstSubscription ToCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO codeFirstSubscriptionStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO, Framework.Configuration.Domain.CodeFirstSubscription>(codeFirstSubscriptionStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel ToCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO codeFirstSubscriptionRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>(codeFirstSubscriptionRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel ToCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO codeFirstSubscriptionRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO, Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>(codeFirstSubscriptionRootFilterModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO controlSettingsIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ControlSettings>(controlSettingsIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO controlSettingsSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ControlSettings>(controlSettingsSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO controlSettingsRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO, Framework.Configuration.Domain.ControlSettings>(controlSettingsRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO controlSettingsStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO, Framework.Configuration.Domain.ControlSettings>(controlSettingsStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettings ToControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO controlSettingsStrictDTO, Framework.Configuration.Domain.ControlSettings controlSettings)
        {
            return this.ToDomainObject(controlSettingsStrictDTO, () => new Framework.Configuration.Domain.ControlSettings(controlSettings));
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamIdentityDTO controlSettingsParamIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ControlSettingsParam>(controlSettingsParamIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO controlSettingsParamSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ControlSettingsParam>(controlSettingsParamSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO controlSettingsParamRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO, Framework.Configuration.Domain.ControlSettingsParam>(controlSettingsParamRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO controlSettingsParamRichDTO, Framework.Configuration.Domain.ControlSettings controlSettings)
        {
            return this.ToDomainObject(controlSettingsParamRichDTO, () => new Framework.Configuration.Domain.ControlSettingsParam(controlSettings));
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO controlSettingsParamStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO, Framework.Configuration.Domain.ControlSettingsParam>(controlSettingsParamStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParam ToControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO controlSettingsParamStrictDTO, Framework.Configuration.Domain.ControlSettings controlSettings)
        {
            return this.ToDomainObject(controlSettingsParamStrictDTO, () => new Framework.Configuration.Domain.ControlSettingsParam(controlSettings));
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueIdentityDTO controlSettingsParamValueIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ControlSettingsParamValue>(controlSettingsParamValueIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO controlSettingsParamValueSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ControlSettingsParamValue>(controlSettingsParamValueSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO controlSettingsParamValueRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO, Framework.Configuration.Domain.ControlSettingsParamValue>(controlSettingsParamValueRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO controlSettingsParamValueRichDTO, Framework.Configuration.Domain.ControlSettingsParam controlSettingsParam)
        {
            return this.ToDomainObject(controlSettingsParamValueRichDTO, () => new Framework.Configuration.Domain.ControlSettingsParamValue(controlSettingsParam));
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO controlSettingsParamValueStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO, Framework.Configuration.Domain.ControlSettingsParamValue>(controlSettingsParamValueStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.ControlSettingsParamValue ToControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO controlSettingsParamValueStrictDTO, Framework.Configuration.Domain.ControlSettingsParam controlSettingsParam)
        {
            return this.ToDomainObject(controlSettingsParamValueStrictDTO, () => new Framework.Configuration.Domain.ControlSettingsParamValue(controlSettingsParam));
        }
        
        protected virtual TDomainObject ToDomainObject<TMappingObject, TDomainObject>(TMappingObject mappingObject)
            where TMappingObject : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, TDomainObject, System.Guid>
            where TDomainObject : Framework.Configuration.Domain.PersistentDomainObjectBase
        {
            TDomainObject domainObject = this.GetById<TDomainObject>(mappingObject.Id, Framework.DomainDriven.BLL.IdCheckMode.CheckAll);
            this.MapToDomainObject(mappingObject, domainObject);
            return domainObject;
        }
        
        protected virtual TDomainObject ToDomainObject<TMappingObject, TDomainObject>(TMappingObject mappingObject, System.Func<TDomainObject> createFunc)
            where TMappingObject : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, TDomainObject, System.Guid>
            where TDomainObject : Framework.Configuration.Domain.PersistentDomainObjectBase
        {
            TDomainObject domainObject = this.GetByIdOrCreate<TDomainObject>(mappingObject.Id, createFunc);
            this.MapToDomainObject(mappingObject, domainObject);
            return domainObject;
        }
        
        protected virtual TDomainObject ToDomainObjectBase<TMappingObject, TDomainObject>(TMappingObject mappingObject)
            where TMappingObject : Framework.DomainDriven.IMappingObject<Framework.Configuration.Generated.DTO.IConfigurationDTOMappingService, TDomainObject>
            where TDomainObject : Framework.Configuration.Domain.DomainObjectBase, new ()
        {
            TDomainObject domainObject = new TDomainObject();
            this.MapToDomainObject(mappingObject, domainObject);
            return domainObject;
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventIdentityDTO domainObjectEventIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainObjectEvent>(domainObjectEventIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventSimpleDTO domainObjectEventSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainObjectEvent>(domainObjectEventSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO domainObjectEventRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO, Framework.Configuration.Domain.DomainObjectEvent>(domainObjectEventRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventRichDTO domainObjectEventRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(domainObjectEventRichDTO, () => new Framework.Configuration.Domain.DomainObjectEvent());
            }
            else
            {
                return this.ToDomainObjectEvent(domainObjectEventRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO domainObjectEventStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO, Framework.Configuration.Domain.DomainObjectEvent>(domainObjectEventStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectEvent ToDomainObjectEvent(Framework.Configuration.Generated.DTO.DomainObjectEventStrictDTO domainObjectEventStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(domainObjectEventStrictDTO, () => new Framework.Configuration.Domain.DomainObjectEvent());
            }
            else
            {
                return this.ToDomainObjectEvent(domainObjectEventStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationIdentityDTO domainObjectModificationIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainObjectModification>(domainObjectModificationIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationSimpleDTO domainObjectModificationSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainObjectModification>(domainObjectModificationSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO domainObjectModificationRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO, Framework.Configuration.Domain.DomainObjectModification>(domainObjectModificationRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationRichDTO domainObjectModificationRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(domainObjectModificationRichDTO, () => new Framework.Configuration.Domain.DomainObjectModification());
            }
            else
            {
                return this.ToDomainObjectModification(domainObjectModificationRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO domainObjectModificationStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO, Framework.Configuration.Domain.DomainObjectModification>(domainObjectModificationStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectModification ToDomainObjectModification(Framework.Configuration.Generated.DTO.DomainObjectModificationStrictDTO domainObjectModificationStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(domainObjectModificationStrictDTO, () => new Framework.Configuration.Domain.DomainObjectModification());
            }
            else
            {
                return this.ToDomainObjectModification(domainObjectModificationStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationIdentityDTO domainObjectNotificationIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainObjectNotification>(domainObjectNotificationIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationSimpleDTO domainObjectNotificationSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainObjectNotification>(domainObjectNotificationSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO domainObjectNotificationRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO, Framework.Configuration.Domain.DomainObjectNotification>(domainObjectNotificationRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationRichDTO domainObjectNotificationRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(domainObjectNotificationRichDTO, () => new Framework.Configuration.Domain.DomainObjectNotification());
            }
            else
            {
                return this.ToDomainObjectNotification(domainObjectNotificationRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO domainObjectNotificationStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO, Framework.Configuration.Domain.DomainObjectNotification>(domainObjectNotificationStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainObjectNotification ToDomainObjectNotification(Framework.Configuration.Generated.DTO.DomainObjectNotificationStrictDTO domainObjectNotificationStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(domainObjectNotificationStrictDTO, () => new Framework.Configuration.Domain.DomainObjectNotification());
            }
            else
            {
                return this.ToDomainObjectNotification(domainObjectNotificationStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO domainTypeIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainType>(domainTypeIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO domainTypeSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainType>(domainTypeSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeRichDTO domainTypeRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainTypeRichDTO, Framework.Configuration.Domain.DomainType>(domainTypeRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainType ToDomainType(Framework.Configuration.Generated.DTO.DomainTypeStrictDTO domainTypeStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainTypeStrictDTO, Framework.Configuration.Domain.DomainType>(domainTypeStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeEventModel ToDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO domainTypeEventModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO, Framework.Configuration.Domain.DomainTypeEventModel>(domainTypeEventModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeEventModel ToDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO domainTypeEventModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO, Framework.Configuration.Domain.DomainTypeEventModel>(domainTypeEventModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO domainTypeEventOperationIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainTypeEventOperation>(domainTypeEventOperationIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO domainTypeEventOperationSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.DomainTypeEventOperation>(domainTypeEventOperationSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO domainTypeEventOperationRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO, Framework.Configuration.Domain.DomainTypeEventOperation>(domainTypeEventOperationRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeEventOperation ToDomainTypeEventOperation(Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO domainTypeEventOperationStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.DomainTypeEventOperationStrictDTO, Framework.Configuration.Domain.DomainTypeEventOperation>(domainTypeEventOperationStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeRootFilterModel ToDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO domainTypeRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO, Framework.Configuration.Domain.DomainTypeRootFilterModel>(domainTypeRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.DomainTypeRootFilterModel ToDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO domainTypeRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO, Framework.Configuration.Domain.DomainTypeRootFilterModel>(domainTypeRootFilterModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO exceptionMessageIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ExceptionMessage>(exceptionMessageIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO exceptionMessageSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.ExceptionMessage>(exceptionMessageSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO exceptionMessageRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO, Framework.Configuration.Domain.ExceptionMessage>(exceptionMessageRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO exceptionMessageRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(exceptionMessageRichDTO, () => new Framework.Configuration.Domain.ExceptionMessage());
            }
            else
            {
                return this.ToExceptionMessage(exceptionMessageRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO exceptionMessageRichDTO, Framework.Configuration.Domain.ExceptionMessage exceptionMessage)
        {
            return this.ToDomainObject(exceptionMessageRichDTO, () => new Framework.Configuration.Domain.ExceptionMessage(exceptionMessage));
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO exceptionMessageStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO, Framework.Configuration.Domain.ExceptionMessage>(exceptionMessageStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO exceptionMessageStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(exceptionMessageStrictDTO, () => new Framework.Configuration.Domain.ExceptionMessage());
            }
            else
            {
                return this.ToExceptionMessage(exceptionMessageStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessage ToExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO exceptionMessageStrictDTO, Framework.Configuration.Domain.ExceptionMessage exceptionMessage)
        {
            return this.ToDomainObject(exceptionMessageStrictDTO, () => new Framework.Configuration.Domain.ExceptionMessage(exceptionMessage));
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessageRootFilterModel ToExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO exceptionMessageRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>(exceptionMessageRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.ExceptionMessageRootFilterModel ToExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO exceptionMessageRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO, Framework.Configuration.Domain.ExceptionMessageRootFilterModel>(exceptionMessageRootFilterModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageIdentityDTO logMessageIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.LogMessage>(logMessageIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageSimpleDTO logMessageSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.LogMessage>(logMessageSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageRichDTO logMessageRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.LogMessageRichDTO, Framework.Configuration.Domain.LogMessage>(logMessageRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageRichDTO logMessageRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(logMessageRichDTO, () => new Framework.Configuration.Domain.LogMessage());
            }
            else
            {
                return this.ToLogMessage(logMessageRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO logMessageStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.LogMessageStrictDTO, Framework.Configuration.Domain.LogMessage>(logMessageStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.LogMessage ToLogMessage(Framework.Configuration.Generated.DTO.LogMessageStrictDTO logMessageStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(logMessageStrictDTO, () => new Framework.Configuration.Domain.LogMessage());
            }
            else
            {
                return this.ToLogMessage(logMessageStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockIdentityDTO namedLockIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.NamedLock>(namedLockIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockSimpleDTO namedLockSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.NamedLock>(namedLockSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockRichDTO namedLockRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.NamedLockRichDTO, Framework.Configuration.Domain.NamedLock>(namedLockRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockRichDTO namedLockRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(namedLockRichDTO, () => new Framework.Configuration.Domain.NamedLock());
            }
            else
            {
                return this.ToNamedLock(namedLockRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO namedLockStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.NamedLockStrictDTO, Framework.Configuration.Domain.NamedLock>(namedLockStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.NamedLock ToNamedLock(Framework.Configuration.Generated.DTO.NamedLockStrictDTO namedLockStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(namedLockStrictDTO, () => new Framework.Configuration.Domain.NamedLock());
            }
            else
            {
                return this.ToNamedLock(namedLockStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.QueueProcessingState ToQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO queueProcessingStateRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.QueueProcessingStateRichDTO, Framework.Configuration.Domain.QueueProcessingState>(queueProcessingStateRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.QueueProcessingState ToQueueProcessingState(Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO queueProcessingStateStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.QueueProcessingStateStrictDTO, Framework.Configuration.Domain.QueueProcessingState>(queueProcessingStateStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportIdentityDTO reportIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.Report>(reportIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportSimpleDTO reportSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.Report>(reportSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportRichDTO reportRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportRichDTO, Framework.Configuration.Domain.Reports.Report>(reportRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportRichDTO reportRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(reportRichDTO, () => new Framework.Configuration.Domain.Reports.Report());
            }
            else
            {
                return this.ToReport(reportRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportStrictDTO reportStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportStrictDTO, Framework.Configuration.Domain.Reports.Report>(reportStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.Report ToReport(Framework.Configuration.Generated.DTO.ReportStrictDTO reportStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(reportStrictDTO, () => new Framework.Configuration.Domain.Reports.Report());
            }
            else
            {
                return this.ToReport(reportStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterIdentityDTO reportFilterIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.ReportFilter>(reportFilterIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterSimpleDTO reportFilterSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.ReportFilter>(reportFilterSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterRichDTO reportFilterRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportFilterRichDTO, Framework.Configuration.Domain.Reports.ReportFilter>(reportFilterRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterRichDTO reportFilterRichDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(reportFilterRichDTO, () => new Framework.Configuration.Domain.Reports.ReportFilter(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO reportFilterStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportFilterStrictDTO, Framework.Configuration.Domain.Reports.ReportFilter>(reportFilterStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportFilter ToReportFilter(Framework.Configuration.Generated.DTO.ReportFilterStrictDTO reportFilterStrictDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(reportFilterStrictDTO, () => new Framework.Configuration.Domain.Reports.ReportFilter(report));
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel ToReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO reportGenerationModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportGenerationModelRichDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>(reportGenerationModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel ToReportGenerationModel(Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO reportGenerationModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportGenerationModelStrictDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>(reportGenerationModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel ToReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO reportGenerationRequestModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportGenerationRequestModelRichDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>(reportGenerationRequestModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel ToReportGenerationRequestModel(Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO reportGenerationRequestModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportGenerationRequestModelStrictDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>(reportGenerationRequestModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue ToReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO reportGenerationValueRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportGenerationValueRichDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(reportGenerationValueRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue ToReportGenerationValue(Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO reportGenerationValueStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportGenerationValueStrictDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(reportGenerationValueStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterIdentityDTO reportParameterIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.ReportParameter>(reportParameterIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterSimpleDTO reportParameterSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.ReportParameter>(reportParameterSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterRichDTO reportParameterRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportParameterRichDTO, Framework.Configuration.Domain.Reports.ReportParameter>(reportParameterRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterRichDTO reportParameterRichDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(reportParameterRichDTO, () => new Framework.Configuration.Domain.Reports.ReportParameter(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO reportParameterStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportParameterStrictDTO, Framework.Configuration.Domain.Reports.ReportParameter>(reportParameterStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportParameter ToReportParameter(Framework.Configuration.Generated.DTO.ReportParameterStrictDTO reportParameterStrictDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(reportParameterStrictDTO, () => new Framework.Configuration.Domain.Reports.ReportParameter(report));
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue ToReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO reportParameterValueRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportParameterValueRichDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>(reportParameterValueRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue ToReportParameterValue(Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO reportParameterValueStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.ReportParameterValueStrictDTO, Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>(reportParameterValueStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyIdentityDTO reportPropertyIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.ReportProperty>(reportPropertyIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertySimpleDTO reportPropertySimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Reports.ReportProperty>(reportPropertySimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO reportPropertyRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportPropertyRichDTO, Framework.Configuration.Domain.Reports.ReportProperty>(reportPropertyRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyRichDTO reportPropertyRichDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(reportPropertyRichDTO, () => new Framework.Configuration.Domain.Reports.ReportProperty(report));
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO reportPropertyStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO, Framework.Configuration.Domain.Reports.ReportProperty>(reportPropertyStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Reports.ReportProperty ToReportProperty(Framework.Configuration.Generated.DTO.ReportPropertyStrictDTO reportPropertyStrictDTO, Framework.Configuration.Domain.Reports.Report report)
        {
            return this.ToDomainObject(reportPropertyStrictDTO, () => new Framework.Configuration.Domain.Reports.ReportProperty(report));
        }
        
        public virtual Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageIdentityDTO sentMessageIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.SentMessage>(sentMessageIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageSimpleDTO sentMessageSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.SentMessage>(sentMessageSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageRichDTO sentMessageRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.SentMessageRichDTO, Framework.Configuration.Domain.SentMessage>(sentMessageRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.SentMessage ToSentMessage(Framework.Configuration.Generated.DTO.SentMessageStrictDTO sentMessageStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.SentMessageStrictDTO, Framework.Configuration.Domain.SentMessage>(sentMessageStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceIdentityDTO sequenceIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Sequence>(sequenceIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceSimpleDTO sequenceSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.Sequence>(sequenceSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceRichDTO sequenceRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.SequenceRichDTO, Framework.Configuration.Domain.Sequence>(sequenceRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceRichDTO sequenceRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(sequenceRichDTO, () => new Framework.Configuration.Domain.Sequence());
            }
            else
            {
                return this.ToSequence(sequenceRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO sequenceStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.SequenceStrictDTO, Framework.Configuration.Domain.Sequence>(sequenceStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Sequence ToSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO sequenceStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(sequenceStrictDTO, () => new Framework.Configuration.Domain.Sequence());
            }
            else
            {
                return this.ToSequence(sequenceStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.SequenceCreateModel ToSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO sequenceCreateModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO, Framework.Configuration.Domain.SequenceCreateModel>(sequenceCreateModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.SequenceCreateModel ToSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO sequenceCreateModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO, Framework.Configuration.Domain.SequenceCreateModel>(sequenceCreateModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.SequenceRootFilterModel ToSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO sequenceRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO, Framework.Configuration.Domain.SequenceRootFilterModel>(sequenceRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.SequenceRootFilterModel ToSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO sequenceRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO, Framework.Configuration.Domain.SequenceRootFilterModel>(sequenceRootFilterModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO systemConstantIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.SystemConstant>(systemConstantIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO systemConstantSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.SystemConstant>(systemConstantSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantRichDTO systemConstantRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.SystemConstantRichDTO, Framework.Configuration.Domain.SystemConstant>(systemConstantRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantRichDTO systemConstantRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(systemConstantRichDTO, () => new Framework.Configuration.Domain.SystemConstant());
            }
            else
            {
                return this.ToSystemConstant(systemConstantRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO systemConstantStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.SystemConstantStrictDTO, Framework.Configuration.Domain.SystemConstant>(systemConstantStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.SystemConstant ToSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO systemConstantStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(systemConstantStrictDTO, () => new Framework.Configuration.Domain.SystemConstant());
            }
            else
            {
                return this.ToSystemConstant(systemConstantStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.SystemConstantRootFilterModel ToSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO systemConstantRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO, Framework.Configuration.Domain.SystemConstantRootFilterModel>(systemConstantRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.SystemConstantRootFilterModel ToSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO systemConstantRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO, Framework.Configuration.Domain.SystemConstantRootFilterModel>(systemConstantRootFilterModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO targetSystemIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.TargetSystem>(targetSystemIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO targetSystemSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.TargetSystem>(targetSystemSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemRichDTO targetSystemRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.TargetSystemRichDTO, Framework.Configuration.Domain.TargetSystem>(targetSystemRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.TargetSystem ToTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO targetSystemStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.TargetSystemStrictDTO, Framework.Configuration.Domain.TargetSystem>(targetSystemStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.TargetSystemRootFilterModel ToTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO targetSystemRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO, Framework.Configuration.Domain.TargetSystemRootFilterModel>(targetSystemRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.TargetSystemRootFilterModel ToTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO targetSystemRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO, Framework.Configuration.Domain.TargetSystemRootFilterModel>(targetSystemRootFilterModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionIdentityDTO userActionIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.UserAction>(userActionIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionSimpleDTO userActionSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.UserAction>(userActionSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionRichDTO userActionRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.UserActionRichDTO, Framework.Configuration.Domain.UserAction>(userActionRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionRichDTO userActionRichDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(userActionRichDTO, () => new Framework.Configuration.Domain.UserAction());
            }
            else
            {
                return this.ToUserAction(userActionRichDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO userActionStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.UserActionStrictDTO, Framework.Configuration.Domain.UserAction>(userActionStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.UserAction ToUserAction(Framework.Configuration.Generated.DTO.UserActionStrictDTO userActionStrictDTO, bool allowCreate)
        {
            if (allowCreate)
            {
                return this.ToDomainObject(userActionStrictDTO, () => new Framework.Configuration.Domain.UserAction());
            }
            else
            {
                return this.ToUserAction(userActionStrictDTO);
            }
        }
        
        public virtual Framework.Configuration.Domain.Models.Create.UserActionCreateModel ToUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO userActionCreateModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>(userActionCreateModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Create.UserActionCreateModel ToUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO userActionCreateModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO, Framework.Configuration.Domain.Models.Create.UserActionCreateModel>(userActionCreateModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO userActionObjectIdentityDTO)
        {
            return this.GetById<Framework.Configuration.Domain.UserActionObject>(userActionObjectIdentityDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO userActionObjectSimpleDTO)
        {
            return this.GetById<Framework.Configuration.Domain.UserActionObject>(userActionObjectSimpleDTO.Id);
        }
        
        public virtual Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO userActionObjectRichDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO, Framework.Configuration.Domain.UserActionObject>(userActionObjectRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO userActionObjectRichDTO, Framework.Configuration.Domain.UserAction userAction)
        {
            return this.ToDomainObject(userActionObjectRichDTO, () => new Framework.Configuration.Domain.UserActionObject(userAction));
        }
        
        public virtual Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO userActionObjectStrictDTO)
        {
            return this.ToDomainObject<Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO, Framework.Configuration.Domain.UserActionObject>(userActionObjectStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.UserActionObject ToUserActionObject(Framework.Configuration.Generated.DTO.UserActionObjectStrictDTO userActionObjectStrictDTO, Framework.Configuration.Domain.UserAction userAction)
        {
            return this.ToDomainObject(userActionObjectStrictDTO, () => new Framework.Configuration.Domain.UserActionObject(userAction));
        }
        
        public virtual Framework.Configuration.Domain.Models.Create.UserActionObjectModel ToUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO userActionObjectModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>(userActionObjectModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Create.UserActionObjectModel ToUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO userActionObjectModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO, Framework.Configuration.Domain.Models.Create.UserActionObjectModel>(userActionObjectModelStrictDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel ToUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO userActionObjectRootFilterModelRichDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>(userActionObjectRootFilterModelRichDTO);
        }
        
        public virtual Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel ToUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO userActionObjectRootFilterModelStrictDTO)
        {
            return this.ToDomainObjectBase<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO, Framework.Configuration.Domain.Models.Filters.UserActionObjectRootFilterModel>(userActionObjectRootFilterModelStrictDTO);
        }
    }
    
    public partial class ConfigurationServerPrimitiveDTOMappingService : Framework.Configuration.Generated.DTO.ConfigurationServerPrimitiveDTOMappingServiceBase
    {
        
        public ConfigurationServerPrimitiveDTOMappingService(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
}
