//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.Configuration.BLL
{
    
    
    public partial class ConfigurationValidationMapBase : Framework.Validation.ValidationMapBase
    {
        
        private Framework.Validation.IValidationMap _defaultValidatorMap;
        
        protected ConfigurationValidationMapBase(Framework.Core.IDynamicSource extendedValidationData) : 
                base(extendedValidationData)
        {
            this._defaultValidatorMap = new Framework.Validation.ValidationMap(extendedValidationData);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.DateTime?>> GetAccessableBusinessRoleReportRight_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, string>> GetAccessableBusinessRoleReportRight_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, string>> GetAccessableBusinessRoleReportRight_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.DateTime?>> GetAccessableBusinessRoleReportRight_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>> GetAccessableBusinessRoleReportRight_ValueValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>> GetAccessableBusinessRoleReportRightProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.DateTime?>(source => source.CreateDate, currentClass, this.GetAccessableBusinessRoleReportRight_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, string>(source => source.CreatedBy, currentClass, this.GetAccessableBusinessRoleReportRight_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, string>(source => source.ModifiedBy, currentClass, this.GetAccessableBusinessRoleReportRight_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetAccessableBusinessRoleReportRight_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight, System.Guid>(source => source.Value, currentClass, this.GetAccessableBusinessRoleReportRight_ValueValidators(), this.GetClassMap<System.Guid>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight> GetAccessableBusinessRoleReportRightValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(this.GetAccessableBusinessRoleReportRightProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.DateTime?>> GetAccessableOperationReportRight_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, string>> GetAccessableOperationReportRight_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, string>> GetAccessableOperationReportRight_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.DateTime?>> GetAccessableOperationReportRight_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>> GetAccessableOperationReportRight_ValueValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>> GetAccessableOperationReportRightProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.DateTime?>(source => source.CreateDate, currentClass, this.GetAccessableOperationReportRight_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, string>(source => source.CreatedBy, currentClass, this.GetAccessableOperationReportRight_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, string>(source => source.ModifiedBy, currentClass, this.GetAccessableOperationReportRight_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetAccessableOperationReportRight_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight, System.Guid>(source => source.Value, currentClass, this.GetAccessableOperationReportRight_ValueValidators(), this.GetClassMap<System.Guid>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight> GetAccessableOperationReportRightValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(this.GetAccessableOperationReportRightProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.DateTime?>> GetAccessablePrincipalReportRight_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>> GetAccessablePrincipalReportRight_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>> GetAccessablePrincipalReportRight_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.DateTime?>> GetAccessablePrincipalReportRight_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>> GetAccessablePrincipalReportRight_ValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>> GetAccessablePrincipalReportRightProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.DateTime?>(source => source.CreateDate, currentClass, this.GetAccessablePrincipalReportRight_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>(source => source.CreatedBy, currentClass, this.GetAccessablePrincipalReportRight_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>(source => source.ModifiedBy, currentClass, this.GetAccessablePrincipalReportRight_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetAccessablePrincipalReportRight_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight, string>(source => source.Value, currentClass, this.GetAccessablePrincipalReportRight_ValueValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight> GetAccessablePrincipalReportRightValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(this.GetAccessablePrincipalReportRightProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.CodeFirstSubscription, string>> GetCodeFirstSubscription_CodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.CodeFirstSubscription, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.CodeFirstSubscription>(512);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.CodeFirstSubscription, System.DateTime?>> GetCodeFirstSubscription_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.CodeFirstSubscription>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.CodeFirstSubscription, string>> GetCodeFirstSubscription_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.CodeFirstSubscription>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.CodeFirstSubscription, string>> GetCodeFirstSubscription_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.CodeFirstSubscription>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.CodeFirstSubscription, System.DateTime?>> GetCodeFirstSubscription_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.CodeFirstSubscription>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.CodeFirstSubscription>> GetCodeFirstSubscriptionProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.CodeFirstSubscription> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.CodeFirstSubscription, string>(source => source.Code, currentClass, this.GetCodeFirstSubscription_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.CodeFirstSubscription, System.DateTime?>(source => source.CreateDate, currentClass, this.GetCodeFirstSubscription_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.CodeFirstSubscription, string>(source => source.CreatedBy, currentClass, this.GetCodeFirstSubscription_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.CodeFirstSubscription, string>(source => source.ModifiedBy, currentClass, this.GetCodeFirstSubscription_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.CodeFirstSubscription, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetCodeFirstSubscription_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel> GetCodeFirstSubscriptionRootFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel>.Empty;
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.CodeFirstSubscription> GetCodeFirstSubscriptionValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.CodeFirstSubscription>(this.GetCodeFirstSubscriptionProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, string>> GetControlSettings_AccountNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettings>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings>>> GetControlSettings_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.ControlSettings, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings>, Framework.Configuration.Domain.ControlSettings>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam>>> GetControlSettings_ControlSettingsParamsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.ControlSettings, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam>, Framework.Configuration.Domain.ControlSettingsParam>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, System.DateTime?>> GetControlSettings_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ControlSettings>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, string>> GetControlSettings_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettings>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, string>> GetControlSettings_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettings>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, System.DateTime?>> GetControlSettings_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ControlSettings>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, string>> GetControlSettings_NameValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.ControlSettings, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettings>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettings, Framework.Configuration.Domain.ControlSettings>> GetControlSettings_ParentValidators()
        {
            yield return new Framework.DomainDriven.BLL.FixedPropertyValidator<Framework.Configuration.Domain.ControlSettings, Framework.Configuration.Domain.ControlSettings, System.Guid>(source => source.Parent);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParam, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue>>> GetControlSettingsParam_ControlSettingsParamValuesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.ControlSettingsParam, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue>, Framework.Configuration.Domain.ControlSettingsParamValue>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParam, System.DateTime?>> GetControlSettingsParam_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ControlSettingsParam>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParam, string>> GetControlSettingsParam_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParam>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParam, string>> GetControlSettingsParam_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParam>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParam, System.DateTime?>> GetControlSettingsParam_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ControlSettingsParam>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParam>> GetControlSettingsParamProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ControlSettingsParam> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParam, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParamValue>, Framework.Configuration.Domain.ControlSettingsParamValue>(source => source.ControlSettingsParamValues, currentClass, this.GetControlSettingsParam_ControlSettingsParamValuesValidators(), this.GetClassMap<Framework.Configuration.Domain.ControlSettingsParamValue>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParam, System.DateTime?>(source => source.CreateDate, currentClass, this.GetControlSettingsParam_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParam, string>(source => source.CreatedBy, currentClass, this.GetControlSettingsParam_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParam, string>(source => source.ModifiedBy, currentClass, this.GetControlSettingsParam_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParam, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetControlSettingsParam_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ControlSettingsParam> GetControlSettingsParamValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.ControlSettingsParam>(this.GetControlSettingsParamProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, System.DateTime?>> GetControlSettingsParamValue_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ControlSettingsParamValue>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, string>> GetControlSettingsParamValue_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParamValue>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, string>> GetControlSettingsParamValue_CultureValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParamValue>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, string>> GetControlSettingsParamValue_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParamValue>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, System.DateTime?>> GetControlSettingsParamValue_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ControlSettingsParamValue>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, string>> GetControlSettingsParamValue_ValueTypeNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParamValue>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ControlSettingsParamValue, string>> GetControlSettingsParamValue_ValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ControlSettingsParamValue>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue>> GetControlSettingsParamValueProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, System.DateTime?>(source => source.CreateDate, currentClass, this.GetControlSettingsParamValue_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, string>(source => source.CreatedBy, currentClass, this.GetControlSettingsParamValue_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, string>(source => source.Culture, currentClass, this.GetControlSettingsParamValue_CultureValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, string>(source => source.ModifiedBy, currentClass, this.GetControlSettingsParamValue_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetControlSettingsParamValue_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, string>(source => source.Value, currentClass, this.GetControlSettingsParamValue_ValueValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue, string>(source => source.ValueTypeName, currentClass, this.GetControlSettingsParamValue_ValueTypeNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue> GetControlSettingsParamValueValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.ControlSettingsParamValue>(this.GetControlSettingsParamValueProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.ControlSettings>> GetControlSettingsProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ControlSettings> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, string>(source => source.AccountName, currentClass, this.GetControlSettings_AccountNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.ControlSettings, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettings>, Framework.Configuration.Domain.ControlSettings>(source => source.Children, currentClass, this.GetControlSettings_ChildrenValidators(), this.GetClassMap<Framework.Configuration.Domain.ControlSettings>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.ControlSettings, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.ControlSettingsParam>, Framework.Configuration.Domain.ControlSettingsParam>(source => source.ControlSettingsParams, currentClass, this.GetControlSettings_ControlSettingsParamsValidators(), this.GetClassMap<Framework.Configuration.Domain.ControlSettingsParam>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, System.DateTime?>(source => source.CreateDate, currentClass, this.GetControlSettings_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, string>(source => source.CreatedBy, currentClass, this.GetControlSettings_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, string>(source => source.ModifiedBy, currentClass, this.GetControlSettings_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetControlSettings_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, string>(source => source.Name, currentClass, this.GetControlSettings_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ControlSettings, Framework.Configuration.Domain.ControlSettings>(source => source.Parent, currentClass, this.GetControlSettings_ParentValidators(), this.GetClassMap<Framework.Configuration.Domain.ControlSettings>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ControlSettings> GetControlSettingsValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.ControlSettings>(this.GetControlSettingsProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, System.DateTime?>> GetDomainObjectEvent_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, string>> GetDomainObjectEvent_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, string>> GetDomainObjectEvent_HostNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, string>> GetDomainObjectEvent_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, System.DateTime?>> GetDomainObjectEvent_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, System.DateTime?>> GetDomainObjectEvent_ProcessDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, string>> GetDomainObjectEvent_QueueTagValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectEvent>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainObjectEvent, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, string>> GetDomainObjectEvent_SerializeDataValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectEvent>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectEvent, string>> GetDomainObjectEvent_SerializeTypeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectEvent>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent>> GetDomainObjectEventProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainObjectEvent> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, System.DateTime?>(source => source.CreateDate, currentClass, this.GetDomainObjectEvent_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, string>(source => source.CreatedBy, currentClass, this.GetDomainObjectEvent_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, string>(source => source.HostName, currentClass, this.GetDomainObjectEvent_HostNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, string>(source => source.ModifiedBy, currentClass, this.GetDomainObjectEvent_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetDomainObjectEvent_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, System.DateTime?>(source => source.ProcessDate, currentClass, this.GetDomainObjectEvent_ProcessDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, string>(source => source.QueueTag, currentClass, this.GetDomainObjectEvent_QueueTagValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, string>(source => source.SerializeData, currentClass, this.GetDomainObjectEvent_SerializeDataValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectEvent, string>(source => source.SerializeType, currentClass, this.GetDomainObjectEvent_SerializeTypeValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainObjectEvent> GetDomainObjectEventValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainObjectEvent>(this.GetDomainObjectEventProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, System.DateTime?>> GetDomainObjectModification_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectModification>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, string>> GetDomainObjectModification_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectModification>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, System.Guid>> GetDomainObjectModification_DomainObjectIdValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainObjectModification, System.Guid>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, Framework.Configuration.Domain.DomainType>> GetDomainObjectModification_DomainTypeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainObjectModification, Framework.Configuration.Domain.DomainType>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, string>> GetDomainObjectModification_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectModification>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, System.DateTime?>> GetDomainObjectModification_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectModification>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectModification, long>> GetDomainObjectModification_RevisionValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainObjectModification, long>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification>> GetDomainObjectModificationProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainObjectModification> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, System.DateTime?>(source => source.CreateDate, currentClass, this.GetDomainObjectModification_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, string>(source => source.CreatedBy, currentClass, this.GetDomainObjectModification_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, System.Guid>(source => source.DomainObjectId, currentClass, this.GetDomainObjectModification_DomainObjectIdValidators(), this.GetClassMap<System.Guid>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, Framework.Configuration.Domain.DomainType>(source => source.DomainType, currentClass, this.GetDomainObjectModification_DomainTypeValidators(), this.GetClassMap<Framework.Configuration.Domain.DomainType>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, string>(source => source.ModifiedBy, currentClass, this.GetDomainObjectModification_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetDomainObjectModification_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectModification, long>(source => source.Revision, currentClass, this.GetDomainObjectModification_RevisionValidators(), this.GetClassMap<long>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainObjectModification> GetDomainObjectModificationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainObjectModification>(this.GetDomainObjectModificationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, System.DateTime?>> GetDomainObjectNotification_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectNotification>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, string>> GetDomainObjectNotification_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectNotification>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, string>> GetDomainObjectNotification_HostNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectNotification>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, string>> GetDomainObjectNotification_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectNotification>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, System.DateTime?>> GetDomainObjectNotification_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectNotification>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, System.DateTime?>> GetDomainObjectNotification_ProcessDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainObjectNotification>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainObjectNotification, string>> GetDomainObjectNotification_SerializeDataValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainObjectNotification, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainObjectNotification>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification>> GetDomainObjectNotificationProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainObjectNotification> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, System.DateTime?>(source => source.CreateDate, currentClass, this.GetDomainObjectNotification_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, string>(source => source.CreatedBy, currentClass, this.GetDomainObjectNotification_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, string>(source => source.HostName, currentClass, this.GetDomainObjectNotification_HostNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, string>(source => source.ModifiedBy, currentClass, this.GetDomainObjectNotification_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetDomainObjectNotification_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, System.DateTime?>(source => source.ProcessDate, currentClass, this.GetDomainObjectNotification_ProcessDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainObjectNotification, string>(source => source.SerializeData, currentClass, this.GetDomainObjectNotification_SerializeDataValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainObjectNotification> GetDomainObjectNotificationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainObjectNotification>(this.GetDomainObjectNotificationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, System.DateTime?>> GetDomainType_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, string>> GetDomainType_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation>>> GetDomainType_EventOperationsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<Framework.Configuration.Domain.DomainType, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation>, Framework.Configuration.Domain.DomainTypeEventOperation, System.Tuple<string>>(source => new System.Tuple<string>(Framework.Core.StringExtensions.TrimNull(source.Name).ToLower()), "Name");
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.DomainType, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation>, Framework.Configuration.Domain.DomainTypeEventOperation>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, string>> GetDomainType_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, System.DateTime?>> GetDomainType_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, string>> GetDomainType_NameSpaceValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainType, string>> GetDomainType_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainType>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainType, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventModel, System.Collections.Generic.List<System.Guid>>> GetDomainTypeEventModel_DomainObjectIdentsValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainTypeEventModel, System.Collections.Generic.List<System.Guid>>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.AnyElementsValidator<System.Guid>();
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.DomainTypeEventModel, System.Collections.Generic.List<System.Guid>, System.Guid>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventModel, Framework.Configuration.Domain.DomainTypeEventOperation>> GetDomainTypeEventModel_OperationValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainTypeEventModel, Framework.Configuration.Domain.DomainTypeEventOperation>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventModel>> GetDomainTypeEventModelProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainTypeEventModel> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventModel, System.Collections.Generic.List<System.Guid>, System.Guid>(source => source.DomainObjectIdents, currentClass, this.GetDomainTypeEventModel_DomainObjectIdentsValidators(), this.GetClassMap<System.Guid>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventModel, Framework.Configuration.Domain.DomainTypeEventOperation>(source => source.Operation, currentClass, this.GetDomainTypeEventModel_OperationValidators(), this.GetClassMap<Framework.Configuration.Domain.DomainTypeEventOperation>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainTypeEventModel> GetDomainTypeEventModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainTypeEventModel>(this.GetDomainTypeEventModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventOperation, System.DateTime?>> GetDomainTypeEventOperation_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainTypeEventOperation>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventOperation, string>> GetDomainTypeEventOperation_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainTypeEventOperation>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventOperation, string>> GetDomainTypeEventOperation_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainTypeEventOperation>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventOperation, System.DateTime?>> GetDomainTypeEventOperation_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.DomainTypeEventOperation>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.DomainTypeEventOperation, string>> GetDomainTypeEventOperation_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.DomainTypeEventOperation>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.DomainTypeEventOperation, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation>> GetDomainTypeEventOperationProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation, System.DateTime?>(source => source.CreateDate, currentClass, this.GetDomainTypeEventOperation_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation, string>(source => source.CreatedBy, currentClass, this.GetDomainTypeEventOperation_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation, string>(source => source.ModifiedBy, currentClass, this.GetDomainTypeEventOperation_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetDomainTypeEventOperation_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation, string>(source => source.Name, currentClass, this.GetDomainTypeEventOperation_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation> GetDomainTypeEventOperationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainTypeEventOperation>(this.GetDomainTypeEventOperationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.DomainType>> GetDomainTypeProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainType> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainType, System.DateTime?>(source => source.CreateDate, currentClass, this.GetDomainType_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainType, string>(source => source.CreatedBy, currentClass, this.GetDomainType_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.DomainType, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainTypeEventOperation>, Framework.Configuration.Domain.DomainTypeEventOperation>(source => source.EventOperations, currentClass, this.GetDomainType_EventOperationsValidators(), this.GetClassMap<Framework.Configuration.Domain.DomainTypeEventOperation>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainType, string>(source => source.ModifiedBy, currentClass, this.GetDomainType_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainType, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetDomainType_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainType, string>(source => source.Name, currentClass, this.GetDomainType_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.DomainType, string>(source => source.NameSpace, currentClass, this.GetDomainType_NameSpaceValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainTypeRootFilterModel> GetDomainTypeRootFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainTypeRootFilterModel>.Empty;
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.DomainType> GetDomainTypeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.DomainType>(this.GetDomainTypeProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, System.DateTime?>> GetExceptionMessage_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ExceptionMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, string>> GetExceptionMessage_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ExceptionMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, Framework.Configuration.Domain.ExceptionMessage>> GetExceptionMessage_InnerExceptionValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<Framework.Configuration.Domain.ExceptionMessage, Framework.Configuration.Domain.ExceptionMessage>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, string>> GetExceptionMessage_MessageTypeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ExceptionMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, string>> GetExceptionMessage_MessageValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ExceptionMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, string>> GetExceptionMessage_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ExceptionMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, System.DateTime?>> GetExceptionMessage_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.ExceptionMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessage, string>> GetExceptionMessage_StackTraceValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.ExceptionMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage>> GetExceptionMessageProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ExceptionMessage> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, System.DateTime?>(source => source.CreateDate, currentClass, this.GetExceptionMessage_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, string>(source => source.CreatedBy, currentClass, this.GetExceptionMessage_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, Framework.Configuration.Domain.ExceptionMessage>(source => source.InnerException, currentClass, this.GetExceptionMessage_InnerExceptionValidators(), this.GetClassMap<Framework.Configuration.Domain.ExceptionMessage>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, string>(source => source.Message, currentClass, this.GetExceptionMessage_MessageValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, string>(source => source.MessageType, currentClass, this.GetExceptionMessage_MessageTypeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, string>(source => source.ModifiedBy, currentClass, this.GetExceptionMessage_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetExceptionMessage_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessage, string>(source => source.StackTrace, currentClass, this.GetExceptionMessage_StackTraceValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.ExceptionMessageRootFilterModel, Framework.Core.Period>> GetExceptionMessageRootFilterModel_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<Framework.Configuration.Domain.ExceptionMessageRootFilterModel>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.ExceptionMessageRootFilterModel>> GetExceptionMessageRootFilterModelProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ExceptionMessageRootFilterModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.ExceptionMessageRootFilterModel, Framework.Core.Period>(source => source.Period, currentClass, this.GetExceptionMessageRootFilterModel_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ExceptionMessageRootFilterModel> GetExceptionMessageRootFilterModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.ExceptionMessageRootFilterModel>(this.GetExceptionMessageRootFilterModelProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.ExceptionMessage> GetExceptionMessageValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.ExceptionMessage>(this.GetExceptionMessageProperties);
        }
        
        protected override Framework.Validation.IClassValidationMap<TSource> GetInternalClassMap<TSource>()
        {
            if ((typeof(TSource) == typeof(Framework.Configuration.Domain.CodeFirstSubscription)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetCodeFirstSubscriptionValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.CodeFirstSubscriptionRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetCodeFirstSubscriptionRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.ControlSettings)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetControlSettingsValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.ControlSettingsParam)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetControlSettingsParamValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.ControlSettingsParamValue)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetControlSettingsParamValueValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainObjectEvent)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainObjectEventValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainObjectModification)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainObjectModificationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainObjectNotification)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainObjectNotificationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainType)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainTypeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainTypeEventModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainTypeEventModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainTypeEventOperation)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainTypeEventOperationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.DomainTypeRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDomainTypeRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.ExceptionMessage)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetExceptionMessageValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.ExceptionMessageRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetExceptionMessageRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.LogMessage)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetLogMessageValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportGenerationModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportGenerationRequestModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportGenerationValueValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportParameterValueValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.NamedLock)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetNamedLockValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.QueueProcessingState)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetQueueProcessingStateValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetAccessableBusinessRoleReportRightValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.AccessableOperationReportRight)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetAccessableOperationReportRightValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetAccessablePrincipalReportRightValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.Report)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.ReportFilter)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportFilterValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.ReportParameter)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportParameterValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Reports.ReportProperty)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetReportPropertyValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.SentMessage)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSentMessageValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.Sequence)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSequenceValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.SequenceCreateModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSequenceCreateModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.SequenceRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSequenceRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.SystemConstant)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSystemConstantValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.SystemConstantRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSystemConstantRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.TargetSystem)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTargetSystemValidationMap()));
            }
            else if ((typeof(TSource) == typeof(Framework.Configuration.Domain.TargetSystemRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTargetSystemRootFilterModelValidationMap()));
            }
            else
            {
                return Framework.Validation.ValidationMapExtensions.GetClassMap<TSource>(this._defaultValidatorMap);
            }
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, string>> GetLogMessage_ActionValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.LogMessage>(512);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, System.DateTime?>> GetLogMessage_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.LogMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, string>> GetLogMessage_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.LogMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, string>> GetLogMessage_InputMessageValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.LogMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, string>> GetLogMessage_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.LogMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, System.DateTime?>> GetLogMessage_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.LogMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, string>> GetLogMessage_OutputMessageValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.LogMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, Framework.Core.Period>> GetLogMessage_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<Framework.Configuration.Domain.LogMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.LogMessage, string>> GetLogMessage_UserNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.LogMessage>(512);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.LogMessage>> GetLogMessageProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.LogMessage> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, string>(source => source.Action, currentClass, this.GetLogMessage_ActionValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, System.DateTime?>(source => source.CreateDate, currentClass, this.GetLogMessage_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, string>(source => source.CreatedBy, currentClass, this.GetLogMessage_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, string>(source => source.InputMessage, currentClass, this.GetLogMessage_InputMessageValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, string>(source => source.ModifiedBy, currentClass, this.GetLogMessage_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetLogMessage_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, string>(source => source.OutputMessage, currentClass, this.GetLogMessage_OutputMessageValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, Framework.Core.Period>(source => source.Period, currentClass, this.GetLogMessage_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.LogMessage, string>(source => source.UserName, currentClass, this.GetLogMessage_UserNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.LogMessage> GetLogMessageValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.LogMessage>(this.GetLogMessageProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.NamedLock, System.DateTime?>> GetNamedLock_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.NamedLock>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.NamedLock, string>> GetNamedLock_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.NamedLock>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.NamedLock, string>> GetNamedLock_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.NamedLock>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.NamedLock, System.DateTime?>> GetNamedLock_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.NamedLock>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.NamedLock>> GetNamedLockProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.NamedLock> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.NamedLock, System.DateTime?>(source => source.CreateDate, currentClass, this.GetNamedLock_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.NamedLock, string>(source => source.CreatedBy, currentClass, this.GetNamedLock_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.NamedLock, string>(source => source.ModifiedBy, currentClass, this.GetNamedLock_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.NamedLock, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetNamedLock_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.NamedLock> GetNamedLockValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.NamedLock>(this.GetNamedLockProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.QueueProcessingState, System.DateTime?>> GetQueueProcessingState_LastProcessedItemDateTimeValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.QueueProcessingState>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.QueueProcessingState>> GetQueueProcessingStateProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.QueueProcessingState> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.QueueProcessingState, System.DateTime?>(source => source.LastProcessedItemDateTime, currentClass, this.GetQueueProcessingState_LastProcessedItemDateTimeValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.QueueProcessingState> GetQueueProcessingStateValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.QueueProcessingState>(this.GetQueueProcessingStateProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>>> GetReport_AccessableBusinessRolesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>>> GetReport_AccessableOperationsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>>> GetReport_AccessablePrincipalsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.DateTime?>> GetReport_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, string>> GetReport_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, string>> GetReport_DescriptionValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.Report>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, string>> GetReport_DomainTypeNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter>>> GetReport_FiltersValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter>, Framework.Configuration.Domain.Reports.ReportFilter>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, string>> GetReport_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.DateTime?>> GetReport_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, string>> GetReport_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.Report, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, string>> GetReport_OwnerValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.Report>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter>>> GetReport_ParametersValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Configuration.Domain.Reports.ReportParameter, System.Tuple<Framework.Configuration.Domain.Reports.Report, string>>(source => new System.Tuple<Framework.Configuration.Domain.Reports.Report, string>(source.Report, Framework.Core.StringExtensions.TrimNull(source.Name).ToLower()), "Report, Name");
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Configuration.Domain.Reports.ReportParameter>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty>>> GetReport_PropertiesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty>, Framework.Configuration.Domain.Reports.ReportProperty>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, System.DateTime?>> GetReportFilter_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>> GetReportFilter_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>> GetReportFilter_FilterOperatorValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>> GetReportFilter_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, System.DateTime?>> GetReportFilter_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>> GetReportFilter_PropertyValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, Framework.Configuration.Domain.Reports.Report>> GetReportFilter_ReportValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportFilter, Framework.Configuration.Domain.Reports.Report>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>> GetReportFilter_ValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportFilter>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportFilter, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter>> GetReportFilterProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.ReportFilter> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, System.DateTime?>(source => source.CreateDate, currentClass, this.GetReportFilter_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, string>(source => source.CreatedBy, currentClass, this.GetReportFilter_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, string>(source => source.FilterOperator, currentClass, this.GetReportFilter_FilterOperatorValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, string>(source => source.ModifiedBy, currentClass, this.GetReportFilter_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetReportFilter_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, string>(source => source.Property, currentClass, this.GetReportFilter_PropertyValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, Framework.Configuration.Domain.Reports.Report>(source => source.Report, currentClass, this.GetReportFilter_ReportValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.Report>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportFilter, string>(source => source.Value, currentClass, this.GetReportFilter_ValueValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.ReportFilter> GetReportFilterValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.ReportFilter>(this.GetReportFilterProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>>> GetReportGenerationModel_ItemsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationPredefineValue>>> GetReportGenerationModel_PredefineGenerationValuesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationPredefineValue>, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationPredefineValue>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>> GetReportGenerationModelProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(source => source.Items, currentClass, this.GetReportGenerationModel_ItemsValidators(), this.GetClassMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationPredefineValue>, Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationPredefineValue>(source => source.PredefineGenerationValues, currentClass, this.GetReportGenerationModel_PredefineGenerationValuesValidators(), this.GetClassMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationPredefineValue>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel> GetReportGenerationModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationModel>(this.GetReportGenerationModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel, System.Collections.Generic.List<Framework.Configuration.Domain.Reports.ReportParameter>>> GetReportGenerationRequestModel_ParametersValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel, System.Collections.Generic.List<Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Configuration.Domain.Reports.ReportParameter>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel, System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata>>> GetReportGenerationRequestModel_TypeMetadatasValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel, System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata>, Framework.DomainDriven.SerializeMetadata.TypeMetadata>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>> GetReportGenerationRequestModelProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel, System.Collections.Generic.List<Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Configuration.Domain.Reports.ReportParameter>(source => source.Parameters, currentClass, this.GetReportGenerationRequestModel_ParametersValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.ReportParameter>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel, System.Collections.Generic.List<Framework.DomainDriven.SerializeMetadata.TypeMetadata>, Framework.DomainDriven.SerializeMetadata.TypeMetadata>(source => source.TypeMetadatas, currentClass, this.GetReportGenerationRequestModel_TypeMetadatasValidators(), this.GetClassMap<Framework.DomainDriven.SerializeMetadata.TypeMetadata>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel> GetReportGenerationRequestModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationRequestModel>(this.GetReportGenerationRequestModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue, string>> GetReportGenerationValue_DesignValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue, string>> GetReportGenerationValue_ValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>> GetReportGenerationValueProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue, string>(source => source.DesignValue, currentClass, this.GetReportGenerationValue_DesignValueValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue, string>(source => source.Value, currentClass, this.GetReportGenerationValue_ValueValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue> GetReportGenerationValueValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportGenerationValue>(this.GetReportGenerationValueProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, System.DateTime?>> GetReportParameter_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, string>> GetReportParameter_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, string>> GetReportParameter_DisplayValuePropertyValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, string>> GetReportParameter_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, System.DateTime?>> GetReportParameter_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, string>> GetReportParameter_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportParameter, string>> GetReportParameter_TypeNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportParameter>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter>> GetReportParameterProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.ReportParameter> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, System.DateTime?>(source => source.CreateDate, currentClass, this.GetReportParameter_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, string>(source => source.CreatedBy, currentClass, this.GetReportParameter_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, string>(source => source.DisplayValueProperty, currentClass, this.GetReportParameter_DisplayValuePropertyValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, string>(source => source.ModifiedBy, currentClass, this.GetReportParameter_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetReportParameter_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, string>(source => source.Name, currentClass, this.GetReportParameter_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportParameter, string>(source => source.TypeName, currentClass, this.GetReportParameter_TypeNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.ReportParameter> GetReportParameterValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.ReportParameter>(this.GetReportParameterProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, string>> GetReportParameterValue_DesignValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, Framework.Configuration.Domain.Reports.ReportParameter>> GetReportParameterValue_ReportParameterValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, Framework.Configuration.Domain.Reports.ReportParameter>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, string>> GetReportParameterValue_ValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>> GetReportParameterValueProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, string>(source => source.DesignValue, currentClass, this.GetReportParameterValue_DesignValueValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, Framework.Configuration.Domain.Reports.ReportParameter>(source => source.ReportParameter, currentClass, this.GetReportParameterValue_ReportParameterValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.ReportParameter>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue, string>(source => source.Value, currentClass, this.GetReportParameterValue_ValueValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue> GetReportParameterValueValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Models.Custom.Reports.ReportParameterValue>(this.GetReportParameterValueProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.Report>> GetReportProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.Report> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>, Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(source => source.AccessableBusinessRoles, currentClass, this.GetReport_AccessableBusinessRolesValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.AccessableBusinessRoleReportRight>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>, Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(source => source.AccessableOperations, currentClass, this.GetReport_AccessableOperationsValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.AccessableOperationReportRight>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>, Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(source => source.AccessablePrincipals, currentClass, this.GetReport_AccessablePrincipalsValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.AccessablePrincipalReportRight>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.DateTime?>(source => source.CreateDate, currentClass, this.GetReport_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, string>(source => source.CreatedBy, currentClass, this.GetReport_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, string>(source => source.Description, currentClass, this.GetReport_DescriptionValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, string>(source => source.DomainTypeName, currentClass, this.GetReport_DomainTypeNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportFilter>, Framework.Configuration.Domain.Reports.ReportFilter>(source => source.Filters, currentClass, this.GetReport_FiltersValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.ReportFilter>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, string>(source => source.ModifiedBy, currentClass, this.GetReport_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetReport_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, string>(source => source.Name, currentClass, this.GetReport_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.Report, string>(source => source.Owner, currentClass, this.GetReport_OwnerValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportParameter>, Framework.Configuration.Domain.Reports.ReportParameter>(source => source.Parameters, currentClass, this.GetReport_ParametersValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.ReportParameter>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.Reports.Report, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.Reports.ReportProperty>, Framework.Configuration.Domain.Reports.ReportProperty>(source => source.Properties, currentClass, this.GetReport_PropertiesValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.ReportProperty>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>> GetReportProperty_AliasValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, System.DateTime?>> GetReportProperty_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>> GetReportProperty_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>> GetReportProperty_FormulaValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>> GetReportProperty_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, System.DateTime?>> GetReportProperty_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>> GetReportProperty_PropertyPathValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Reports.ReportProperty>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportProperty, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Reports.ReportProperty, Framework.Configuration.Domain.Reports.Report>> GetReportProperty_ReportValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Reports.ReportProperty, Framework.Configuration.Domain.Reports.Report>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty>> GetReportPropertyProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.ReportProperty> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, string>(source => source.Alias, currentClass, this.GetReportProperty_AliasValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, System.DateTime?>(source => source.CreateDate, currentClass, this.GetReportProperty_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, string>(source => source.CreatedBy, currentClass, this.GetReportProperty_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, string>(source => source.Formula, currentClass, this.GetReportProperty_FormulaValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, string>(source => source.ModifiedBy, currentClass, this.GetReportProperty_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetReportProperty_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, string>(source => source.PropertyPath, currentClass, this.GetReportProperty_PropertyPathValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Reports.ReportProperty, Framework.Configuration.Domain.Reports.Report>(source => source.Report, currentClass, this.GetReportProperty_ReportValidators(), this.GetClassMap<Framework.Configuration.Domain.Reports.Report>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.ReportProperty> GetReportPropertyValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.ReportProperty>(this.GetReportPropertyProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Reports.Report> GetReportValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Reports.Report>(this.GetReportProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_CommentValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_ContextObjectTypeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_CopyValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, System.DateTime?>> GetSentMessage_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_FromValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_MessageValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, System.DateTime?>> GetSentMessage_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_ReplyToValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_SubjectValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(1000);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_TemplateNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SentMessage, string>> GetSentMessage_ToValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SentMessage>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.SentMessage>> GetSentMessageProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SentMessage> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.Comment, currentClass, this.GetSentMessage_CommentValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.ContextObjectType, currentClass, this.GetSentMessage_ContextObjectTypeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.Copy, currentClass, this.GetSentMessage_CopyValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, System.DateTime?>(source => source.CreateDate, currentClass, this.GetSentMessage_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.CreatedBy, currentClass, this.GetSentMessage_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.From, currentClass, this.GetSentMessage_FromValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.Message, currentClass, this.GetSentMessage_MessageValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.ModifiedBy, currentClass, this.GetSentMessage_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetSentMessage_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.ReplyTo, currentClass, this.GetSentMessage_ReplyToValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.Subject, currentClass, this.GetSentMessage_SubjectValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.TemplateName, currentClass, this.GetSentMessage_TemplateNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SentMessage, string>(source => source.To, currentClass, this.GetSentMessage_ToValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SentMessage> GetSentMessageValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.SentMessage>(this.GetSentMessageProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Sequence, System.DateTime?>> GetSequence_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Sequence>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Sequence, string>> GetSequence_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Sequence>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Sequence, string>> GetSequence_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Sequence>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Sequence, System.DateTime?>> GetSequence_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.Sequence>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Sequence, string>> GetSequence_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.Sequence>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.Sequence, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.Sequence, long>> GetSequence_NumberValidators()
        {
            yield return new Framework.Validation.Int64ValueValidator(0, 9223372036854775807);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SequenceCreateModel> GetSequenceCreateModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.SequenceCreateModel>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.Sequence>> GetSequenceProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Sequence> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Sequence, System.DateTime?>(source => source.CreateDate, currentClass, this.GetSequence_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Sequence, string>(source => source.CreatedBy, currentClass, this.GetSequence_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Sequence, string>(source => source.ModifiedBy, currentClass, this.GetSequence_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Sequence, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetSequence_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Sequence, string>(source => source.Name, currentClass, this.GetSequence_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.Sequence, long>(source => source.Number, currentClass, this.GetSequence_NumberValidators(), this.GetClassMap<long>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SequenceRootFilterModel> GetSequenceRootFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.SequenceRootFilterModel>.Empty;
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.Sequence> GetSequenceValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.Sequence>(this.GetSequenceProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, string>> GetSystemConstant_CodeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SystemConstant>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.SystemConstant, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, System.DateTime?>> GetSystemConstant_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.SystemConstant>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, string>> GetSystemConstant_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SystemConstant>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, string>> GetSystemConstant_DescriptionValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SystemConstant>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, string>> GetSystemConstant_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SystemConstant>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, System.DateTime?>> GetSystemConstant_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.SystemConstant>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, Framework.Configuration.Domain.DomainType>> GetSystemConstant_TypeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.SystemConstant, Framework.Configuration.Domain.DomainType>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.SystemConstant, string>> GetSystemConstant_ValueValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.SystemConstant>(2147483647);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.SystemConstant>> GetSystemConstantProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SystemConstant> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, string>(source => source.Code, currentClass, this.GetSystemConstant_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, System.DateTime?>(source => source.CreateDate, currentClass, this.GetSystemConstant_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, string>(source => source.CreatedBy, currentClass, this.GetSystemConstant_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, string>(source => source.Description, currentClass, this.GetSystemConstant_DescriptionValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, string>(source => source.ModifiedBy, currentClass, this.GetSystemConstant_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetSystemConstant_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, Framework.Configuration.Domain.DomainType>(source => source.Type, currentClass, this.GetSystemConstant_TypeValidators(), this.GetClassMap<Framework.Configuration.Domain.DomainType>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.SystemConstant, string>(source => source.Value, currentClass, this.GetSystemConstant_ValueValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SystemConstantRootFilterModel> GetSystemConstantRootFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.SystemConstantRootFilterModel>.Empty;
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.SystemConstant> GetSystemConstantValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.SystemConstant>(this.GetSystemConstantProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.TargetSystem, System.DateTime?>> GetTargetSystem_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.TargetSystem>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.TargetSystem, string>> GetTargetSystem_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.TargetSystem>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.TargetSystem, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType>>> GetTargetSystem_DomainTypesValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<Framework.Configuration.Domain.TargetSystem, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType>, Framework.Configuration.Domain.DomainType, System.Tuple<string, string>>(source => new System.Tuple<string, string>(Framework.Core.StringExtensions.TrimNull(source.Name).ToLower(), Framework.Core.StringExtensions.TrimNull(source.NameSpace).ToLower()), "Name, NameSpace");
            yield return new Framework.Validation.DeepCollectionValidator<Framework.Configuration.Domain.TargetSystem, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType>, Framework.Configuration.Domain.DomainType>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.TargetSystem, string>> GetTargetSystem_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.TargetSystem>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.TargetSystem, System.DateTime?>> GetTargetSystem_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<Framework.Configuration.Domain.TargetSystem>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<Framework.Configuration.Domain.TargetSystem, string>> GetTargetSystem_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<Framework.Configuration.Domain.TargetSystem>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<Framework.Configuration.Domain.TargetSystem, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<Framework.Configuration.Domain.TargetSystem>> GetTargetSystemProperties(Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.TargetSystem> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.TargetSystem, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTargetSystem_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.TargetSystem, string>(source => source.CreatedBy, currentClass, this.GetTargetSystem_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<Framework.Configuration.Domain.TargetSystem, System.Collections.Generic.IEnumerable<Framework.Configuration.Domain.DomainType>, Framework.Configuration.Domain.DomainType>(source => source.DomainTypes, currentClass, this.GetTargetSystem_DomainTypesValidators(), this.GetClassMap<Framework.Configuration.Domain.DomainType>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.TargetSystem, string>(source => source.ModifiedBy, currentClass, this.GetTargetSystem_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.TargetSystem, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTargetSystem_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<Framework.Configuration.Domain.TargetSystem, string>(source => source.Name, currentClass, this.GetTargetSystem_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.TargetSystemRootFilterModel> GetTargetSystemRootFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.TargetSystemRootFilterModel>.Empty;
        }
        
        protected virtual Framework.Validation.IClassValidationMap<Framework.Configuration.Domain.TargetSystem> GetTargetSystemValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<Framework.Configuration.Domain.TargetSystem>(this.GetTargetSystemProperties);
        }
    }
    
    public partial class ConfigurationValidationMap : Framework.Configuration.BLL.ConfigurationValidationMapBase
    {
        
        public ConfigurationValidationMap(Framework.Core.IDynamicSource extendedValidationData) : 
                base(extendedValidationData)
        {
        }
    }
}
