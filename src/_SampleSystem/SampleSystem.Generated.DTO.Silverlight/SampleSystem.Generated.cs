//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleSystem.Generated.DTO
{
    
    
    public partial interface ISampleSystemClientDTOMappingService
    {
        
        void MapBaseAuditPersistentToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapEmployee(SampleSystem.Generated.DTO.EmployeeUpdateDTO target, SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource);
        
        void MapEmployee(SampleSystem.Generated.DTO.EmployeeUpdateDTO target, SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeStrictDTO baseSource);
        
        void MapEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource);
        
        void MapEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO baseSource);
        
        void MapEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource);
        
        void MapEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO baseSource);
        
        void MapEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource);
        
        void MapEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO baseSource);
        
        void MapEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource);
        
        void MapEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO baseSource);
        
        void MapExample1(SampleSystem.Generated.DTO.Example1UpdateDTO target, SampleSystem.Generated.DTO.Example1StrictDTO currentSource);
        
        void MapExample1(SampleSystem.Generated.DTO.Example1UpdateDTO target, SampleSystem.Generated.DTO.Example1StrictDTO currentSource, SampleSystem.Generated.DTO.Example1StrictDTO baseSource);
        
        void MapExample2(SampleSystem.Generated.DTO.Example2UpdateDTO target, SampleSystem.Generated.DTO.Example2StrictDTO currentSource);
        
        void MapExample2(SampleSystem.Generated.DTO.Example2UpdateDTO target, SampleSystem.Generated.DTO.Example2StrictDTO currentSource, SampleSystem.Generated.DTO.Example2StrictDTO baseSource);
        
        void MapFullToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.AddressFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO currentSource);
        
        void MapFullToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO currentSource);
        
        void MapFullToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO currentSource);
        
        void MapFullToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.CountryFullDTO currentSource);
        
        void MapFullToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.EmployeeFullDTO currentSource);
        
        void MapFullToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO currentSource);
        
        void MapFullToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO currentSource);
        
        void MapFullToStrictForEmployeeEmailChangeModel(SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO currentSource);
        
        void MapFullToStrictForEmployeeEmailMassChangeModel(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO currentSource);
        
        void MapFullToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO currentSource);
        
        void MapFullToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO currentSource);
        
        void MapFullToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.Example1FullDTO currentSource);
        
        void MapFullToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.Example2FullDTO currentSource);
        
        void MapFullToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentFullDTO currentSource);
        
        void MapFullToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO currentSource);
        
        void MapFullToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO currentSource);
        
        void MapFullToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.LocationFullDTO currentSource);
        
        void MapFullToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitFullDTO currentSource);
        
        void MapFullToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO currentSource);
        
        void MapFullToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO currentSource);
        
        void MapFullToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.PrincipalFullDTO currentSource);
        
        void MapFullToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjFullDTO currentSource);
        
        void MapFullToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO currentSource);
        
        void MapFullToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.TestImmutableObjFullDTO currentSource);
        
        void MapRichToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.AddressRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO currentSource);
        
        void MapRichToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO currentSource);
        
        void MapRichToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO currentSource);
        
        void MapRichToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.CountryRichDTO currentSource);
        
        void MapRichToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.EmployeeRichDTO currentSource);
        
        void MapRichToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO currentSource);
        
        void MapRichToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO currentSource);
        
        void MapRichToStrictForEmployeeEmailChangeModel(SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO currentSource);
        
        void MapRichToStrictForEmployeeEmailMassChangeModel(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO currentSource);
        
        void MapRichToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO currentSource);
        
        void MapRichToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO currentSource);
        
        void MapRichToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.Example1RichDTO currentSource);
        
        void MapRichToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.Example2RichDTO currentSource);
        
        void MapRichToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRichDTO currentSource);
        
        void MapRichToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO currentSource);
        
        void MapRichToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO currentSource);
        
        void MapRichToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.LocationRichDTO currentSource);
        
        void MapRichToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitRichDTO currentSource);
        
        void MapRichToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO currentSource);
        
        void MapRichToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO currentSource);
        
        void MapRichToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.PrincipalRichDTO currentSource);
        
        void MapRichToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.TestImmutableObjRichDTO currentSource);
        
        void MapSimpleToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.AddressSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO currentSource);
        
        void MapSimpleToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO currentSource);
        
        void MapSimpleToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO currentSource);
        
        void MapSimpleToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.CountrySimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.EmployeeSimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployeeEmailChangeModel(SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployeeEmailMassChangeModel(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO currentSource);
        
        void MapSimpleToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO currentSource);
        
        void MapSimpleToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.Example1SimpleDTO currentSource);
        
        void MapSimpleToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.Example2SimpleDTO currentSource);
        
        void MapSimpleToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentSimpleDTO currentSource);
        
        void MapSimpleToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO currentSource);
        
        void MapSimpleToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO currentSource);
        
        void MapSimpleToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.LocationSimpleDTO currentSource);
        
        void MapSimpleToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitSimpleDTO currentSource);
        
        void MapSimpleToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO currentSource);
        
        void MapSimpleToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO currentSource);
        
        void MapSimpleToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.PrincipalSimpleDTO currentSource);
        
        void MapSimpleToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO currentSource);
        
        void MapSimpleToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO currentSource);
        
        void MapSimpleToStrictForTestDefaultFieldsMappingObj(SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjStrictDTO target, SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO currentSource);
        
        void MapSimpleToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO currentSource);
    }
    
    public abstract partial class SampleSystemClientPrimitiveDTOMappingServiceBase : Framework.Persistent.ClientDTOMappingServiceBase, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService
    {
        
        public virtual void MapBaseAuditPersistentToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBasePersistentToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapEmployee(SampleSystem.Generated.DTO.EmployeeUpdateDTO target, SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Age = Framework.Core.Maybe.Return(currentSource.Age);
            target.BirthDate = Framework.Core.Maybe.Return(currentSource.BirthDate);
            target.CanBePPM = Framework.Core.Maybe.Return(currentSource.CanBePPM);
            target.CellPhones = this.ExtractUpdateDataFromSingle<SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO>(currentSource.CellPhones, employeeCellPhone => new SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO(employeeCellPhone, this));
            target.EducationDuration = Framework.Core.Maybe.Return(currentSource.EducationDuration);
            target.Email = Framework.Core.Maybe.Return(currentSource.Email);
            target.EmployeeToEmployeeLinks = this.ExtractUpdateDataFromSingle<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO>(currentSource.EmployeeToEmployeeLinks, employeeToEmployeeLink => new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO(employeeToEmployeeLink, this));
            target.ExternalId = Framework.Core.Maybe.Return(currentSource.ExternalId);
            target.Gender = Framework.Core.Maybe.Return(currentSource.Gender);
            target.Id = currentSource.Id;
            target.Interphone = Framework.Core.Maybe.Return(currentSource.Interphone);
            target.Landlinephone = Framework.Core.Maybe.Return(currentSource.Landlinephone);
            target.LastActionDate = Framework.Core.Maybe.Return(currentSource.LastActionDate);
            target.Login = currentSource.Login;
            target.NameEng = Framework.Core.Maybe.Return(currentSource.NameEng);
            target.NameNative = Framework.Core.Maybe.Return(currentSource.NameNative);
            target.NameRussian = Framework.Core.Maybe.Return(currentSource.NameRussian);
            target.NonValidateVirtualProp = Framework.Core.Maybe.Return(currentSource.NonValidateVirtualProp);
            target.PersonalCellPhones = this.ExtractSecurityUpdateDataFromSingle<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO>(currentSource.PersonalCellPhones, employeePersonalCellPhone => new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO(employeePersonalCellPhone, this));
            target.Pin = Framework.Core.Maybe.Return(currentSource.Pin);
            target.PlannedHireDate = Framework.Core.Maybe.Return(currentSource.PlannedHireDate);
            target.Position = currentSource.Position;
            target.Ppm = Framework.Core.Maybe.Return(currentSource.Ppm);
            target.RegistrationType = Framework.Core.Maybe.Return(currentSource.RegistrationType);
            target.Role = Framework.Core.Maybe.Return(currentSource.Role);
            target.RoleDegree = Framework.Core.Maybe.Return(currentSource.RoleDegree);
            target.Specializations = this.ExtractUpdateDataFromSingle<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO>(currentSource.Specializations, employeeAndEmployeeSpecializationLink => new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO(employeeAndEmployeeSpecializationLink, this));
            target.VacationApprover = Framework.Core.Maybe.Return(currentSource.VacationApprover);
            target.ValidateVirtualProp = Framework.Core.Maybe.Return(currentSource.ValidateVirtualProp);
            target.Version = currentSource.Version;
            target.WorkPeriod = Framework.Core.Maybe.Return(currentSource.WorkPeriod);
        }
        
        public virtual void MapEmployee(SampleSystem.Generated.DTO.EmployeeUpdateDTO target, SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeStrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.Age != currentSource.Age)
            {
                target.Age = Framework.Core.Maybe.Return(currentSource.Age);
            }
            if (baseSource.BirthDate != currentSource.BirthDate)
            {
                target.BirthDate = Framework.Core.Maybe.Return(currentSource.BirthDate);
            }
            if (baseSource.CanBePPM != currentSource.CanBePPM)
            {
                target.CanBePPM = Framework.Core.Maybe.Return(currentSource.CanBePPM);
            }
            target.CellPhones = this.ExtractUpdateDataL<SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO>(currentSource.CellPhones, baseSource.CellPhones, (currentSourceItem, baseSourceItem) => new SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO(currentSourceItem, baseSourceItem, this), currentSourceItem => new SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO(currentSourceItem, this));
            if (baseSource.EducationDuration != currentSource.EducationDuration)
            {
                target.EducationDuration = Framework.Core.Maybe.Return(currentSource.EducationDuration);
            }
            if (baseSource.Email != currentSource.Email)
            {
                target.Email = Framework.Core.Maybe.Return(currentSource.Email);
            }
            target.EmployeeToEmployeeLinks = this.ExtractUpdateDataL<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO>(currentSource.EmployeeToEmployeeLinks, baseSource.EmployeeToEmployeeLinks, (currentSourceItem, baseSourceItem) => new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO(currentSourceItem, baseSourceItem, this), currentSourceItem => new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO(currentSourceItem, this));
            if (baseSource.ExternalId != currentSource.ExternalId)
            {
                target.ExternalId = Framework.Core.Maybe.Return(currentSource.ExternalId);
            }
            if (baseSource.Gender != currentSource.Gender)
            {
                target.Gender = Framework.Core.Maybe.Return(currentSource.Gender);
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            if (baseSource.Interphone != currentSource.Interphone)
            {
                target.Interphone = Framework.Core.Maybe.Return(currentSource.Interphone);
            }
            if (baseSource.Landlinephone != currentSource.Landlinephone)
            {
                target.Landlinephone = Framework.Core.Maybe.Return(currentSource.Landlinephone);
            }
            if (baseSource.LastActionDate != currentSource.LastActionDate)
            {
                target.LastActionDate = Framework.Core.Maybe.Return(currentSource.LastActionDate);
            }
            if (baseSource.Login != currentSource.Login)
            {
                target.Login = currentSource.Login;
            }
            if (baseSource.NameEng != currentSource.NameEng)
            {
                target.NameEng = Framework.Core.Maybe.Return(currentSource.NameEng);
            }
            if (baseSource.NameNative != currentSource.NameNative)
            {
                target.NameNative = Framework.Core.Maybe.Return(currentSource.NameNative);
            }
            if (baseSource.NameRussian != currentSource.NameRussian)
            {
                target.NameRussian = Framework.Core.Maybe.Return(currentSource.NameRussian);
            }
            if (baseSource.NonValidateVirtualProp != currentSource.NonValidateVirtualProp)
            {
                target.NonValidateVirtualProp = Framework.Core.Maybe.Return(currentSource.NonValidateVirtualProp);
            }
            target.PersonalCellPhones = this.ExtractSecurityUpdateDataL<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO>(currentSource.PersonalCellPhones, baseSource.PersonalCellPhones, (currentSourceItem, baseSourceItem) => new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO(currentSourceItem, baseSourceItem, this), currentSourceItem => new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO(currentSourceItem, this));
            if (baseSource.Pin != currentSource.Pin)
            {
                target.Pin = Framework.Core.Maybe.Return(currentSource.Pin);
            }
            if (baseSource.PlannedHireDate != currentSource.PlannedHireDate)
            {
                target.PlannedHireDate = Framework.Core.Maybe.Return(currentSource.PlannedHireDate);
            }
            if (baseSource.Position != currentSource.Position)
            {
                target.Position = currentSource.Position;
            }
            if (baseSource.Ppm != currentSource.Ppm)
            {
                target.Ppm = Framework.Core.Maybe.Return(currentSource.Ppm);
            }
            if (baseSource.RegistrationType != currentSource.RegistrationType)
            {
                target.RegistrationType = Framework.Core.Maybe.Return(currentSource.RegistrationType);
            }
            if (baseSource.Role != currentSource.Role)
            {
                target.Role = Framework.Core.Maybe.Return(currentSource.Role);
            }
            if (baseSource.RoleDegree != currentSource.RoleDegree)
            {
                target.RoleDegree = Framework.Core.Maybe.Return(currentSource.RoleDegree);
            }
            target.Specializations = this.ExtractUpdateDataL<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO>(currentSource.Specializations, baseSource.Specializations, (currentSourceItem, baseSourceItem) => new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO(currentSourceItem, baseSourceItem, this), currentSourceItem => new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO(currentSourceItem, this));
            if (baseSource.VacationApprover != currentSource.VacationApprover)
            {
                target.VacationApprover = Framework.Core.Maybe.Return(currentSource.VacationApprover);
            }
            if (baseSource.ValidateVirtualProp != currentSource.ValidateVirtualProp)
            {
                target.ValidateVirtualProp = Framework.Core.Maybe.Return(currentSource.ValidateVirtualProp);
            }
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            if (baseSource.WorkPeriod != currentSource.WorkPeriod)
            {
                target.WorkPeriod = Framework.Core.Maybe.Return(currentSource.WorkPeriod);
            }
            target.Compress();
        }
        
        public virtual void MapEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Employee = Framework.Core.Maybe.Return(currentSource.Employee);
            target.Id = currentSource.Id;
            target.Specialization = Framework.Core.Maybe.Return(currentSource.Specialization);
            target.Version = currentSource.Version;
        }
        
        public virtual void MapEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.Employee != currentSource.Employee)
            {
                target.Employee = Framework.Core.Maybe.Return(currentSource.Employee);
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            if (baseSource.Specialization != currentSource.Specialization)
            {
                target.Specialization = Framework.Core.Maybe.Return(currentSource.Specialization);
            }
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            target.Compress();
        }
        
        public virtual void MapEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CityCode = Framework.Core.Maybe.Return(currentSource.CityCode);
            target.CountryCode = Framework.Core.Maybe.Return(currentSource.CountryCode);
            target.Id = currentSource.Id;
            target.Number = Framework.Core.Maybe.Return(currentSource.Number);
            target.Version = currentSource.Version;
        }
        
        public virtual void MapEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.CityCode != currentSource.CityCode)
            {
                target.CityCode = Framework.Core.Maybe.Return(currentSource.CityCode);
            }
            if (baseSource.CountryCode != currentSource.CountryCode)
            {
                target.CountryCode = Framework.Core.Maybe.Return(currentSource.CountryCode);
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            if (baseSource.Number != currentSource.Number)
            {
                target.Number = Framework.Core.Maybe.Return(currentSource.Number);
            }
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            target.Compress();
        }
        
        public virtual void MapEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CityCode = Framework.Core.Maybe.Return(currentSource.CityCode);
            target.CountryCode = Framework.Core.Maybe.Return(currentSource.CountryCode);
            target.Id = currentSource.Id;
            target.Number = Framework.Core.Maybe.Return(currentSource.Number);
            target.Version = currentSource.Version;
        }
        
        public virtual void MapEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.CityCode != currentSource.CityCode)
            {
                target.CityCode = Framework.Core.Maybe.Return(currentSource.CityCode);
            }
            if (baseSource.CountryCode != currentSource.CountryCode)
            {
                target.CountryCode = Framework.Core.Maybe.Return(currentSource.CountryCode);
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            if (baseSource.Number != currentSource.Number)
            {
                target.Number = Framework.Core.Maybe.Return(currentSource.Number);
            }
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            target.Compress();
        }
        
        public virtual void MapEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.EmployeeLinkType = Framework.Core.Maybe.Return(currentSource.EmployeeLinkType);
            target.Id = currentSource.Id;
            target.LinkedEmployee = Framework.Core.Maybe.Return(currentSource.LinkedEmployee);
            target.Version = currentSource.Version;
        }
        
        public virtual void MapEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.EmployeeLinkType != currentSource.EmployeeLinkType)
            {
                target.EmployeeLinkType = Framework.Core.Maybe.Return(currentSource.EmployeeLinkType);
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            if (baseSource.LinkedEmployee != currentSource.LinkedEmployee)
            {
                target.LinkedEmployee = Framework.Core.Maybe.Return(currentSource.LinkedEmployee);
            }
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            target.Compress();
        }
        
        public virtual void MapExample1(SampleSystem.Generated.DTO.Example1UpdateDTO target, SampleSystem.Generated.DTO.Example1StrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Field1 = Framework.Core.Maybe.Return(currentSource.Field1);
            target.Field2 = Framework.Core.Maybe.Return(currentSource.Field2);
            target.Field3 = currentSource.Field3;
            target.Id = currentSource.Id;
            target.Items2 = this.ExtractUpdateDataFromSingle<SampleSystem.Generated.DTO.Example2StrictDTO, SampleSystem.Generated.DTO.Example2IdentityDTO, SampleSystem.Generated.DTO.Example2UpdateDTO>(currentSource.Items2, example2 => new SampleSystem.Generated.DTO.Example2UpdateDTO(example2, this));
            target.Version = currentSource.Version;
        }
        
        public virtual void MapExample1(SampleSystem.Generated.DTO.Example1UpdateDTO target, SampleSystem.Generated.DTO.Example1StrictDTO currentSource, SampleSystem.Generated.DTO.Example1StrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.Field1 != currentSource.Field1)
            {
                target.Field1 = Framework.Core.Maybe.Return(currentSource.Field1);
            }
            if (baseSource.Field2 != currentSource.Field2)
            {
                target.Field2 = Framework.Core.Maybe.Return(currentSource.Field2);
            }
            if (baseSource.Field3 != currentSource.Field3)
            {
                target.Field3 = currentSource.Field3;
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            target.Items2 = this.ExtractUpdateDataL<SampleSystem.Generated.DTO.Example2StrictDTO, SampleSystem.Generated.DTO.Example2IdentityDTO, SampleSystem.Generated.DTO.Example2UpdateDTO>(currentSource.Items2, baseSource.Items2, (currentSourceItem, baseSourceItem) => new SampleSystem.Generated.DTO.Example2UpdateDTO(currentSourceItem, baseSourceItem, this), currentSourceItem => new SampleSystem.Generated.DTO.Example2UpdateDTO(currentSourceItem, this));
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            target.Compress();
        }
        
        public virtual void MapExample2(SampleSystem.Generated.DTO.Example2UpdateDTO target, SampleSystem.Generated.DTO.Example2StrictDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Field1 = Framework.Core.Maybe.Return(currentSource.Field1);
            target.Field2 = Framework.Core.Maybe.Return(currentSource.Field2);
            target.Id = currentSource.Id;
            target.Version = currentSource.Version;
        }
        
        public virtual void MapExample2(SampleSystem.Generated.DTO.Example2UpdateDTO target, SampleSystem.Generated.DTO.Example2StrictDTO currentSource, SampleSystem.Generated.DTO.Example2StrictDTO baseSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (object.ReferenceEquals(baseSource, null))
            {
                throw new System.ArgumentNullException("baseSource");
            }
            if (baseSource.Field1 != currentSource.Field1)
            {
                target.Field1 = Framework.Core.Maybe.Return(currentSource.Field1);
            }
            if (baseSource.Field2 != currentSource.Field2)
            {
                target.Field2 = Framework.Core.Maybe.Return(currentSource.Field2);
            }
            target.Id = this.GetEqualsValue(currentSource.Id, baseSource.Id, "Id");
            target.Version = this.GetEqualsValue(currentSource.Version, baseSource.Version, "Version");
            target.Compress();
        }
        
        public virtual void MapFullToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.AddressFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.CountryName, null))
            {
                target.CountryName = currentSource.CountryName.Identity;
            }
            else
            {
                target.CountryName = SampleSystem.Generated.DTO.CountryIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnitForRent, null))
            {
                target.BusinessUnitForRent = currentSource.BusinessUnitForRent.Identity;
            }
            else
            {
                target.BusinessUnitForRent = SampleSystem.Generated.DTO.BusinessUnitIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Employee, null))
            {
                target.Employee = currentSource.Employee.Identity;
            }
            else
            {
                target.Employee = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnit, null))
            {
                target.BusinessUnit = currentSource.BusinessUnit.Identity;
            }
            else
            {
                target.BusinessUnit = SampleSystem.Generated.DTO.BusinessUnitIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.HRDepartment, null))
            {
                target.HRDepartment = currentSource.HRDepartment.Identity;
            }
            else
            {
                target.HRDepartment = SampleSystem.Generated.DTO.HRDepartmentIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnit, null))
            {
                target.BusinessUnit = currentSource.BusinessUnit.Identity;
            }
            else
            {
                target.BusinessUnit = SampleSystem.Generated.DTO.BusinessUnitIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Manager, null))
            {
                target.Manager = currentSource.Manager.Identity;
            }
            else
            {
                target.Manager = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnitType, null))
            {
                target.BusinessUnitType = currentSource.BusinessUnitType.Identity;
            }
            else
            {
                target.BusinessUnitType = SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnitType, null))
            {
                target.BusinessUnitType = currentSource.BusinessUnitType.Identity;
            }
            else
            {
                target.BusinessUnitType = SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.PossibleParent, null))
            {
                target.PossibleParent = currentSource.PossibleParent.Identity;
            }
            else
            {
                target.PossibleParent = SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnitType, null))
            {
                target.BusinessUnitType = currentSource.BusinessUnitType.Identity;
            }
            else
            {
                target.BusinessUnitType = SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.TransferTo, null))
            {
                target.TransferTo = currentSource.TransferTo.Identity;
            }
            else
            {
                target.TransferTo = SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BaseObj, null))
            {
                target.BaseObj = currentSource.BaseObj.Identity;
            }
            else
            {
                target.BaseObj = SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.CurrentObj, null))
            {
                target.CurrentObj = currentSource.CurrentObj.Identity;
            }
            else
            {
                target.CurrentObj = SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Parent, null))
            {
                target.Parent = currentSource.Parent.Identity;
            }
            else
            {
                target.Parent = SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.CountryFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.EmployeeFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> justPosition = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>>(currentSource.Position);
            if (!object.ReferenceEquals(justPosition, null))
            {
                SampleSystem.Generated.DTO.EmployeePositionIdentityDTO resultPosition;
                if (!object.ReferenceEquals(justPosition.Value, null))
                {
                    resultPosition = justPosition.Value.Identity;
                }
                else
                {
                    resultPosition = SampleSystem.Generated.DTO.EmployeePositionIdentityDTO.Empty;
                }
                target.Position = new Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>(resultPosition);
            }
            else
            {
                target.Position = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>.Nothing;
            }
            if (!object.ReferenceEquals(currentSource.Ppm, null))
            {
                target.Ppm = currentSource.Ppm.Identity;
            }
            else
            {
                target.Ppm = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.RegistrationType, null))
            {
                target.RegistrationType = currentSource.RegistrationType.Identity;
            }
            else
            {
                target.RegistrationType = SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Role, null))
            {
                target.Role = currentSource.Role.Identity;
            }
            else
            {
                target.Role = SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.RoleDegree, null))
            {
                target.RoleDegree = currentSource.RoleDegree.Identity;
            }
            else
            {
                target.RoleDegree = SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.VacationApprover, null))
            {
                target.VacationApprover = currentSource.VacationApprover.Identity;
            }
            else
            {
                target.VacationApprover = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Employee, null))
            {
                target.Employee = currentSource.Employee.Identity;
            }
            else
            {
                target.Employee = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Specialization, null))
            {
                target.Specialization = currentSource.Specialization.Identity;
            }
            else
            {
                target.Specialization = SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForEmployeeEmailChangeModel(SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ChangingObject, null))
            {
                target.ChangingObject = currentSource.ChangingObject.Identity;
            }
            else
            {
                target.ChangingObject = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForEmployeeEmailMassChangeModel(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.LinkedEmployee, null))
            {
                target.LinkedEmployee = currentSource.LinkedEmployee.Identity;
            }
            else
            {
                target.LinkedEmployee = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.Example1FullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.Example2FullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ApprovedBy, null))
            {
                target.ApprovedBy = currentSource.ApprovedBy.Identity;
            }
            else
            {
                target.ApprovedBy = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
            Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> justCompanyLegalEntity = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>>(currentSource.CompanyLegalEntity);
            if (!object.ReferenceEquals(justCompanyLegalEntity, null))
            {
                SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO resultCompanyLegalEntity;
                if (!object.ReferenceEquals(justCompanyLegalEntity.Value, null))
                {
                    resultCompanyLegalEntity = justCompanyLegalEntity.Value.Identity;
                }
                else
                {
                    resultCompanyLegalEntity = SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO.Empty;
                }
                target.CompanyLegalEntity = new Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>(resultCompanyLegalEntity);
            }
            else
            {
                target.CompanyLegalEntity = Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>.Nothing;
            }
            if (!object.ReferenceEquals(currentSource.Head, null))
            {
                target.Head = currentSource.Head.Identity;
            }
            else
            {
                target.Head = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Parent, null))
            {
                target.Parent = currentSource.Parent.Identity;
            }
            else
            {
                target.Parent = SampleSystem.Generated.DTO.HRDepartmentIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.EmployeePosition, null))
            {
                target.EmployeePosition = currentSource.EmployeePosition.Identity;
            }
            else
            {
                target.EmployeePosition = SampleSystem.Generated.DTO.EmployeePositionIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.HrDepartment, null))
            {
                target.HrDepartment = currentSource.HrDepartment.Identity;
            }
            else
            {
                target.HrDepartment = SampleSystem.Generated.DTO.HRDepartmentIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Employee, null))
            {
                target.Employee = currentSource.Employee.Identity;
            }
            else
            {
                target.Employee = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.LocationFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Country, null))
            {
                target.Country = currentSource.Country.Identity;
            }
            else
            {
                target.Country = SampleSystem.Generated.DTO.CountryIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Parent, null))
            {
                target.Parent = currentSource.Parent.Identity;
            }
            else
            {
                target.Parent = SampleSystem.Generated.DTO.LocationIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnit, null))
            {
                target.BusinessUnit = currentSource.BusinessUnit.Identity;
            }
            else
            {
                target.BusinessUnit = SampleSystem.Generated.DTO.BusinessUnitIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.ManagementUnit, null))
            {
                target.ManagementUnit = currentSource.ManagementUnit.Identity;
            }
            else
            {
                target.ManagementUnit = SampleSystem.Generated.DTO.ManagementUnitIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.HRDepartment, null))
            {
                target.HRDepartment = currentSource.HRDepartment.Identity;
            }
            else
            {
                target.HRDepartment = SampleSystem.Generated.DTO.HRDepartmentIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.ManagementUnit, null))
            {
                target.ManagementUnit = currentSource.ManagementUnit.Identity;
            }
            else
            {
                target.ManagementUnit = SampleSystem.Generated.DTO.ManagementUnitIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.PrincipalFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.IncludedObject, null))
            {
                target.IncludedObject = currentSource.IncludedObject.Identity;
            }
            else
            {
                target.IncludedObject = SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.TestImmutableObjFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.TestImmutableRefProperty, null))
            {
                target.TestImmutableRefProperty = currentSource.TestImmutableRefProperty.Identity;
            }
            else
            {
                target.TestImmutableRefProperty = SampleSystem.Generated.DTO.EmployeeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapRichToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.AddressRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnitEmployeeRoles, null))
            {
                target.BusinessUnitEmployeeRoles = Framework.Core.EnumerableExtensions.ToList(currentSource.BusinessUnitEmployeeRoles, businessUnitEmployeeRole => new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(businessUnitEmployeeRole));
            }
            if (!object.ReferenceEquals(currentSource.ManagementUnits, null))
            {
                target.ManagementUnits = Framework.Core.EnumerableExtensions.ToList(currentSource.ManagementUnits, managementUnitAndBusinessUnitLink => new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(managementUnitAndBusinessUnitLink));
            }
            if (!object.ReferenceEquals(currentSource.ManagerCommissions, null))
            {
                target.ManagerCommissions = Framework.Core.EnumerableExtensions.ToList(currentSource.ManagerCommissions, businessUnitManagerCommissionLink => new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(businessUnitManagerCommissionLink));
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.PossibleFinancialProjectTypes, null))
            {
                target.PossibleFinancialProjectTypes = Framework.Core.EnumerableExtensions.ToList(currentSource.PossibleFinancialProjectTypes, businessUnitTypeLinkWithPossibleFinancialProjectType => new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(businessUnitTypeLinkWithPossibleFinancialProjectType));
            }
            if (!object.ReferenceEquals(currentSource.PossibleParents, null))
            {
                target.PossibleParents = Framework.Core.EnumerableExtensions.ToList(currentSource.PossibleParents, businessUnitTypeLinkWithPossibleParent => new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(businessUnitTypeLinkWithPossibleParent));
            }
            if (!object.ReferenceEquals(currentSource.TransferTo, null))
            {
                target.TransferTo = Framework.Core.EnumerableExtensions.ToList(currentSource.TransferTo, businessUnitTypeLinkWithTransferTo => new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(businessUnitTypeLinkWithTransferTo));
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Addresses, null))
            {
                target.Addresses = Framework.Core.EnumerableExtensions.ToList(currentSource.Addresses, address => new SampleSystem.Generated.DTO.AddressStrictDTO(address));
            }
        }
        
        public virtual void MapRichToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.CountryRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.EmployeeRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.CellPhones, null))
            {
                target.CellPhones = Framework.Core.EnumerableExtensions.ToList(currentSource.CellPhones, employeeCellPhone => new SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(employeeCellPhone));
            }
            if (!object.ReferenceEquals(currentSource.EmployeeToEmployeeLinks, null))
            {
                target.EmployeeToEmployeeLinks = Framework.Core.EnumerableExtensions.ToList(currentSource.EmployeeToEmployeeLinks, employeeToEmployeeLink => new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(employeeToEmployeeLink));
            }
            Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> justPersonalCellPhones = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>>(currentSource.PersonalCellPhones);
            if (!object.ReferenceEquals(justPersonalCellPhones, null))
            {
                System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO> resultPersonalCellPhones = new System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>();
                if (!object.ReferenceEquals(justPersonalCellPhones.Value, null))
                {
                    resultPersonalCellPhones = Framework.Core.EnumerableExtensions.ToList(justPersonalCellPhones.Value, employeePersonalCellPhone => new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(employeePersonalCellPhone));
                }
                target.PersonalCellPhones = new Framework.Core.Just<System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>>(resultPersonalCellPhones);
            }
            else
            {
                target.PersonalCellPhones = Framework.Core.Maybe<System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>>.Nothing;
            }
            if (!object.ReferenceEquals(currentSource.Specializations, null))
            {
                target.Specializations = Framework.Core.EnumerableExtensions.ToList(currentSource.Specializations, employeeAndEmployeeSpecializationLink => new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(employeeAndEmployeeSpecializationLink));
            }
        }
        
        public virtual void MapRichToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForEmployeeEmailChangeModel(SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForEmployeeEmailMassChangeModel(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ChangingObjects, null))
            {
                target.ChangingObjects = Framework.Core.EnumerableExtensions.ToList(currentSource.ChangingObjects, employee => employee.Identity);
            }
        }
        
        public virtual void MapRichToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.Example1RichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Items2, null))
            {
                target.Items2 = Framework.Core.EnumerableExtensions.ToList(currentSource.Items2, example2 => new SampleSystem.Generated.DTO.Example2StrictDTO(example2));
            }
        }
        
        public virtual void MapRichToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.Example2RichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnitHrDepartments, null))
            {
                target.BusinessUnitHrDepartments = Framework.Core.EnumerableExtensions.ToList(currentSource.BusinessUnitHrDepartments, businessUnitHrDepartment => new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(businessUnitHrDepartment));
            }
            if (!object.ReferenceEquals(currentSource.EmployeePositions, null))
            {
                target.EmployeePositions = Framework.Core.EnumerableExtensions.ToList(currentSource.EmployeePositions, hRDepartmentEmployeePosition => new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(hRDepartmentEmployeePosition));
            }
            if (!object.ReferenceEquals(currentSource.HrDepartmentRoleEmployees, null))
            {
                target.HrDepartmentRoleEmployees = Framework.Core.EnumerableExtensions.ToList(currentSource.HrDepartmentRoleEmployees, hRDepartmentRoleEmployee => new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(hRDepartmentRoleEmployee));
            }
            if (!object.ReferenceEquals(currentSource.ManagementUnits, null))
            {
                target.ManagementUnits = Framework.Core.EnumerableExtensions.ToList(currentSource.ManagementUnits, managementUnitAndHRDepartmentLink => new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(managementUnitAndHRDepartmentLink));
            }
        }
        
        public virtual void MapRichToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.LocationRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BinaryData, null))
            {
                target.BinaryData = System.Linq.Enumerable.ToArray(currentSource.BinaryData);
            }
            else
            {
                target.BinaryData = null;
            }
        }
        
        public virtual void MapRichToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.BusinessUnits, null))
            {
                target.BusinessUnits = Framework.Core.EnumerableExtensions.ToList(currentSource.BusinessUnits, managementUnitAndBusinessUnitLink => new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(managementUnitAndBusinessUnitLink));
            }
            if (!object.ReferenceEquals(currentSource.HRDepartments, null))
            {
                target.HRDepartments = Framework.Core.EnumerableExtensions.ToList(currentSource.HRDepartments, managementUnitAndHRDepartmentLink => new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(managementUnitAndHRDepartmentLink));
            }
        }
        
        public virtual void MapRichToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.PrincipalRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.TestImmutableObjRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForAddress(SampleSystem.Generated.DTO.AddressStrictDTO target, SampleSystem.Generated.DTO.AddressSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AddressType = currentSource.AddressType;
            target.CityName = currentSource.CityName;
            target.RegionName = currentSource.RegionName;
            target.Street = currentSource.Street;
            target.Zip = currentSource.Zip;
        }
        
        public virtual void MapSimpleToStrictForBusinessUnit(SampleSystem.Generated.DTO.BusinessUnitStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.BusinessUnitStatus = currentSource.BusinessUnitStatus;
            target.Commission = currentSource.Commission;
            target.FirstNewBusinessStatusMonth = currentSource.FirstNewBusinessStatusMonth;
            target.IsNewBusiness = currentSource.IsNewBusiness;
            target.IsPool = currentSource.IsPool;
            target.IsProduction = currentSource.IsProduction;
            target.IsSpecialCommission = currentSource.IsSpecialCommission;
            target.LeastProjectStartDate = currentSource.LeastProjectStartDate;
            target.Name = currentSource.Name;
            target.NewBusinessStatusLeft = currentSource.NewBusinessStatusLeft;
            target.Options = currentSource.Options;
            target.ProjectStartMailList = currentSource.ProjectStartMailList;
            target.Rank = currentSource.Rank;
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitEmployeeRole(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Role = currentSource.Role;
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitHrDepartment(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitManagerCommissionLink(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Commission = currentSource.Commission;
            target.Period = currentSource.Period;
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitType(SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AdditionalStartConfirm = currentSource.AdditionalStartConfirm;
            target.AdditionalTransferConfirm = currentSource.AdditionalTransferConfirm;
            target.BillingProjectAreNotAllowed = currentSource.BillingProjectAreNotAllowed;
            target.CanBeIsSpecialCommission = currentSource.CanBeIsSpecialCommission;
            target.CanBeLinkedToClient = currentSource.CanBeLinkedToClient;
            target.CanBeLinkedToDepartment = currentSource.CanBeLinkedToDepartment;
            target.CanBeNewBusiness = currentSource.CanBeNewBusiness;
            target.CanBeResourcePool = currentSource.CanBeResourcePool;
            target.IsAdministrative = currentSource.IsAdministrative;
            target.Name = currentSource.Name;
            target.NeedVertical = currentSource.NeedVertical;
            target.PossibleStartDate = currentSource.PossibleStartDate;
            target.PossibleTransferDate = currentSource.PossibleTransferDate;
            target.PracticeAllowed = currentSource.PracticeAllowed;
            target.ProjectStartAllowed = currentSource.ProjectStartAllowed;
            target.StartBOConfirm = currentSource.StartBOConfirm;
            target.TransferBOConfirm = currentSource.TransferBOConfirm;
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.FinancialProjectType = currentSource.FinancialProjectType;
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleParent(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForBusinessUnitTypeLinkWithTransferTo(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO target, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForCompanyLegalEntity(SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO target, SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Code = currentSource.Code;
            target.Name = currentSource.Name;
            target.NameEnglish = currentSource.NameEnglish;
            target.Type = currentSource.Type;
        }
        
        public virtual void MapSimpleToStrictForCountry(SampleSystem.Generated.DTO.CountryStrictDTO target, SampleSystem.Generated.DTO.CountrySimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Code = currentSource.Code;
            target.Culture = currentSource.Culture;
            target.Name = currentSource.Name;
            target.NameNative = currentSource.NameNative;
        }
        
        public virtual void MapSimpleToStrictForEmployee(SampleSystem.Generated.DTO.EmployeeStrictDTO target, SampleSystem.Generated.DTO.EmployeeSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Age = currentSource.Age;
            target.BirthDate = currentSource.BirthDate;
            target.CanBePPM = currentSource.CanBePPM;
            target.EducationDuration = currentSource.EducationDuration;
            target.Email = currentSource.Email;
            target.ExternalId = currentSource.ExternalId;
            target.Gender = currentSource.Gender;
            target.Interphone = currentSource.Interphone;
            target.Landlinephone = currentSource.Landlinephone;
            target.LastActionDate = currentSource.LastActionDate;
            Framework.Core.Just<string> justLogin = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(currentSource.Login);
            if (!object.ReferenceEquals(justLogin, null))
            {
                string resultLogin;
                resultLogin = justLogin.Value;
                target.Login = new Framework.Core.Just<string>(resultLogin);
            }
            else
            {
                target.Login = Framework.Core.Maybe<string>.Nothing;
            }
            if (!object.ReferenceEquals(currentSource.NameEng, null))
            {
                target.NameEng = new SampleSystem.Generated.DTO.FioShort(currentSource.NameEng);
            }
            if (!object.ReferenceEquals(currentSource.NameNative, null))
            {
                target.NameNative = new SampleSystem.Generated.DTO.Fio(currentSource.NameNative);
            }
            if (!object.ReferenceEquals(currentSource.NameRussian, null))
            {
                target.NameRussian = new SampleSystem.Generated.DTO.Fio(currentSource.NameRussian);
            }
            target.NonValidateVirtualProp = currentSource.NonValidateVirtualProp;
            target.Pin = currentSource.Pin;
            target.PlannedHireDate = currentSource.PlannedHireDate;
            target.ValidateVirtualProp = currentSource.ValidateVirtualProp;
            target.WorkPeriod = currentSource.WorkPeriod;
        }
        
        public virtual void MapSimpleToStrictForEmployeeAndEmployeeSpecializationLink(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForEmployeeCellPhone(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CityCode = currentSource.CityCode;
            target.CountryCode = currentSource.CountryCode;
            target.Number = currentSource.Number;
        }
        
        public virtual void MapSimpleToStrictForEmployeeEmailChangeModel(SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Email = currentSource.Email;
        }
        
        public virtual void MapSimpleToStrictForEmployeeEmailMassChangeModel(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO target, SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Email = currentSource.Email;
        }
        
        public virtual void MapSimpleToStrictForEmployeePersonalCellPhone(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO target, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CityCode = currentSource.CityCode;
            target.CountryCode = currentSource.CountryCode;
            target.Number = currentSource.Number;
        }
        
        public virtual void MapSimpleToStrictForEmployeeToEmployeeLink(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO target, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.EmployeeLinkType = currentSource.EmployeeLinkType;
        }
        
        public virtual void MapSimpleToStrictForExample1(SampleSystem.Generated.DTO.Example1StrictDTO target, SampleSystem.Generated.DTO.Example1SimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Field1 = currentSource.Field1;
            target.Field2 = currentSource.Field2;
            Framework.Core.Just<System.Guid> justField3 = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Guid>>(currentSource.Field3);
            if (!object.ReferenceEquals(justField3, null))
            {
                System.Guid resultField3;
                resultField3 = justField3.Value;
                target.Field3 = new Framework.Core.Just<System.Guid>(resultField3);
            }
            else
            {
                target.Field3 = Framework.Core.Maybe<System.Guid>.Nothing;
            }
        }
        
        public virtual void MapSimpleToStrictForExample2(SampleSystem.Generated.DTO.Example2StrictDTO target, SampleSystem.Generated.DTO.Example2SimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Field1 = currentSource.Field1;
            target.Field2 = currentSource.Field2;
        }
        
        public virtual void MapSimpleToStrictForHRDepartment(SampleSystem.Generated.DTO.HRDepartmentStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Code = currentSource.Code;
            target.CodeNative = currentSource.CodeNative;
            target.ExternalId = currentSource.ExternalId;
            target.IsLegal = currentSource.IsLegal;
            target.IsProduction = currentSource.IsProduction;
            target.Name = currentSource.Name;
            target.NameNative = currentSource.NameNative;
        }
        
        public virtual void MapSimpleToStrictForHRDepartmentEmployeePosition(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForHRDepartmentRoleEmployee(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO target, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.HRDepartmentEmployeeRoleType = currentSource.HRDepartmentEmployeeRoleType;
        }
        
        public virtual void MapSimpleToStrictForLocation(SampleSystem.Generated.DTO.LocationStrictDTO target, SampleSystem.Generated.DTO.LocationSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CloseDate = currentSource.CloseDate;
            target.Code = currentSource.Code;
            target.IsFinancial = currentSource.IsFinancial;
            target.LocationType = currentSource.LocationType;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForManagementUnit(SampleSystem.Generated.DTO.ManagementUnitStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.BusinessUnitStatus = currentSource.BusinessUnitStatus;
            target.IsProduction = currentSource.IsProduction;
            target.Name = currentSource.Name;
            target.Period = currentSource.Period;
        }
        
        public virtual void MapSimpleToStrictForManagementUnitAndBusinessUnitLink(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.EqualBU = currentSource.EqualBU;
        }
        
        public virtual void MapSimpleToStrictForManagementUnitAndHRDepartmentLink(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO target, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForPrincipal(SampleSystem.Generated.DTO.PrincipalStrictDTO target, SampleSystem.Generated.DTO.PrincipalSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.ExternalId = currentSource.ExternalId;
        }
        
        public virtual void MapSimpleToStrictForSqlParserTestObj(SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.NotNullColumn = currentSource.NotNullColumn;
            target.UniqueColumn = currentSource.UniqueColumn;
        }
        
        public virtual void MapSimpleToStrictForSqlParserTestObjContainer(SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO target, SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForTestDefaultFieldsMappingObj(SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjStrictDTO target, SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.EnumVal = currentSource.EnumVal;
            target.IntVal = currentSource.IntVal;
            target.StrVal = currentSource.StrVal;
        }
        
        public virtual void MapSimpleToStrictForTestImmutableObj(SampleSystem.Generated.DTO.TestImmutableObjStrictDTO target, SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.TestImmutablePrimitiveProperty = currentSource.TestImmutablePrimitiveProperty;
        }
    }
    
    public partial class SampleSystemClientPrimitiveDTOMappingService : SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingServiceBase
    {
        
        private static SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService _default = new SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService();
        
        public static SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService Default
        {
            get
            {
                return SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService._default;
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public enum SampleSystemBusinessUnitSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitHrDepartmentEdit = SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitHrDepartmentView = SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitView = SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public enum SampleSystemHRDepartmentSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentView = SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentView,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public enum SampleSystemLocationSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentEdit = SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationView = SampleSystem.SampleSystemSecurityOperationCode.LocationView,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public enum SampleSystemManagementUnitSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitView = SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public enum SampleSystemManagementUnitFluentMappingSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitView = SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct AddressIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.AddressIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.AddressIdentityDTO EmptyField = new SampleSystem.Generated.DTO.AddressIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public AddressIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public AddressIdentityDTO(SampleSystem.Generated.DTO.AddressSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.AddressIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.AddressIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.AddressIdentityDTO identity1, SampleSystem.Generated.DTO.AddressIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.AddressIdentityDTO identity1, SampleSystem.Generated.DTO.AddressIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.AddressIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.AddressIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.AddressIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct AnotherSqlParserTestObjIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO EmptyField = new SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public AnotherSqlParserTestObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity1, SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity1, SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitAncestorLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitAncestorLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitEmployeeRoleIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitEmployeeRoleIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitEmployeeRoleIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitHrDepartmentIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitHrDepartmentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitHrDepartmentIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitManagerCommissionLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitManagerCommissionLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitManagerCommissionLinkIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitToAncestorChildViewIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitToAncestorChildViewIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitTypeIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitTypeLinkWithPossibleParentIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeLinkWithPossibleParentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeLinkWithPossibleParentIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct BusinessUnitTypeLinkWithTransferToIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO EmptyField = new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeLinkWithTransferToIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeLinkWithTransferToIdentityDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity1, SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct CompanyLegalEntityIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO EmptyField = new SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CompanyLegalEntityIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CompanyLegalEntityIdentityDTO(SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity1, SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity1, SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CountryEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CountryView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct CountryIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.CountryIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.CountryIdentityDTO EmptyField = new SampleSystem.Generated.DTO.CountryIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CountryIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CountryIdentityDTO(SampleSystem.Generated.DTO.CountrySimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.CountryIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.CountryIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.CountryIdentityDTO identity1, SampleSystem.Generated.DTO.CountryIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.CountryIdentityDTO identity1, SampleSystem.Generated.DTO.CountryIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.CountryIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.CountryIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.CountryIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeIdentityDTO(SampleSystem.Generated.DTO.EmployeeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeAndEmployeeSpecializationLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeAndEmployeeSpecializationLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeAndEmployeeSpecializationLinkIdentityDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeCellPhoneIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeCellPhoneIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeCellPhoneIdentityDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeCellPhoneBaseIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeCellPhoneBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeInformationIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeInformationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeInformationIdentityDTO(SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeePersonalCellPhoneIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeePersonalCellPhoneIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeePersonalCellPhoneIdentityDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeePhotoIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeePhotoIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeePhotoIdentityDTO(SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeePositionIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeePositionIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeePositionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeePositionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeePositionIdentityDTO(SampleSystem.Generated.DTO.EmployeePositionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeePositionIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeePositionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeePositionIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeePositionIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeePositionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeRegistrationTypeIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeRegistrationTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeRegistrationTypeIdentityDTO(SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeRoleIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeRoleIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeRoleIdentityDTO(SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleDegreeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeRoleDegreeIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeRoleDegreeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeRoleDegreeIdentityDTO(SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeSpecializationView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeSpecializationIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeSpecializationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeSpecializationIdentityDTO(SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct EmployeeToEmployeeLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeToEmployeeLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeToEmployeeLinkIdentityDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity1, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct Coefficient1676IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.Coefficient1676IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.Coefficient1676IdentityDTO EmptyField = new SampleSystem.Generated.DTO.Coefficient1676IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Coefficient1676IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.Coefficient1676IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.Coefficient1676IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity1, SampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity1, SampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.Coefficient1676IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.Coefficient1676IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.Coefficient1676IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct Location1676IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.Location1676IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.Location1676IdentityDTO EmptyField = new SampleSystem.Generated.DTO.Location1676IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Location1676IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Location1676IdentityDTO(SampleSystem.Generated.DTO.Location1676SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.Location1676IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.Location1676IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.Location1676IdentityDTO identity1, SampleSystem.Generated.DTO.Location1676IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.Location1676IdentityDTO identity1, SampleSystem.Generated.DTO.Location1676IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.Location1676IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.Location1676IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.Location1676IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct WorkingCalendar1676IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO EmptyField = new SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkingCalendar1676IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkingCalendar1676IdentityDTO(SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity1, SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity1, SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct Example1IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.Example1IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.Example1IdentityDTO EmptyField = new SampleSystem.Generated.DTO.Example1IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Example1IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Example1IdentityDTO(SampleSystem.Generated.DTO.Example1SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.Example1IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.Example1IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.Example1IdentityDTO identity1, SampleSystem.Generated.DTO.Example1IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.Example1IdentityDTO identity1, SampleSystem.Generated.DTO.Example1IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.Example1IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.Example1IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.Example1IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct Example2IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.Example2IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.Example2IdentityDTO EmptyField = new SampleSystem.Generated.DTO.Example2IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Example2IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Example2IdentityDTO(SampleSystem.Generated.DTO.Example2SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.Example2IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.Example2IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.Example2IdentityDTO identity1, SampleSystem.Generated.DTO.Example2IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.Example2IdentityDTO identity1, SampleSystem.Generated.DTO.Example2IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.Example2IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.Example2IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.Example2IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct HRDepartmentIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.HRDepartmentIdentityDTO EmptyField = new SampleSystem.Generated.DTO.HRDepartmentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentIdentityDTO(SampleSystem.Generated.DTO.HRDepartmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.HRDepartmentIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.HRDepartmentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity1, SampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity1, SampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.HRDepartmentIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.HRDepartmentIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.HRDepartmentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct HRDepartmentEmployeePositionIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO EmptyField = new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentEmployeePositionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentEmployeePositionIdentityDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity1, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity1, SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct HRDepartmentRoleEmployeeIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO EmptyField = new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentRoleEmployeeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentRoleEmployeeIdentityDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity1, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity1, SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct IMRequestIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.IMRequestIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.IMRequestIdentityDTO EmptyField = new SampleSystem.Generated.DTO.IMRequestIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IMRequestIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public IMRequestIdentityDTO(SampleSystem.Generated.DTO.IMRequestSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.IMRequestIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.IMRequestIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.IMRequestIdentityDTO identity1, SampleSystem.Generated.DTO.IMRequestIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.IMRequestIdentityDTO identity1, SampleSystem.Generated.DTO.IMRequestIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.IMRequestIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.IMRequestIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.IMRequestIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct IMRequestDetailIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO EmptyField = new SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IMRequestDetailIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public IMRequestDetailIdentityDTO(SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity1, SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity1, SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct InformationIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.InformationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.InformationIdentityDTO EmptyField = new SampleSystem.Generated.DTO.InformationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public InformationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public InformationIdentityDTO(SampleSystem.Generated.DTO.InformationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.InformationIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.InformationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.InformationIdentityDTO identity1, SampleSystem.Generated.DTO.InformationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.InformationIdentityDTO identity1, SampleSystem.Generated.DTO.InformationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.InformationIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.InformationIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.InformationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct InsuranceDetailIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO EmptyField = new SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public InsuranceDetailIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity1, SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity1, SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.InsuranceDetailIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct IntegrationVersionContainer1IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO EmptyField = new SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IntegrationVersionContainer1IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity1, SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity1, SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct IntegrationVersionContainer2IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO EmptyField = new SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IntegrationVersionContainer2IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity1, SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity1, SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct LegalEntityBaseIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO EmptyField = new SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public LegalEntityBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public LegalEntityBaseIdentityDTO(SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity1, SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity1, SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.LocationEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.LocationView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct LocationIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.LocationIdentityDTO EmptyField = new SampleSystem.Generated.DTO.LocationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public LocationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public LocationIdentityDTO(SampleSystem.Generated.DTO.LocationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.LocationIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.LocationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.LocationIdentityDTO identity1, SampleSystem.Generated.DTO.LocationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.LocationIdentityDTO identity1, SampleSystem.Generated.DTO.LocationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.LocationIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.LocationIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.LocationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ManagementUnitIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ManagementUnitIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ManagementUnitIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ManagementUnitIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitIdentityDTO(SampleSystem.Generated.DTO.ManagementUnitSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.ManagementUnitIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ManagementUnitIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ManagementUnitIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ManagementUnitIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ManagementUnitIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ManagementUnitAncestorLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitAncestorLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ManagementUnitAndBusinessUnitLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitAndBusinessUnitLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitAndBusinessUnitLinkIdentityDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ManagementUnitAndHRDepartmentLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitAndHRDepartmentLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitAndHRDepartmentLinkIdentityDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ManagementUnitFluentMappingIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitFluentMappingIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitFluentMappingIdentityDTO(SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ManagementUnitToAncestorChildViewIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitToAncestorChildViewIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity1, SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct NamedLockIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.NamedLockIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.NamedLockIdentityDTO EmptyField = new SampleSystem.Generated.DTO.NamedLockIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public NamedLockIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.NamedLockIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.NamedLockIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.NamedLockIdentityDTO identity1, SampleSystem.Generated.DTO.NamedLockIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.NamedLockIdentityDTO identity1, SampleSystem.Generated.DTO.NamedLockIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.NamedLockIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.NamedLockIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.NamedLockIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct PrincipalIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.PrincipalIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.PrincipalIdentityDTO EmptyField = new SampleSystem.Generated.DTO.PrincipalIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public PrincipalIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public PrincipalIdentityDTO(SampleSystem.Generated.DTO.PrincipalSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.PrincipalIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.PrincipalIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.PrincipalIdentityDTO identity1, SampleSystem.Generated.DTO.PrincipalIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.PrincipalIdentityDTO identity1, SampleSystem.Generated.DTO.PrincipalIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.PrincipalIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.PrincipalIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.PrincipalIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ProjectIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ProjectIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ProjectIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ProjectIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ProjectIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ProjectIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ProjectIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ProjectIdentityDTO identity1, SampleSystem.Generated.DTO.ProjectIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ProjectIdentityDTO identity1, SampleSystem.Generated.DTO.ProjectIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ProjectIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ProjectIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ProjectIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct RoleRoleDegreeLinkIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO EmptyField = new SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public RoleRoleDegreeLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity1, SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity1, SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct SqlParserTestObjIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO EmptyField = new SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public SqlParserTestObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public SqlParserTestObjIdentityDTO(SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity1, SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity1, SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct SqlParserTestObjContainerIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO EmptyField = new SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public SqlParserTestObjContainerIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public SqlParserTestObjContainerIdentityDTO(SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity1, SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity1, SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestCustomContextSecurityObjIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestCustomContextSecurityObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestCustomContextSecurityObjIdentityDTO(SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity1, SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity1, SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ClassAIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ClassAIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ClassAIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ClassAIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ClassAIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ClassAIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ClassAIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ClassAIdentityDTO identity1, SampleSystem.Generated.DTO.ClassAIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ClassAIdentityDTO identity1, SampleSystem.Generated.DTO.ClassAIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ClassAIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ClassAIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ClassAIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ClassAChildIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ClassAChildIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ClassAChildIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ClassAChildIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ClassAChildIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ClassAChildIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ClassAChildIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ClassAChildIdentityDTO identity1, SampleSystem.Generated.DTO.ClassAChildIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ClassAChildIdentityDTO identity1, SampleSystem.Generated.DTO.ClassAChildIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ClassAChildIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ClassAChildIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ClassAChildIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ConcreteClassAIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ConcreteClassAIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity1, SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity1, SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ConcreteClassAIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestImmutableObjIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestImmutableObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestImmutableObjIdentityDTO(SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity1, SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity1, SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestObjForNestedIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestObjForNestedIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestObjForNestedIdentityDTO(SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity1, SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity1, SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestObjForNestedBaseIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestObjForNestedBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity1, SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity1, SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestRootSecurityObjIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestRootSecurityObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestRootSecurityObjIdentityDTO(SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity1, SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity1, SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestSecurityObjItemIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecurityObjItemIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecurityObjItemIdentityDTO(SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity1, SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity1, SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestSecuritySubObjItemIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecuritySubObjItemIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecuritySubObjItemIdentityDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity1, SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity1, SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestSecuritySubObjItem2IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecuritySubObjItem2IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecuritySubObjItem2IdentityDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity1, SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity1, SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct TestSecuritySubObjItem3IdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO EmptyField = new SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecuritySubObjItem3IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecuritySubObjItem3IdentityDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity1, SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity1, SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ParentEntityIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ParentEntityIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ParentEntityIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ParentEntityIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ParentEntityIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ParentEntityIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ParentEntityIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ParentEntityIdentityDTO identity1, SampleSystem.Generated.DTO.ParentEntityIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ParentEntityIdentityDTO identity1, SampleSystem.Generated.DTO.ParentEntityIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ParentEntityIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ParentEntityIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ParentEntityIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public struct ChildEntityIdentityDTO : System.IEquatable<SampleSystem.Generated.DTO.ChildEntityIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static SampleSystem.Generated.DTO.ChildEntityIdentityDTO EmptyField = new SampleSystem.Generated.DTO.ChildEntityIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ChildEntityIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static SampleSystem.Generated.DTO.ChildEntityIdentityDTO Empty
        {
            get
            {
                return SampleSystem.Generated.DTO.ChildEntityIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(SampleSystem.Generated.DTO.ChildEntityIdentityDTO identity1, SampleSystem.Generated.DTO.ChildEntityIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(SampleSystem.Generated.DTO.ChildEntityIdentityDTO identity1, SampleSystem.Generated.DTO.ChildEntityIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(SampleSystem.Generated.DTO.ChildEntityIdentityDTO) == other.GetType()) && this.Equals(((SampleSystem.Generated.DTO.ChildEntityIdentityDTO)(other)));
        }
        
        public bool Equals(SampleSystem.Generated.DTO.ChildEntityIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    public partial interface IBaseAbstractDTO : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged, Framework.Reactive.IBaseRaiseObject
    {
    }
    
    public partial interface IBasePersistentDTO : SampleSystem.Generated.DTO.IBaseAbstractDTO
    {
        
        System.Guid Id
        {
            get;
            set;
        }
    }
    
    public partial interface IBaseAuditPersistentDTO : SampleSystem.Generated.DTO.IBasePersistentDTO
    {
        
        bool Active
        {
            get;
            set;
        }
        
        System.DateTime? CreateDate
        {
            get;
            set;
        }
        
        string CreatedBy
        {
            get;
            set;
        }
        
        string ModifiedBy
        {
            get;
            set;
        }
        
        System.DateTime? ModifyDate
        {
            get;
            set;
        }
        
        long Version
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public abstract partial class BaseAbstractDTO : SampleSystem.Generated.DTO.IBaseAbstractDTO
    {
        
        public BaseAbstractDTO(SampleSystem.Generated.DTO.IBaseAbstractDTO source) : 
                this()
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
        }
        
        System.ComponentModel.PropertyChangedEventHandler Framework.Reactive.IBaseRaiseObject.PropertyChanged
        {
            get
            {
                return this.PropertyChanged;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        protected void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [Framework.Persistent.TargetSystemAttribute("2d362091-7dac-4bec-a5ab-351b93b338d7")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public abstract partial class BasePersistentDTO : SampleSystem.Generated.DTO.BaseAbstractDTO, SampleSystem.Generated.DTO.IBasePersistentDTO
    {
        
        private System.Guid _id;
        
        protected BasePersistentDTO()
        {
        }
        
        public BasePersistentDTO(SampleSystem.Generated.DTO.IBasePersistentDTO source) : 
                this(source, true)
        {
        }
        
        public BasePersistentDTO(SampleSystem.Generated.DTO.IBasePersistentDTO source, bool copyId) : 
                base(source)
        {
            if (copyId)
            {
                this.Id = source.Id;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    base.RaisePropertyChanging("Id");
                    this._id = newValue;
                    base.RaisePropertyChanged("Id");
                }
            }
        }
        
        public bool IsNew
        {
            get
            {
                return (default(System.Guid) == this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public abstract partial class BaseAuditPersistentDTO : SampleSystem.Generated.DTO.BasePersistentDTO, SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        private bool _active = true;
        
        private System.DateTime? _createDate;
        
        private string _createdBy;
        
        private string _modifiedBy;
        
        private System.DateTime? _modifyDate;
        
        private long _version;
        
        protected BaseAuditPersistentDTO()
        {
        }
        
        public BaseAuditPersistentDTO(SampleSystem.Generated.DTO.IBaseAuditPersistentDTO source) : 
                this(source, true)
        {
        }
        
        public BaseAuditPersistentDTO(SampleSystem.Generated.DTO.IBaseAuditPersistentDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Active = source.Active;
            this.CreateDate = source.CreateDate;
            this.CreatedBy = source.CreatedBy;
            this.ModifiedBy = source.ModifiedBy;
            this.ModifyDate = source.ModifyDate;
            this.Version = source.Version;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._active, newValue))
                {
                    base.RaisePropertyChanging("Active");
                    this._active = newValue;
                    base.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? CreateDate
        {
            get
            {
                return this._createDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._createDate, newValue))
                {
                    base.RaisePropertyChanging("CreateDate");
                    this._createDate = newValue;
                    base.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._createdBy);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._createdBy, newValue))
                {
                    base.RaisePropertyChanging("CreatedBy");
                    this._createdBy = newValue;
                    base.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._modifiedBy);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._modifiedBy, newValue))
                {
                    base.RaisePropertyChanging("ModifiedBy");
                    this._modifiedBy = newValue;
                    base.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ModifyDate
        {
            get
            {
                return this._modifyDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._modifyDate, newValue))
                {
                    base.RaisePropertyChanging("ModifyDate");
                    this._modifyDate = newValue;
                    base.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._version, newValue))
                {
                    base.RaisePropertyChanging("Version");
                    this._version = newValue;
                    base.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.AddressFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.AddressRichDTO))]
    public partial class AddressSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IAddressSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.AddressSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.AddressIdentityDTO>
    {
        
        private SampleSystem.Generated.DTO.AddressType _addressType;
        
        private string _cityName;
        
        private string _regionName;
        
        private string _street;
        
        private string _zip;
        
        public AddressSimpleDTO()
        {
        }
        
        public AddressSimpleDTO(SampleSystem.Generated.DTO.IAddressSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public AddressSimpleDTO(SampleSystem.Generated.DTO.IAddressSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AddressType = source.AddressType;
            this.CityName = source.CityName;
            this.RegionName = source.RegionName;
            this.Street = source.Street;
            this.Zip = source.Zip;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.AddressType AddressType
        {
            get
            {
                return this._addressType;
            }
            set
            {
                SampleSystem.Generated.DTO.AddressType newValue;
                newValue = value;
                if (!object.Equals(this._addressType, newValue))
                {
                    base.RaisePropertyChanging("AddressType");
                    this._addressType = newValue;
                    base.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(100)]
        public string CityName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._cityName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._cityName, newValue))
                {
                    base.RaisePropertyChanging("CityName");
                    this._cityName = newValue;
                    base.RaisePropertyChanged("CityName");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.AddressIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.AddressIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(100)]
        public string RegionName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._regionName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._regionName, newValue))
                {
                    base.RaisePropertyChanging("RegionName");
                    this._regionName = newValue;
                    base.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(100)]
        public string Street
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._street);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._street, newValue))
                {
                    base.RaisePropertyChanging("Street");
                    this._street = newValue;
                    base.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(100)]
        public string Zip
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._zip);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._zip, newValue))
                {
                    base.RaisePropertyChanging("Zip");
                    this._zip = newValue;
                    base.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.AddressSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.AddressSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.AddressSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.AddressSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.AddressSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.AddressSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.AddressStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.AddressStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.AddressRichDTO))]
    public partial class AddressFullDTO : SampleSystem.Generated.DTO.AddressSimpleDTO, SampleSystem.Generated.DTO.IAddressFullDTO, System.ICloneable<SampleSystem.Generated.DTO.AddressFullDTO>
    {
        
        private SampleSystem.Generated.DTO.CountrySimpleDTO _countryName;
        
        private SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO _legalEntity;
        
        public AddressFullDTO()
        {
        }
        
        public AddressFullDTO(SampleSystem.Generated.DTO.IAddressFullDTO source) : 
                this(source, true)
        {
        }
        
        public AddressFullDTO(SampleSystem.Generated.DTO.IAddressFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CountryName = source.CountryName;
            this.LegalEntity = source.LegalEntity;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.CountrySimpleDTO CountryName
        {
            get
            {
                return this._countryName;
            }
            set
            {
                SampleSystem.Generated.DTO.CountrySimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._countryName, newValue))
                {
                    base.RaisePropertyChanging("CountryName");
                    this._countryName = newValue;
                    base.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO LegalEntity
        {
            get
            {
                return this._legalEntity;
            }
            set
            {
                SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._legalEntity, newValue))
                {
                    base.RaisePropertyChanging("LegalEntity");
                    this._legalEntity = newValue;
                    base.RaisePropertyChanged("LegalEntity");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.AddressFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.AddressFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.AddressFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.AddressFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.AddressFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.AddressFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.AddressStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.AddressStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class AddressRichDTO : SampleSystem.Generated.DTO.AddressFullDTO, SampleSystem.Generated.DTO.IAddressRichDTO, System.ICloneable<SampleSystem.Generated.DTO.AddressRichDTO>
    {
        
        public AddressRichDTO()
        {
        }
        
        public AddressRichDTO(SampleSystem.Generated.DTO.IAddressRichDTO source) : 
                this(source, true)
        {
        }
        
        public AddressRichDTO(SampleSystem.Generated.DTO.IAddressRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.AddressRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.AddressRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.AddressRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.AddressRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.AddressRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.AddressRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.AddressStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.AddressStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class AddressStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.AddressIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.AddressType AddressType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CountryIdentityDTO CountryName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip;
        
        public AddressStrictDTO()
        {
        }
        
        public AddressStrictDTO(SampleSystem.Generated.DTO.AddressRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.AddressFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAddress(this, source);
        }
        
        public AddressStrictDTO(SampleSystem.Generated.DTO.AddressRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AddressStrictDTO(SampleSystem.Generated.DTO.AddressFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.AddressSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAddress(this, source);
        }
        
        public AddressStrictDTO(SampleSystem.Generated.DTO.AddressFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AddressStrictDTO(SampleSystem.Generated.DTO.AddressSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAddress(this, source);
        }
        
        public AddressStrictDTO(SampleSystem.Generated.DTO.AddressSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AddressStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAddress(this, source);
        }
        
        private AddressStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AddressStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAddress(this, source);
        }
        
        private AddressStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.AddressIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.AddressIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IAddressSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.AddressType AddressType
        {
            get;
            set;
        }
        
        string CityName
        {
            get;
            set;
        }
        
        string RegionName
        {
            get;
            set;
        }
        
        string Street
        {
            get;
            set;
        }
        
        string Zip
        {
            get;
            set;
        }
    }
    
    public partial interface IAddressFullDTO : SampleSystem.Generated.DTO.IAddressSimpleDTO
    {
        
        SampleSystem.Generated.DTO.CountrySimpleDTO CountryName
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO LegalEntity
        {
            get;
            set;
        }
    }
    
    public partial interface IAddressRichDTO : SampleSystem.Generated.DTO.IAddressFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.BusinessUnitVisualDTO>
    {
        
        private string _name;
        
        public BusinessUnitVisualDTO()
        {
        }
        
        public BusinessUnitVisualDTO(SampleSystem.Generated.DTO.BusinessUnitVisualDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitVisualDTO(SampleSystem.Generated.DTO.BusinessUnitVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.BusinessUnitVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitRichDTO))]
    public partial class BusinessUnitSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Core.IMutablePeriodObject, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.BusinessUnitSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitStatus _businessUnitStatus;
        
        private string _businessUnitTypeName;
        
        private decimal _commission;
        
        private System.DateTime? _firstNewBusinessStatusMonth;
        
        private bool _isNewBusiness;
        
        private bool _isPool;
        
        private bool _isProduction;
        
        private bool _isSpecialCommission;
        
        private System.DateTime? _lastBusinessUnitHasNoLinkedProjectsWarningCheckDate;
        
        private System.DateTime? _lastNewBusinessStatusMonth;
        
        private System.DateTime? _leastProjectStartDate;
        
        private string _lobName;
        
        private string _name;
        
        private bool _needSendBusinessUnitHasNoLinkedProjectsWarning;
        
        private int _newBusinessStatusLeft;
        
        private SampleSystem.Generated.DTO.BusinessUnitOptions _options;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        private string _projectStartMailList;
        
        private int _rank;
        
        public BusinessUnitSimpleDTO()
        {
        }
        
        public BusinessUnitSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitStatus = source.BusinessUnitStatus;
            this.BusinessUnitTypeName = source.BusinessUnitTypeName;
            this.Commission = source.Commission;
            this.FirstNewBusinessStatusMonth = source.FirstNewBusinessStatusMonth;
            this.IsNewBusiness = source.IsNewBusiness;
            this.IsPool = source.IsPool;
            this.IsProduction = source.IsProduction;
            this.IsSpecialCommission = source.IsSpecialCommission;
            this.LastBusinessUnitHasNoLinkedProjectsWarningCheckDate = source.LastBusinessUnitHasNoLinkedProjectsWarningCheckDate;
            this.LastNewBusinessStatusMonth = source.LastNewBusinessStatusMonth;
            this.LeastProjectStartDate = source.LeastProjectStartDate;
            this.LobName = source.LobName;
            this.Name = source.Name;
            this.NeedSendBusinessUnitHasNoLinkedProjectsWarning = source.NeedSendBusinessUnitHasNoLinkedProjectsWarning;
            this.NewBusinessStatusLeft = source.NewBusinessStatusLeft;
            this.Options = source.Options;
            this.Period = source.Period;
            this.ProjectStartMailList = source.ProjectStartMailList;
            this.Rank = source.Rank;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus
        {
            get
            {
                return this._businessUnitStatus;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitStatus newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitStatus, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitStatus");
                    this._businessUnitStatus = newValue;
                    base.RaisePropertyChanged("BusinessUnitStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessUnitTypeName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._businessUnitTypeName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._businessUnitTypeName, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitTypeName");
                    this._businessUnitTypeName = newValue;
                    base.RaisePropertyChanged("BusinessUnitTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission
        {
            get
            {
                return this._commission;
            }
            set
            {
                decimal newValue;
                newValue = value;
                if (!object.Equals(this._commission, newValue))
                {
                    base.RaisePropertyChanging("Commission");
                    this._commission = newValue;
                    base.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? FirstNewBusinessStatusMonth
        {
            get
            {
                return this._firstNewBusinessStatusMonth;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._firstNewBusinessStatusMonth, newValue))
                {
                    base.RaisePropertyChanging("FirstNewBusinessStatusMonth");
                    this._firstNewBusinessStatusMonth = newValue;
                    base.RaisePropertyChanged("FirstNewBusinessStatusMonth");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewBusiness
        {
            get
            {
                return this._isNewBusiness;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isNewBusiness, newValue))
                {
                    base.RaisePropertyChanging("IsNewBusiness");
                    this._isNewBusiness = newValue;
                    base.RaisePropertyChanged("IsNewBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPool
        {
            get
            {
                return this._isPool;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isPool, newValue))
                {
                    base.RaisePropertyChanging("IsPool");
                    this._isPool = newValue;
                    base.RaisePropertyChanged("IsPool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction
        {
            get
            {
                return this._isProduction;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isProduction, newValue))
                {
                    base.RaisePropertyChanging("IsProduction");
                    this._isProduction = newValue;
                    base.RaisePropertyChanged("IsProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpecialCommission
        {
            get
            {
                return this._isSpecialCommission;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isSpecialCommission, newValue))
                {
                    base.RaisePropertyChanging("IsSpecialCommission");
                    this._isSpecialCommission = newValue;
                    base.RaisePropertyChanged("IsSpecialCommission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastBusinessUnitHasNoLinkedProjectsWarningCheckDate
        {
            get
            {
                return this._lastBusinessUnitHasNoLinkedProjectsWarningCheckDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._lastBusinessUnitHasNoLinkedProjectsWarningCheckDate, newValue))
                {
                    base.RaisePropertyChanging("LastBusinessUnitHasNoLinkedProjectsWarningCheckDate");
                    this._lastBusinessUnitHasNoLinkedProjectsWarningCheckDate = newValue;
                    base.RaisePropertyChanged("LastBusinessUnitHasNoLinkedProjectsWarningCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastNewBusinessStatusMonth
        {
            get
            {
                return this._lastNewBusinessStatusMonth;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._lastNewBusinessStatusMonth, newValue))
                {
                    base.RaisePropertyChanging("LastNewBusinessStatusMonth");
                    this._lastNewBusinessStatusMonth = newValue;
                    base.RaisePropertyChanged("LastNewBusinessStatusMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LeastProjectStartDate
        {
            get
            {
                return this._leastProjectStartDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._leastProjectStartDate, newValue))
                {
                    base.RaisePropertyChanging("LeastProjectStartDate");
                    this._leastProjectStartDate = newValue;
                    base.RaisePropertyChanged("LeastProjectStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LobName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._lobName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._lobName, newValue))
                {
                    base.RaisePropertyChanging("LobName");
                    this._lobName = newValue;
                    base.RaisePropertyChanged("LobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedSendBusinessUnitHasNoLinkedProjectsWarning
        {
            get
            {
                return this._needSendBusinessUnitHasNoLinkedProjectsWarning;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._needSendBusinessUnitHasNoLinkedProjectsWarning, newValue))
                {
                    base.RaisePropertyChanging("NeedSendBusinessUnitHasNoLinkedProjectsWarning");
                    this._needSendBusinessUnitHasNoLinkedProjectsWarning = newValue;
                    base.RaisePropertyChanged("NeedSendBusinessUnitHasNoLinkedProjectsWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewBusinessStatusLeft
        {
            get
            {
                return this._newBusinessStatusLeft;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._newBusinessStatusLeft, newValue))
                {
                    base.RaisePropertyChanging("NewBusinessStatusLeft");
                    this._newBusinessStatusLeft = newValue;
                    base.RaisePropertyChanged("NewBusinessStatusLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitOptions Options
        {
            get
            {
                return this._options;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitOptions newValue;
                newValue = value;
                if (!object.Equals(this._options, newValue))
                {
                    base.RaisePropertyChanging("Options");
                    this._options = newValue;
                    base.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectStartMailList
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._projectStartMailList);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._projectStartMailList, newValue))
                {
                    base.RaisePropertyChanging("ProjectStartMailList");
                    this._projectStartMailList = newValue;
                    base.RaisePropertyChanged("ProjectStartMailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank
        {
            get
            {
                return this._rank;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._rank, newValue))
                {
                    base.RaisePropertyChanging("Rank");
                    this._rank = newValue;
                    base.RaisePropertyChanged("Rank");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.BusinessUnitSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitRichDTO))]
    public partial class BusinessUnitFullDTO : SampleSystem.Generated.DTO.BusinessUnitSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitFullDTO>, Framework.Persistent.IParentSource<SampleSystem.Generated.DTO.BusinessUnitSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _businessUnitForRent;
        
        private SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO _businessUnitType;
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _parent;
        
        public BusinessUnitFullDTO()
        {
        }
        
        public BusinessUnitFullDTO(SampleSystem.Generated.DTO.IBusinessUnitFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitFullDTO(SampleSystem.Generated.DTO.IBusinessUnitFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitForRent = source.BusinessUnitForRent;
            this.BusinessUnitType = source.BusinessUnitType;
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnitForRent
        {
            get
            {
                return this._businessUnitForRent;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitForRent, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitForRent");
                    this._businessUnitForRent = newValue;
                    base.RaisePropertyChanged("BusinessUnitForRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get
            {
                return this._businessUnitType;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitType, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitType");
                    this._businessUnitType = newValue;
                    base.RaisePropertyChanged("BusinessUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitRichDTO : SampleSystem.Generated.DTO.BusinessUnitFullDTO, SampleSystem.Generated.DTO.IBusinessUnitRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO> _businessUnitEmployeeRoles = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitRichDTO> _children = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> _managementUnits = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO> _managerCommissions = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO>();
        
        public BusinessUnitRichDTO()
        {
        }
        
        public BusinessUnitRichDTO(SampleSystem.Generated.DTO.IBusinessUnitRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitRichDTO(SampleSystem.Generated.DTO.IBusinessUnitRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.BusinessUnitEmployeeRoles, null))
            {
                this.BusinessUnitEmployeeRoles = Framework.Core.EnumerableExtensions.ToObservableCollection(source.BusinessUnitEmployeeRoles, businessUnitEmployeeRole => businessUnitEmployeeRole.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Children, null))
            {
                this.Children = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Children, businessUnit => businessUnit.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.ManagementUnits, null))
            {
                this.ManagementUnits = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ManagementUnits, managementUnitAndBusinessUnitLink => managementUnitAndBusinessUnitLink.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.ManagerCommissions, null))
            {
                this.ManagerCommissions = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ManagerCommissions, businessUnitManagerCommissionLink => businessUnitManagerCommissionLink.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO> BusinessUnitEmployeeRoles
        {
            get
            {
                return this._businessUnitEmployeeRoles;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitEmployeeRoles, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitEmployeeRoles");
                    this._businessUnitEmployeeRoles = newValue;
                    base.RaisePropertyChanged("BusinessUnitEmployeeRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitRichDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._children, newValue))
                {
                    base.RaisePropertyChanging("Children");
                    this._children = newValue;
                    base.RaisePropertyChanged("Children");
                }
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO>.Details
        {
            get
            {
                return this.BusinessUnitEmployeeRoles;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitRichDTO>.Details
        {
            get
            {
                return this.Children;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>.Details
        {
            get
            {
                return this.ManagementUnits;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO>.Details
        {
            get
            {
                return this.ManagerCommissions;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> ManagementUnits
        {
            get
            {
                return this._managementUnits;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._managementUnits, newValue))
                {
                    base.RaisePropertyChanging("ManagementUnits");
                    this._managementUnits = newValue;
                    base.RaisePropertyChanged("ManagementUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO> ManagerCommissions
        {
            get
            {
                return this._managerCommissions;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._managerCommissions, newValue))
                {
                    base.RaisePropertyChanging("ManagerCommissions");
                    this._managerCommissions = newValue;
                    base.RaisePropertyChanged("ManagerCommissions");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO> BusinessUnitEmployeeRoles = new System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnitForRent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? FirstNewBusinessStatusMonth;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPool;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpecialCommission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LeastProjectStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO> ManagementUnits = new System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO> ManagerCommissions = new System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewBusinessStatusLeft;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitOptions Options;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectStartMailList;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitStrictDTO()
        {
        }
        
        public BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BusinessUnitRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BusinessUnitRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BusinessUnitFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BusinessUnitFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BusinessUnitSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BusinessUnitSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnit(this, source);
        }
        
        private BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnit(this, source);
        }
        
        private BusinessUnitStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus
        {
            get;
            set;
        }
        
        string BusinessUnitTypeName
        {
            get;
            set;
        }
        
        decimal Commission
        {
            get;
            set;
        }
        
        System.DateTime? FirstNewBusinessStatusMonth
        {
            get;
            set;
        }
        
        bool IsNewBusiness
        {
            get;
            set;
        }
        
        bool IsPool
        {
            get;
            set;
        }
        
        bool IsProduction
        {
            get;
            set;
        }
        
        bool IsSpecialCommission
        {
            get;
            set;
        }
        
        System.DateTime? LastBusinessUnitHasNoLinkedProjectsWarningCheckDate
        {
            get;
            set;
        }
        
        System.DateTime? LastNewBusinessStatusMonth
        {
            get;
            set;
        }
        
        System.DateTime? LeastProjectStartDate
        {
            get;
            set;
        }
        
        string LobName
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        bool NeedSendBusinessUnitHasNoLinkedProjectsWarning
        {
            get;
            set;
        }
        
        int NewBusinessStatusLeft
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.BusinessUnitOptions Options
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
        
        string ProjectStartMailList
        {
            get;
            set;
        }
        
        int Rank
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitFullDTO : SampleSystem.Generated.DTO.IBusinessUnitSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnitForRent
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitRichDTO : SampleSystem.Generated.DTO.IBusinessUnitFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO> BusinessUnitEmployeeRoles
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitRichDTO> Children
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> ManagementUnits
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO> ManagerCommissions
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO))]
    public partial class BusinessUnitEmployeeRoleSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleType _role;
        
        public BusinessUnitEmployeeRoleSimpleDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitEmployeeRoleSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Role = source.Role;
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleType Role
        {
            get
            {
                return this._role;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleType newValue;
                newValue = value;
                if (!object.Equals(this._role, newValue))
                {
                    base.RaisePropertyChanging("Role");
                    this._role = newValue;
                    base.RaisePropertyChanged("Role");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO))]
    public partial class BusinessUnitEmployeeRoleFullDTO : SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _businessUnit;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _employee;
        
        public BusinessUnitEmployeeRoleFullDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleFullDTO(SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitEmployeeRoleFullDTO(SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnit = source.BusinessUnit;
            this.Employee = source.Employee;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get
            {
                return this._businessUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnit, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnit");
                    this._businessUnit = newValue;
                    base.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get
            {
                return this._employee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employee, newValue))
                {
                    base.RaisePropertyChanging("Employee");
                    this._employee = newValue;
                    base.RaisePropertyChanged("Employee");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitEmployeeRoleRichDTO : SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO, SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO>
    {
        
        public BusinessUnitEmployeeRoleRichDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleRichDTO(SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitEmployeeRoleRichDTO(SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitEmployeeRoleStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleType Role;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitEmployeeRoleStrictDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitEmployeeRoleSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleType Role
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitEmployeeRoleFullDTO : SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitEmployeeRoleRichDTO : SampleSystem.Generated.DTO.IBusinessUnitEmployeeRoleFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO))]
    public partial class BusinessUnitHrDepartmentSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO>
    {
        
        public BusinessUnitHrDepartmentSimpleDTO()
        {
        }
        
        public BusinessUnitHrDepartmentSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitHrDepartmentSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO))]
    public partial class BusinessUnitHrDepartmentFullDTO : SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _businessUnit;
        
        private SampleSystem.Generated.DTO.HRDepartmentSimpleDTO _hRDepartment;
        
        public BusinessUnitHrDepartmentFullDTO()
        {
        }
        
        public BusinessUnitHrDepartmentFullDTO(SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitHrDepartmentFullDTO(SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnit = source.BusinessUnit;
            this.HRDepartment = source.HRDepartment;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get
            {
                return this._businessUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnit, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnit");
                    this._businessUnit = newValue;
                    base.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get
            {
                return this._hRDepartment;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._hRDepartment, newValue))
                {
                    base.RaisePropertyChanging("HRDepartment");
                    this._hRDepartment = newValue;
                    base.RaisePropertyChanged("HRDepartment");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitHrDepartmentRichDTO : SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO, SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO>
    {
        
        public BusinessUnitHrDepartmentRichDTO()
        {
        }
        
        public BusinessUnitHrDepartmentRichDTO(SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitHrDepartmentRichDTO(SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitHrDepartmentStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitHrDepartmentStrictDTO()
        {
        }
        
        public BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        public BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        public BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        public BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        private BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        private BusinessUnitHrDepartmentStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitHrDepartmentSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IBusinessUnitHrDepartmentFullDTO : SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitHrDepartmentRichDTO : SampleSystem.Generated.DTO.IBusinessUnitHrDepartmentFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO))]
    public partial class BusinessUnitManagerCommissionLinkSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO>
    {
        
        private decimal _commission;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public BusinessUnitManagerCommissionLinkSimpleDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitManagerCommissionLinkSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Commission = source.Commission;
            this.Period = source.Period;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission
        {
            get
            {
                return Framework.Persistent.NumberExtensions.RoundPercent(this._commission);
            }
            set
            {
                decimal newValue;
                newValue = Framework.Persistent.NumberExtensions.RoundPercent(value);
                if (!object.Equals(this._commission, newValue))
                {
                    base.RaisePropertyChanging("Commission");
                    this._commission = newValue;
                    base.RaisePropertyChanged("Commission");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO))]
    public partial class BusinessUnitManagerCommissionLinkFullDTO : SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _businessUnit;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _manager;
        
        public BusinessUnitManagerCommissionLinkFullDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkFullDTO(SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitManagerCommissionLinkFullDTO(SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnit = source.BusinessUnit;
            this.Manager = source.Manager;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get
            {
                return this._businessUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnit, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnit");
                    this._businessUnit = newValue;
                    base.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Manager
        {
            get
            {
                return this._manager;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._manager, newValue))
                {
                    base.RaisePropertyChanging("Manager");
                    this._manager = newValue;
                    base.RaisePropertyChanged("Manager");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitManagerCommissionLinkRichDTO : SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO, SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO>
    {
        
        public BusinessUnitManagerCommissionLinkRichDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkRichDTO(SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitManagerCommissionLinkRichDTO(SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitManagerCommissionLinkStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Manager;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitManagerCommissionLinkStrictDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        decimal Commission
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkFullDTO : SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Manager
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitManagerCommissionLinkRichDTO : SampleSystem.Generated.DTO.IBusinessUnitManagerCommissionLinkFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] ArrayDays;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period[] ArrayPeriods;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.DateTime> ListDays = new System.Collections.Generic.List<System.DateTime>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Core.Period> ListPeriods = new System.Collections.Generic.List<Framework.Core.Period>();
        
        public BusinessUnitRootFilterModelStrictDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.BusinessUnitTypeVisualDTO>
    {
        
        private string _name;
        
        public BusinessUnitTypeVisualDTO()
        {
        }
        
        public BusinessUnitTypeVisualDTO(SampleSystem.Generated.DTO.BusinessUnitTypeVisualDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeVisualDTO(SampleSystem.Generated.DTO.BusinessUnitTypeVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.BusinessUnitTypeVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.BusinessUnitTypeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO))]
    public partial class BusinessUnitTypeSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO>
    {
        
        private bool _additionalStartConfirm;
        
        private bool _additionalTransferConfirm;
        
        private bool _billingProjectAreNotAllowed;
        
        private bool _canBeIsSpecialCommission;
        
        private bool _canBeLinkedToClient;
        
        private bool _canBeLinkedToDepartment;
        
        private bool _canBeNewBusiness;
        
        private bool _canBeResourcePool;
        
        private bool _isAdministrative;
        
        private string _name;
        
        private bool _needVertical;
        
        private SampleSystem.Generated.DTO.PossibleStartDate? _possibleStartDate;
        
        private SampleSystem.Generated.DTO.PossibleStartDate? _possibleTransferDate;
        
        private bool _practiceAllowed;
        
        private bool _projectStartAllowed;
        
        private bool _startBOConfirm;
        
        private bool _transferBOConfirm;
        
        public BusinessUnitTypeSimpleDTO()
        {
        }
        
        public BusinessUnitTypeSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AdditionalStartConfirm = source.AdditionalStartConfirm;
            this.AdditionalTransferConfirm = source.AdditionalTransferConfirm;
            this.BillingProjectAreNotAllowed = source.BillingProjectAreNotAllowed;
            this.CanBeIsSpecialCommission = source.CanBeIsSpecialCommission;
            this.CanBeLinkedToClient = source.CanBeLinkedToClient;
            this.CanBeLinkedToDepartment = source.CanBeLinkedToDepartment;
            this.CanBeNewBusiness = source.CanBeNewBusiness;
            this.CanBeResourcePool = source.CanBeResourcePool;
            this.IsAdministrative = source.IsAdministrative;
            this.Name = source.Name;
            this.NeedVertical = source.NeedVertical;
            this.PossibleStartDate = source.PossibleStartDate;
            this.PossibleTransferDate = source.PossibleTransferDate;
            this.PracticeAllowed = source.PracticeAllowed;
            this.ProjectStartAllowed = source.ProjectStartAllowed;
            this.StartBOConfirm = source.StartBOConfirm;
            this.TransferBOConfirm = source.TransferBOConfirm;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalStartConfirm
        {
            get
            {
                return this._additionalStartConfirm;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._additionalStartConfirm, newValue))
                {
                    base.RaisePropertyChanging("AdditionalStartConfirm");
                    this._additionalStartConfirm = newValue;
                    base.RaisePropertyChanged("AdditionalStartConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalTransferConfirm
        {
            get
            {
                return this._additionalTransferConfirm;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._additionalTransferConfirm, newValue))
                {
                    base.RaisePropertyChanging("AdditionalTransferConfirm");
                    this._additionalTransferConfirm = newValue;
                    base.RaisePropertyChanged("AdditionalTransferConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillingProjectAreNotAllowed
        {
            get
            {
                return this._billingProjectAreNotAllowed;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._billingProjectAreNotAllowed, newValue))
                {
                    base.RaisePropertyChanging("BillingProjectAreNotAllowed");
                    this._billingProjectAreNotAllowed = newValue;
                    base.RaisePropertyChanged("BillingProjectAreNotAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeIsSpecialCommission
        {
            get
            {
                return this._canBeIsSpecialCommission;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._canBeIsSpecialCommission, newValue))
                {
                    base.RaisePropertyChanging("CanBeIsSpecialCommission");
                    this._canBeIsSpecialCommission = newValue;
                    base.RaisePropertyChanged("CanBeIsSpecialCommission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToClient
        {
            get
            {
                return this._canBeLinkedToClient;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._canBeLinkedToClient, newValue))
                {
                    base.RaisePropertyChanging("CanBeLinkedToClient");
                    this._canBeLinkedToClient = newValue;
                    base.RaisePropertyChanged("CanBeLinkedToClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToDepartment
        {
            get
            {
                return this._canBeLinkedToDepartment;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._canBeLinkedToDepartment, newValue))
                {
                    base.RaisePropertyChanging("CanBeLinkedToDepartment");
                    this._canBeLinkedToDepartment = newValue;
                    base.RaisePropertyChanged("CanBeLinkedToDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeNewBusiness
        {
            get
            {
                return this._canBeNewBusiness;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._canBeNewBusiness, newValue))
                {
                    base.RaisePropertyChanging("CanBeNewBusiness");
                    this._canBeNewBusiness = newValue;
                    base.RaisePropertyChanged("CanBeNewBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeResourcePool
        {
            get
            {
                return this._canBeResourcePool;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._canBeResourcePool, newValue))
                {
                    base.RaisePropertyChanging("CanBeResourcePool");
                    this._canBeResourcePool = newValue;
                    base.RaisePropertyChanged("CanBeResourcePool");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrative
        {
            get
            {
                return this._isAdministrative;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isAdministrative, newValue))
                {
                    base.RaisePropertyChanging("IsAdministrative");
                    this._isAdministrative = newValue;
                    base.RaisePropertyChanged("IsAdministrative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedVertical
        {
            get
            {
                return this._needVertical;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._needVertical, newValue))
                {
                    base.RaisePropertyChanging("NeedVertical");
                    this._needVertical = newValue;
                    base.RaisePropertyChanged("NeedVertical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.PossibleStartDate? PossibleStartDate
        {
            get
            {
                return this._possibleStartDate;
            }
            set
            {
                SampleSystem.Generated.DTO.PossibleStartDate? newValue;
                newValue = value;
                if (!object.Equals(this._possibleStartDate, newValue))
                {
                    base.RaisePropertyChanging("PossibleStartDate");
                    this._possibleStartDate = newValue;
                    base.RaisePropertyChanged("PossibleStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.PossibleStartDate? PossibleTransferDate
        {
            get
            {
                return this._possibleTransferDate;
            }
            set
            {
                SampleSystem.Generated.DTO.PossibleStartDate? newValue;
                newValue = value;
                if (!object.Equals(this._possibleTransferDate, newValue))
                {
                    base.RaisePropertyChanging("PossibleTransferDate");
                    this._possibleTransferDate = newValue;
                    base.RaisePropertyChanged("PossibleTransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PracticeAllowed
        {
            get
            {
                return this._practiceAllowed;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._practiceAllowed, newValue))
                {
                    base.RaisePropertyChanging("PracticeAllowed");
                    this._practiceAllowed = newValue;
                    base.RaisePropertyChanged("PracticeAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjectStartAllowed
        {
            get
            {
                return this._projectStartAllowed;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._projectStartAllowed, newValue))
                {
                    base.RaisePropertyChanging("ProjectStartAllowed");
                    this._projectStartAllowed = newValue;
                    base.RaisePropertyChanged("ProjectStartAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartBOConfirm
        {
            get
            {
                return this._startBOConfirm;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._startBOConfirm, newValue))
                {
                    base.RaisePropertyChanging("StartBOConfirm");
                    this._startBOConfirm = newValue;
                    base.RaisePropertyChanged("StartBOConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TransferBOConfirm
        {
            get
            {
                return this._transferBOConfirm;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._transferBOConfirm, newValue))
                {
                    base.RaisePropertyChanging("TransferBOConfirm");
                    this._transferBOConfirm = newValue;
                    base.RaisePropertyChanged("TransferBOConfirm");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO))]
    public partial class BusinessUnitTypeFullDTO : SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO>
    {
        
        public BusinessUnitTypeFullDTO()
        {
        }
        
        public BusinessUnitTypeFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeRichDTO : SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO> _possibleFinancialProjectTypes = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO> _possibleParents = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO> _transferTo = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO>();
        
        public BusinessUnitTypeRichDTO()
        {
        }
        
        public BusinessUnitTypeRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.PossibleFinancialProjectTypes, null))
            {
                this.PossibleFinancialProjectTypes = Framework.Core.EnumerableExtensions.ToObservableCollection(source.PossibleFinancialProjectTypes, businessUnitTypeLinkWithPossibleFinancialProjectType => businessUnitTypeLinkWithPossibleFinancialProjectType.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.PossibleParents, null))
            {
                this.PossibleParents = Framework.Core.EnumerableExtensions.ToObservableCollection(source.PossibleParents, businessUnitTypeLinkWithPossibleParent => businessUnitTypeLinkWithPossibleParent.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.TransferTo, null))
            {
                this.TransferTo = Framework.Core.EnumerableExtensions.ToObservableCollection(source.TransferTo, businessUnitTypeLinkWithTransferTo => businessUnitTypeLinkWithTransferTo.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO>.Details
        {
            get
            {
                return this.PossibleFinancialProjectTypes;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO>.Details
        {
            get
            {
                return this.PossibleParents;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO>.Details
        {
            get
            {
                return this.TransferTo;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO> PossibleFinancialProjectTypes
        {
            get
            {
                return this._possibleFinancialProjectTypes;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._possibleFinancialProjectTypes, newValue))
                {
                    base.RaisePropertyChanging("PossibleFinancialProjectTypes");
                    this._possibleFinancialProjectTypes = newValue;
                    base.RaisePropertyChanged("PossibleFinancialProjectTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO> PossibleParents
        {
            get
            {
                return this._possibleParents;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._possibleParents, newValue))
                {
                    base.RaisePropertyChanging("PossibleParents");
                    this._possibleParents = newValue;
                    base.RaisePropertyChanged("PossibleParents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO> TransferTo
        {
            get
            {
                return this._transferTo;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._transferTo, newValue))
                {
                    base.RaisePropertyChanging("TransferTo");
                    this._transferTo = newValue;
                    base.RaisePropertyChanged("TransferTo");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalStartConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalTransferConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillingProjectAreNotAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeIsSpecialCommission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToClient;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeResourcePool;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedVertical;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO> PossibleFinancialProjectTypes = new System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO> PossibleParents = new System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.PossibleStartDate? PossibleStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.PossibleStartDate? PossibleTransferDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PracticeAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjectStartAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartBOConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TransferBOConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO> TransferTo = new System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeStrictDTO()
        {
        }
        
        public BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitType(this, source);
        }
        
        public BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitType(this, source);
        }
        
        public BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitType(this, source);
        }
        
        public BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitType(this, source);
        }
        
        private BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitType(this, source);
        }
        
        private BusinessUnitTypeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitTypeSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool AdditionalStartConfirm
        {
            get;
            set;
        }
        
        bool AdditionalTransferConfirm
        {
            get;
            set;
        }
        
        bool BillingProjectAreNotAllowed
        {
            get;
            set;
        }
        
        bool CanBeIsSpecialCommission
        {
            get;
            set;
        }
        
        bool CanBeLinkedToClient
        {
            get;
            set;
        }
        
        bool CanBeLinkedToDepartment
        {
            get;
            set;
        }
        
        bool CanBeNewBusiness
        {
            get;
            set;
        }
        
        bool CanBeResourcePool
        {
            get;
            set;
        }
        
        bool IsAdministrative
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        bool NeedVertical
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.PossibleStartDate? PossibleStartDate
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.PossibleStartDate? PossibleTransferDate
        {
            get;
            set;
        }
        
        bool PracticeAllowed
        {
            get;
            set;
        }
        
        bool ProjectStartAllowed
        {
            get;
            set;
        }
        
        bool StartBOConfirm
        {
            get;
            set;
        }
        
        bool TransferBOConfirm
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitTypeFullDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeSimpleDTO
    {
    }
    
    public partial interface IBusinessUnitTypeRichDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO> PossibleFinancialProjectTypes
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO> PossibleParents
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO> TransferTo
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO>
    {
        
        private SampleSystem.Generated.DTO.FinancialProjectType _financialProjectType;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.FinancialProjectType = source.FinancialProjectType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.FinancialProjectType FinancialProjectType
        {
            get
            {
                return this._financialProjectType;
            }
            set
            {
                SampleSystem.Generated.DTO.FinancialProjectType newValue;
                newValue = value;
                if (!object.Equals(this._financialProjectType, newValue))
                {
                    base.RaisePropertyChanging("FinancialProjectType");
                    this._financialProjectType = newValue;
                    base.RaisePropertyChanged("FinancialProjectType");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO : SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO _businessUnitType;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitType = source.BusinessUnitType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get
            {
                return this._businessUnitType;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitType, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitType");
                    this._businessUnitType = newValue;
                    base.RaisePropertyChanged("BusinessUnitType");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO : SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO>
    {
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.FinancialProjectType FinancialProjectType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.FinancialProjectType FinancialProjectType
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleParentSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO>
    {
        
        public BusinessUnitTypeLinkWithPossibleParentSimpleDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleParentFullDTO : SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO _businessUnitType;
        
        private SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO _possibleParent;
        
        public BusinessUnitTypeLinkWithPossibleParentFullDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitType = source.BusinessUnitType;
            this.PossibleParent = source.PossibleParent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get
            {
                return this._businessUnitType;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitType, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitType");
                    this._businessUnitType = newValue;
                    base.RaisePropertyChanged("BusinessUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO PossibleParent
        {
            get
            {
                return this._possibleParent;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._possibleParent, newValue))
                {
                    base.RaisePropertyChanging("PossibleParent");
                    this._possibleParent = newValue;
                    base.RaisePropertyChanged("PossibleParent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleParentRichDTO : SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO>
    {
        
        public BusinessUnitTypeLinkWithPossibleParentRichDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleParentStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO PossibleParent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithPossibleParentSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IBusinessUnitTypeLinkWithPossibleParentFullDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO PossibleParent
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithPossibleParentRichDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithPossibleParentFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO))]
    public partial class BusinessUnitTypeLinkWithTransferToSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO>
    {
        
        public BusinessUnitTypeLinkWithTransferToSimpleDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToSimpleDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO))]
    public partial class BusinessUnitTypeLinkWithTransferToFullDTO : SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToFullDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO _businessUnitType;
        
        private SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO _transferTo;
        
        public BusinessUnitTypeLinkWithTransferToFullDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToFullDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToFullDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitType = source.BusinessUnitType;
            this.TransferTo = source.TransferTo;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get
            {
                return this._businessUnitType;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitType, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitType");
                    this._businessUnitType = newValue;
                    base.RaisePropertyChanged("BusinessUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO TransferTo
        {
            get
            {
                return this._transferTo;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._transferTo, newValue))
                {
                    base.RaisePropertyChanging("TransferTo");
                    this._transferTo = newValue;
                    base.RaisePropertyChanged("TransferTo");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeLinkWithTransferToRichDTO : SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO, SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToRichDTO, System.ICloneable<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO>
    {
        
        public BusinessUnitTypeLinkWithTransferToRichDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToRichDTO source) : 
                this(source, true)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToRichDTO(SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitTypeLinkWithTransferToStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO TransferTo;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithTransferToSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IBusinessUnitTypeLinkWithTransferToFullDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO TransferTo
        {
            get;
            set;
        }
    }
    
    public partial interface IBusinessUnitTypeLinkWithTransferToRichDTO : SampleSystem.Generated.DTO.IBusinessUnitTypeLinkWithTransferToFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CompanyLegalEntityVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.CompanyLegalEntityVisualDTO>
    {
        
        private string _name;
        
        public CompanyLegalEntityVisualDTO()
        {
        }
        
        public CompanyLegalEntityVisualDTO(SampleSystem.Generated.DTO.CompanyLegalEntityVisualDTO source) : 
                this(source, true)
        {
        }
        
        public CompanyLegalEntityVisualDTO(SampleSystem.Generated.DTO.CompanyLegalEntityVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.CompanyLegalEntityVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO))]
    public partial class CompanyLegalEntitySimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ICompanyLegalEntitySimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.RevenueDocumentAribaStatus _aribaStatus;
        
        private string _code;
        
        private string _name;
        
        private string _nameEnglish;
        
        private SampleSystem.Generated.DTO.CompanyLegalEntityType _type;
        
        public CompanyLegalEntitySimpleDTO()
        {
        }
        
        public CompanyLegalEntitySimpleDTO(SampleSystem.Generated.DTO.ICompanyLegalEntitySimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CompanyLegalEntitySimpleDTO(SampleSystem.Generated.DTO.ICompanyLegalEntitySimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AribaStatus = source.AribaStatus;
            this.Code = source.Code;
            this.Name = source.Name;
            this.NameEnglish = source.NameEnglish;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.RevenueDocumentAribaStatus AribaStatus
        {
            get
            {
                return this._aribaStatus;
            }
            set
            {
                SampleSystem.Generated.DTO.RevenueDocumentAribaStatus newValue;
                newValue = value;
                if (!object.Equals(this._aribaStatus, newValue))
                {
                    base.RaisePropertyChanging("AribaStatus");
                    this._aribaStatus = newValue;
                    base.RaisePropertyChanged("AribaStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(100)]
        public string Code
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._code);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._code, newValue))
                {
                    base.RaisePropertyChanging("Code");
                    this._code = newValue;
                    base.RaisePropertyChanged("Code");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public string NameEnglish
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._nameEnglish);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._nameEnglish, newValue))
                {
                    base.RaisePropertyChanging("NameEnglish");
                    this._nameEnglish = newValue;
                    base.RaisePropertyChanged("NameEnglish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CompanyLegalEntityType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                SampleSystem.Generated.DTO.CompanyLegalEntityType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO))]
    public partial class CompanyLegalEntityFullDTO : SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO, SampleSystem.Generated.DTO.ICompanyLegalEntityFullDTO, System.ICloneable<SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO>, Framework.Persistent.IParentSource<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO _baseObj;
        
        private SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO _currentObj;
        
        private SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO _parent;
        
        public CompanyLegalEntityFullDTO()
        {
        }
        
        public CompanyLegalEntityFullDTO(SampleSystem.Generated.DTO.ICompanyLegalEntityFullDTO source) : 
                this(source, true)
        {
        }
        
        public CompanyLegalEntityFullDTO(SampleSystem.Generated.DTO.ICompanyLegalEntityFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BaseObj = source.BaseObj;
            this.CurrentObj = source.CurrentObj;
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO BaseObj
        {
            get
            {
                return this._baseObj;
            }
            set
            {
                SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._baseObj, newValue))
                {
                    base.RaisePropertyChanging("BaseObj");
                    this._baseObj = newValue;
                    base.RaisePropertyChanged("BaseObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO CurrentObj
        {
            get
            {
                return this._currentObj;
            }
            set
            {
                SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._currentObj, newValue))
                {
                    base.RaisePropertyChanging("CurrentObj");
                    this._currentObj = newValue;
                    base.RaisePropertyChanged("CurrentObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CompanyLegalEntityRichDTO : SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO, SampleSystem.Generated.DTO.ICompanyLegalEntityRichDTO, System.ICloneable<SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.AddressRichDTO> _addresses = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.AddressRichDTO>();
        
        public CompanyLegalEntityRichDTO()
        {
        }
        
        public CompanyLegalEntityRichDTO(SampleSystem.Generated.DTO.ICompanyLegalEntityRichDTO source) : 
                this(source, true)
        {
        }
        
        public CompanyLegalEntityRichDTO(SampleSystem.Generated.DTO.ICompanyLegalEntityRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Addresses, null))
            {
                this.Addresses = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Addresses, address => address.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.AddressRichDTO> Addresses
        {
            get
            {
                return this._addresses;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.AddressRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._addresses, newValue))
                {
                    base.RaisePropertyChanging("Addresses");
                    this._addresses = newValue;
                    base.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CompanyLegalEntityStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.AddressStrictDTO> Addresses = new System.Collections.Generic.List<SampleSystem.Generated.DTO.AddressStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO BaseObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO CurrentObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEnglish;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CompanyLegalEntityType Type;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CompanyLegalEntityStrictDTO()
        {
        }
        
        public CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCompanyLegalEntity(this, source);
        }
        
        public CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.CompanyLegalEntityRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCompanyLegalEntity(this, source);
        }
        
        public CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.CompanyLegalEntityFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCompanyLegalEntity(this, source);
        }
        
        public CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCompanyLegalEntity(this, source);
        }
        
        private CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCompanyLegalEntity(this, source);
        }
        
        private CompanyLegalEntityStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ICompanyLegalEntitySimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.RevenueDocumentAribaStatus AribaStatus
        {
            get;
            set;
        }
        
        string Code
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string NameEnglish
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.CompanyLegalEntityType Type
        {
            get;
            set;
        }
    }
    
    public partial interface ICompanyLegalEntityFullDTO : SampleSystem.Generated.DTO.ICompanyLegalEntitySimpleDTO
    {
        
        SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO BaseObj
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO CurrentObj
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface ICompanyLegalEntityRichDTO : SampleSystem.Generated.DTO.ICompanyLegalEntityFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.AddressRichDTO> Addresses
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CountryVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CountryIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.CountryVisualDTO>
    {
        
        private string _name;
        
        public CountryVisualDTO()
        {
        }
        
        public CountryVisualDTO(SampleSystem.Generated.DTO.CountryVisualDTO source) : 
                this(source, true)
        {
        }
        
        public CountryVisualDTO(SampleSystem.Generated.DTO.CountryVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.CountryIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CountryIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CountryVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CountryVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.CountryVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CountryEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CountryView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.CountryFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.CountryRichDTO))]
    public partial class CountrySimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ICountrySimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.CountrySimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CountryIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.CountrySimpleDTO>
    {
        
        private string _code;
        
        private string _culture;
        
        private string _name;
        
        private string _nameNative;
        
        public CountrySimpleDTO()
        {
        }
        
        public CountrySimpleDTO(SampleSystem.Generated.DTO.ICountrySimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CountrySimpleDTO(SampleSystem.Generated.DTO.ICountrySimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Code = source.Code;
            this.Culture = source.Culture;
            this.Name = source.Name;
            this.NameNative = source.NameNative;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public string Code
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._code);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._code, newValue))
                {
                    base.RaisePropertyChanging("Code");
                    this._code = newValue;
                    base.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public string Culture
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._culture);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._culture, newValue))
                {
                    base.RaisePropertyChanging("Culture");
                    this._culture = newValue;
                    base.RaisePropertyChanged("Culture");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CountryIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CountryIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public string NameNative
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._nameNative);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._nameNative, newValue))
                {
                    base.RaisePropertyChanging("NameNative");
                    this._nameNative = newValue;
                    base.RaisePropertyChanged("NameNative");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.CountrySimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CountrySimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.CountrySimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.CountrySimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.CountrySimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.CountrySimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.CountrySimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.CountryStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.CountryStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.CountryRichDTO))]
    public partial class CountryFullDTO : SampleSystem.Generated.DTO.CountrySimpleDTO, SampleSystem.Generated.DTO.ICountryFullDTO, System.ICloneable<SampleSystem.Generated.DTO.CountryFullDTO>
    {
        
        public CountryFullDTO()
        {
        }
        
        public CountryFullDTO(SampleSystem.Generated.DTO.ICountryFullDTO source) : 
                this(source, true)
        {
        }
        
        public CountryFullDTO(SampleSystem.Generated.DTO.ICountryFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.CountryFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CountryFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.CountryFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.CountryFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.CountryFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.CountryFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.CountryStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.CountryStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CountryRichDTO : SampleSystem.Generated.DTO.CountryFullDTO, SampleSystem.Generated.DTO.ICountryRichDTO, System.ICloneable<SampleSystem.Generated.DTO.CountryRichDTO>
    {
        
        public CountryRichDTO()
        {
        }
        
        public CountryRichDTO(SampleSystem.Generated.DTO.ICountryRichDTO source) : 
                this(source, true)
        {
        }
        
        public CountryRichDTO(SampleSystem.Generated.DTO.ICountryRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.CountryRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.CountryRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.CountryRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.CountryRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.CountryRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.CountryRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.CountryStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.CountryStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CountryStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CountryIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CountryStrictDTO()
        {
        }
        
        public CountryStrictDTO(SampleSystem.Generated.DTO.CountryRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.CountryFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCountry(this, source);
        }
        
        public CountryStrictDTO(SampleSystem.Generated.DTO.CountryRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CountryStrictDTO(SampleSystem.Generated.DTO.CountryFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.CountrySimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCountry(this, source);
        }
        
        public CountryStrictDTO(SampleSystem.Generated.DTO.CountryFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CountryStrictDTO(SampleSystem.Generated.DTO.CountrySimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCountry(this, source);
        }
        
        public CountryStrictDTO(SampleSystem.Generated.DTO.CountrySimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CountryStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCountry(this, source);
        }
        
        private CountryStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CountryStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCountry(this, source);
        }
        
        private CountryStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.CountryIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CountryIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ICountrySimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Code
        {
            get;
            set;
        }
        
        string Culture
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string NameNative
        {
            get;
            set;
        }
    }
    
    public partial interface ICountryFullDTO : SampleSystem.Generated.DTO.ICountrySimpleDTO
    {
    }
    
    public partial interface ICountryRichDTO : SampleSystem.Generated.DTO.ICountryFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRichDTO))]
    public partial class EmployeeSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        private string _accountName;
        
        private int _age;
        
        private System.DateTime? _birthDate;
        
        private bool _canBePPM;
        
        private string _cellPhone;
        
        private Framework.Core.Period? _coreBusinessUnitPeriod;
        
        private System.DateTime? _dismissDate;
        
        private Framework.Core.Period _educationDuration = Framework.Core.Period.Eternity;
        
        private string _email;
        
        private long _externalId;
        
        private SampleSystem.Generated.DTO.Gender _gender;
        
        private System.DateTime? _hireDate;
        
        private string _interphone;
        
        private bool _isCandidate;
        
        private string _landlinephone;
        
        private System.DateTime? _lastActionDate;
        
        private int? _locationCode;
        
        private Framework.Core.Maybe<string> _login = Framework.Core.Maybe<string>.Nothing;
        
        private string _mailAccountName;
        
        private SampleSystem.Generated.DTO.FioShort _nameEng;
        
        private SampleSystem.Generated.DTO.Fio _nameNative;
        
        private SampleSystem.Generated.DTO.Fio _nameRussian;
        
        private System.DateTime _nonValidateVirtualProp;
        
        private Framework.Core.Maybe<string> _personalCellPhone = Framework.Core.Maybe<string>.Nothing;
        
        private int? _pin;
        
        private System.DateTime? _plannedHireDate;
        
        private System.DateTime _validateVirtualProp;
        
        private Framework.Core.Period _workPeriod = Framework.Core.Period.Eternity;
        
        public EmployeeSimpleDTO()
        {
        }
        
        public EmployeeSimpleDTO(SampleSystem.Generated.DTO.IEmployeeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeSimpleDTO(SampleSystem.Generated.DTO.IEmployeeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AccountName = source.AccountName;
            this.Age = source.Age;
            this.BirthDate = source.BirthDate;
            this.CanBePPM = source.CanBePPM;
            this.CellPhone = source.CellPhone;
            this.CoreBusinessUnitPeriod = source.CoreBusinessUnitPeriod;
            this.DismissDate = source.DismissDate;
            this.EducationDuration = source.EducationDuration;
            this.Email = source.Email;
            this.ExternalId = source.ExternalId;
            this.Gender = source.Gender;
            this.HireDate = source.HireDate;
            this.Interphone = source.Interphone;
            this.IsCandidate = source.IsCandidate;
            this.Landlinephone = source.Landlinephone;
            this.LastActionDate = source.LastActionDate;
            this.LocationCode = source.LocationCode;
            Framework.Core.Just<string> justLogin = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(source.Login);
            if (!object.ReferenceEquals(justLogin, null))
            {
                string resultLogin;
                resultLogin = justLogin.Value;
                this.Login = new Framework.Core.Just<string>(resultLogin);
            }
            else
            {
                this.Login = Framework.Core.Maybe<string>.Nothing;
            }
            this.MailAccountName = source.MailAccountName;
            if (!object.ReferenceEquals(source.NameEng, null))
            {
                this.NameEng = new SampleSystem.Generated.DTO.FioShort(source.NameEng);
            }
            if (!object.ReferenceEquals(source.NameNative, null))
            {
                this.NameNative = new SampleSystem.Generated.DTO.Fio(source.NameNative);
            }
            if (!object.ReferenceEquals(source.NameRussian, null))
            {
                this.NameRussian = new SampleSystem.Generated.DTO.Fio(source.NameRussian);
            }
            this.NonValidateVirtualProp = source.NonValidateVirtualProp;
            Framework.Core.Just<string> justPersonalCellPhone = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(source.PersonalCellPhone);
            if (!object.ReferenceEquals(justPersonalCellPhone, null))
            {
                string resultPersonalCellPhone;
                resultPersonalCellPhone = justPersonalCellPhone.Value;
                this.PersonalCellPhone = new Framework.Core.Just<string>(resultPersonalCellPhone);
            }
            else
            {
                this.PersonalCellPhone = Framework.Core.Maybe<string>.Nothing;
            }
            this.Pin = source.Pin;
            this.PlannedHireDate = source.PlannedHireDate;
            this.ValidateVirtualProp = source.ValidateVirtualProp;
            this.WorkPeriod = source.WorkPeriod;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._accountName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._accountName, newValue))
                {
                    base.RaisePropertyChanging("AccountName");
                    this._accountName = newValue;
                    base.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age
        {
            get
            {
                return this._age;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._age, newValue))
                {
                    base.RaisePropertyChanging("Age");
                    this._age = newValue;
                    base.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BirthDate
        {
            get
            {
                return this._birthDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._birthDate, newValue))
                {
                    base.RaisePropertyChanging("BirthDate");
                    this._birthDate = newValue;
                    base.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBePPM
        {
            get
            {
                return this._canBePPM;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._canBePPM, newValue))
                {
                    base.RaisePropertyChanging("CanBePPM");
                    this._canBePPM = newValue;
                    base.RaisePropertyChanged("CanBePPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._cellPhone);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._cellPhone, newValue))
                {
                    base.RaisePropertyChanging("CellPhone");
                    this._cellPhone = newValue;
                    base.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period? CoreBusinessUnitPeriod
        {
            get
            {
                return this._coreBusinessUnitPeriod;
            }
            set
            {
                Framework.Core.Period? newValue;
                newValue = value;
                if (!object.Equals(this._coreBusinessUnitPeriod, newValue))
                {
                    base.RaisePropertyChanging("CoreBusinessUnitPeriod");
                    this._coreBusinessUnitPeriod = newValue;
                    base.RaisePropertyChanged("CoreBusinessUnitPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? DismissDate
        {
            get
            {
                return this._dismissDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._dismissDate, newValue))
                {
                    base.RaisePropertyChanging("DismissDate");
                    this._dismissDate = newValue;
                    base.RaisePropertyChanged("DismissDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period EducationDuration
        {
            get
            {
                return this._educationDuration;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._educationDuration, newValue))
                {
                    base.RaisePropertyChanging("EducationDuration");
                    this._educationDuration = newValue;
                    base.RaisePropertyChanged("EducationDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        public string Email
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._email);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._email, newValue))
                {
                    base.RaisePropertyChanging("Email");
                    this._email = newValue;
                    base.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId
        {
            get
            {
                return this._externalId;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._externalId, newValue))
                {
                    base.RaisePropertyChanging("ExternalId");
                    this._externalId = newValue;
                    base.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Gender Gender
        {
            get
            {
                return this._gender;
            }
            set
            {
                SampleSystem.Generated.DTO.Gender newValue;
                newValue = value;
                if (!object.Equals(this._gender, newValue))
                {
                    base.RaisePropertyChanging("Gender");
                    this._gender = newValue;
                    base.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? HireDate
        {
            get
            {
                return this._hireDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._hireDate, newValue))
                {
                    base.RaisePropertyChanging("HireDate");
                    this._hireDate = newValue;
                    base.RaisePropertyChanged("HireDate");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(25)]
        public string Interphone
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._interphone);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._interphone, newValue))
                {
                    base.RaisePropertyChanging("Interphone");
                    this._interphone = newValue;
                    base.RaisePropertyChanged("Interphone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCandidate
        {
            get
            {
                return this._isCandidate;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isCandidate, newValue))
                {
                    base.RaisePropertyChanging("IsCandidate");
                    this._isCandidate = newValue;
                    base.RaisePropertyChanged("IsCandidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(40)]
        public string Landlinephone
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._landlinephone);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._landlinephone, newValue))
                {
                    base.RaisePropertyChanging("Landlinephone");
                    this._landlinephone = newValue;
                    base.RaisePropertyChanged("Landlinephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastActionDate
        {
            get
            {
                return this._lastActionDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._lastActionDate, newValue))
                {
                    base.RaisePropertyChanging("LastActionDate");
                    this._lastActionDate = newValue;
                    base.RaisePropertyChanged("LastActionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? LocationCode
        {
            get
            {
                return this._locationCode;
            }
            set
            {
                int? newValue;
                newValue = value;
                if (!object.Equals(this._locationCode, newValue))
                {
                    base.RaisePropertyChanging("LocationCode");
                    this._locationCode = newValue;
                    base.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit)]
        [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
        [Framework.Restriction.MaxLengthAttribute(30)]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Core.Maybe<string> Login
        {
            get
            {
                Framework.Core.Just<string> justLogin = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(this._login);
                if (!object.ReferenceEquals(justLogin, null))
                {
                    return new Framework.Core.Just<string>(Framework.Core.StringExtensions.TrimNull(justLogin.Value));
                }
                else
                {
                    return Framework.Core.Maybe<string>.Nothing;
                }
            }
            set
            {
                Framework.Core.Maybe<string> newValue;
                Framework.Core.Just<string> justLogin = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(value);
                if (!object.ReferenceEquals(justLogin, null))
                {
                    newValue = new Framework.Core.Just<string>(Framework.Core.StringExtensions.TrimNull(justLogin.Value));
                }
                else
                {
                    newValue = Framework.Core.Maybe<string>.Nothing;
                }
                if (!object.Equals(this._login, newValue))
                {
                    base.RaisePropertyChanging("Login");
                    this._login = newValue;
                    base.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAccountName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._mailAccountName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._mailAccountName, newValue))
                {
                    base.RaisePropertyChanging("MailAccountName");
                    this._mailAccountName = newValue;
                    base.RaisePropertyChanged("MailAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.FioShort NameEng
        {
            get
            {
                return this._nameEng;
            }
            set
            {
                SampleSystem.Generated.DTO.FioShort newValue;
                newValue = value;
                if (!object.Equals(this._nameEng, newValue))
                {
                    base.RaisePropertyChanging("NameEng");
                    this._nameEng = newValue;
                    base.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Fio NameNative
        {
            get
            {
                return this._nameNative;
            }
            set
            {
                SampleSystem.Generated.DTO.Fio newValue;
                newValue = value;
                if (!object.Equals(this._nameNative, newValue))
                {
                    base.RaisePropertyChanging("NameNative");
                    this._nameNative = newValue;
                    base.RaisePropertyChanged("NameNative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Fio NameRussian
        {
            get
            {
                return this._nameRussian;
            }
            set
            {
                SampleSystem.Generated.DTO.Fio newValue;
                newValue = value;
                if (!object.Equals(this._nameRussian, newValue))
                {
                    base.RaisePropertyChanging("NameRussian");
                    this._nameRussian = newValue;
                    base.RaisePropertyChanged("NameRussian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NonValidateVirtualProp
        {
            get
            {
                return this._nonValidateVirtualProp;
            }
            set
            {
                System.DateTime newValue;
                newValue = value;
                if (!object.Equals(this._nonValidateVirtualProp, newValue))
                {
                    base.RaisePropertyChanging("NonValidateVirtualProp");
                    this._nonValidateVirtualProp = newValue;
                    base.RaisePropertyChanged("NonValidateVirtualProp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView)]
        public Framework.Core.Maybe<string> PersonalCellPhone
        {
            get
            {
                Framework.Core.Just<string> justPersonalCellPhone = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(this._personalCellPhone);
                if (!object.ReferenceEquals(justPersonalCellPhone, null))
                {
                    return new Framework.Core.Just<string>(Framework.Core.StringExtensions.TrimNull(justPersonalCellPhone.Value));
                }
                else
                {
                    return Framework.Core.Maybe<string>.Nothing;
                }
            }
            set
            {
                Framework.Core.Maybe<string> newValue;
                Framework.Core.Just<string> justPersonalCellPhone = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<string>>(value);
                if (!object.ReferenceEquals(justPersonalCellPhone, null))
                {
                    newValue = new Framework.Core.Just<string>(Framework.Core.StringExtensions.TrimNull(justPersonalCellPhone.Value));
                }
                else
                {
                    newValue = Framework.Core.Maybe<string>.Nothing;
                }
                if (!object.Equals(this._personalCellPhone, newValue))
                {
                    base.RaisePropertyChanging("PersonalCellPhone");
                    this._personalCellPhone = newValue;
                    base.RaisePropertyChanged("PersonalCellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? Pin
        {
            get
            {
                return this._pin;
            }
            set
            {
                int? newValue;
                newValue = value;
                if (!object.Equals(this._pin, newValue))
                {
                    base.RaisePropertyChanging("Pin");
                    this._pin = newValue;
                    base.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PlannedHireDate
        {
            get
            {
                return this._plannedHireDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._plannedHireDate, newValue))
                {
                    base.RaisePropertyChanging("PlannedHireDate");
                    this._plannedHireDate = newValue;
                    base.RaisePropertyChanged("PlannedHireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidateVirtualProp
        {
            get
            {
                return this._validateVirtualProp;
            }
            set
            {
                System.DateTime newValue;
                newValue = value;
                if (!object.Equals(this._validateVirtualProp, newValue))
                {
                    base.RaisePropertyChanging("ValidateVirtualProp");
                    this._validateVirtualProp = newValue;
                    base.RaisePropertyChanged("ValidateVirtualProp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period WorkPeriod
        {
            get
            {
                return this._workPeriod;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._workPeriod, newValue))
                {
                    base.RaisePropertyChanging("WorkPeriod");
                    this._workPeriod = newValue;
                    base.RaisePropertyChanged("WorkPeriod");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRichDTO))]
    public partial class EmployeeFullDTO : SampleSystem.Generated.DTO.EmployeeSimpleDTO, SampleSystem.Generated.DTO.IEmployeeFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _coreBusinessUnit;
        
        private SampleSystem.Generated.DTO.HRDepartmentSimpleDTO _hRDepartment;
        
        private SampleSystem.Generated.DTO.LocationSimpleDTO _location;
        
        private SampleSystem.Generated.DTO.ManagementUnitSimpleDTO _managementUnit;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _personalAssistant;
        
        private Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> _position = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>.Nothing;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _ppm;
        
        private SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO _registrationType;
        
        private SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO _role;
        
        private SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO _roleDegree;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _vacationApprover;
        
        public EmployeeFullDTO()
        {
        }
        
        public EmployeeFullDTO(SampleSystem.Generated.DTO.IEmployeeFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeFullDTO(SampleSystem.Generated.DTO.IEmployeeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CoreBusinessUnit = source.CoreBusinessUnit;
            this.HRDepartment = source.HRDepartment;
            this.Location = source.Location;
            this.ManagementUnit = source.ManagementUnit;
            this.PersonalAssistant = source.PersonalAssistant;
            Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> justPosition = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>>(source.Position);
            if (!object.ReferenceEquals(justPosition, null))
            {
                SampleSystem.Generated.DTO.EmployeePositionSimpleDTO resultPosition;
                resultPosition = justPosition.Value;
                this.Position = new Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>(resultPosition);
            }
            else
            {
                this.Position = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>.Nothing;
            }
            this.Ppm = source.Ppm;
            this.RegistrationType = source.RegistrationType;
            this.Role = source.Role;
            this.RoleDegree = source.RoleDegree;
            this.VacationApprover = source.VacationApprover;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO CoreBusinessUnit
        {
            get
            {
                return this._coreBusinessUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._coreBusinessUnit, newValue))
                {
                    base.RaisePropertyChanging("CoreBusinessUnit");
                    this._coreBusinessUnit = newValue;
                    base.RaisePropertyChanged("CoreBusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get
            {
                return this._hRDepartment;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._hRDepartment, newValue))
                {
                    base.RaisePropertyChanging("HRDepartment");
                    this._hRDepartment = newValue;
                    base.RaisePropertyChanged("HRDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get
            {
                return this._location;
            }
            set
            {
                SampleSystem.Generated.DTO.LocationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._location, newValue))
                {
                    base.RaisePropertyChanging("Location");
                    this._location = newValue;
                    base.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit
        {
            get
            {
                return this._managementUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.ManagementUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._managementUnit, newValue))
                {
                    base.RaisePropertyChanging("ManagementUnit");
                    this._managementUnit = newValue;
                    base.RaisePropertyChanged("ManagementUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO PersonalAssistant
        {
            get
            {
                return this._personalAssistant;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._personalAssistant, newValue))
                {
                    base.RaisePropertyChanging("PersonalAssistant");
                    this._personalAssistant = newValue;
                    base.RaisePropertyChanged("PersonalAssistant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionEdit)]
        [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionView)]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> Position
        {
            get
            {
                Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> justPosition = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>>(this._position);
                if (!object.ReferenceEquals(justPosition, null))
                {
                    return new Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>(justPosition.Value);
                }
                else
                {
                    return Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>.Nothing;
                }
            }
            set
            {
                Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> newValue;
                Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> justPosition = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>>(value);
                if (!object.ReferenceEquals(justPosition, null))
                {
                    newValue = new Framework.Core.Just<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>(justPosition.Value);
                }
                else
                {
                    newValue = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>.Nothing;
                }
                if (!object.Equals(this._position, newValue))
                {
                    base.RaisePropertyChanging("Position");
                    this._position = newValue;
                    base.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Ppm
        {
            get
            {
                return this._ppm;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._ppm, newValue))
                {
                    base.RaisePropertyChanging("Ppm");
                    this._ppm = newValue;
                    base.RaisePropertyChanged("Ppm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO RegistrationType
        {
            get
            {
                return this._registrationType;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._registrationType, newValue))
                {
                    base.RaisePropertyChanging("RegistrationType");
                    this._registrationType = newValue;
                    base.RaisePropertyChanged("RegistrationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO Role
        {
            get
            {
                return this._role;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._role, newValue))
                {
                    base.RaisePropertyChanging("Role");
                    this._role = newValue;
                    base.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO RoleDegree
        {
            get
            {
                return this._roleDegree;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._roleDegree, newValue))
                {
                    base.RaisePropertyChanging("RoleDegree");
                    this._roleDegree = newValue;
                    base.RaisePropertyChanged("RoleDegree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO VacationApprover
        {
            get
            {
                return this._vacationApprover;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._vacationApprover, newValue))
                {
                    base.RaisePropertyChanging("VacationApprover");
                    this._vacationApprover = newValue;
                    base.RaisePropertyChanged("VacationApprover");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRichDTO : SampleSystem.Generated.DTO.EmployeeFullDTO, SampleSystem.Generated.DTO.IEmployeeRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO> _cellPhones = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO> _employeeToEmployeeLinks = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO>();
        
        private Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> _personalCellPhones = Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>.Nothing;
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO> _specializations = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO>();
        
        public EmployeeRichDTO()
        {
        }
        
        public EmployeeRichDTO(SampleSystem.Generated.DTO.IEmployeeRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRichDTO(SampleSystem.Generated.DTO.IEmployeeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.CellPhones, null))
            {
                this.CellPhones = Framework.Core.EnumerableExtensions.ToObservableCollection(source.CellPhones, employeeCellPhone => employeeCellPhone.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.EmployeeToEmployeeLinks, null))
            {
                this.EmployeeToEmployeeLinks = Framework.Core.EnumerableExtensions.ToObservableCollection(source.EmployeeToEmployeeLinks, employeeToEmployeeLink => employeeToEmployeeLink.Clone(copyId));
            }
            Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> justPersonalCellPhones = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>>(source.PersonalCellPhones);
            if (!object.ReferenceEquals(justPersonalCellPhones, null))
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO> resultPersonalCellPhones = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>();
                if (!object.ReferenceEquals(justPersonalCellPhones.Value, null))
                {
                    resultPersonalCellPhones = Framework.Core.EnumerableExtensions.ToObservableCollection(justPersonalCellPhones.Value, employeePersonalCellPhone => employeePersonalCellPhone.Clone(copyId));
                }
                this.PersonalCellPhones = new Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>(resultPersonalCellPhones);
            }
            else
            {
                this.PersonalCellPhones = Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>.Nothing;
            }
            if (!object.ReferenceEquals(source.Specializations, null))
            {
                this.Specializations = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Specializations, employeeAndEmployeeSpecializationLink => employeeAndEmployeeSpecializationLink.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO> CellPhones
        {
            get
            {
                return this._cellPhones;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._cellPhones, newValue))
                {
                    base.RaisePropertyChanging("CellPhones");
                    this._cellPhones = newValue;
                    base.RaisePropertyChanged("CellPhones");
                }
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO>.Details
        {
            get
            {
                return this.CellPhones;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO>.Details
        {
            get
            {
                return this.EmployeeToEmployeeLinks;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO>.Details
        {
            get
            {
                return this.Specializations;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO> EmployeeToEmployeeLinks
        {
            get
            {
                return this._employeeToEmployeeLinks;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._employeeToEmployeeLinks, newValue))
                {
                    base.RaisePropertyChanging("EmployeeToEmployeeLinks");
                    this._employeeToEmployeeLinks = newValue;
                    base.RaisePropertyChanged("EmployeeToEmployeeLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit)]
        [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView)]
        public Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> PersonalCellPhones
        {
            get
            {
                Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> justPersonalCellPhones = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>>(this._personalCellPhones);
                if (!object.ReferenceEquals(justPersonalCellPhones, null))
                {
                    return new Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>(justPersonalCellPhones.Value);
                }
                else
                {
                    return Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>.Nothing;
                }
            }
            set
            {
                Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> newValue;
                Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> justPersonalCellPhones = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>>(value);
                if (!object.ReferenceEquals(justPersonalCellPhones, null))
                {
                    newValue = new Framework.Core.Just<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>(justPersonalCellPhones.Value);
                }
                else
                {
                    newValue = Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>>.Nothing;
                }
                if (!object.Equals(this._personalCellPhones, newValue))
                {
                    base.RaisePropertyChanging("PersonalCellPhones");
                    this._personalCellPhones = newValue;
                    base.RaisePropertyChanged("PersonalCellPhones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO> Specializations
        {
            get
            {
                return this._specializations;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._specializations, newValue))
                {
                    base.RaisePropertyChanging("Specializations");
                    this._specializations = newValue;
                    base.RaisePropertyChanged("Specializations");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BirthDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBePPM;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO> CellPhones = new System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period EducationDuration = Framework.Core.Period.Eternity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO> EmployeeToEmployeeLinks = new System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Gender Gender;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interphone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landlinephone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastActionDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.FioShort NameEng;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Fio NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Fio NameRussian;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NonValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>> PersonalCellPhones = Framework.Core.Maybe<System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? Pin;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PlannedHireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO> Position = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Ppm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO RegistrationType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Role;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO RoleDegree;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO> Specializations = new System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO VacationApprover;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period WorkPeriod = Framework.Core.Period.Eternity;
        
        public EmployeeStrictDTO()
        {
        }
        
        public EmployeeStrictDTO(SampleSystem.Generated.DTO.EmployeeRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(SampleSystem.Generated.DTO.EmployeeRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeStrictDTO(SampleSystem.Generated.DTO.EmployeeFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(SampleSystem.Generated.DTO.EmployeeFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeStrictDTO(SampleSystem.Generated.DTO.EmployeeSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(SampleSystem.Generated.DTO.EmployeeSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployee(this, source);
        }
        
        private EmployeeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployee(this, source);
        }
        
        private EmployeeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<int> Age = Framework.Core.Maybe<int>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> BirthDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<bool> CanBePPM = Framework.Core.Maybe<bool>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>> CellPhones = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<Framework.Core.Period> EducationDuration = Framework.Core.Maybe<Framework.Core.Period>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Email = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>> EmployeeToEmployeeLinks = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<long> ExternalId = Framework.Core.Maybe<long>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.Gender> Gender = Framework.Core.Maybe<SampleSystem.Generated.DTO.Gender>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Interphone = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Landlinephone = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> LastActionDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.FioShort> NameEng = Framework.Core.Maybe<SampleSystem.Generated.DTO.FioShort>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.Fio> NameNative = Framework.Core.Maybe<SampleSystem.Generated.DTO.Fio>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.Fio> NameRussian = Framework.Core.Maybe<SampleSystem.Generated.DTO.Fio>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime> NonValidateVirtualProp = Framework.Core.Maybe<System.DateTime>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>> PersonalCellPhones = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<int?> Pin = Framework.Core.Maybe<System.Nullable<int>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> PlannedHireDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO> Position = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO> Ppm = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO> RegistrationType = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO> Role = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO> RoleDegree = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>> Specializations = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO> VacationApprover = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime> ValidateVirtualProp = Framework.Core.Maybe<System.DateTime>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<Framework.Core.Period> WorkPeriod = Framework.Core.Maybe<Framework.Core.Period>.Nothing;
        
        public EmployeeUpdateDTO()
        {
        }
        
        public EmployeeUpdateDTO(SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployee(this, currentSource);
        }
        
        public EmployeeUpdateDTO(SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeUpdateDTO(SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeStrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployee(this, currentSource, baseSource);
        }
        
        public EmployeeUpdateDTO(SampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeStrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Age.HasValue && !this.BirthDate.HasValue && !this.CanBePPM.HasValue && (this.CellPhones.Count == 0) && !this.EducationDuration.HasValue && !this.Email.HasValue && (this.EmployeeToEmployeeLinks.Count == 0) && !this.ExternalId.HasValue && !this.Gender.HasValue && !this.Interphone.HasValue && !this.Landlinephone.HasValue && !this.LastActionDate.HasValue && !this.Login.HasValue && !this.NameEng.HasValue && !this.NameNative.HasValue && !this.NameRussian.HasValue && !this.NonValidateVirtualProp.HasValue && (this.PersonalCellPhones.Count == 0) && !this.Pin.HasValue && !this.PlannedHireDate.HasValue && !this.Position.HasValue && !this.Ppm.HasValue && !this.RegistrationType.HasValue && !this.Role.HasValue && !this.RoleDegree.HasValue && (this.Specializations.Count == 0) && !this.VacationApprover.HasValue && !this.ValidateVirtualProp.HasValue && !this.WorkPeriod.HasValue;
            }
        }
        
        public void Compress()
        {
            Framework.Persistent.UpdateExtensions.Compress<SampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO, SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>(this.CellPhones);
            Framework.Persistent.UpdateExtensions.Compress<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>(this.EmployeeToEmployeeLinks);
            Framework.Persistent.UpdateExtensions.Compress<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>(this.PersonalCellPhones);
            Framework.Persistent.UpdateExtensions.Compress<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>(this.Specializations);
        }
    }
    
    public partial interface IEmployeeSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string AccountName
        {
            get;
            set;
        }
        
        int Age
        {
            get;
            set;
        }
        
        System.DateTime? BirthDate
        {
            get;
            set;
        }
        
        bool CanBePPM
        {
            get;
            set;
        }
        
        string CellPhone
        {
            get;
            set;
        }
        
        Framework.Core.Period? CoreBusinessUnitPeriod
        {
            get;
            set;
        }
        
        System.DateTime? DismissDate
        {
            get;
            set;
        }
        
        Framework.Core.Period EducationDuration
        {
            get;
            set;
        }
        
        string Email
        {
            get;
            set;
        }
        
        long ExternalId
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.Gender Gender
        {
            get;
            set;
        }
        
        System.DateTime? HireDate
        {
            get;
            set;
        }
        
        string Interphone
        {
            get;
            set;
        }
        
        bool IsCandidate
        {
            get;
            set;
        }
        
        string Landlinephone
        {
            get;
            set;
        }
        
        System.DateTime? LastActionDate
        {
            get;
            set;
        }
        
        int? LocationCode
        {
            get;
            set;
        }
        
        Framework.Core.Maybe<string> Login
        {
            get;
            set;
        }
        
        string MailAccountName
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.FioShort NameEng
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.Fio NameNative
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.Fio NameRussian
        {
            get;
            set;
        }
        
        System.DateTime NonValidateVirtualProp
        {
            get;
            set;
        }
        
        Framework.Core.Maybe<string> PersonalCellPhone
        {
            get;
            set;
        }
        
        int? Pin
        {
            get;
            set;
        }
        
        System.DateTime? PlannedHireDate
        {
            get;
            set;
        }
        
        System.DateTime ValidateVirtualProp
        {
            get;
            set;
        }
        
        Framework.Core.Period WorkPeriod
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeFullDTO : SampleSystem.Generated.DTO.IEmployeeSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO CoreBusinessUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO PersonalAssistant
        {
            get;
            set;
        }
        
        Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO> Position
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Ppm
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO RegistrationType
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO Role
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO RoleDegree
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO VacationApprover
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeRichDTO : SampleSystem.Generated.DTO.IEmployeeFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO> CellPhones
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO> EmployeeToEmployeeLinks
        {
            get;
            set;
        }
        
        Framework.Core.Maybe<System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> PersonalCellPhones
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO> Specializations
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO))]
    public partial class EmployeeAndEmployeeSpecializationLinkSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>
    {
        
        public EmployeeAndEmployeeSpecializationLinkSimpleDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkSimpleDTO(SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkSimpleDTO(SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO))]
    public partial class EmployeeAndEmployeeSpecializationLinkFullDTO : SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO, SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _employee;
        
        private SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO _specialization;
        
        public EmployeeAndEmployeeSpecializationLinkFullDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkFullDTO(SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkFullDTO(SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Employee = source.Employee;
            this.Specialization = source.Specialization;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get
            {
                return this._employee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employee, newValue))
                {
                    base.RaisePropertyChanging("Employee");
                    this._employee = newValue;
                    base.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO Specialization
        {
            get
            {
                return this._specialization;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._specialization, newValue))
                {
                    base.RaisePropertyChanging("Specialization");
                    this._specialization = newValue;
                    base.RaisePropertyChanged("Specialization");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeAndEmployeeSpecializationLinkRichDTO : SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO, SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO>
    {
        
        public EmployeeAndEmployeeSpecializationLinkRichDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkRichDTO(SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkRichDTO(SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeAndEmployeeSpecializationLinkStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Specialization;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeAndEmployeeSpecializationLinkUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO> Employee = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO> Specialization = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeAndEmployeeSpecializationLink(this, currentSource);
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeAndEmployeeSpecializationLink(this, currentSource, baseSource);
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Employee.HasValue && !this.Specialization.HasValue;
            }
        }
        
        public void Compress()
        {
        }
    }
    
    public partial interface IEmployeeAndEmployeeSpecializationLinkSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IEmployeeAndEmployeeSpecializationLinkFullDTO : SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO Specialization
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeAndEmployeeSpecializationLinkRichDTO : SampleSystem.Generated.DTO.IEmployeeAndEmployeeSpecializationLinkFullDTO
    {
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO))]
    public partial class EmployeeCellPhoneSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeCellPhoneSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>
    {
        
        private string _cityCode;
        
        private string _countryCode;
        
        private string _fullNumber;
        
        private string _number;
        
        public EmployeeCellPhoneSimpleDTO()
        {
        }
        
        public EmployeeCellPhoneSimpleDTO(SampleSystem.Generated.DTO.IEmployeeCellPhoneSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeCellPhoneSimpleDTO(SampleSystem.Generated.DTO.IEmployeeCellPhoneSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CityCode = source.CityCode;
            this.CountryCode = source.CountryCode;
            this.FullNumber = source.FullNumber;
            this.Number = source.Number;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(5)]
        public string CityCode
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._cityCode);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._cityCode, newValue))
                {
                    base.RaisePropertyChanging("CityCode");
                    this._cityCode = newValue;
                    base.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(3)]
        public string CountryCode
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._countryCode);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._countryCode, newValue))
                {
                    base.RaisePropertyChanging("CountryCode");
                    this._countryCode = newValue;
                    base.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(18)]
        public string FullNumber
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._fullNumber);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._fullNumber, newValue))
                {
                    base.RaisePropertyChanging("FullNumber");
                    this._fullNumber = newValue;
                    base.RaisePropertyChanged("FullNumber");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(7)]
        public string Number
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._number);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._number, newValue))
                {
                    base.RaisePropertyChanging("Number");
                    this._number = newValue;
                    base.RaisePropertyChanged("Number");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO))]
    public partial class EmployeeCellPhoneFullDTO : SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO, SampleSystem.Generated.DTO.IEmployeeCellPhoneFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _employee;
        
        public EmployeeCellPhoneFullDTO()
        {
        }
        
        public EmployeeCellPhoneFullDTO(SampleSystem.Generated.DTO.IEmployeeCellPhoneFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeCellPhoneFullDTO(SampleSystem.Generated.DTO.IEmployeeCellPhoneFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Employee = source.Employee;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get
            {
                return this._employee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employee, newValue))
                {
                    base.RaisePropertyChanging("Employee");
                    this._employee = newValue;
                    base.RaisePropertyChanged("Employee");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeCellPhoneRichDTO : SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO, SampleSystem.Generated.DTO.IEmployeeCellPhoneRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO>
    {
        
        public EmployeeCellPhoneRichDTO()
        {
        }
        
        public EmployeeCellPhoneRichDTO(SampleSystem.Generated.DTO.IEmployeeCellPhoneRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeCellPhoneRichDTO(SampleSystem.Generated.DTO.IEmployeeCellPhoneRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeCellPhoneStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeCellPhoneStrictDTO()
        {
        }
        
        public EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeCellPhone(this, source);
        }
        
        public EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeCellPhone(this, source);
        }
        
        public EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeCellPhone(this, source);
        }
        
        public EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeeCellPhone(this, source);
        }
        
        private EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeeCellPhone(this, source);
        }
        
        private EmployeeCellPhoneStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeCellPhoneUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CityCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CountryCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Number = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeCellPhoneUpdateDTO()
        {
        }
        
        public EmployeeCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeCellPhone(this, currentSource);
        }
        
        public EmployeeCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeCellPhone(this, currentSource, baseSource);
        }
        
        public EmployeeCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.CityCode.HasValue && !this.CountryCode.HasValue && !this.Number.HasValue;
            }
        }
        
        public void Compress()
        {
        }
    }
    
    public partial interface IEmployeeCellPhoneSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string CityCode
        {
            get;
            set;
        }
        
        string CountryCode
        {
            get;
            set;
        }
        
        string FullNumber
        {
            get;
            set;
        }
        
        string Number
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeCellPhoneFullDTO : SampleSystem.Generated.DTO.IEmployeeCellPhoneSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeCellPhoneRichDTO : SampleSystem.Generated.DTO.IEmployeeCellPhoneFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeComplexChangeModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO PrimaryChangingObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeIdentityDTO> SecondaryChangingObjects = new System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeIdentityDTO>();
        
        public EmployeeComplexChangeModelStrictDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO))]
    public partial class EmployeeEmailChangeModelSimpleDTO : SampleSystem.Generated.DTO.BaseAbstractDTO, SampleSystem.Generated.DTO.IEmployeeEmailChangeModelSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO>
    {
        
        private string _email;
        
        public EmployeeEmailChangeModelSimpleDTO()
        {
        }
        
        public EmployeeEmailChangeModelSimpleDTO(SampleSystem.Generated.DTO.IEmployeeEmailChangeModelSimpleDTO source) : 
                base(source)
        {
            this.Email = source.Email;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._email);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._email, newValue))
                {
                    base.RaisePropertyChanging("Email");
                    this._email = newValue;
                    base.RaisePropertyChanged("Email");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO))]
    public partial class EmployeeEmailChangeModelFullDTO : SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO, SampleSystem.Generated.DTO.IEmployeeEmailChangeModelFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _changingObject;
        
        public EmployeeEmailChangeModelFullDTO()
        {
        }
        
        public EmployeeEmailChangeModelFullDTO(SampleSystem.Generated.DTO.IEmployeeEmailChangeModelFullDTO source) : 
                base(source)
        {
            this.ChangingObject = source.ChangingObject;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO ChangingObject
        {
            get
            {
                return this._changingObject;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._changingObject, newValue))
                {
                    base.RaisePropertyChanging("ChangingObject");
                    this._changingObject = newValue;
                    base.RaisePropertyChanged("ChangingObject");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeEmailChangeModelRichDTO : SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO, SampleSystem.Generated.DTO.IEmployeeEmailChangeModelRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO>
    {
        
        public EmployeeEmailChangeModelRichDTO()
        {
        }
        
        public EmployeeEmailChangeModelRichDTO(SampleSystem.Generated.DTO.IEmployeeEmailChangeModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeEmailChangeModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO ChangingObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        public EmployeeEmailChangeModelStrictDTO()
        {
        }
        
        public EmployeeEmailChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeEmailChangeModel(this, source);
        }
        
        public EmployeeEmailChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeEmailChangeModel(this, source);
        }
        
        public EmployeeEmailChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeEmailChangeModel(this, source);
        }
        
        public EmployeeEmailChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IEmployeeEmailChangeModelSimpleDTO : SampleSystem.Generated.DTO.IBaseAbstractDTO
    {
        
        string Email
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeEmailChangeModelFullDTO : SampleSystem.Generated.DTO.IEmployeeEmailChangeModelSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO ChangingObject
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeEmailChangeModelRichDTO : SampleSystem.Generated.DTO.IEmployeeEmailChangeModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO))]
    public partial class EmployeeEmailMassChangeModelSimpleDTO : SampleSystem.Generated.DTO.BaseAbstractDTO, SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO>
    {
        
        private string _email;
        
        public EmployeeEmailMassChangeModelSimpleDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelSimpleDTO(SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelSimpleDTO source) : 
                base(source)
        {
            this.Email = source.Email;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._email);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._email, newValue))
                {
                    base.RaisePropertyChanging("Email");
                    this._email = newValue;
                    base.RaisePropertyChanged("Email");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO))]
    public partial class EmployeeEmailMassChangeModelFullDTO : SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO, SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO>
    {
        
        public EmployeeEmailMassChangeModelFullDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelFullDTO(SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeEmailMassChangeModelRichDTO : SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO, SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeSimpleDTO> _changingObjects = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeSimpleDTO>();
        
        public EmployeeEmailMassChangeModelRichDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelRichDTO(SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelRichDTO source) : 
                base(source)
        {
            if (!object.ReferenceEquals(source.ChangingObjects, null))
            {
                this.ChangingObjects = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ChangingObjects, employee => employee.Clone());
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeSimpleDTO> ChangingObjects
        {
            get
            {
                return this._changingObjects;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeSimpleDTO> newValue;
                newValue = value;
                if (!object.Equals(this._changingObjects, newValue))
                {
                    base.RaisePropertyChanging("ChangingObjects");
                    this._changingObjects = newValue;
                    base.RaisePropertyChanged("ChangingObjects");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeEmailMassChangeModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeIdentityDTO> ChangingObjects = new System.Collections.Generic.List<SampleSystem.Generated.DTO.EmployeeIdentityDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        public EmployeeEmailMassChangeModelStrictDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeEmailMassChangeModel(this, source);
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeEmailMassChangeModel(this, source);
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeEmailMassChangeModel(this, source);
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(SampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IEmployeeEmailMassChangeModelSimpleDTO : SampleSystem.Generated.DTO.IBaseAbstractDTO
    {
        
        string Email
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeEmailMassChangeModelFullDTO : SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelSimpleDTO
    {
    }
    
    public partial interface IEmployeeEmailMassChangeModelRichDTO : SampleSystem.Generated.DTO.IEmployeeEmailMassChangeModelFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.EmployeeSimpleDTO> ChangingObjects
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeInformationVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeInformationVisualDTO>
    {
        
        private string _name;
        
        public EmployeeInformationVisualDTO()
        {
        }
        
        public EmployeeInformationVisualDTO(SampleSystem.Generated.DTO.EmployeeInformationVisualDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeInformationVisualDTO(SampleSystem.Generated.DTO.EmployeeInformationVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeInformationVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeInformationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeInformationRichDTO))]
    public partial class EmployeeInformationSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeInformationSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO>
    {
        
        private string _email;
        
        private string _name;
        
        private string _personalEmail;
        
        public EmployeeInformationSimpleDTO()
        {
        }
        
        public EmployeeInformationSimpleDTO(SampleSystem.Generated.DTO.IEmployeeInformationSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeInformationSimpleDTO(SampleSystem.Generated.DTO.IEmployeeInformationSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Email = source.Email;
            this.Name = source.Name;
            this.PersonalEmail = source.PersonalEmail;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        public string Email
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._email);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._email, newValue))
                {
                    base.RaisePropertyChanging("Email");
                    this._email = newValue;
                    base.RaisePropertyChanged("Email");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeInformationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        public string PersonalEmail
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._personalEmail);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._personalEmail, newValue))
                {
                    base.RaisePropertyChanging("PersonalEmail");
                    this._personalEmail = newValue;
                    base.RaisePropertyChanged("PersonalEmail");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeInformationRichDTO))]
    public partial class EmployeeInformationFullDTO : SampleSystem.Generated.DTO.EmployeeInformationSimpleDTO, SampleSystem.Generated.DTO.IEmployeeInformationFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeInformationFullDTO>
    {
        
        public EmployeeInformationFullDTO()
        {
        }
        
        public EmployeeInformationFullDTO(SampleSystem.Generated.DTO.IEmployeeInformationFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeInformationFullDTO(SampleSystem.Generated.DTO.IEmployeeInformationFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeInformationFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeInformationFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeInformationRichDTO : SampleSystem.Generated.DTO.EmployeeInformationFullDTO, SampleSystem.Generated.DTO.IEmployeeInformationRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeInformationRichDTO>
    {
        
        public EmployeeInformationRichDTO()
        {
        }
        
        public EmployeeInformationRichDTO(SampleSystem.Generated.DTO.IEmployeeInformationRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeInformationRichDTO(SampleSystem.Generated.DTO.IEmployeeInformationRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeInformationRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeInformationRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeInformationRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeInformationRichDTO(this);
        }
    }
    
    public partial interface IEmployeeInformationSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Email
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string PersonalEmail
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeInformationFullDTO : SampleSystem.Generated.DTO.IEmployeeInformationSimpleDTO
    {
    }
    
    public partial interface IEmployeeInformationRichDTO : SampleSystem.Generated.DTO.IEmployeeInformationFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO))]
    public partial class EmployeePersonalCellPhoneSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>
    {
        
        private string _cityCode;
        
        private string _countryCode;
        
        private string _fullNumber;
        
        private string _number;
        
        public EmployeePersonalCellPhoneSimpleDTO()
        {
        }
        
        public EmployeePersonalCellPhoneSimpleDTO(SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePersonalCellPhoneSimpleDTO(SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CityCode = source.CityCode;
            this.CountryCode = source.CountryCode;
            this.FullNumber = source.FullNumber;
            this.Number = source.Number;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(5)]
        public string CityCode
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._cityCode);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._cityCode, newValue))
                {
                    base.RaisePropertyChanging("CityCode");
                    this._cityCode = newValue;
                    base.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(3)]
        public string CountryCode
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._countryCode);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._countryCode, newValue))
                {
                    base.RaisePropertyChanging("CountryCode");
                    this._countryCode = newValue;
                    base.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(18)]
        public string FullNumber
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._fullNumber);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._fullNumber, newValue))
                {
                    base.RaisePropertyChanging("FullNumber");
                    this._fullNumber = newValue;
                    base.RaisePropertyChanged("FullNumber");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(7)]
        public string Number
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._number);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._number, newValue))
                {
                    base.RaisePropertyChanging("Number");
                    this._number = newValue;
                    base.RaisePropertyChanged("Number");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO))]
    public partial class EmployeePersonalCellPhoneFullDTO : SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO, SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _employee;
        
        public EmployeePersonalCellPhoneFullDTO()
        {
        }
        
        public EmployeePersonalCellPhoneFullDTO(SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePersonalCellPhoneFullDTO(SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Employee = source.Employee;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get
            {
                return this._employee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employee, newValue))
                {
                    base.RaisePropertyChanging("Employee");
                    this._employee = newValue;
                    base.RaisePropertyChanged("Employee");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeePersonalCellPhoneRichDTO : SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO, SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>
    {
        
        public EmployeePersonalCellPhoneRichDTO()
        {
        }
        
        public EmployeePersonalCellPhoneRichDTO(SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePersonalCellPhoneRichDTO(SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeePersonalCellPhoneStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeePersonalCellPhoneStrictDTO()
        {
        }
        
        public EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        public EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        public EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        public EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        private EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        private EmployeePersonalCellPhoneStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeePersonalCellPhoneUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CityCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CountryCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Number = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeePersonalCellPhoneUpdateDTO()
        {
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeePersonalCellPhone(this, currentSource);
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeePersonalCellPhone(this, currentSource, baseSource);
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.CityCode.HasValue && !this.CountryCode.HasValue && !this.Number.HasValue;
            }
        }
        
        public void Compress()
        {
        }
    }
    
    public partial interface IEmployeePersonalCellPhoneSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string CityCode
        {
            get;
            set;
        }
        
        string CountryCode
        {
            get;
            set;
        }
        
        string FullNumber
        {
            get;
            set;
        }
        
        string Number
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeePersonalCellPhoneFullDTO : SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeePersonalCellPhoneRichDTO : SampleSystem.Generated.DTO.IEmployeePersonalCellPhoneFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePhotoFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePhotoRichDTO))]
    public partial class EmployeePhotoSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeePhotoSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO>
    {
        
        private string _contentType;
        
        private bool _isDefault;
        
        private SampleSystem.Generated.DTO.EmployeePhotoType _type;
        
        public EmployeePhotoSimpleDTO()
        {
        }
        
        public EmployeePhotoSimpleDTO(SampleSystem.Generated.DTO.IEmployeePhotoSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePhotoSimpleDTO(SampleSystem.Generated.DTO.IEmployeePhotoSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ContentType = source.ContentType;
            this.IsDefault = source.IsDefault;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public string ContentType
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._contentType);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._contentType, newValue))
                {
                    base.RaisePropertyChanging("ContentType");
                    this._contentType = newValue;
                    base.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeePhotoIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault
        {
            get
            {
                return this._isDefault;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isDefault, newValue))
                {
                    base.RaisePropertyChanging("IsDefault");
                    this._isDefault = newValue;
                    base.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.EmployeePhotoType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeePhotoType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePhotoRichDTO))]
    public partial class EmployeePhotoFullDTO : SampleSystem.Generated.DTO.EmployeePhotoSimpleDTO, SampleSystem.Generated.DTO.IEmployeePhotoFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePhotoFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _employee;
        
        public EmployeePhotoFullDTO()
        {
        }
        
        public EmployeePhotoFullDTO(SampleSystem.Generated.DTO.IEmployeePhotoFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePhotoFullDTO(SampleSystem.Generated.DTO.IEmployeePhotoFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Employee = source.Employee;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get
            {
                return this._employee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employee, newValue))
                {
                    base.RaisePropertyChanging("Employee");
                    this._employee = newValue;
                    base.RaisePropertyChanged("Employee");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePhotoFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeePhotoFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePhotoFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeePhotoRichDTO : SampleSystem.Generated.DTO.EmployeePhotoFullDTO, SampleSystem.Generated.DTO.IEmployeePhotoRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePhotoRichDTO>
    {
        
        private byte[] _data;
        
        public EmployeePhotoRichDTO()
        {
        }
        
        public EmployeePhotoRichDTO(SampleSystem.Generated.DTO.IEmployeePhotoRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePhotoRichDTO(SampleSystem.Generated.DTO.IEmployeePhotoRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Data, null))
            {
                this.Data = Framework.Core.ArrayExtensions.CloneA(source.Data);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(1048576)]
        public byte[] Data
        {
            get
            {
                return this._data;
            }
            set
            {
                byte[] newValue;
                newValue = value;
                if (!object.Equals(this._data, newValue))
                {
                    base.RaisePropertyChanging("Data");
                    this._data = newValue;
                    base.RaisePropertyChanged("Data");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePhotoRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeePhotoRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePhotoRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeePhotoRichDTO(this);
        }
    }
    
    public partial interface IEmployeePhotoSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string ContentType
        {
            get;
            set;
        }
        
        bool IsDefault
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeePhotoType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeePhotoFullDTO : SampleSystem.Generated.DTO.IEmployeePhotoSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeePhotoRichDTO : SampleSystem.Generated.DTO.IEmployeePhotoFullDTO
    {
        
        byte[] Data
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeePositionVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeePositionVisualDTO>
    {
        
        private string _name;
        
        public EmployeePositionVisualDTO()
        {
        }
        
        public EmployeePositionVisualDTO(SampleSystem.Generated.DTO.EmployeePositionVisualDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePositionVisualDTO(SampleSystem.Generated.DTO.EmployeePositionVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeePositionIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePositionVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeePositionVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeePositionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePositionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePositionRichDTO))]
    public partial class EmployeePositionSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeePositionSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeePositionIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeePositionSimpleDTO>
    {
        
        private string _englishName;
        
        private long _externalId;
        
        private string _name;
        
        public EmployeePositionSimpleDTO()
        {
        }
        
        public EmployeePositionSimpleDTO(SampleSystem.Generated.DTO.IEmployeePositionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePositionSimpleDTO(SampleSystem.Generated.DTO.IEmployeePositionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.EnglishName = source.EnglishName;
            this.ExternalId = source.ExternalId;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string EnglishName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._englishName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._englishName, newValue))
                {
                    base.RaisePropertyChanging("EnglishName");
                    this._englishName = newValue;
                    base.RaisePropertyChanged("EnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId
        {
            get
            {
                return this._externalId;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._externalId, newValue))
                {
                    base.RaisePropertyChanging("ExternalId");
                    this._externalId = newValue;
                    base.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeePositionIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePositionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePositionSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeePositionSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePositionSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeePositionSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeePositionRichDTO))]
    public partial class EmployeePositionFullDTO : SampleSystem.Generated.DTO.EmployeePositionSimpleDTO, SampleSystem.Generated.DTO.IEmployeePositionFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePositionFullDTO>
    {
        
        private SampleSystem.Generated.DTO.LocationSimpleDTO _location;
        
        public EmployeePositionFullDTO()
        {
        }
        
        public EmployeePositionFullDTO(SampleSystem.Generated.DTO.IEmployeePositionFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePositionFullDTO(SampleSystem.Generated.DTO.IEmployeePositionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Location = source.Location;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get
            {
                return this._location;
            }
            set
            {
                SampleSystem.Generated.DTO.LocationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._location, newValue))
                {
                    base.RaisePropertyChanging("Location");
                    this._location = newValue;
                    base.RaisePropertyChanged("Location");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePositionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeePositionFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePositionFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePositionFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeePositionFullDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeePositionRichDTO : SampleSystem.Generated.DTO.EmployeePositionFullDTO, SampleSystem.Generated.DTO.IEmployeePositionRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeePositionRichDTO>
    {
        
        public EmployeePositionRichDTO()
        {
        }
        
        public EmployeePositionRichDTO(SampleSystem.Generated.DTO.IEmployeePositionRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeePositionRichDTO(SampleSystem.Generated.DTO.IEmployeePositionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeePositionRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeePositionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeePositionRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeePositionRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeePositionRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeePositionRichDTO(this);
        }
    }
    
    public partial interface IEmployeePositionSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string EnglishName
        {
            get;
            set;
        }
        
        long ExternalId
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeePositionFullDTO : SampleSystem.Generated.DTO.IEmployeePositionSimpleDTO
    {
        
        SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeePositionRichDTO : SampleSystem.Generated.DTO.IEmployeePositionFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRegistrationTypeVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeRegistrationTypeVisualDTO>
    {
        
        private string _name;
        
        public EmployeeRegistrationTypeVisualDTO()
        {
        }
        
        public EmployeeRegistrationTypeVisualDTO(SampleSystem.Generated.DTO.EmployeeRegistrationTypeVisualDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRegistrationTypeVisualDTO(SampleSystem.Generated.DTO.EmployeeRegistrationTypeVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeRegistrationTypeVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO))]
    public partial class EmployeeRegistrationTypeSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeRegistrationTypeSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO>
    {
        
        private long _externalId;
        
        private string _name;
        
        public EmployeeRegistrationTypeSimpleDTO()
        {
        }
        
        public EmployeeRegistrationTypeSimpleDTO(SampleSystem.Generated.DTO.IEmployeeRegistrationTypeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRegistrationTypeSimpleDTO(SampleSystem.Generated.DTO.IEmployeeRegistrationTypeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ExternalId = source.ExternalId;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId
        {
            get
            {
                return this._externalId;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._externalId, newValue))
                {
                    base.RaisePropertyChanging("ExternalId");
                    this._externalId = newValue;
                    base.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO))]
    public partial class EmployeeRegistrationTypeFullDTO : SampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO, SampleSystem.Generated.DTO.IEmployeeRegistrationTypeFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO>
    {
        
        public EmployeeRegistrationTypeFullDTO()
        {
        }
        
        public EmployeeRegistrationTypeFullDTO(SampleSystem.Generated.DTO.IEmployeeRegistrationTypeFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRegistrationTypeFullDTO(SampleSystem.Generated.DTO.IEmployeeRegistrationTypeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRegistrationTypeRichDTO : SampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO, SampleSystem.Generated.DTO.IEmployeeRegistrationTypeRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO>
    {
        
        public EmployeeRegistrationTypeRichDTO()
        {
        }
        
        public EmployeeRegistrationTypeRichDTO(SampleSystem.Generated.DTO.IEmployeeRegistrationTypeRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRegistrationTypeRichDTO(SampleSystem.Generated.DTO.IEmployeeRegistrationTypeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO(this);
        }
    }
    
    public partial interface IEmployeeRegistrationTypeSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        long ExternalId
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeRegistrationTypeFullDTO : SampleSystem.Generated.DTO.IEmployeeRegistrationTypeSimpleDTO
    {
    }
    
    public partial interface IEmployeeRegistrationTypeRichDTO : SampleSystem.Generated.DTO.IEmployeeRegistrationTypeFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRoleVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeRoleVisualDTO>
    {
        
        private string _name;
        
        public EmployeeRoleVisualDTO()
        {
        }
        
        public EmployeeRoleVisualDTO(SampleSystem.Generated.DTO.EmployeeRoleVisualDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleVisualDTO(SampleSystem.Generated.DTO.EmployeeRoleVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeRoleVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRoleFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRoleRichDTO))]
    public partial class EmployeeRoleSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeRoleSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO>
    {
        
        private string _name;
        
        public EmployeeRoleSimpleDTO()
        {
        }
        
        public EmployeeRoleSimpleDTO(SampleSystem.Generated.DTO.IEmployeeRoleSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleSimpleDTO(SampleSystem.Generated.DTO.IEmployeeRoleSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeRoleIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRoleRichDTO))]
    public partial class EmployeeRoleFullDTO : SampleSystem.Generated.DTO.EmployeeRoleSimpleDTO, SampleSystem.Generated.DTO.IEmployeeRoleFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRoleFullDTO>
    {
        
        public EmployeeRoleFullDTO()
        {
        }
        
        public EmployeeRoleFullDTO(SampleSystem.Generated.DTO.IEmployeeRoleFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleFullDTO(SampleSystem.Generated.DTO.IEmployeeRoleFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleFullDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRoleRichDTO : SampleSystem.Generated.DTO.EmployeeRoleFullDTO, SampleSystem.Generated.DTO.IEmployeeRoleRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRoleRichDTO>
    {
        
        public EmployeeRoleRichDTO()
        {
        }
        
        public EmployeeRoleRichDTO(SampleSystem.Generated.DTO.IEmployeeRoleRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleRichDTO(SampleSystem.Generated.DTO.IEmployeeRoleRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleRichDTO(this);
        }
    }
    
    public partial interface IEmployeeRoleSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeRoleFullDTO : SampleSystem.Generated.DTO.IEmployeeRoleSimpleDTO
    {
    }
    
    public partial interface IEmployeeRoleRichDTO : SampleSystem.Generated.DTO.IEmployeeRoleFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRoleDegreeVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeRoleDegreeVisualDTO>
    {
        
        private string _name;
        
        public EmployeeRoleDegreeVisualDTO()
        {
        }
        
        public EmployeeRoleDegreeVisualDTO(SampleSystem.Generated.DTO.EmployeeRoleDegreeVisualDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleDegreeVisualDTO(SampleSystem.Generated.DTO.EmployeeRoleDegreeVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeRoleDegreeVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeRoleDegreeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO))]
    public partial class EmployeeRoleDegreeSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeRoleDegreeSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO>
    {
        
        private string _name;
        
        public EmployeeRoleDegreeSimpleDTO()
        {
        }
        
        public EmployeeRoleDegreeSimpleDTO(SampleSystem.Generated.DTO.IEmployeeRoleDegreeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleDegreeSimpleDTO(SampleSystem.Generated.DTO.IEmployeeRoleDegreeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO))]
    public partial class EmployeeRoleDegreeFullDTO : SampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO, SampleSystem.Generated.DTO.IEmployeeRoleDegreeFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO>
    {
        
        public EmployeeRoleDegreeFullDTO()
        {
        }
        
        public EmployeeRoleDegreeFullDTO(SampleSystem.Generated.DTO.IEmployeeRoleDegreeFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleDegreeFullDTO(SampleSystem.Generated.DTO.IEmployeeRoleDegreeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRoleDegreeRichDTO : SampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO, SampleSystem.Generated.DTO.IEmployeeRoleDegreeRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO>
    {
        
        public EmployeeRoleDegreeRichDTO()
        {
        }
        
        public EmployeeRoleDegreeRichDTO(SampleSystem.Generated.DTO.IEmployeeRoleDegreeRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeRoleDegreeRichDTO(SampleSystem.Generated.DTO.IEmployeeRoleDegreeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO(this);
        }
    }
    
    public partial interface IEmployeeRoleDegreeSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeRoleDegreeFullDTO : SampleSystem.Generated.DTO.IEmployeeRoleDegreeSimpleDTO
    {
    }
    
    public partial interface IEmployeeRoleDegreeRichDTO : SampleSystem.Generated.DTO.IEmployeeRoleDegreeFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeRootFilterModelStrictDTO
    {
        
        public EmployeeRootFilterModelStrictDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeSpecializationVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeSpecializationVisualDTO>
    {
        
        private string _name;
        
        public EmployeeSpecializationVisualDTO()
        {
        }
        
        public EmployeeSpecializationVisualDTO(SampleSystem.Generated.DTO.EmployeeSpecializationVisualDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeSpecializationVisualDTO(SampleSystem.Generated.DTO.EmployeeSpecializationVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeSpecializationVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeSpecializationView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO))]
    public partial class EmployeeSpecializationSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeSpecializationSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO>
    {
        
        private string _name;
        
        public EmployeeSpecializationSimpleDTO()
        {
        }
        
        public EmployeeSpecializationSimpleDTO(SampleSystem.Generated.DTO.IEmployeeSpecializationSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeSpecializationSimpleDTO(SampleSystem.Generated.DTO.IEmployeeSpecializationSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO))]
    public partial class EmployeeSpecializationFullDTO : SampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO, SampleSystem.Generated.DTO.IEmployeeSpecializationFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO>
    {
        
        public EmployeeSpecializationFullDTO()
        {
        }
        
        public EmployeeSpecializationFullDTO(SampleSystem.Generated.DTO.IEmployeeSpecializationFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeSpecializationFullDTO(SampleSystem.Generated.DTO.IEmployeeSpecializationFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeSpecializationRichDTO : SampleSystem.Generated.DTO.EmployeeSpecializationFullDTO, SampleSystem.Generated.DTO.IEmployeeSpecializationRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO>
    {
        
        public EmployeeSpecializationRichDTO()
        {
        }
        
        public EmployeeSpecializationRichDTO(SampleSystem.Generated.DTO.IEmployeeSpecializationRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeSpecializationRichDTO(SampleSystem.Generated.DTO.IEmployeeSpecializationRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeSpecializationRichDTO(this);
        }
    }
    
    public partial interface IEmployeeSpecializationSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeSpecializationFullDTO : SampleSystem.Generated.DTO.IEmployeeSpecializationSimpleDTO
    {
    }
    
    public partial interface IEmployeeSpecializationRichDTO : SampleSystem.Generated.DTO.IEmployeeSpecializationFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO))]
    public partial class EmployeeToEmployeeLinkSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeLinkType _employeeLinkType;
        
        public EmployeeToEmployeeLinkSimpleDTO()
        {
        }
        
        public EmployeeToEmployeeLinkSimpleDTO(SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeToEmployeeLinkSimpleDTO(SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.EmployeeLinkType = source.EmployeeLinkType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeLinkType EmployeeLinkType
        {
            get
            {
                return this._employeeLinkType;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeLinkType newValue;
                newValue = value;
                if (!object.Equals(this._employeeLinkType, newValue))
                {
                    base.RaisePropertyChanging("EmployeeLinkType");
                    this._employeeLinkType = newValue;
                    base.RaisePropertyChanged("EmployeeLinkType");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO))]
    public partial class EmployeeToEmployeeLinkFullDTO : SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO, SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkFullDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _linkedEmployee;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _owner;
        
        public EmployeeToEmployeeLinkFullDTO()
        {
        }
        
        public EmployeeToEmployeeLinkFullDTO(SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkFullDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeToEmployeeLinkFullDTO(SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.LinkedEmployee = source.LinkedEmployee;
            this.Owner = source.Owner;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO LinkedEmployee
        {
            get
            {
                return this._linkedEmployee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._linkedEmployee, newValue))
                {
                    base.RaisePropertyChanging("LinkedEmployee");
                    this._linkedEmployee = newValue;
                    base.RaisePropertyChanged("LinkedEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeToEmployeeLinkRichDTO : SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO, SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkRichDTO, System.ICloneable<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO>
    {
        
        public EmployeeToEmployeeLinkRichDTO()
        {
        }
        
        public EmployeeToEmployeeLinkRichDTO(SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkRichDTO source) : 
                this(source, true)
        {
        }
        
        public EmployeeToEmployeeLinkRichDTO(SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeToEmployeeLinkStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeLinkType EmployeeLinkType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO LinkedEmployee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeToEmployeeLinkStrictDTO()
        {
        }
        
        public EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        public EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        public EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        public EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        private EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        private EmployeeToEmployeeLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeToEmployeeLinkUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeLinkType> EmployeeLinkType = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeLinkType>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO> LinkedEmployee = Framework.Core.Maybe<SampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeToEmployeeLinkUpdateDTO()
        {
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeToEmployeeLink(this, currentSource);
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeToEmployeeLink(this, currentSource, baseSource);
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, SampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.EmployeeLinkType.HasValue && !this.LinkedEmployee.HasValue;
            }
        }
        
        public void Compress()
        {
        }
    }
    
    public partial interface IEmployeeToEmployeeLinkSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeLinkType EmployeeLinkType
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeToEmployeeLinkFullDTO : SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO LinkedEmployee
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Owner
        {
            get;
            set;
        }
    }
    
    public partial interface IEmployeeToEmployeeLinkRichDTO : SampleSystem.Generated.DTO.IEmployeeToEmployeeLinkFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Location1676VisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.Location1676IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.Location1676VisualDTO>
    {
        
        private string _name;
        
        public Location1676VisualDTO()
        {
        }
        
        public Location1676VisualDTO(SampleSystem.Generated.DTO.Location1676VisualDTO source) : 
                this(source, true)
        {
        }
        
        public Location1676VisualDTO(SampleSystem.Generated.DTO.Location1676VisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.Location1676IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.Location1676IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Location1676VisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Location1676VisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.Location1676VisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Location1676FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Location1676RichDTO))]
    public partial class Location1676SimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ILocation1676SimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.Location1676SimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.Location1676IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.Location1676SimpleDTO>
    {
        
        private string _name;
        
        public Location1676SimpleDTO()
        {
        }
        
        public Location1676SimpleDTO(SampleSystem.Generated.DTO.ILocation1676SimpleDTO source) : 
                this(source, true)
        {
        }
        
        public Location1676SimpleDTO(SampleSystem.Generated.DTO.ILocation1676SimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.Location1676IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.Location1676IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Location1676SimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Location1676SimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.Location1676SimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Location1676SimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.Location1676SimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.Location1676SimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.Location1676SimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Location1676RichDTO))]
    public partial class Location1676FullDTO : SampleSystem.Generated.DTO.Location1676SimpleDTO, SampleSystem.Generated.DTO.ILocation1676FullDTO, System.ICloneable<SampleSystem.Generated.DTO.Location1676FullDTO>
    {
        
        public Location1676FullDTO()
        {
        }
        
        public Location1676FullDTO(SampleSystem.Generated.DTO.ILocation1676FullDTO source) : 
                this(source, true)
        {
        }
        
        public Location1676FullDTO(SampleSystem.Generated.DTO.ILocation1676FullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.Location1676FullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Location1676FullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.Location1676FullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Location1676FullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Location1676FullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.Location1676FullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Location1676RichDTO : SampleSystem.Generated.DTO.Location1676FullDTO, SampleSystem.Generated.DTO.ILocation1676RichDTO, System.ICloneable<SampleSystem.Generated.DTO.Location1676RichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO> _calendar = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO>();
        
        public Location1676RichDTO()
        {
        }
        
        public Location1676RichDTO(SampleSystem.Generated.DTO.ILocation1676RichDTO source) : 
                this(source, true)
        {
        }
        
        public Location1676RichDTO(SampleSystem.Generated.DTO.ILocation1676RichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Calendar, null))
            {
                this.Calendar = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Calendar, workingCalendar1676 => workingCalendar1676.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO> Calendar
        {
            get
            {
                return this._calendar;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._calendar, newValue))
                {
                    base.RaisePropertyChanging("Calendar");
                    this._calendar = newValue;
                    base.RaisePropertyChanged("Calendar");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Location1676RichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Location1676RichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.Location1676RichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Location1676RichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Location1676RichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.Location1676RichDTO(this);
        }
    }
    
    public partial interface ILocation1676SimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ILocation1676FullDTO : SampleSystem.Generated.DTO.ILocation1676SimpleDTO
    {
    }
    
    public partial interface ILocation1676RichDTO : SampleSystem.Generated.DTO.ILocation1676FullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO> Calendar
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class WorkingCalendar1676VisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.WorkingCalendar1676VisualDTO>
    {
        
        private string _name;
        
        public WorkingCalendar1676VisualDTO()
        {
        }
        
        public WorkingCalendar1676VisualDTO(SampleSystem.Generated.DTO.WorkingCalendar1676VisualDTO source) : 
                this(source, true)
        {
        }
        
        public WorkingCalendar1676VisualDTO(SampleSystem.Generated.DTO.WorkingCalendar1676VisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676VisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676VisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.WorkingCalendar1676VisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO))]
    public partial class WorkingCalendar1676SimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IWorkingCalendar1676SimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO>
    {
        
        private string _name;
        
        public WorkingCalendar1676SimpleDTO()
        {
        }
        
        public WorkingCalendar1676SimpleDTO(SampleSystem.Generated.DTO.IWorkingCalendar1676SimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkingCalendar1676SimpleDTO(SampleSystem.Generated.DTO.IWorkingCalendar1676SimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO))]
    public partial class WorkingCalendar1676FullDTO : SampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO, SampleSystem.Generated.DTO.IWorkingCalendar1676FullDTO, System.ICloneable<SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO>
    {
        
        private SampleSystem.Generated.DTO.Location1676SimpleDTO _location;
        
        public WorkingCalendar1676FullDTO()
        {
        }
        
        public WorkingCalendar1676FullDTO(SampleSystem.Generated.DTO.IWorkingCalendar1676FullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkingCalendar1676FullDTO(SampleSystem.Generated.DTO.IWorkingCalendar1676FullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Location = source.Location;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Location1676SimpleDTO Location
        {
            get
            {
                return this._location;
            }
            set
            {
                SampleSystem.Generated.DTO.Location1676SimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._location, newValue))
                {
                    base.RaisePropertyChanging("Location");
                    this._location = newValue;
                    base.RaisePropertyChanged("Location");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class WorkingCalendar1676RichDTO : SampleSystem.Generated.DTO.WorkingCalendar1676FullDTO, SampleSystem.Generated.DTO.IWorkingCalendar1676RichDTO, System.ICloneable<SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO>
    {
        
        public WorkingCalendar1676RichDTO()
        {
        }
        
        public WorkingCalendar1676RichDTO(SampleSystem.Generated.DTO.IWorkingCalendar1676RichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkingCalendar1676RichDTO(SampleSystem.Generated.DTO.IWorkingCalendar1676RichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.WorkingCalendar1676RichDTO(this);
        }
    }
    
    public partial interface IWorkingCalendar1676SimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkingCalendar1676FullDTO : SampleSystem.Generated.DTO.IWorkingCalendar1676SimpleDTO
    {
        
        SampleSystem.Generated.DTO.Location1676SimpleDTO Location
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkingCalendar1676RichDTO : SampleSystem.Generated.DTO.IWorkingCalendar1676FullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Example1FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Example1RichDTO))]
    public partial class Example1SimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IExample1SimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.Example1SimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.Example1IdentityDTO>
    {
        
        private System.Guid _field1;
        
        private System.Guid _field2;
        
        private Framework.Core.Maybe<System.Guid> _field3 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        public Example1SimpleDTO()
        {
        }
        
        public Example1SimpleDTO(SampleSystem.Generated.DTO.IExample1SimpleDTO source) : 
                this(source, true)
        {
        }
        
        public Example1SimpleDTO(SampleSystem.Generated.DTO.IExample1SimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Field1 = source.Field1;
            this.Field2 = source.Field2;
            Framework.Core.Just<System.Guid> justField3 = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Guid>>(source.Field3);
            if (!object.ReferenceEquals(justField3, null))
            {
                System.Guid resultField3;
                resultField3 = justField3.Value;
                this.Field3 = new Framework.Core.Just<System.Guid>(resultField3);
            }
            else
            {
                this.Field3 = Framework.Core.Maybe<System.Guid>.Nothing;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1
        {
            get
            {
                return this._field1;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._field1, newValue))
                {
                    base.RaisePropertyChanging("Field1");
                    this._field1 = newValue;
                    base.RaisePropertyChanged("Field1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2
        {
            get
            {
                return this._field2;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._field2, newValue))
                {
                    base.RaisePropertyChanging("Field2");
                    this._field2 = newValue;
                    base.RaisePropertyChanged("Field2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration)]
        [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.SystemIntegration)]
        public Framework.Core.Maybe<System.Guid> Field3
        {
            get
            {
                Framework.Core.Just<System.Guid> justField3 = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Guid>>(this._field3);
                if (!object.ReferenceEquals(justField3, null))
                {
                    return new Framework.Core.Just<System.Guid>(justField3.Value);
                }
                else
                {
                    return Framework.Core.Maybe<System.Guid>.Nothing;
                }
            }
            set
            {
                Framework.Core.Maybe<System.Guid> newValue;
                Framework.Core.Just<System.Guid> justField3 = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<System.Guid>>(value);
                if (!object.ReferenceEquals(justField3, null))
                {
                    newValue = new Framework.Core.Just<System.Guid>(justField3.Value);
                }
                else
                {
                    newValue = Framework.Core.Maybe<System.Guid>.Nothing;
                }
                if (!object.Equals(this._field3, newValue))
                {
                    base.RaisePropertyChanging("Field3");
                    this._field3 = newValue;
                    base.RaisePropertyChanged("Field3");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Example1IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.Example1IdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.Example1SimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Example1SimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.Example1SimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Example1SimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Example1SimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.Example1SimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.Example1StrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.Example1StrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Example1RichDTO))]
    public partial class Example1FullDTO : SampleSystem.Generated.DTO.Example1SimpleDTO, SampleSystem.Generated.DTO.IExample1FullDTO, System.ICloneable<SampleSystem.Generated.DTO.Example1FullDTO>
    {
        
        public Example1FullDTO()
        {
        }
        
        public Example1FullDTO(SampleSystem.Generated.DTO.IExample1FullDTO source) : 
                this(source, true)
        {
        }
        
        public Example1FullDTO(SampleSystem.Generated.DTO.IExample1FullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.Example1FullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Example1FullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.Example1FullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Example1FullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Example1FullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.Example1FullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.Example1StrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.Example1StrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Example1RichDTO : SampleSystem.Generated.DTO.Example1FullDTO, SampleSystem.Generated.DTO.IExample1RichDTO, System.ICloneable<SampleSystem.Generated.DTO.Example1RichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.Example2RichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.Example2RichDTO> _items2 = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.Example2RichDTO>();
        
        public Example1RichDTO()
        {
        }
        
        public Example1RichDTO(SampleSystem.Generated.DTO.IExample1RichDTO source) : 
                this(source, true)
        {
        }
        
        public Example1RichDTO(SampleSystem.Generated.DTO.IExample1RichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Items2, null))
            {
                this.Items2 = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Items2, example2 => example2.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.Example2RichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.Example2RichDTO>.Details
        {
            get
            {
                return this.Items2;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.Example2RichDTO> Items2
        {
            get
            {
                return this._items2;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.Example2RichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._items2, newValue))
                {
                    base.RaisePropertyChanging("Items2");
                    this._items2 = newValue;
                    base.RaisePropertyChanged("Items2");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Example1RichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Example1RichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.Example1RichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Example1RichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Example1RichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.Example1RichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.Example1StrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.Example1StrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Example1StrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.Example1IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field3 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.Example2StrictDTO> Items2 = new System.Collections.Generic.List<SampleSystem.Generated.DTO.Example2StrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example1StrictDTO()
        {
        }
        
        public Example1StrictDTO(SampleSystem.Generated.DTO.Example1RichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.Example1FullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExample1(this, source);
        }
        
        public Example1StrictDTO(SampleSystem.Generated.DTO.Example1RichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example1StrictDTO(SampleSystem.Generated.DTO.Example1FullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.Example1SimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExample1(this, source);
        }
        
        public Example1StrictDTO(SampleSystem.Generated.DTO.Example1FullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example1StrictDTO(SampleSystem.Generated.DTO.Example1SimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExample1(this, source);
        }
        
        public Example1StrictDTO(SampleSystem.Generated.DTO.Example1SimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example1StrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForExample1(this, source);
        }
        
        private Example1StrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example1StrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForExample1(this, source);
        }
        
        private Example1StrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.Example1IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.Example1IdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Example1UpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field1 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field2 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field3 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.Example2UpdateDTO, SampleSystem.Generated.DTO.Example2IdentityDTO>> Items2 = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<SampleSystem.Generated.DTO.Example2UpdateDTO, SampleSystem.Generated.DTO.Example2IdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example1UpdateDTO()
        {
        }
        
        public Example1UpdateDTO(SampleSystem.Generated.DTO.Example1StrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample1(this, currentSource);
        }
        
        public Example1UpdateDTO(SampleSystem.Generated.DTO.Example1StrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example1UpdateDTO(SampleSystem.Generated.DTO.Example1StrictDTO currentSource, SampleSystem.Generated.DTO.Example1StrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample1(this, currentSource, baseSource);
        }
        
        public Example1UpdateDTO(SampleSystem.Generated.DTO.Example1StrictDTO currentSource, SampleSystem.Generated.DTO.Example1StrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Field1.HasValue && !this.Field2.HasValue && !this.Field3.HasValue && (this.Items2.Count == 0);
            }
        }
        
        public void Compress()
        {
            Framework.Persistent.UpdateExtensions.Compress<SampleSystem.Generated.DTO.Example2UpdateDTO, SampleSystem.Generated.DTO.Example2IdentityDTO>(this.Items2);
        }
    }
    
    public partial interface IExample1SimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        System.Guid Field1
        {
            get;
            set;
        }
        
        System.Guid Field2
        {
            get;
            set;
        }
        
        Framework.Core.Maybe<System.Guid> Field3
        {
            get;
            set;
        }
    }
    
    public partial interface IExample1FullDTO : SampleSystem.Generated.DTO.IExample1SimpleDTO
    {
    }
    
    public partial interface IExample1RichDTO : SampleSystem.Generated.DTO.IExample1FullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.Example2RichDTO> Items2
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Example2FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Example2RichDTO))]
    public partial class Example2SimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IExample2SimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.Example2SimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.Example2IdentityDTO>
    {
        
        private System.Guid _field1;
        
        private System.Guid _field2;
        
        public Example2SimpleDTO()
        {
        }
        
        public Example2SimpleDTO(SampleSystem.Generated.DTO.IExample2SimpleDTO source) : 
                this(source, true)
        {
        }
        
        public Example2SimpleDTO(SampleSystem.Generated.DTO.IExample2SimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Field1 = source.Field1;
            this.Field2 = source.Field2;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1
        {
            get
            {
                return this._field1;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._field1, newValue))
                {
                    base.RaisePropertyChanging("Field1");
                    this._field1 = newValue;
                    base.RaisePropertyChanged("Field1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2
        {
            get
            {
                return this._field2;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._field2, newValue))
                {
                    base.RaisePropertyChanging("Field2");
                    this._field2 = newValue;
                    base.RaisePropertyChanged("Field2");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Example2IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.Example2IdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.Example2SimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Example2SimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.Example2SimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Example2SimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Example2SimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.Example2SimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.Example2StrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.Example2StrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.Example2RichDTO))]
    public partial class Example2FullDTO : SampleSystem.Generated.DTO.Example2SimpleDTO, SampleSystem.Generated.DTO.IExample2FullDTO, System.ICloneable<SampleSystem.Generated.DTO.Example2FullDTO>
    {
        
        private SampleSystem.Generated.DTO.Example1SimpleDTO _parent;
        
        public Example2FullDTO()
        {
        }
        
        public Example2FullDTO(SampleSystem.Generated.DTO.IExample2FullDTO source) : 
                this(source, true)
        {
        }
        
        public Example2FullDTO(SampleSystem.Generated.DTO.IExample2FullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.Example1SimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                SampleSystem.Generated.DTO.Example1SimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.Example2FullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Example2FullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.Example2FullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Example2FullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Example2FullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.Example2FullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.Example2StrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.Example2StrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Example2RichDTO : SampleSystem.Generated.DTO.Example2FullDTO, SampleSystem.Generated.DTO.IExample2RichDTO, System.ICloneable<SampleSystem.Generated.DTO.Example2RichDTO>
    {
        
        public Example2RichDTO()
        {
        }
        
        public Example2RichDTO(SampleSystem.Generated.DTO.IExample2RichDTO source) : 
                this(source, true)
        {
        }
        
        public Example2RichDTO(SampleSystem.Generated.DTO.IExample2RichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.Example2RichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.Example2RichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.Example2RichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.Example2RichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.Example2RichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.Example2RichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.Example2StrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.Example2StrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Example2StrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.Example2IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example2StrictDTO()
        {
        }
        
        public Example2StrictDTO(SampleSystem.Generated.DTO.Example2RichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.Example2FullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExample2(this, source);
        }
        
        public Example2StrictDTO(SampleSystem.Generated.DTO.Example2RichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example2StrictDTO(SampleSystem.Generated.DTO.Example2FullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.Example2SimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExample2(this, source);
        }
        
        public Example2StrictDTO(SampleSystem.Generated.DTO.Example2FullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example2StrictDTO(SampleSystem.Generated.DTO.Example2SimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExample2(this, source);
        }
        
        public Example2StrictDTO(SampleSystem.Generated.DTO.Example2SimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example2StrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForExample2(this, source);
        }
        
        private Example2StrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example2StrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForExample2(this, source);
        }
        
        private Example2StrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.Example2IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.Example2IdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class Example2UpdateDTO : Framework.Persistent.IUpdateDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field1 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field2 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example2UpdateDTO()
        {
        }
        
        public Example2UpdateDTO(SampleSystem.Generated.DTO.Example2StrictDTO currentSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample2(this, currentSource);
        }
        
        public Example2UpdateDTO(SampleSystem.Generated.DTO.Example2StrictDTO currentSource) : 
                this(currentSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example2UpdateDTO(SampleSystem.Generated.DTO.Example2StrictDTO currentSource, SampleSystem.Generated.DTO.Example2StrictDTO baseSource, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample2(this, currentSource, baseSource);
        }
        
        public Example2UpdateDTO(SampleSystem.Generated.DTO.Example2StrictDTO currentSource, SampleSystem.Generated.DTO.Example2StrictDTO baseSource) : 
                this(currentSource, baseSource, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Field1.HasValue && !this.Field2.HasValue;
            }
        }
        
        public void Compress()
        {
        }
    }
    
    public partial interface IExample2SimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        System.Guid Field1
        {
            get;
            set;
        }
        
        System.Guid Field2
        {
            get;
            set;
        }
    }
    
    public partial interface IExample2FullDTO : SampleSystem.Generated.DTO.IExample2SimpleDTO
    {
        
        SampleSystem.Generated.DTO.Example1SimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface IExample2RichDTO : SampleSystem.Generated.DTO.IExample2FullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.HRDepartmentVisualDTO>
    {
        
        private string _name;
        
        public HRDepartmentVisualDTO()
        {
        }
        
        public HRDepartmentVisualDTO(SampleSystem.Generated.DTO.HRDepartmentVisualDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentVisualDTO(SampleSystem.Generated.DTO.HRDepartmentVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.HRDepartmentVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.HRDepartmentView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentRichDTO))]
    public partial class HRDepartmentSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IHRDepartmentSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.HRDepartmentSimpleDTO>
    {
        
        private string _code;
        
        private string _codeNative;
        
        private string _companyLegalEntityName;
        
        private long _externalId;
        
        private bool _isLegal;
        
        private bool _isProduction;
        
        private string _locationName;
        
        private string _name;
        
        private string _nameNative;
        
        public HRDepartmentSimpleDTO()
        {
        }
        
        public HRDepartmentSimpleDTO(SampleSystem.Generated.DTO.IHRDepartmentSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentSimpleDTO(SampleSystem.Generated.DTO.IHRDepartmentSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Code = source.Code;
            this.CodeNative = source.CodeNative;
            this.CompanyLegalEntityName = source.CompanyLegalEntityName;
            this.ExternalId = source.ExternalId;
            this.IsLegal = source.IsLegal;
            this.IsProduction = source.IsProduction;
            this.LocationName = source.LocationName;
            this.Name = source.Name;
            this.NameNative = source.NameNative;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        [Framework.Restriction.UniqueElementAttribute("Uni_Code")]
        public string Code
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._code);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._code, newValue))
                {
                    base.RaisePropertyChanging("Code");
                    this._code = newValue;
                    base.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        [Framework.Restriction.UniqueElementAttribute("Uni_CodeNative")]
        public string CodeNative
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._codeNative);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._codeNative, newValue))
                {
                    base.RaisePropertyChanging("CodeNative");
                    this._codeNative = newValue;
                    base.RaisePropertyChanged("CodeNative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyLegalEntityName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._companyLegalEntityName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._companyLegalEntityName, newValue))
                {
                    base.RaisePropertyChanging("CompanyLegalEntityName");
                    this._companyLegalEntityName = newValue;
                    base.RaisePropertyChanged("CompanyLegalEntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId
        {
            get
            {
                return this._externalId;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._externalId, newValue))
                {
                    base.RaisePropertyChanging("ExternalId");
                    this._externalId = newValue;
                    base.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegal
        {
            get
            {
                return this._isLegal;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isLegal, newValue))
                {
                    base.RaisePropertyChanging("IsLegal");
                    this._isLegal = newValue;
                    base.RaisePropertyChanged("IsLegal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction
        {
            get
            {
                return this._isProduction;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isProduction, newValue))
                {
                    base.RaisePropertyChanging("IsProduction");
                    this._isProduction = newValue;
                    base.RaisePropertyChanged("IsProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._locationName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._locationName, newValue))
                {
                    base.RaisePropertyChanging("LocationName");
                    this._locationName = newValue;
                    base.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute("Uni_Name")]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute("Uni_NameNative")]
        public string NameNative
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._nameNative);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._nameNative, newValue))
                {
                    base.RaisePropertyChanging("NameNative");
                    this._nameNative = newValue;
                    base.RaisePropertyChanged("NameNative");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.HRDepartmentSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentRichDTO))]
    public partial class HRDepartmentFullDTO : SampleSystem.Generated.DTO.HRDepartmentSimpleDTO, SampleSystem.Generated.DTO.IHRDepartmentFullDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentFullDTO>, Framework.Persistent.IParentSource<SampleSystem.Generated.DTO.HRDepartmentSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _approvedBy;
        
        private Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> _companyLegalEntity = Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>.Nothing;
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _head;
        
        private SampleSystem.Generated.DTO.LocationSimpleDTO _location;
        
        private SampleSystem.Generated.DTO.HRDepartmentSimpleDTO _parent;
        
        public HRDepartmentFullDTO()
        {
        }
        
        public HRDepartmentFullDTO(SampleSystem.Generated.DTO.IHRDepartmentFullDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentFullDTO(SampleSystem.Generated.DTO.IHRDepartmentFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ApprovedBy = source.ApprovedBy;
            Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> justCompanyLegalEntity = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>>(source.CompanyLegalEntity);
            if (!object.ReferenceEquals(justCompanyLegalEntity, null))
            {
                SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO resultCompanyLegalEntity;
                resultCompanyLegalEntity = justCompanyLegalEntity.Value;
                this.CompanyLegalEntity = new Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>(resultCompanyLegalEntity);
            }
            else
            {
                this.CompanyLegalEntity = Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>.Nothing;
            }
            this.Head = source.Head;
            this.Location = source.Location;
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO ApprovedBy
        {
            get
            {
                return this._approvedBy;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._approvedBy, newValue))
                {
                    base.RaisePropertyChanging("ApprovedBy");
                    this._approvedBy = newValue;
                    base.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityEdit)]
        [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.CompanyLegalEntityView)]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute("Uni_Name")]
        [Framework.Restriction.UniqueElementAttribute("Uni_NameNative")]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> CompanyLegalEntity
        {
            get
            {
                Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> justCompanyLegalEntity = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>>(this._companyLegalEntity);
                if (!object.ReferenceEquals(justCompanyLegalEntity, null))
                {
                    return new Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>(justCompanyLegalEntity.Value);
                }
                else
                {
                    return Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>.Nothing;
                }
            }
            set
            {
                Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> newValue;
                Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> justCompanyLegalEntity = Framework.Core.PipeObjectExtensions.AsCast<Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>>(value);
                if (!object.ReferenceEquals(justCompanyLegalEntity, null))
                {
                    newValue = new Framework.Core.Just<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>(justCompanyLegalEntity.Value);
                }
                else
                {
                    newValue = Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO>.Nothing;
                }
                if (!object.Equals(this._companyLegalEntity, newValue))
                {
                    base.RaisePropertyChanging("CompanyLegalEntity");
                    this._companyLegalEntity = newValue;
                    base.RaisePropertyChanged("CompanyLegalEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Head
        {
            get
            {
                return this._head;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._head, newValue))
                {
                    base.RaisePropertyChanging("Head");
                    this._head = newValue;
                    base.RaisePropertyChanged("Head");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get
            {
                return this._location;
            }
            set
            {
                SampleSystem.Generated.DTO.LocationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._location, newValue))
                {
                    base.RaisePropertyChanging("Location");
                    this._location = newValue;
                    base.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute("Uni_Name")]
    [Framework.Restriction.UniqueGroupAttribute("Uni_Code")]
    [Framework.Restriction.UniqueGroupAttribute("Uni_CodeNative")]
    [Framework.Restriction.UniqueGroupAttribute("Uni_NameNative")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentRichDTO : SampleSystem.Generated.DTO.HRDepartmentFullDTO, SampleSystem.Generated.DTO.IHRDepartmentRichDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.HRDepartmentRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO> _businessUnitHrDepartments = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRichDTO> _children = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO> _employeePositions = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO> _hrDepartmentRoleEmployees = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> _managementUnits = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>();
        
        public HRDepartmentRichDTO()
        {
        }
        
        public HRDepartmentRichDTO(SampleSystem.Generated.DTO.IHRDepartmentRichDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentRichDTO(SampleSystem.Generated.DTO.IHRDepartmentRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.BusinessUnitHrDepartments, null))
            {
                this.BusinessUnitHrDepartments = Framework.Core.EnumerableExtensions.ToObservableCollection(source.BusinessUnitHrDepartments, businessUnitHrDepartment => businessUnitHrDepartment.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Children, null))
            {
                this.Children = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Children, hRDepartment => hRDepartment.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.EmployeePositions, null))
            {
                this.EmployeePositions = Framework.Core.EnumerableExtensions.ToObservableCollection(source.EmployeePositions, hRDepartmentEmployeePosition => hRDepartmentEmployeePosition.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.HrDepartmentRoleEmployees, null))
            {
                this.HrDepartmentRoleEmployees = Framework.Core.EnumerableExtensions.ToObservableCollection(source.HrDepartmentRoleEmployees, hRDepartmentRoleEmployee => hRDepartmentRoleEmployee.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.ManagementUnits, null))
            {
                this.ManagementUnits = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ManagementUnits, managementUnitAndHRDepartmentLink => managementUnitAndHRDepartmentLink.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO> BusinessUnitHrDepartments
        {
            get
            {
                return this._businessUnitHrDepartments;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitHrDepartments, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitHrDepartments");
                    this._businessUnitHrDepartments = newValue;
                    base.RaisePropertyChanged("BusinessUnitHrDepartments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRichDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._children, newValue))
                {
                    base.RaisePropertyChanging("Children");
                    this._children = newValue;
                    base.RaisePropertyChanged("Children");
                }
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO>.Details
        {
            get
            {
                return this.BusinessUnitHrDepartments;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.HRDepartmentRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.HRDepartmentRichDTO>.Details
        {
            get
            {
                return this.Children;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO>.Details
        {
            get
            {
                return this.EmployeePositions;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO>.Details
        {
            get
            {
                return this.HrDepartmentRoleEmployees;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>.Details
        {
            get
            {
                return this.ManagementUnits;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO> EmployeePositions
        {
            get
            {
                return this._employeePositions;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._employeePositions, newValue))
                {
                    base.RaisePropertyChanging("EmployeePositions");
                    this._employeePositions = newValue;
                    base.RaisePropertyChanged("EmployeePositions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO> HrDepartmentRoleEmployees
        {
            get
            {
                return this._hrDepartmentRoleEmployees;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._hrDepartmentRoleEmployees, newValue))
                {
                    base.RaisePropertyChanging("HrDepartmentRoleEmployees");
                    this._hrDepartmentRoleEmployees = newValue;
                    base.RaisePropertyChanged("HrDepartmentRoleEmployees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> ManagementUnits
        {
            get
            {
                return this._managementUnits;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._managementUnits, newValue))
                {
                    base.RaisePropertyChanging("ManagementUnits");
                    this._managementUnits = newValue;
                    base.RaisePropertyChanged("ManagementUnits");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO ApprovedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO> BusinessUnitHrDepartments = new System.Collections.Generic.List<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO> CompanyLegalEntity = Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO> EmployeePositions = new System.Collections.Generic.List<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Head;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO> HrDepartmentRoleEmployees = new System.Collections.Generic.List<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO> ManagementUnits = new System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentStrictDTO()
        {
        }
        
        public HRDepartmentStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.HRDepartmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentStrictDTO(SampleSystem.Generated.DTO.HRDepartmentFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.HRDepartmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(SampleSystem.Generated.DTO.HRDepartmentFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentStrictDTO(SampleSystem.Generated.DTO.HRDepartmentSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(SampleSystem.Generated.DTO.HRDepartmentSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartment(this, source);
        }
        
        private HRDepartmentStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartment(this, source);
        }
        
        private HRDepartmentStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IHRDepartmentSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Code
        {
            get;
            set;
        }
        
        string CodeNative
        {
            get;
            set;
        }
        
        string CompanyLegalEntityName
        {
            get;
            set;
        }
        
        long ExternalId
        {
            get;
            set;
        }
        
        bool IsLegal
        {
            get;
            set;
        }
        
        bool IsProduction
        {
            get;
            set;
        }
        
        string LocationName
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string NameNative
        {
            get;
            set;
        }
    }
    
    public partial interface IHRDepartmentFullDTO : SampleSystem.Generated.DTO.IHRDepartmentSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO ApprovedBy
        {
            get;
            set;
        }
        
        Framework.Core.Maybe<SampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> CompanyLegalEntity
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Head
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.HRDepartmentSimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface IHRDepartmentRichDTO : SampleSystem.Generated.DTO.IHRDepartmentFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO> BusinessUnitHrDepartments
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRichDTO> Children
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO> EmployeePositions
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO> HrDepartmentRoleEmployees
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> ManagementUnits
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO))]
    public partial class HRDepartmentEmployeePositionSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO>
    {
        
        public HRDepartmentEmployeePositionSimpleDTO()
        {
        }
        
        public HRDepartmentEmployeePositionSimpleDTO(SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentEmployeePositionSimpleDTO(SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO))]
    public partial class HRDepartmentEmployeePositionFullDTO : SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO, SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionFullDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeePositionSimpleDTO _employeePosition;
        
        private SampleSystem.Generated.DTO.HRDepartmentSimpleDTO _hrDepartment;
        
        public HRDepartmentEmployeePositionFullDTO()
        {
        }
        
        public HRDepartmentEmployeePositionFullDTO(SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionFullDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentEmployeePositionFullDTO(SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.EmployeePosition = source.EmployeePosition;
            this.HrDepartment = source.HrDepartment;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.EmployeePositionSimpleDTO EmployeePosition
        {
            get
            {
                return this._employeePosition;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeePositionSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employeePosition, newValue))
                {
                    base.RaisePropertyChanging("EmployeePosition");
                    this._employeePosition = newValue;
                    base.RaisePropertyChanged("EmployeePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HrDepartment
        {
            get
            {
                return this._hrDepartment;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._hrDepartment, newValue))
                {
                    base.RaisePropertyChanging("HrDepartment");
                    this._hrDepartment = newValue;
                    base.RaisePropertyChanged("HrDepartment");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentEmployeePositionRichDTO : SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO, SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionRichDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO>
    {
        
        public HRDepartmentEmployeePositionRichDTO()
        {
        }
        
        public HRDepartmentEmployeePositionRichDTO(SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionRichDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentEmployeePositionRichDTO(SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentEmployeePositionStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeePositionIdentityDTO EmployeePosition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO HrDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentEmployeePositionStrictDTO()
        {
        }
        
        public HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        public HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        public HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        public HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        private HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        private HRDepartmentEmployeePositionStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IHRDepartmentEmployeePositionSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IHRDepartmentEmployeePositionFullDTO : SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeePositionSimpleDTO EmployeePosition
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HrDepartment
        {
            get;
            set;
        }
    }
    
    public partial interface IHRDepartmentEmployeePositionRichDTO : SampleSystem.Generated.DTO.IHRDepartmentEmployeePositionFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO))]
    public partial class HRDepartmentRoleEmployeeSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO>
    {
        
        private SampleSystem.Generated.DTO.HRDepartmentEmployeeRoleType _hRDepartmentEmployeeRoleType;
        
        public HRDepartmentRoleEmployeeSimpleDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeSimpleDTO(SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentRoleEmployeeSimpleDTO(SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.HRDepartmentEmployeeRoleType = source.HRDepartmentEmployeeRoleType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentEmployeeRoleType HRDepartmentEmployeeRoleType
        {
            get
            {
                return this._hRDepartmentEmployeeRoleType;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentEmployeeRoleType newValue;
                newValue = value;
                if (!object.Equals(this._hRDepartmentEmployeeRoleType, newValue))
                {
                    base.RaisePropertyChanging("HRDepartmentEmployeeRoleType");
                    this._hRDepartmentEmployeeRoleType = newValue;
                    base.RaisePropertyChanged("HRDepartmentEmployeeRoleType");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO))]
    public partial class HRDepartmentRoleEmployeeFullDTO : SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO, SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeFullDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _employee;
        
        private SampleSystem.Generated.DTO.HRDepartmentSimpleDTO _hRDepartment;
        
        public HRDepartmentRoleEmployeeFullDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeFullDTO(SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeFullDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentRoleEmployeeFullDTO(SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Employee = source.Employee;
            this.HRDepartment = source.HRDepartment;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get
            {
                return this._employee;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._employee, newValue))
                {
                    base.RaisePropertyChanging("Employee");
                    this._employee = newValue;
                    base.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get
            {
                return this._hRDepartment;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._hRDepartment, newValue))
                {
                    base.RaisePropertyChanging("HRDepartment");
                    this._hRDepartment = newValue;
                    base.RaisePropertyChanged("HRDepartment");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentRoleEmployeeRichDTO : SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO, SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeRichDTO, System.ICloneable<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO>
    {
        
        public HRDepartmentRoleEmployeeRichDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeRichDTO(SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeRichDTO source) : 
                this(source, true)
        {
        }
        
        public HRDepartmentRoleEmployeeRichDTO(SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HRDepartmentRoleEmployeeStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentEmployeeRoleType HRDepartmentEmployeeRoleType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentRoleEmployeeStrictDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IHRDepartmentRoleEmployeeSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.HRDepartmentEmployeeRoleType HRDepartmentEmployeeRoleType
        {
            get;
            set;
        }
    }
    
    public partial interface IHRDepartmentRoleEmployeeFullDTO : SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO Employee
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get;
            set;
        }
    }
    
    public partial interface IHRDepartmentRoleEmployeeRichDTO : SampleSystem.Generated.DTO.IHRDepartmentRoleEmployeeFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class IMRequestVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.IMRequestIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.IMRequestVisualDTO>
    {
        
        private string _name;
        
        public IMRequestVisualDTO()
        {
        }
        
        public IMRequestVisualDTO(SampleSystem.Generated.DTO.IMRequestVisualDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestVisualDTO(SampleSystem.Generated.DTO.IMRequestVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.IMRequestIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.IMRequestIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.IMRequestVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.IMRequestVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.IMRequestFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.IMRequestRichDTO))]
    public partial class IMRequestSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IIMRequestSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.IMRequestSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.IMRequestIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.IMRequestSimpleDTO>
    {
        
        private string _email;
        
        private string _message;
        
        private string _name;
        
        public IMRequestSimpleDTO()
        {
        }
        
        public IMRequestSimpleDTO(SampleSystem.Generated.DTO.IIMRequestSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestSimpleDTO(SampleSystem.Generated.DTO.IIMRequestSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Email = source.Email;
            this.Message = source.Message;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        public string Email
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._email);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._email, newValue))
                {
                    base.RaisePropertyChanging("Email");
                    this._email = newValue;
                    base.RaisePropertyChanged("Email");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.IMRequestIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.IMRequestIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        public string Message
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._message);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._message, newValue))
                {
                    base.RaisePropertyChanging("Message");
                    this._message = newValue;
                    base.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.IMRequestSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.IMRequestSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.IMRequestSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.IMRequestSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.IMRequestSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.IMRequestSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.IMRequestRichDTO))]
    public partial class IMRequestFullDTO : SampleSystem.Generated.DTO.IMRequestSimpleDTO, SampleSystem.Generated.DTO.IIMRequestFullDTO, System.ICloneable<SampleSystem.Generated.DTO.IMRequestFullDTO>
    {
        
        public IMRequestFullDTO()
        {
        }
        
        public IMRequestFullDTO(SampleSystem.Generated.DTO.IIMRequestFullDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestFullDTO(SampleSystem.Generated.DTO.IIMRequestFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.IMRequestFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.IMRequestFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.IMRequestFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.IMRequestFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.IMRequestFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class IMRequestRichDTO : SampleSystem.Generated.DTO.IMRequestFullDTO, SampleSystem.Generated.DTO.IIMRequestRichDTO, System.ICloneable<SampleSystem.Generated.DTO.IMRequestRichDTO>
    {
        
        private SampleSystem.Generated.DTO.IMRequestDetailRichDTO _oneToOneDetail;
        
        public IMRequestRichDTO()
        {
        }
        
        public IMRequestRichDTO(SampleSystem.Generated.DTO.IIMRequestRichDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestRichDTO(SampleSystem.Generated.DTO.IIMRequestRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.OneToOneDetail = source.OneToOneDetail;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public SampleSystem.Generated.DTO.IMRequestDetailRichDTO OneToOneDetail
        {
            get
            {
                return this._oneToOneDetail;
            }
            set
            {
                SampleSystem.Generated.DTO.IMRequestDetailRichDTO newValue;
                newValue = value;
                if (!object.Equals(this._oneToOneDetail, newValue))
                {
                    base.RaisePropertyChanging("OneToOneDetail");
                    this._oneToOneDetail = newValue;
                    base.RaisePropertyChanged("OneToOneDetail");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.IMRequestRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.IMRequestRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.IMRequestRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.IMRequestRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.IMRequestRichDTO(this);
        }
    }
    
    public partial interface IIMRequestSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Email
        {
            get;
            set;
        }
        
        string Message
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IIMRequestFullDTO : SampleSystem.Generated.DTO.IIMRequestSimpleDTO
    {
    }
    
    public partial interface IIMRequestRichDTO : SampleSystem.Generated.DTO.IIMRequestFullDTO
    {
        
        SampleSystem.Generated.DTO.IMRequestDetailRichDTO OneToOneDetail
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.IMRequestDetailFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.IMRequestDetailRichDTO))]
    public partial class IMRequestDetailSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IIMRequestDetailSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO>
    {
        
        public IMRequestDetailSimpleDTO()
        {
        }
        
        public IMRequestDetailSimpleDTO(SampleSystem.Generated.DTO.IIMRequestDetailSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestDetailSimpleDTO(SampleSystem.Generated.DTO.IIMRequestDetailSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.IMRequestDetailRichDTO))]
    public partial class IMRequestDetailFullDTO : SampleSystem.Generated.DTO.IMRequestDetailSimpleDTO, SampleSystem.Generated.DTO.IIMRequestDetailFullDTO, System.ICloneable<SampleSystem.Generated.DTO.IMRequestDetailFullDTO>
    {
        
        private SampleSystem.Generated.DTO.IMRequestSimpleDTO _request;
        
        public IMRequestDetailFullDTO()
        {
        }
        
        public IMRequestDetailFullDTO(SampleSystem.Generated.DTO.IIMRequestDetailFullDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestDetailFullDTO(SampleSystem.Generated.DTO.IIMRequestDetailFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Request = source.Request;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.IMRequestSimpleDTO Request
        {
            get
            {
                return this._request;
            }
            set
            {
                SampleSystem.Generated.DTO.IMRequestSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._request, newValue))
                {
                    base.RaisePropertyChanging("Request");
                    this._request = newValue;
                    base.RaisePropertyChanged("Request");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.IMRequestDetailFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.IMRequestDetailFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.IMRequestDetailFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class IMRequestDetailRichDTO : SampleSystem.Generated.DTO.IMRequestDetailFullDTO, SampleSystem.Generated.DTO.IIMRequestDetailRichDTO, System.ICloneable<SampleSystem.Generated.DTO.IMRequestDetailRichDTO>
    {
        
        public IMRequestDetailRichDTO()
        {
        }
        
        public IMRequestDetailRichDTO(SampleSystem.Generated.DTO.IIMRequestDetailRichDTO source) : 
                this(source, true)
        {
        }
        
        public IMRequestDetailRichDTO(SampleSystem.Generated.DTO.IIMRequestDetailRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.IMRequestDetailRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.IMRequestDetailRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.IMRequestDetailRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.IMRequestDetailRichDTO(this);
        }
    }
    
    public partial interface IIMRequestDetailSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IIMRequestDetailFullDTO : SampleSystem.Generated.DTO.IIMRequestDetailSimpleDTO
    {
        
        SampleSystem.Generated.DTO.IMRequestSimpleDTO Request
        {
            get;
            set;
        }
    }
    
    public partial interface IIMRequestDetailRichDTO : SampleSystem.Generated.DTO.IIMRequestDetailFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class InformationVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.InformationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.InformationVisualDTO>
    {
        
        private string _name;
        
        public InformationVisualDTO()
        {
        }
        
        public InformationVisualDTO(SampleSystem.Generated.DTO.InformationVisualDTO source) : 
                this(source, true)
        {
        }
        
        public InformationVisualDTO(SampleSystem.Generated.DTO.InformationVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.InformationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.InformationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.InformationVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.InformationVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.InformationVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.InformationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.InformationRichDTO))]
    public partial class InformationSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IInformationSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.InformationSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.InformationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.InformationSimpleDTO>
    {
        
        private string _email;
        
        private string _name;
        
        public InformationSimpleDTO()
        {
        }
        
        public InformationSimpleDTO(SampleSystem.Generated.DTO.IInformationSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public InformationSimpleDTO(SampleSystem.Generated.DTO.IInformationSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Email = source.Email;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute(50)]
        public string Email
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._email);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._email, newValue))
                {
                    base.RaisePropertyChanging("Email");
                    this._email = newValue;
                    base.RaisePropertyChanged("Email");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.InformationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.InformationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.InformationSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.InformationSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.InformationSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.InformationSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.InformationSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.InformationSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.InformationSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.InformationRichDTO))]
    public partial class InformationFullDTO : SampleSystem.Generated.DTO.InformationSimpleDTO, SampleSystem.Generated.DTO.IInformationFullDTO, System.ICloneable<SampleSystem.Generated.DTO.InformationFullDTO>
    {
        
        public InformationFullDTO()
        {
        }
        
        public InformationFullDTO(SampleSystem.Generated.DTO.IInformationFullDTO source) : 
                this(source, true)
        {
        }
        
        public InformationFullDTO(SampleSystem.Generated.DTO.IInformationFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.InformationFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.InformationFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.InformationFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.InformationFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.InformationFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.InformationFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class InformationRichDTO : SampleSystem.Generated.DTO.InformationFullDTO, SampleSystem.Generated.DTO.IInformationRichDTO, System.ICloneable<SampleSystem.Generated.DTO.InformationRichDTO>
    {
        
        public InformationRichDTO()
        {
        }
        
        public InformationRichDTO(SampleSystem.Generated.DTO.IInformationRichDTO source) : 
                this(source, true)
        {
        }
        
        public InformationRichDTO(SampleSystem.Generated.DTO.IInformationRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.InformationRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.InformationRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.InformationRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.InformationRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.InformationRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.InformationRichDTO(this);
        }
    }
    
    public partial interface IInformationSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Email
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IInformationFullDTO : SampleSystem.Generated.DTO.IInformationSimpleDTO
    {
    }
    
    public partial interface IInformationRichDTO : SampleSystem.Generated.DTO.IInformationFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class LegalEntityBaseSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ILegalEntityBaseSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.RevenueDocumentAribaStatus _aribaStatus;
        
        private string _name;
        
        private string _nameEnglish;
        
        public LegalEntityBaseSimpleDTO()
        {
        }
        
        public LegalEntityBaseSimpleDTO(SampleSystem.Generated.DTO.ILegalEntityBaseSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public LegalEntityBaseSimpleDTO(SampleSystem.Generated.DTO.ILegalEntityBaseSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AribaStatus = source.AribaStatus;
            this.Name = source.Name;
            this.NameEnglish = source.NameEnglish;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.RevenueDocumentAribaStatus AribaStatus
        {
            get
            {
                return this._aribaStatus;
            }
            set
            {
                SampleSystem.Generated.DTO.RevenueDocumentAribaStatus newValue;
                newValue = value;
                if (!object.Equals(this._aribaStatus, newValue))
                {
                    base.RaisePropertyChanging("AribaStatus");
                    this._aribaStatus = newValue;
                    base.RaisePropertyChanged("AribaStatus");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public string NameEnglish
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._nameEnglish);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._nameEnglish, newValue))
                {
                    base.RaisePropertyChanging("NameEnglish");
                    this._nameEnglish = newValue;
                    base.RaisePropertyChanged("NameEnglish");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    public partial interface ILegalEntityBaseSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.RevenueDocumentAribaStatus AribaStatus
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string NameEnglish
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class LocationVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.LocationVisualDTO>
    {
        
        private string _name;
        
        public LocationVisualDTO()
        {
        }
        
        public LocationVisualDTO(SampleSystem.Generated.DTO.LocationVisualDTO source) : 
                this(source, true)
        {
        }
        
        public LocationVisualDTO(SampleSystem.Generated.DTO.LocationVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.LocationVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.LocationVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.LocationVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.LocationEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.LocationView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.LocationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.LocationRichDTO))]
    public partial class LocationSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ILocationSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.LocationSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.LocationSimpleDTO>
    {
        
        private int _closeDate;
        
        private int _code;
        
        private bool _containsOnlyInactiveChildren;
        
        private bool _isFinancial;
        
        private bool _isLeaf;
        
        private SampleSystem.Generated.DTO.LocationType _locationType;
        
        private string _name;
        
        public LocationSimpleDTO()
        {
        }
        
        public LocationSimpleDTO(SampleSystem.Generated.DTO.ILocationSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public LocationSimpleDTO(SampleSystem.Generated.DTO.ILocationSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CloseDate = source.CloseDate;
            this.Code = source.Code;
            this.ContainsOnlyInactiveChildren = source.ContainsOnlyInactiveChildren;
            this.IsFinancial = source.IsFinancial;
            this.IsLeaf = source.IsLeaf;
            this.LocationType = source.LocationType;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public int CloseDate
        {
            get
            {
                return this._closeDate;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._closeDate, newValue))
                {
                    base.RaisePropertyChanging("CloseDate");
                    this._closeDate = newValue;
                    base.RaisePropertyChanged("CloseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public int Code
        {
            get
            {
                return this._code;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._code, newValue))
                {
                    base.RaisePropertyChanging("Code");
                    this._code = newValue;
                    base.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainsOnlyInactiveChildren
        {
            get
            {
                return this._containsOnlyInactiveChildren;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._containsOnlyInactiveChildren, newValue))
                {
                    base.RaisePropertyChanging("ContainsOnlyInactiveChildren");
                    this._containsOnlyInactiveChildren = newValue;
                    base.RaisePropertyChanged("ContainsOnlyInactiveChildren");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinancial
        {
            get
            {
                return this._isFinancial;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isFinancial, newValue))
                {
                    base.RaisePropertyChanging("IsFinancial");
                    this._isFinancial = newValue;
                    base.RaisePropertyChanged("IsFinancial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLeaf
        {
            get
            {
                return this._isLeaf;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isLeaf, newValue))
                {
                    base.RaisePropertyChanging("IsLeaf");
                    this._isLeaf = newValue;
                    base.RaisePropertyChanged("IsLeaf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LocationType LocationType
        {
            get
            {
                return this._locationType;
            }
            set
            {
                SampleSystem.Generated.DTO.LocationType newValue;
                newValue = value;
                if (!object.Equals(this._locationType, newValue))
                {
                    base.RaisePropertyChanging("LocationType");
                    this._locationType = newValue;
                    base.RaisePropertyChanged("LocationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.LocationSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.LocationSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.LocationSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.LocationSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.LocationSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.LocationSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.LocationSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.LocationRichDTO))]
    public partial class LocationFullDTO : SampleSystem.Generated.DTO.LocationSimpleDTO, SampleSystem.Generated.DTO.ILocationFullDTO, System.ICloneable<SampleSystem.Generated.DTO.LocationFullDTO>, Framework.Persistent.IParentSource<SampleSystem.Generated.DTO.LocationSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.CountrySimpleDTO _country;
        
        private SampleSystem.Generated.DTO.LocationSimpleDTO _parent;
        
        public LocationFullDTO()
        {
        }
        
        public LocationFullDTO(SampleSystem.Generated.DTO.ILocationFullDTO source) : 
                this(source, true)
        {
        }
        
        public LocationFullDTO(SampleSystem.Generated.DTO.ILocationFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Country = source.Country;
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CountrySimpleDTO Country
        {
            get
            {
                return this._country;
            }
            set
            {
                SampleSystem.Generated.DTO.CountrySimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._country, newValue))
                {
                    base.RaisePropertyChanging("Country");
                    this._country = newValue;
                    base.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LocationSimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                SampleSystem.Generated.DTO.LocationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.LocationFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.LocationFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.LocationFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.LocationFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.LocationFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.LocationFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class LocationRichDTO : SampleSystem.Generated.DTO.LocationFullDTO, SampleSystem.Generated.DTO.ILocationRichDTO, System.ICloneable<SampleSystem.Generated.DTO.LocationRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.LocationRichDTO>
    {
        
        private byte[] _binaryData;
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.LocationRichDTO> _children = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.LocationRichDTO>();
        
        public LocationRichDTO()
        {
        }
        
        public LocationRichDTO(SampleSystem.Generated.DTO.ILocationRichDTO source) : 
                this(source, true)
        {
        }
        
        public LocationRichDTO(SampleSystem.Generated.DTO.ILocationRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.BinaryData, null))
            {
                this.BinaryData = Framework.Core.ArrayExtensions.CloneA(source.BinaryData);
            }
            if (!object.ReferenceEquals(source.Children, null))
            {
                this.Children = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Children, location => location.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BinaryData
        {
            get
            {
                return this._binaryData;
            }
            set
            {
                byte[] newValue;
                newValue = value;
                if (!object.Equals(this._binaryData, newValue))
                {
                    base.RaisePropertyChanging("BinaryData");
                    this._binaryData = newValue;
                    base.RaisePropertyChanged("BinaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.LocationRichDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.LocationRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._children, newValue))
                {
                    base.RaisePropertyChanging("Children");
                    this._children = newValue;
                    base.RaisePropertyChanged("Children");
                }
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.LocationRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.LocationRichDTO>.Details
        {
            get
            {
                return this.Children;
            }
        }
        
        public SampleSystem.Generated.DTO.LocationRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.LocationRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.LocationRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.LocationRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.LocationRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.LocationRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class LocationStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BinaryData;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CloseDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CountryIdentityDTO Country;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinancial;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LocationType LocationType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LocationIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public LocationStrictDTO()
        {
        }
        
        public LocationStrictDTO(SampleSystem.Generated.DTO.LocationRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.LocationFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(SampleSystem.Generated.DTO.LocationRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LocationStrictDTO(SampleSystem.Generated.DTO.LocationFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.LocationSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(SampleSystem.Generated.DTO.LocationFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LocationStrictDTO(SampleSystem.Generated.DTO.LocationSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(SampleSystem.Generated.DTO.LocationSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LocationStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForLocation(this, source);
        }
        
        private LocationStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LocationStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForLocation(this, source);
        }
        
        private LocationStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ILocationSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        int CloseDate
        {
            get;
            set;
        }
        
        int Code
        {
            get;
            set;
        }
        
        bool ContainsOnlyInactiveChildren
        {
            get;
            set;
        }
        
        bool IsFinancial
        {
            get;
            set;
        }
        
        bool IsLeaf
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.LocationType LocationType
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ILocationFullDTO : SampleSystem.Generated.DTO.ILocationSimpleDTO
    {
        
        SampleSystem.Generated.DTO.CountrySimpleDTO Country
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.LocationSimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface ILocationRichDTO : SampleSystem.Generated.DTO.ILocationFullDTO
    {
        
        byte[] BinaryData
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.LocationRichDTO> Children
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.ManagementUnitVisualDTO>
    {
        
        private string _name;
        
        public ManagementUnitVisualDTO()
        {
        }
        
        public ManagementUnitVisualDTO(SampleSystem.Generated.DTO.ManagementUnitVisualDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitVisualDTO(SampleSystem.Generated.DTO.ManagementUnitVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.ManagementUnitVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitRichDTO))]
    public partial class ManagementUnitSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IManagementUnitSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitIdentityDTO>, Framework.Core.IMutablePeriodObject, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.ManagementUnitSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitStatus _businessUnitStatus;
        
        private bool _isProduction;
        
        private string _name;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public ManagementUnitSimpleDTO()
        {
        }
        
        public ManagementUnitSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitStatus = source.BusinessUnitStatus;
            this.IsProduction = source.IsProduction;
            this.Name = source.Name;
            this.Period = source.Period;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus
        {
            get
            {
                return this._businessUnitStatus;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitStatus newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitStatus, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitStatus");
                    this._businessUnitStatus = newValue;
                    base.RaisePropertyChanged("BusinessUnitStatus");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction
        {
            get
            {
                return this._isProduction;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isProduction, newValue))
                {
                    base.RaisePropertyChanging("IsProduction");
                    this._isProduction = newValue;
                    base.RaisePropertyChanged("IsProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.ManagementUnitSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.ManagementUnitStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitRichDTO))]
    public partial class ManagementUnitFullDTO : SampleSystem.Generated.DTO.ManagementUnitSimpleDTO, SampleSystem.Generated.DTO.IManagementUnitFullDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitFullDTO>, Framework.Persistent.IParentSource<SampleSystem.Generated.DTO.ManagementUnitSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.ManagementUnitSimpleDTO _parent;
        
        public ManagementUnitFullDTO()
        {
        }
        
        public ManagementUnitFullDTO(SampleSystem.Generated.DTO.IManagementUnitFullDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitFullDTO(SampleSystem.Generated.DTO.IManagementUnitFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitSimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                SampleSystem.Generated.DTO.ManagementUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.ManagementUnitStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitRichDTO : SampleSystem.Generated.DTO.ManagementUnitFullDTO, SampleSystem.Generated.DTO.IManagementUnitRichDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> _businessUnits = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitRichDTO> _children = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> _hRDepartments = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>();
        
        public ManagementUnitRichDTO()
        {
        }
        
        public ManagementUnitRichDTO(SampleSystem.Generated.DTO.IManagementUnitRichDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitRichDTO(SampleSystem.Generated.DTO.IManagementUnitRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.BusinessUnits, null))
            {
                this.BusinessUnits = Framework.Core.EnumerableExtensions.ToObservableCollection(source.BusinessUnits, managementUnitAndBusinessUnitLink => managementUnitAndBusinessUnitLink.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Children, null))
            {
                this.Children = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Children, managementUnit => managementUnit.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.HRDepartments, null))
            {
                this.HRDepartments = Framework.Core.EnumerableExtensions.ToObservableCollection(source.HRDepartments, managementUnitAndHRDepartmentLink => managementUnitAndHRDepartmentLink.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> BusinessUnits
        {
            get
            {
                return this._businessUnits;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._businessUnits, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnits");
                    this._businessUnits = newValue;
                    base.RaisePropertyChanged("BusinessUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitRichDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._children, newValue))
                {
                    base.RaisePropertyChanging("Children");
                    this._children = newValue;
                    base.RaisePropertyChanged("Children");
                }
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>.Details
        {
            get
            {
                return this.BusinessUnits;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>.Details
        {
            get
            {
                return this.HRDepartments;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> HRDepartments
        {
            get
            {
                return this._hRDepartments;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._hRDepartments, newValue))
                {
                    base.RaisePropertyChanging("HRDepartments");
                    this._hRDepartments = newValue;
                    base.RaisePropertyChanged("HRDepartments");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.ManagementUnitStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO> BusinessUnits = new System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO> HRDepartments = new System.Collections.Generic.List<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ManagementUnitStrictDTO()
        {
        }
        
        public ManagementUnitStrictDTO(SampleSystem.Generated.DTO.ManagementUnitRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.ManagementUnitFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForManagementUnit(this, source);
        }
        
        public ManagementUnitStrictDTO(SampleSystem.Generated.DTO.ManagementUnitRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitStrictDTO(SampleSystem.Generated.DTO.ManagementUnitFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.ManagementUnitSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForManagementUnit(this, source);
        }
        
        public ManagementUnitStrictDTO(SampleSystem.Generated.DTO.ManagementUnitFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitStrictDTO(SampleSystem.Generated.DTO.ManagementUnitSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForManagementUnit(this, source);
        }
        
        public ManagementUnitStrictDTO(SampleSystem.Generated.DTO.ManagementUnitSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForManagementUnit(this, source);
        }
        
        private ManagementUnitStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForManagementUnit(this, source);
        }
        
        private ManagementUnitStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IManagementUnitSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus
        {
            get;
            set;
        }
        
        bool IsProduction
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
    }
    
    public partial interface IManagementUnitFullDTO : SampleSystem.Generated.DTO.IManagementUnitSimpleDTO
    {
        
        SampleSystem.Generated.DTO.ManagementUnitSimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface IManagementUnitRichDTO : SampleSystem.Generated.DTO.IManagementUnitFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> BusinessUnits
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitRichDTO> Children
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> HRDepartments
        {
            get;
            set;
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO))]
    public partial class ManagementUnitAndBusinessUnitLinkSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO>
    {
        
        private bool _equalBU;
        
        public ManagementUnitAndBusinessUnitLinkSimpleDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.EqualBU = source.EqualBU;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EqualBU
        {
            get
            {
                return this._equalBU;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._equalBU, newValue))
                {
                    base.RaisePropertyChanging("EqualBU");
                    this._equalBU = newValue;
                    base.RaisePropertyChanged("EqualBU");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO))]
    public partial class ManagementUnitAndBusinessUnitLinkFullDTO : SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO, SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkFullDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _businessUnit;
        
        private SampleSystem.Generated.DTO.ManagementUnitSimpleDTO _managementUnit;
        
        public ManagementUnitAndBusinessUnitLinkFullDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkFullDTO(SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkFullDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkFullDTO(SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnit = source.BusinessUnit;
            this.ManagementUnit = source.ManagementUnit;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get
            {
                return this._businessUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnit, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnit");
                    this._businessUnit = newValue;
                    base.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit
        {
            get
            {
                return this._managementUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.ManagementUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._managementUnit, newValue))
                {
                    base.RaisePropertyChanging("ManagementUnit");
                    this._managementUnit = newValue;
                    base.RaisePropertyChanged("ManagementUnit");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitAndBusinessUnitLinkRichDTO : SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO, SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkRichDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>
    {
        
        public ManagementUnitAndBusinessUnitLinkRichDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkRichDTO(SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkRichDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkRichDTO(SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitAndBusinessUnitLinkStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EqualBU;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitIdentityDTO ManagementUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool EqualBU
        {
            get;
            set;
        }
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkFullDTO : SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit
        {
            get;
            set;
        }
    }
    
    public partial interface IManagementUnitAndBusinessUnitLinkRichDTO : SampleSystem.Generated.DTO.IManagementUnitAndBusinessUnitLinkFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO))]
    public partial class ManagementUnitAndHRDepartmentLinkSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO>
    {
        
        public ManagementUnitAndHRDepartmentLinkSimpleDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO))]
    public partial class ManagementUnitAndHRDepartmentLinkFullDTO : SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO, SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkFullDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO>
    {
        
        private SampleSystem.Generated.DTO.HRDepartmentSimpleDTO _hRDepartment;
        
        private SampleSystem.Generated.DTO.ManagementUnitSimpleDTO _managementUnit;
        
        public ManagementUnitAndHRDepartmentLinkFullDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkFullDTO(SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkFullDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkFullDTO(SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.HRDepartment = source.HRDepartment;
            this.ManagementUnit = source.ManagementUnit;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get
            {
                return this._hRDepartment;
            }
            set
            {
                SampleSystem.Generated.DTO.HRDepartmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._hRDepartment, newValue))
                {
                    base.RaisePropertyChanging("HRDepartment");
                    this._hRDepartment = newValue;
                    base.RaisePropertyChanged("HRDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit
        {
            get
            {
                return this._managementUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.ManagementUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._managementUnit, newValue))
                {
                    base.RaisePropertyChanging("ManagementUnit");
                    this._managementUnit = newValue;
                    base.RaisePropertyChanged("ManagementUnit");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitAndHRDepartmentLinkRichDTO : SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO, SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkRichDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>
    {
        
        public ManagementUnitAndHRDepartmentLinkRichDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkRichDTO(SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkRichDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkRichDTO(SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitAndHRDepartmentLinkStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitIdentityDTO ManagementUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkFullDTO : SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkSimpleDTO
    {
        
        SampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit
        {
            get;
            set;
        }
    }
    
    public partial interface IManagementUnitAndHRDepartmentLinkRichDTO : SampleSystem.Generated.DTO.IManagementUnitAndHRDepartmentLinkFullDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitEdit)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.ManagementUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class ManagementUnitFluentMappingSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IManagementUnitFluentMappingSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO>, Framework.Core.IMutablePeriodObject, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitStatus _businessUnitStatus;
        
        private bool _isProduction;
        
        private SampleSystem.Generated.DTO.MuComponent _muComponent;
        
        private string _name;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public ManagementUnitFluentMappingSimpleDTO()
        {
        }
        
        public ManagementUnitFluentMappingSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitFluentMappingSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ManagementUnitFluentMappingSimpleDTO(SampleSystem.Generated.DTO.IManagementUnitFluentMappingSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnitStatus = source.BusinessUnitStatus;
            this.IsProduction = source.IsProduction;
            if (!object.ReferenceEquals(source.MuComponent, null))
            {
                this.MuComponent = new SampleSystem.Generated.DTO.MuComponent(source.MuComponent);
            }
            this.Name = source.Name;
            this.Period = source.Period;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus
        {
            get
            {
                return this._businessUnitStatus;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitStatus newValue;
                newValue = value;
                if (!object.Equals(this._businessUnitStatus, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnitStatus");
                    this._businessUnitStatus = newValue;
                    base.RaisePropertyChanged("BusinessUnitStatus");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction
        {
            get
            {
                return this._isProduction;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isProduction, newValue))
                {
                    base.RaisePropertyChanging("IsProduction");
                    this._isProduction = newValue;
                    base.RaisePropertyChanged("IsProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.MuComponent MuComponent
        {
            get
            {
                return this._muComponent;
            }
            set
            {
                SampleSystem.Generated.DTO.MuComponent newValue;
                newValue = value;
                if (!object.Equals(this._muComponent, newValue))
                {
                    base.RaisePropertyChanging("MuComponent");
                    this._muComponent = newValue;
                    base.RaisePropertyChanged("MuComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    public partial interface IManagementUnitFluentMappingSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitStatus BusinessUnitStatus
        {
            get;
            set;
        }
        
        bool IsProduction
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.MuComponent MuComponent
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestManualEmployeeProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login;
        
        public TestManualEmployeeProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class EmployeeFilterModelStrictDTO
    {
        
        public EmployeeFilterModelStrictDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class SingleEmployeeFilterModelStrictDTO
    {
        
        public SingleEmployeeFilterModelStrictDTO()
        {
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.PrincipalFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.PrincipalRichDTO))]
    public partial class PrincipalSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.IPrincipalSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.PrincipalSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.PrincipalIdentityDTO>
    {
        
        private string _externalId;
        
        public PrincipalSimpleDTO()
        {
        }
        
        public PrincipalSimpleDTO(SampleSystem.Generated.DTO.IPrincipalSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public PrincipalSimpleDTO(SampleSystem.Generated.DTO.IPrincipalSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ExternalId = source.ExternalId;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._externalId);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._externalId, newValue))
                {
                    base.RaisePropertyChanging("ExternalId");
                    this._externalId = newValue;
                    base.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.PrincipalIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.PrincipalIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.PrincipalSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.PrincipalSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.PrincipalSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.PrincipalSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.PrincipalSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.PrincipalSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.PrincipalStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.PrincipalStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.PrincipalRichDTO))]
    public partial class PrincipalFullDTO : SampleSystem.Generated.DTO.PrincipalSimpleDTO, SampleSystem.Generated.DTO.IPrincipalFullDTO, System.ICloneable<SampleSystem.Generated.DTO.PrincipalFullDTO>
    {
        
        public PrincipalFullDTO()
        {
        }
        
        public PrincipalFullDTO(SampleSystem.Generated.DTO.IPrincipalFullDTO source) : 
                this(source, true)
        {
        }
        
        public PrincipalFullDTO(SampleSystem.Generated.DTO.IPrincipalFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.PrincipalFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.PrincipalFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.PrincipalFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.PrincipalFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.PrincipalFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.PrincipalFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.PrincipalStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.PrincipalStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class PrincipalRichDTO : SampleSystem.Generated.DTO.PrincipalFullDTO, SampleSystem.Generated.DTO.IPrincipalRichDTO, System.ICloneable<SampleSystem.Generated.DTO.PrincipalRichDTO>
    {
        
        public PrincipalRichDTO()
        {
        }
        
        public PrincipalRichDTO(SampleSystem.Generated.DTO.IPrincipalRichDTO source) : 
                this(source, true)
        {
        }
        
        public PrincipalRichDTO(SampleSystem.Generated.DTO.IPrincipalRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.PrincipalRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.PrincipalRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.PrincipalRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.PrincipalRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.PrincipalRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.PrincipalRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.PrincipalStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.PrincipalStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class PrincipalStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.PrincipalIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public PrincipalStrictDTO()
        {
        }
        
        public PrincipalStrictDTO(SampleSystem.Generated.DTO.PrincipalRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.PrincipalFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForPrincipal(this, source);
        }
        
        public PrincipalStrictDTO(SampleSystem.Generated.DTO.PrincipalRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public PrincipalStrictDTO(SampleSystem.Generated.DTO.PrincipalFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.PrincipalSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForPrincipal(this, source);
        }
        
        public PrincipalStrictDTO(SampleSystem.Generated.DTO.PrincipalFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public PrincipalStrictDTO(SampleSystem.Generated.DTO.PrincipalSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForPrincipal(this, source);
        }
        
        public PrincipalStrictDTO(SampleSystem.Generated.DTO.PrincipalSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private PrincipalStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForPrincipal(this, source);
        }
        
        private PrincipalStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private PrincipalStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForPrincipal(this, source);
        }
        
        private PrincipalStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.PrincipalIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.PrincipalIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IPrincipalSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string ExternalId
        {
            get;
            set;
        }
    }
    
    public partial interface IPrincipalFullDTO : SampleSystem.Generated.DTO.IPrincipalSimpleDTO
    {
    }
    
    public partial interface IPrincipalRichDTO : SampleSystem.Generated.DTO.IPrincipalFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitIdentityProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        public BusinessUnitIdentityProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class BusinessUnitProgramClassProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VirtualName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VirtualValue;
        
        public BusinessUnitProgramClassProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CustomCompanyLegalEntityProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AribaStatusDescription;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.AribaStatusType AribaStatusType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CustomTestObjForNestedProjectionDTO BaseObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Code = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.CustomTestObjForNestedProjectionDTO CurrentObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEnglish;
        
        public CustomCompanyLegalEntityProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class CustomTestObjForNestedProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PeriodStartDateXXX;
        
        public CustomTestObjForNestedProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class HerBusinessUnitProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.HerBusinessUnitProjectionDTO Parent;
        
        public HerBusinessUnitProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class MiniBusinessUnitEmployeeRoleProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.VisualEmployeeProjectionDTO Employee;
        
        public MiniBusinessUnitEmployeeRoleProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestBusinessUnitProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[][] CalcMatrix;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestBusinessUnitTypeProjectionDTO CalcProjectionProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Employees;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HerBusinessUnit_Full;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ParentPeriodStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PeriodEndDate;
        
        public TestBusinessUnitProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestBusinessUnitTypeProjectionDTO : SampleSystem.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestBusinessUnitTypeProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestCustomContextSecurityObjProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestCustomContextSecurityObjProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestDepartmentProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.HRDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestLocationProjectionDTO Location;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] LocationBinaryData;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestDepartmentProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestEmployeeProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BuEndDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitIdentityProjectionDTO CoreBusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoreBusinessUnitName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.VisualProjectProjectionDTO> CoreBusinessUnitProjects;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEngFirstName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> PositionName = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PpmNameNativeMiddleName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid? RoleId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName;
        
        public TestEmployeeProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestIMRequestProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.IMRequestIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestIMRequestDetailProjectionDTO OneToOneDetail;
        
        public TestIMRequestProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.IMRequestIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.IMRequestIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestIMRequestDetailProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO>
    {
        
        public TestIMRequestDetailProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.IMRequestDetailIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestLegacyEmployeeProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid? RoleId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName;
        
        public TestLegacyEmployeeProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestLocationProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestLocationProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestLocationCollectionPropertiesProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Child_Identities;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period[] Child_Periods;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestLocationProjectionDTO> Children;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] Date_Intervals;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.SampleSystemSecurityOperationCode[] Security_Codes;
        
        public TestLocationCollectionPropertiesProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecurityObjItemProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecurityObjItemProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class UnpersitentContainerProjectionDTO : SampleSystem.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestLocationProjectionDTO> Locations;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period[] PeriodArray;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestBusinessUnitProjectionDTO TestBU;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestString;
        
        public UnpersitentContainerProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class VisualEmployeeProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEngFirstName;
        
        public VisualEmployeeProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class VisualProjectProjectionDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.ProjectIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        public VisualProjectProjectionDTO()
        {
        }
        
        public SampleSystem.Generated.DTO.ProjectIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.ProjectIdentityDTO(this.Id);
            }
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.SqlParserTestObjFullDTO))]
    public partial class SqlParserTestObjSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ISqlParserTestObjSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO>
    {
        
        private string _notNullColumn;
        
        private string _uniqueColumn;
        
        public SqlParserTestObjSimpleDTO()
        {
        }
        
        public SqlParserTestObjSimpleDTO(SampleSystem.Generated.DTO.ISqlParserTestObjSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public SqlParserTestObjSimpleDTO(SampleSystem.Generated.DTO.ISqlParserTestObjSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.NotNullColumn = source.NotNullColumn;
            this.UniqueColumn = source.UniqueColumn;
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotNullColumn
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._notNullColumn);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._notNullColumn, newValue))
                {
                    base.RaisePropertyChanging("NotNullColumn");
                    this._notNullColumn = newValue;
                    base.RaisePropertyChanged("NotNullColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string UniqueColumn
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._uniqueColumn);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._uniqueColumn, newValue))
                {
                    base.RaisePropertyChanging("UniqueColumn");
                    this._uniqueColumn = newValue;
                    base.RaisePropertyChanged("UniqueColumn");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class SqlParserTestObjFullDTO : SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO, SampleSystem.Generated.DTO.ISqlParserTestObjFullDTO, System.ICloneable<SampleSystem.Generated.DTO.SqlParserTestObjFullDTO>
    {
        
        public SqlParserTestObjFullDTO()
        {
        }
        
        public SqlParserTestObjFullDTO(SampleSystem.Generated.DTO.ISqlParserTestObjFullDTO source) : 
                this(source, true)
        {
        }
        
        public SqlParserTestObjFullDTO(SampleSystem.Generated.DTO.ISqlParserTestObjFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.SqlParserTestObjFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.SqlParserTestObjFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class SqlParserTestObjStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotNullColumn;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueColumn;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public SqlParserTestObjStrictDTO()
        {
        }
        
        public SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSqlParserTestObj(this, source);
        }
        
        public SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSqlParserTestObj(this, source);
        }
        
        public SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSqlParserTestObj(this, source);
        }
        
        private SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSqlParserTestObj(this, source);
        }
        
        private SqlParserTestObjStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ISqlParserTestObjSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string NotNullColumn
        {
            get;
            set;
        }
        
        string UniqueColumn
        {
            get;
            set;
        }
    }
    
    public partial interface ISqlParserTestObjFullDTO : SampleSystem.Generated.DTO.ISqlParserTestObjSimpleDTO
    {
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO))]
    public partial class SqlParserTestObjContainerSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ISqlParserTestObjContainerSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO>
    {
        
        public SqlParserTestObjContainerSimpleDTO()
        {
        }
        
        public SqlParserTestObjContainerSimpleDTO(SampleSystem.Generated.DTO.ISqlParserTestObjContainerSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public SqlParserTestObjContainerSimpleDTO(SampleSystem.Generated.DTO.ISqlParserTestObjContainerSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO(this.Id);
            }
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class SqlParserTestObjContainerFullDTO : SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO, SampleSystem.Generated.DTO.ISqlParserTestObjContainerFullDTO, System.ICloneable<SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO>
    {
        
        private SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO _includedObject;
        
        public SqlParserTestObjContainerFullDTO()
        {
        }
        
        public SqlParserTestObjContainerFullDTO(SampleSystem.Generated.DTO.ISqlParserTestObjContainerFullDTO source) : 
                this(source, true)
        {
        }
        
        public SqlParserTestObjContainerFullDTO(SampleSystem.Generated.DTO.ISqlParserTestObjContainerFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.IncludedObject = source.IncludedObject;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO IncludedObject
        {
            get
            {
                return this._includedObject;
            }
            set
            {
                SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._includedObject, newValue))
                {
                    base.RaisePropertyChanging("IncludedObject");
                    this._includedObject = newValue;
                    base.RaisePropertyChanged("IncludedObject");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class SqlParserTestObjContainerStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO IncludedObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public SqlParserTestObjContainerStrictDTO()
        {
        }
        
        public SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSqlParserTestObjContainer(this, source);
        }
        
        public SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSqlParserTestObjContainer(this, source);
        }
        
        public SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSqlParserTestObjContainer(this, source);
        }
        
        private SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSqlParserTestObjContainer(this, source);
        }
        
        private SqlParserTestObjContainerStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ISqlParserTestObjContainerSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface ISqlParserTestObjContainerFullDTO : SampleSystem.Generated.DTO.ISqlParserTestObjContainerSimpleDTO
    {
        
        SampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO IncludedObject
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestCustomContextSecurityObjVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestCustomContextSecurityObjVisualDTO>
    {
        
        private string _name;
        
        public TestCustomContextSecurityObjVisualDTO()
        {
        }
        
        public TestCustomContextSecurityObjVisualDTO(SampleSystem.Generated.DTO.TestCustomContextSecurityObjVisualDTO source) : 
                this(source, true)
        {
        }
        
        public TestCustomContextSecurityObjVisualDTO(SampleSystem.Generated.DTO.TestCustomContextSecurityObjVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestCustomContextSecurityObjVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO))]
    public partial class TestCustomContextSecurityObjSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestCustomContextSecurityObjSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO>
    {
        
        private string _name;
        
        public TestCustomContextSecurityObjSimpleDTO()
        {
        }
        
        public TestCustomContextSecurityObjSimpleDTO(SampleSystem.Generated.DTO.ITestCustomContextSecurityObjSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestCustomContextSecurityObjSimpleDTO(SampleSystem.Generated.DTO.ITestCustomContextSecurityObjSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO))]
    public partial class TestCustomContextSecurityObjFullDTO : SampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO, SampleSystem.Generated.DTO.ITestCustomContextSecurityObjFullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO>
    {
        
        public TestCustomContextSecurityObjFullDTO()
        {
        }
        
        public TestCustomContextSecurityObjFullDTO(SampleSystem.Generated.DTO.ITestCustomContextSecurityObjFullDTO source) : 
                this(source, true)
        {
        }
        
        public TestCustomContextSecurityObjFullDTO(SampleSystem.Generated.DTO.ITestCustomContextSecurityObjFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestCustomContextSecurityObjRichDTO : SampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO, SampleSystem.Generated.DTO.ITestCustomContextSecurityObjRichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO>
    {
        
        public TestCustomContextSecurityObjRichDTO()
        {
        }
        
        public TestCustomContextSecurityObjRichDTO(SampleSystem.Generated.DTO.ITestCustomContextSecurityObjRichDTO source) : 
                this(source, true)
        {
        }
        
        public TestCustomContextSecurityObjRichDTO(SampleSystem.Generated.DTO.ITestCustomContextSecurityObjRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO(this);
        }
    }
    
    public partial interface ITestCustomContextSecurityObjSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITestCustomContextSecurityObjFullDTO : SampleSystem.Generated.DTO.ITestCustomContextSecurityObjSimpleDTO
    {
    }
    
    public partial interface ITestCustomContextSecurityObjRichDTO : SampleSystem.Generated.DTO.ITestCustomContextSecurityObjFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestDefaultFieldsMappingObjSimpleDTO : SampleSystem.Generated.DTO.BaseAbstractDTO, SampleSystem.Generated.DTO.ITestDefaultFieldsMappingObjSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO>
    {
        
        private System.DayOfWeek _enumVal = System.DayOfWeek.Thursday;
        
        private int _intVal = 123;
        
        private string _strVal = "abcde";
        
        public TestDefaultFieldsMappingObjSimpleDTO()
        {
        }
        
        public TestDefaultFieldsMappingObjSimpleDTO(SampleSystem.Generated.DTO.ITestDefaultFieldsMappingObjSimpleDTO source) : 
                base(source)
        {
            this.EnumVal = source.EnumVal;
            this.IntVal = source.IntVal;
            this.StrVal = source.StrVal;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DayOfWeek EnumVal
        {
            get
            {
                return this._enumVal;
            }
            set
            {
                System.DayOfWeek newValue;
                newValue = value;
                if (!object.Equals(this._enumVal, newValue))
                {
                    base.RaisePropertyChanging("EnumVal");
                    this._enumVal = newValue;
                    base.RaisePropertyChanged("EnumVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntVal
        {
            get
            {
                return this._intVal;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._intVal, newValue))
                {
                    base.RaisePropertyChanging("IntVal");
                    this._intVal = newValue;
                    base.RaisePropertyChanged("IntVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrVal
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._strVal);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._strVal, newValue))
                {
                    base.RaisePropertyChanging("StrVal");
                    this._strVal = newValue;
                    base.RaisePropertyChanged("StrVal");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestDefaultFieldsMappingObjStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DayOfWeek EnumVal = System.DayOfWeek.Thursday;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntVal = 123;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrVal = "abcde";
        
        public TestDefaultFieldsMappingObjStrictDTO()
        {
        }
        
        public TestDefaultFieldsMappingObjStrictDTO(SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTestDefaultFieldsMappingObj(this, source);
        }
        
        public TestDefaultFieldsMappingObjStrictDTO(SampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ITestDefaultFieldsMappingObjSimpleDTO : SampleSystem.Generated.DTO.IBaseAbstractDTO
    {
        
        System.DayOfWeek EnumVal
        {
            get;
            set;
        }
        
        int IntVal
        {
            get;
            set;
        }
        
        string StrVal
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestEmployeeFilterStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.SampleStruct SampleStruct;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TestValue;
        
        public TestEmployeeFilterStrictDTO()
        {
        }
    }
    
    [SampleSystem.SampleSystemEditDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestImmutableObjFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestImmutableObjRichDTO))]
    public partial class TestImmutableObjSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestImmutableObjSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO>
    {
        
        private string _testImmutablePrimitiveProperty;
        
        public TestImmutableObjSimpleDTO()
        {
        }
        
        public TestImmutableObjSimpleDTO(SampleSystem.Generated.DTO.ITestImmutableObjSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestImmutableObjSimpleDTO(SampleSystem.Generated.DTO.ITestImmutableObjSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.TestImmutablePrimitiveProperty = source.TestImmutablePrimitiveProperty;
        }
        
        public SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestImmutablePrimitiveProperty
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._testImmutablePrimitiveProperty);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._testImmutablePrimitiveProperty, newValue))
                {
                    base.RaisePropertyChanging("TestImmutablePrimitiveProperty");
                    this._testImmutablePrimitiveProperty = newValue;
                    base.RaisePropertyChanged("TestImmutablePrimitiveProperty");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO(this);
        }
        
        public virtual SampleSystem.Generated.DTO.TestImmutableObjStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestImmutableObjRichDTO))]
    public partial class TestImmutableObjFullDTO : SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO, SampleSystem.Generated.DTO.ITestImmutableObjFullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestImmutableObjFullDTO>
    {
        
        private SampleSystem.Generated.DTO.EmployeeSimpleDTO _testImmutableRefProperty;
        
        public TestImmutableObjFullDTO()
        {
        }
        
        public TestImmutableObjFullDTO(SampleSystem.Generated.DTO.ITestImmutableObjFullDTO source) : 
                this(source, true)
        {
        }
        
        public TestImmutableObjFullDTO(SampleSystem.Generated.DTO.ITestImmutableObjFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.TestImmutableRefProperty = source.TestImmutableRefProperty;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeSimpleDTO TestImmutableRefProperty
        {
            get
            {
                return this._testImmutableRefProperty;
            }
            set
            {
                SampleSystem.Generated.DTO.EmployeeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._testImmutableRefProperty, newValue))
                {
                    base.RaisePropertyChanging("TestImmutableRefProperty");
                    this._testImmutableRefProperty = newValue;
                    base.RaisePropertyChanged("TestImmutableRefProperty");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestImmutableObjFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestImmutableObjFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestImmutableObjFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjFullDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.TestImmutableObjStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestImmutableObjRichDTO : SampleSystem.Generated.DTO.TestImmutableObjFullDTO, SampleSystem.Generated.DTO.ITestImmutableObjRichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestImmutableObjRichDTO>
    {
        
        public TestImmutableObjRichDTO()
        {
        }
        
        public TestImmutableObjRichDTO(SampleSystem.Generated.DTO.ITestImmutableObjRichDTO source) : 
                this(source, true)
        {
        }
        
        public TestImmutableObjRichDTO(SampleSystem.Generated.DTO.ITestImmutableObjRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.TestImmutableObjRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestImmutableObjRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestImmutableObjRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjRichDTO(this);
        }
        
        public override SampleSystem.Generated.DTO.TestImmutableObjStrictDTO ToStrict()
        {
            return new SampleSystem.Generated.DTO.TestImmutableObjStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestImmutableObjStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestImmutablePrimitiveProperty;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.EmployeeIdentityDTO TestImmutableRefProperty;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TestImmutableObjStrictDTO()
        {
        }
        
        public TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.TestImmutableObjRichDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.TestImmutableObjFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTestImmutableObj(this, source);
        }
        
        public TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.TestImmutableObjRichDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.TestImmutableObjFullDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTestImmutableObj(this, source);
        }
        
        public TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.TestImmutableObjFullDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTestImmutableObj(this, source);
        }
        
        public TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.TestImmutableObjSimpleDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService) : 
                this(((SampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTestImmutableObj(this, source);
        }
        
        private TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source, SampleSystem.Generated.DTO.ISampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTestImmutableObj(this, source);
        }
        
        private TestImmutableObjStrictDTO(SampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, SampleSystem.Generated.DTO.SampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestImmutableObjIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ITestImmutableObjSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string TestImmutablePrimitiveProperty
        {
            get;
            set;
        }
    }
    
    public partial interface ITestImmutableObjFullDTO : SampleSystem.Generated.DTO.ITestImmutableObjSimpleDTO
    {
        
        SampleSystem.Generated.DTO.EmployeeSimpleDTO TestImmutableRefProperty
        {
            get;
            set;
        }
    }
    
    public partial interface ITestImmutableObjRichDTO : SampleSystem.Generated.DTO.ITestImmutableObjFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestObjForNestedSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestObjForNestedSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO>
    {
        
        private string _name;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public TestObjForNestedSimpleDTO()
        {
        }
        
        public TestObjForNestedSimpleDTO(SampleSystem.Generated.DTO.ITestObjForNestedSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestObjForNestedSimpleDTO(SampleSystem.Generated.DTO.ITestObjForNestedSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
            this.Period = source.Period;
        }
        
        public SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestObjForNestedIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestObjForNestedSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    public partial interface ITestObjForNestedSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestRootSecurityObjVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestRootSecurityObjVisualDTO>
    {
        
        private string _name;
        
        public TestRootSecurityObjVisualDTO()
        {
        }
        
        public TestRootSecurityObjVisualDTO(SampleSystem.Generated.DTO.TestRootSecurityObjVisualDTO source) : 
                this(source, true)
        {
        }
        
        public TestRootSecurityObjVisualDTO(SampleSystem.Generated.DTO.TestRootSecurityObjVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestRootSecurityObjVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [SampleSystem.SampleSystemViewDomainObjectAttribute(SampleSystem.SampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO))]
    public partial class TestRootSecurityObjSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestRootSecurityObjSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO>
    {
        
        private string _name;
        
        public TestRootSecurityObjSimpleDTO()
        {
        }
        
        public TestRootSecurityObjSimpleDTO(SampleSystem.Generated.DTO.ITestRootSecurityObjSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestRootSecurityObjSimpleDTO(SampleSystem.Generated.DTO.ITestRootSecurityObjSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO))]
    public partial class TestRootSecurityObjFullDTO : SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO, SampleSystem.Generated.DTO.ITestRootSecurityObjFullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO>
    {
        
        private SampleSystem.Generated.DTO.BusinessUnitSimpleDTO _businessUnit;
        
        private SampleSystem.Generated.DTO.LocationSimpleDTO _location;
        
        private SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO _managementUnitFluentMapping;
        
        public TestRootSecurityObjFullDTO()
        {
        }
        
        public TestRootSecurityObjFullDTO(SampleSystem.Generated.DTO.ITestRootSecurityObjFullDTO source) : 
                this(source, true)
        {
        }
        
        public TestRootSecurityObjFullDTO(SampleSystem.Generated.DTO.ITestRootSecurityObjFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.BusinessUnit = source.BusinessUnit;
            this.Location = source.Location;
            this.ManagementUnitFluentMapping = source.ManagementUnitFluentMapping;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get
            {
                return this._businessUnit;
            }
            set
            {
                SampleSystem.Generated.DTO.BusinessUnitSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._businessUnit, newValue))
                {
                    base.RaisePropertyChanging("BusinessUnit");
                    this._businessUnit = newValue;
                    base.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get
            {
                return this._location;
            }
            set
            {
                SampleSystem.Generated.DTO.LocationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._location, newValue))
                {
                    base.RaisePropertyChanging("Location");
                    this._location = newValue;
                    base.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO ManagementUnitFluentMapping
        {
            get
            {
                return this._managementUnitFluentMapping;
            }
            set
            {
                SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._managementUnitFluentMapping, newValue))
                {
                    base.RaisePropertyChanging("ManagementUnitFluentMapping");
                    this._managementUnitFluentMapping = newValue;
                    base.RaisePropertyChanged("ManagementUnitFluentMapping");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestRootSecurityObjRichDTO : SampleSystem.Generated.DTO.TestRootSecurityObjFullDTO, SampleSystem.Generated.DTO.ITestRootSecurityObjRichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO> _items = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO>();
        
        public TestRootSecurityObjRichDTO()
        {
        }
        
        public TestRootSecurityObjRichDTO(SampleSystem.Generated.DTO.ITestRootSecurityObjRichDTO source) : 
                this(source, true)
        {
        }
        
        public TestRootSecurityObjRichDTO(SampleSystem.Generated.DTO.ITestRootSecurityObjRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Items, null))
            {
                this.Items = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Items, testSecurityObjItem => testSecurityObjItem.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO>.Details
        {
            get
            {
                return this.Items;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO> Items
        {
            get
            {
                return this._items;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._items, newValue))
                {
                    base.RaisePropertyChanging("Items");
                    this._items = newValue;
                    base.RaisePropertyChanged("Items");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestRootSecurityObjRichDTO(this);
        }
    }
    
    public partial interface ITestRootSecurityObjSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITestRootSecurityObjFullDTO : SampleSystem.Generated.DTO.ITestRootSecurityObjSimpleDTO
    {
        
        SampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.LocationSimpleDTO Location
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO ManagementUnitFluentMapping
        {
            get;
            set;
        }
    }
    
    public partial interface ITestRootSecurityObjRichDTO : SampleSystem.Generated.DTO.ITestRootSecurityObjFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO> Items
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecurityObjItemVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecurityObjItemVisualDTO>
    {
        
        private string _name;
        
        public TestSecurityObjItemVisualDTO()
        {
        }
        
        public TestSecurityObjItemVisualDTO(SampleSystem.Generated.DTO.TestSecurityObjItemVisualDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecurityObjItemVisualDTO(SampleSystem.Generated.DTO.TestSecurityObjItemVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecurityObjItemVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO))]
    public partial class TestSecurityObjItemSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestSecurityObjItemSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO>
    {
        
        private string _name;
        
        public TestSecurityObjItemSimpleDTO()
        {
        }
        
        public TestSecurityObjItemSimpleDTO(SampleSystem.Generated.DTO.ITestSecurityObjItemSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecurityObjItemSimpleDTO(SampleSystem.Generated.DTO.ITestSecurityObjItemSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO))]
    public partial class TestSecurityObjItemFullDTO : SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO, SampleSystem.Generated.DTO.ITestSecurityObjItemFullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO>
    {
        
        private SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO _firstMaster;
        
        public TestSecurityObjItemFullDTO()
        {
        }
        
        public TestSecurityObjItemFullDTO(SampleSystem.Generated.DTO.ITestSecurityObjItemFullDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecurityObjItemFullDTO(SampleSystem.Generated.DTO.ITestSecurityObjItemFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.FirstMaster = source.FirstMaster;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO FirstMaster
        {
            get
            {
                return this._firstMaster;
            }
            set
            {
                SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._firstMaster, newValue))
                {
                    base.RaisePropertyChanging("FirstMaster");
                    this._firstMaster = newValue;
                    base.RaisePropertyChanged("FirstMaster");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecurityObjItemRichDTO : SampleSystem.Generated.DTO.TestSecurityObjItemFullDTO, SampleSystem.Generated.DTO.ITestSecurityObjItemRichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO>, Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO> _items = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO> _items2 = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO> _items3 = new System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO>();
        
        public TestSecurityObjItemRichDTO()
        {
        }
        
        public TestSecurityObjItemRichDTO(SampleSystem.Generated.DTO.ITestSecurityObjItemRichDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecurityObjItemRichDTO(SampleSystem.Generated.DTO.ITestSecurityObjItemRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Items, null))
            {
                this.Items = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Items, testSecuritySubObjItem => testSecuritySubObjItem.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Items2, null))
            {
                this.Items2 = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Items2, testSecuritySubObjItem2 => testSecuritySubObjItem2.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Items3, null))
            {
                this.Items3 = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Items3, testSecuritySubObjItem3 => testSecuritySubObjItem3.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO>.Details
        {
            get
            {
                return this.Items;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO>.Details
        {
            get
            {
                return this.Items2;
            }
        }
        
        System.Collections.Generic.ICollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO> Framework.Persistent.IMaster<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO>.Details
        {
            get
            {
                return this.Items3;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO> Items
        {
            get
            {
                return this._items;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._items, newValue))
                {
                    base.RaisePropertyChanging("Items");
                    this._items = newValue;
                    base.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO> Items2
        {
            get
            {
                return this._items2;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._items2, newValue))
                {
                    base.RaisePropertyChanging("Items2");
                    this._items2 = newValue;
                    base.RaisePropertyChanged("Items2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO> Items3
        {
            get
            {
                return this._items3;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._items3, newValue))
                {
                    base.RaisePropertyChanging("Items3");
                    this._items3 = newValue;
                    base.RaisePropertyChanged("Items3");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestSecurityObjItemRichDTO(this);
        }
    }
    
    public partial interface ITestSecurityObjItemSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecurityObjItemFullDTO : SampleSystem.Generated.DTO.ITestSecurityObjItemSimpleDTO
    {
        
        SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO FirstMaster
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecurityObjItemRichDTO : SampleSystem.Generated.DTO.ITestSecurityObjItemFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO> Items
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO> Items2
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO> Items3
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecuritySubObjItemVisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecuritySubObjItemVisualDTO>
    {
        
        private string _name;
        
        public TestSecuritySubObjItemVisualDTO()
        {
        }
        
        public TestSecuritySubObjItemVisualDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItemVisualDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItemVisualDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItemVisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemVisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemVisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecuritySubObjItemVisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO))]
    public partial class TestSecuritySubObjItemSimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItemSimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO>
    {
        
        private string _name;
        
        public TestSecuritySubObjItemSimpleDTO()
        {
        }
        
        public TestSecuritySubObjItemSimpleDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItemSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItemSimpleDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItemSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO))]
    public partial class TestSecuritySubObjItemFullDTO : SampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItemFullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO>
    {
        
        private SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO _innerMaster;
        
        public TestSecuritySubObjItemFullDTO()
        {
        }
        
        public TestSecuritySubObjItemFullDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItemFullDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItemFullDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItemFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.InnerMaster = source.InnerMaster;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster
        {
            get
            {
                return this._innerMaster;
            }
            set
            {
                SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._innerMaster, newValue))
                {
                    base.RaisePropertyChanging("InnerMaster");
                    this._innerMaster = newValue;
                    base.RaisePropertyChanged("InnerMaster");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecuritySubObjItemRichDTO : SampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItemRichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO>
    {
        
        public TestSecuritySubObjItemRichDTO()
        {
        }
        
        public TestSecuritySubObjItemRichDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItemRichDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItemRichDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItemRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO(this);
        }
    }
    
    public partial interface ITestSecuritySubObjItemSimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecuritySubObjItemFullDTO : SampleSystem.Generated.DTO.ITestSecuritySubObjItemSimpleDTO
    {
        
        SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecuritySubObjItemRichDTO : SampleSystem.Generated.DTO.ITestSecuritySubObjItemFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecuritySubObjItem2VisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecuritySubObjItem2VisualDTO>
    {
        
        private string _name;
        
        public TestSecuritySubObjItem2VisualDTO()
        {
        }
        
        public TestSecuritySubObjItem2VisualDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItem2VisualDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem2VisualDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItem2VisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2VisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2VisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecuritySubObjItem2VisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO))]
    public partial class TestSecuritySubObjItem2SimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItem2SimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO>
    {
        
        private string _name;
        
        public TestSecuritySubObjItem2SimpleDTO()
        {
        }
        
        public TestSecuritySubObjItem2SimpleDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem2SimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem2SimpleDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem2SimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO))]
    public partial class TestSecuritySubObjItem2FullDTO : SampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItem2FullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO>
    {
        
        private SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO _innerMaster;
        
        private SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO _rootSecurityObj;
        
        public TestSecuritySubObjItem2FullDTO()
        {
        }
        
        public TestSecuritySubObjItem2FullDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem2FullDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem2FullDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem2FullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.InnerMaster = source.InnerMaster;
            this.RootSecurityObj = source.RootSecurityObj;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster
        {
            get
            {
                return this._innerMaster;
            }
            set
            {
                SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._innerMaster, newValue))
                {
                    base.RaisePropertyChanging("InnerMaster");
                    this._innerMaster = newValue;
                    base.RaisePropertyChanged("InnerMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO RootSecurityObj
        {
            get
            {
                return this._rootSecurityObj;
            }
            set
            {
                SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._rootSecurityObj, newValue))
                {
                    base.RaisePropertyChanging("RootSecurityObj");
                    this._rootSecurityObj = newValue;
                    base.RaisePropertyChanged("RootSecurityObj");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecuritySubObjItem2RichDTO : SampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItem2RichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO>
    {
        
        public TestSecuritySubObjItem2RichDTO()
        {
        }
        
        public TestSecuritySubObjItem2RichDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem2RichDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem2RichDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem2RichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO(this);
        }
    }
    
    public partial interface ITestSecuritySubObjItem2SimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecuritySubObjItem2FullDTO : SampleSystem.Generated.DTO.ITestSecuritySubObjItem2SimpleDTO
    {
        
        SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster
        {
            get;
            set;
        }
        
        SampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO RootSecurityObj
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecuritySubObjItem2RichDTO : SampleSystem.Generated.DTO.ITestSecuritySubObjItem2FullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecuritySubObjItem3VisualDTO : SampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecuritySubObjItem3VisualDTO>
    {
        
        private string _name;
        
        public TestSecuritySubObjItem3VisualDTO()
        {
        }
        
        public TestSecuritySubObjItem3VisualDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItem3VisualDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem3VisualDTO(SampleSystem.Generated.DTO.TestSecuritySubObjItem3VisualDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3VisualDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3VisualDTO(this, copyId);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecuritySubObjItem3VisualDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO))]
    public partial class TestSecuritySubObjItem3SimpleDTO : SampleSystem.Generated.DTO.BaseAuditPersistentDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItem3SimpleDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO>, Framework.Persistent.IIdentityObjectContainer<SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO>
    {
        
        private string _name;
        
        public TestSecuritySubObjItem3SimpleDTO()
        {
        }
        
        public TestSecuritySubObjItem3SimpleDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem3SimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem3SimpleDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem3SimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO Identity
        {
            get
            {
                return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO(this);
        }
        
        public int CompareTo(SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO ToSimple()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO))]
    public partial class TestSecuritySubObjItem3FullDTO : SampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItem3FullDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO>
    {
        
        private SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO _innerMaster;
        
        public TestSecuritySubObjItem3FullDTO()
        {
        }
        
        public TestSecuritySubObjItem3FullDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem3FullDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem3FullDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem3FullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.InnerMaster = source.InnerMaster;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster
        {
            get
            {
                return this._innerMaster;
            }
            set
            {
                SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._innerMaster, newValue))
                {
                    base.RaisePropertyChanging("InnerMaster");
                    this._innerMaster = newValue;
                    base.RaisePropertyChanged("InnerMaster");
                }
            }
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO ToFull()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class TestSecuritySubObjItem3RichDTO : SampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO, SampleSystem.Generated.DTO.ITestSecuritySubObjItem3RichDTO, System.ICloneable<SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO>
    {
        
        public TestSecuritySubObjItem3RichDTO()
        {
        }
        
        public TestSecuritySubObjItem3RichDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem3RichDTO source) : 
                this(source, true)
        {
        }
        
        public TestSecuritySubObjItem3RichDTO(SampleSystem.Generated.DTO.ITestSecuritySubObjItem3RichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO Clone(bool copyId)
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO Clone()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO(this);
        }
        
        public new SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO ToRich()
        {
            return new SampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO(this);
        }
    }
    
    public partial interface ITestSecuritySubObjItem3SimpleDTO : SampleSystem.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecuritySubObjItem3FullDTO : SampleSystem.Generated.DTO.ITestSecuritySubObjItem3SimpleDTO
    {
        
        SampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster
        {
            get;
            set;
        }
    }
    
    public partial interface ITestSecuritySubObjItem3RichDTO : SampleSystem.Generated.DTO.ITestSecuritySubObjItem3FullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class FioShort : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged, Framework.Reactive.IBaseRaiseObject, System.ICloneable<SampleSystem.Generated.DTO.FioShort>
    {
        
        private string _firstName;
        
        private string _fullName;
        
        private string _lastName;
        
        public FioShort()
        {
        }
        
        public FioShort(SampleSystem.Generated.DTO.FioShort source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.FirstName = source.FirstName;
            this.FullName = source.FullName;
            this.LastName = source.LastName;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._firstName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._firstName, newValue))
                {
                    this.RaisePropertyChanging("FirstName");
                    this._firstName = newValue;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._fullName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._fullName, newValue))
                {
                    this.RaisePropertyChanging("FullName");
                    this._fullName = newValue;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._lastName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._lastName, newValue))
                {
                    this.RaisePropertyChanging("LastName");
                    this._lastName = newValue;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        System.ComponentModel.PropertyChangedEventHandler Framework.Reactive.IBaseRaiseObject.PropertyChanged
        {
            get
            {
                return this.PropertyChanged;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.FioShort Clone()
        {
            return new SampleSystem.Generated.DTO.FioShort(this);
        }
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        protected void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class Fio : SampleSystem.Generated.DTO.FioShort, System.ICloneable<SampleSystem.Generated.DTO.Fio>
    {
        
        private string _fullName;
        
        private string _middleName;
        
        public Fio()
        {
        }
        
        public Fio(SampleSystem.Generated.DTO.Fio source) : 
                base(source)
        {
            this.FullName = source.FullName;
            this.MiddleName = source.MiddleName;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._fullName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._fullName, newValue))
                {
                    base.RaisePropertyChanging("FullName");
                    this._fullName = newValue;
                    base.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._middleName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._middleName, newValue))
                {
                    base.RaisePropertyChanging("MiddleName");
                    this._middleName = newValue;
                    base.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.Fio Clone()
        {
            return new SampleSystem.Generated.DTO.Fio(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial class MuComponent : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged, Framework.Reactive.IBaseRaiseObject, System.ICloneable<SampleSystem.Generated.DTO.MuComponent>
    {
        
        private bool? _luxoftSignsFirst;
        
        public MuComponent()
        {
        }
        
        public MuComponent(SampleSystem.Generated.DTO.MuComponent source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.LuxoftSignsFirst = source.LuxoftSignsFirst;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? LuxoftSignsFirst
        {
            get
            {
                return this._luxoftSignsFirst;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._luxoftSignsFirst, newValue))
                {
                    this.RaisePropertyChanging("LuxoftSignsFirst");
                    this._luxoftSignsFirst = newValue;
                    this.RaisePropertyChanged("LuxoftSignsFirst");
                }
            }
        }
        
        System.ComponentModel.PropertyChangedEventHandler Framework.Reactive.IBaseRaiseObject.PropertyChanged
        {
            get
            {
                return this.PropertyChanged;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public SampleSystem.Generated.DTO.MuComponent Clone()
        {
            return new SampleSystem.Generated.DTO.MuComponent(this);
        }
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        protected void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial struct RevenueDocumentAribaStatus : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.DateTime? _date;
        
        private string _description;
        
        private SampleSystem.Generated.DTO.AribaStatusType _type;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? Date
        {
            get
            {
                return this._date;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._date, newValue))
                {
                    this.RaisePropertyChanging("Date");
                    this._date = newValue;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    this.RaisePropertyChanging("Description");
                    this._description = newValue;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.AribaStatusType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                SampleSystem.Generated.DTO.AribaStatusType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    this.RaisePropertyChanging("Type");
                    this._type = newValue;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        private void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        private void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="SampleSystem")]
    public partial struct SampleStruct : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        private SampleSystem.Generated.DTO.SampleEnumForStructDependency _sampleEnum;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SampleSystem.Generated.DTO.SampleEnumForStructDependency SampleEnum
        {
            get
            {
                return this._sampleEnum;
            }
            set
            {
                SampleSystem.Generated.DTO.SampleEnumForStructDependency newValue;
                newValue = value;
                if (!object.Equals(this._sampleEnum, newValue))
                {
                    this.RaisePropertyChanging("SampleEnum");
                    this._sampleEnum = newValue;
                    this.RaisePropertyChanged("SampleEnum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        private void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        private void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum LocationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 2,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum AribaStatusType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorSending = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paying = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rejected = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendingToAriba = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SentToAriba = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnSynchronized = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum AddressType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefired = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum CompanyLegalEntityType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Affiliate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Holding = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalEntity = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum EmployeeLinkType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersonalAssistant = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain.Enums")]
    public enum Gender : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum HRDepartmentEmployeeRoleType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Head = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inspector = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistOfOperationsDepartment = 3,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum BusinessUnitStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Planned = 1,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum PossibleStartDate : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnyDay = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinYearStart = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstDayOfMonth = 1,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum FinancialProjectType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrative = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Investment = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RnD = 4,
    }
    
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum BusinessUnitOptions : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountStartAllowed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatePreviousPtsCorrection = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoNotPrintNameOnLabel = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsResourcePool = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsSpecialCommission = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgramStartAllowed = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferNeedApprove = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseExistsFinancialProject = 32,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum BusinessUnitEmployeeRoleType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryManager = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagerDelegated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SnBApprover = 4,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum EmployeePhotoType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AD = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem")]
    public enum SampleSystemSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorizationImpersonate = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitEdit = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitHrDepartmentEdit = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitHrDepartmentView = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitManagerCommissionLinkEdit = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitManagerCommissionLinkView = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitTypeEdit = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitTypeModuleOpen = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitTypeView = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitView = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyLegalEntityEdit = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyLegalEntityOpenModule = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyLegalEntityView = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryEdit = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryOpenModule = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryView = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateManagementUnitStart = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePersonalCellPhoneEdit = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePersonalCellPhoneView = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePositionEdit = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePositionOpenModule = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePositionView = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeRoleDegreeOpenModule = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeRoleDegreeView = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeRoleOpenModule = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeRoleView = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeSpecializationOpenModule = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeSpecializationView = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeView = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentAdvancedEdit = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentEdit = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentOpenModule = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentView = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationEdit = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationOpenModule = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationView = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitAndBusinessUnitLinkEdit = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitAndBusinessUnitLinkView = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitAndHRDepartmentLinkEdit = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitAndHRDepartmentLinkView = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitChangeEdit = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitChangeView = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitEdit = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitOpenModule = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitView = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemIntegration = 47,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SampleSystem.Domain")]
    public enum SampleEnumForStructDependency : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        A = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        B = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        C = 2,
    }
}
