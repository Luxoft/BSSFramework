//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkflowSampleSystem.Generated.DTO
{
    
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public enum WorkflowSampleSystemBusinessUnitSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitHrDepartmentEdit = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitHrDepartmentView = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitView = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public enum WorkflowSampleSystemHRDepartmentSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentView = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public enum WorkflowSampleSystemLocationSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentEdit = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationView = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public enum WorkflowSampleSystemManagementUnitSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitView = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public enum WorkflowSampleSystemManagementUnitFluentMappingSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagementUnitView = WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Address), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct AddressIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public AddressIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public AddressIdentityDTO(WorkflowSampleSystem.Generated.DTO.AddressSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public AddressIdentityDTO(WorkflowSampleSystem.Domain.Address domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public AddressIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Address ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToAddress(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.AnotherSqlParserTestObj), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct AnotherSqlParserTestObjIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public AnotherSqlParserTestObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public AnotherSqlParserTestObjIdentityDTO(WorkflowSampleSystem.Domain.AnotherSqlParserTestObj domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public AnotherSqlParserTestObjIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.AnotherSqlParserTestObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.AnotherSqlParserTestObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToAnotherSqlParserTestObj(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnit domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnit ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnit(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitAncestorLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitAncestorLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitAncestorLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitAncestorLinkIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitAncestorLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitAncestorLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitAncestorLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitAncestorLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitAncestorLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitEmployeeRoleIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitEmployeeRoleIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitEmployeeRoleIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitEmployeeRoleIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitEmployeeRoleIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitEmployeeRole(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitHrDepartmentView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitHrDepartmentIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitHrDepartmentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitHrDepartmentIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitHrDepartmentIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitHrDepartmentIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitHrDepartment ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitHrDepartment(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkView)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitManagerCommissionLinkEdit)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitManagerCommissionLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitManagerCommissionLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitManagerCommissionLinkIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitManagerCommissionLinkIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitManagerCommissionLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitManagerCommissionLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitToAncestorChildViewIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitToAncestorChildViewIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitToAncestorChildViewIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitToAncestorChildViewIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitToAncestorChildViewIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitToAncestorChildView(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitType), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitTypeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitTypeIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitTypeIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitType domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitTypeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitType(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitTypeLinkWithPossibleFinancialProjectType(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitTypeLinkWithPossibleParentIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeLinkWithPossibleParentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeLinkWithPossibleParentIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitTypeLinkWithPossibleParentIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitTypeLinkWithPossibleParentIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitTypeLinkWithPossibleParent(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct BusinessUnitTypeLinkWithTransferToIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitTypeLinkWithTransferToIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitTypeLinkWithTransferToIdentityDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitTypeLinkWithTransferToIdentityDTO(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitTypeLinkWithTransferToIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitTypeLinkWithTransferTo(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CompanyLegalEntityView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct CompanyLegalEntityIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CompanyLegalEntityIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CompanyLegalEntityIdentityDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public CompanyLegalEntityIdentityDTO(WorkflowSampleSystem.Domain.CompanyLegalEntity domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public CompanyLegalEntityIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.CompanyLegalEntity ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToCompanyLegalEntity(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Country), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.CountryView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct CountryIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CountryIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CountryIdentityDTO(WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public CountryIdentityDTO(WorkflowSampleSystem.Domain.Country domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public CountryIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Country ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToCountry(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Employee), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeIdentityDTO(WorkflowSampleSystem.Domain.Employee domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Employee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployee(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeAndEmployeeSpecializationLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeAndEmployeeSpecializationLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeAndEmployeeSpecializationLinkIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeAndEmployeeSpecializationLinkIdentityDTO(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeAndEmployeeSpecializationLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeAndEmployeeSpecializationLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeCellPhoneIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeCellPhoneIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeCellPhoneIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeCellPhoneIdentityDTO(WorkflowSampleSystem.Domain.EmployeeCellPhone domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeCellPhoneIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeCellPhone ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeCellPhone(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhoneBase), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeCellPhoneBaseIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeCellPhoneBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeCellPhoneBaseIdentityDTO(WorkflowSampleSystem.Domain.EmployeeCellPhoneBase domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeCellPhoneBaseIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeCellPhoneBase ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeCellPhoneBase(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeInformation), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeInformationIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeInformationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeInformationIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeInformationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeInformationIdentityDTO(WorkflowSampleSystem.Domain.EmployeeInformation domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeInformationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeInformation ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeInformation(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePersonalCellPhoneView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeePersonalCellPhoneIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeePersonalCellPhoneIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeePersonalCellPhoneIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeePersonalCellPhoneIdentityDTO(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeePersonalCellPhoneIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeePersonalCellPhone ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeePersonalCellPhone(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePhoto), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeePhotoIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeePhotoIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeePhotoIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeePhotoSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeePhotoIdentityDTO(WorkflowSampleSystem.Domain.EmployeePhoto domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeePhotoIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeePhoto ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeePhoto(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePosition), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeePositionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeePositionIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeePositionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeePositionIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeePositionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeePositionIdentityDTO(WorkflowSampleSystem.Domain.EmployeePosition domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeePositionIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeePosition ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeePosition(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeRegistrationTypeIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeRegistrationTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeRegistrationTypeIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeRegistrationTypeIdentityDTO(WorkflowSampleSystem.Domain.EmployeeRegistrationType domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeRegistrationTypeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeRegistrationType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeRegistrationType(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRole), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeRoleIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeRoleIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeRoleIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeRoleSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeRoleIdentityDTO(WorkflowSampleSystem.Domain.EmployeeRole domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeRoleIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeRole ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeRole(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeRoleDegreeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeRoleDegreeIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeRoleDegreeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeRoleDegreeIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeRoleDegreeIdentityDTO(WorkflowSampleSystem.Domain.EmployeeRoleDegree domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeRoleDegreeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeRoleDegree ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeRoleDegree(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeSpecializationView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeSpecializationIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeSpecializationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeSpecializationIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeSpecializationIdentityDTO(WorkflowSampleSystem.Domain.EmployeeSpecialization domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeSpecializationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeSpecialization ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeSpecialization(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct EmployeeToEmployeeLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeToEmployeeLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeToEmployeeLinkIdentityDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeToEmployeeLinkIdentityDTO(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeToEmployeeLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EmployeeToEmployeeLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeToEmployeeLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct Coefficient1676IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Coefficient1676IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Coefficient1676IdentityDTO(WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public Coefficient1676IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.Coefficient1676IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToCoefficient1676(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct Location1676IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Location1676IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Location1676IdentityDTO(WorkflowSampleSystem.Generated.DTO.Location1676SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public Location1676IdentityDTO(WorkflowSampleSystem.Domain.EnversBug1676.Location1676 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public Location1676IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EnversBug1676.Location1676 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToLocation1676(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct WorkingCalendar1676IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkingCalendar1676IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkingCalendar1676IdentityDTO(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public WorkingCalendar1676IdentityDTO(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public WorkingCalendar1676IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToWorkingCalendar1676(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example1), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct Example1IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Example1IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Example1IdentityDTO(WorkflowSampleSystem.Generated.DTO.Example1SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public Example1IdentityDTO(WorkflowSampleSystem.Domain.Example1 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public Example1IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Example1 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToExample1(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example2), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct Example2IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public Example2IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public Example2IdentityDTO(WorkflowSampleSystem.Generated.DTO.Example2SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public Example2IdentityDTO(WorkflowSampleSystem.Domain.Example2 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public Example2IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Example2 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToExample2(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct HRDepartmentIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentIdentityDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public HRDepartmentIdentityDTO(WorkflowSampleSystem.Domain.HRDepartment domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public HRDepartmentIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.HRDepartment ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartment(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct HRDepartmentEmployeePositionIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentEmployeePositionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentEmployeePositionIdentityDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public HRDepartmentEmployeePositionIdentityDTO(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public HRDepartmentEmployeePositionIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartmentEmployeePosition(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct HRDepartmentRoleEmployeeIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentRoleEmployeeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentRoleEmployeeIdentityDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public HRDepartmentRoleEmployeeIdentityDTO(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public HRDepartmentRoleEmployeeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartmentRoleEmployee(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequest), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct IMRequestIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IMRequestIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public IMRequestIdentityDTO(WorkflowSampleSystem.Generated.DTO.IMRequestSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public IMRequestIdentityDTO(WorkflowSampleSystem.Domain.IMRequest domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public IMRequestIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.IMRequest ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToIMRequest(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequestDetail), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct IMRequestDetailIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IMRequestDetailIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public IMRequestDetailIdentityDTO(WorkflowSampleSystem.Generated.DTO.IMRequestDetailSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public IMRequestDetailIdentityDTO(WorkflowSampleSystem.Domain.IMRequestDetail domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public IMRequestDetailIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.IMRequestDetail ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToIMRequestDetail(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Information), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct InformationIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public InformationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public InformationIdentityDTO(WorkflowSampleSystem.Generated.DTO.InformationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public InformationIdentityDTO(WorkflowSampleSystem.Domain.Information domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public InformationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Information ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToInformation(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.InsuranceDetail), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct InsuranceDetailIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public InsuranceDetailIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public InsuranceDetailIdentityDTO(WorkflowSampleSystem.Domain.InsuranceDetail domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public InsuranceDetailIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.InsuranceDetailIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.InsuranceDetail ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToInsuranceDetail(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct IntegrationVersionContainer1IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IntegrationVersionContainer1IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public IntegrationVersionContainer1IdentityDTO(WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public IntegrationVersionContainer1IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer1IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToIntegrationVersionContainer1(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct IntegrationVersionContainer2IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public IntegrationVersionContainer2IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public IntegrationVersionContainer2IdentityDTO(WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public IntegrationVersionContainer2IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.IntegrationVersionContainer2IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToIntegrationVersionContainer2(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.LegalEntityBase), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct LegalEntityBaseIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public LegalEntityBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public LegalEntityBaseIdentityDTO(WorkflowSampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public LegalEntityBaseIdentityDTO(WorkflowSampleSystem.Domain.LegalEntityBase domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public LegalEntityBaseIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.LegalEntityBase ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToLegalEntityBase(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct LocationIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public LocationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public LocationIdentityDTO(WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public LocationIdentityDTO(WorkflowSampleSystem.Domain.Location domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public LocationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Location ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToLocation(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ManagementUnitIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitIdentityDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public ManagementUnitIdentityDTO(WorkflowSampleSystem.Domain.ManagementUnit domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ManagementUnitIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnit ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnit(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAncestorLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ManagementUnitAncestorLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitAncestorLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitAncestorLinkIdentityDTO(WorkflowSampleSystem.Domain.ManagementUnitAncestorLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ManagementUnitAncestorLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ManagementUnitAncestorLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAncestorLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitAncestorLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndBusinessUnitLinkView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ManagementUnitAndBusinessUnitLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitAndBusinessUnitLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitAndBusinessUnitLinkIdentityDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public ManagementUnitAndBusinessUnitLinkIdentityDTO(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ManagementUnitAndBusinessUnitLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitAndBusinessUnitLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitAndHRDepartmentLinkView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ManagementUnitAndHRDepartmentLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitAndHRDepartmentLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitAndHRDepartmentLinkIdentityDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public ManagementUnitAndHRDepartmentLinkIdentityDTO(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ManagementUnitAndHRDepartmentLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitAndHRDepartmentLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitEdit)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ManagementUnitView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ManagementUnitFluentMappingIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitFluentMappingIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitFluentMappingIdentityDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public ManagementUnitFluentMappingIdentityDTO(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ManagementUnitFluentMappingIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitFluentMapping ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitFluentMapping(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ManagementUnitToAncestorChildViewIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ManagementUnitToAncestorChildViewIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ManagementUnitToAncestorChildViewIdentityDTO(WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ManagementUnitToAncestorChildViewIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ManagementUnitToAncestorChildViewIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitToAncestorChildView(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.NamedLock), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct NamedLockIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public NamedLockIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public NamedLockIdentityDTO(WorkflowSampleSystem.Domain.NamedLock domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public NamedLockIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.NamedLockIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.NamedLock ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToNamedLock(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Principal), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct PrincipalIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public PrincipalIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public PrincipalIdentityDTO(WorkflowSampleSystem.Generated.DTO.PrincipalSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public PrincipalIdentityDTO(WorkflowSampleSystem.Domain.Principal domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public PrincipalIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Principal ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToPrincipal(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Project), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ProjectIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ProjectIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ProjectIdentityDTO(WorkflowSampleSystem.Domain.Project domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ProjectIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ProjectIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.Project ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToProject(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.RoleRoleDegreeLink), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct RoleRoleDegreeLinkIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public RoleRoleDegreeLinkIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public RoleRoleDegreeLinkIdentityDTO(WorkflowSampleSystem.Domain.RoleRoleDegreeLink domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public RoleRoleDegreeLinkIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.RoleRoleDegreeLinkIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.RoleRoleDegreeLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToRoleRoleDegreeLink(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObj), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct SqlParserTestObjIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public SqlParserTestObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public SqlParserTestObjIdentityDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public SqlParserTestObjIdentityDTO(WorkflowSampleSystem.Domain.SqlParserTestObj domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public SqlParserTestObjIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.SqlParserTestObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToSqlParserTestObj(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct SqlParserTestObjContainerIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public SqlParserTestObjContainerIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public SqlParserTestObjContainerIdentityDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public SqlParserTestObjContainerIdentityDTO(WorkflowSampleSystem.Domain.SqlParserTestObjContainer domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public SqlParserTestObjContainerIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.SqlParserTestObjContainer ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToSqlParserTestObjContainer(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestCustomContextSecurityObjIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestCustomContextSecurityObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestCustomContextSecurityObjIdentityDTO(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestCustomContextSecurityObjIdentityDTO(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestCustomContextSecurityObjIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestCustomContextSecurityObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestCustomContextSecurityObj(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestForceAbstract.ClassA), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ClassAIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ClassAIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ClassAIdentityDTO(WorkflowSampleSystem.Domain.TestForceAbstract.ClassA domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ClassAIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ClassAIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestForceAbstract.ClassA ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToClassA(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ClassAChildIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ClassAChildIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ClassAChildIdentityDTO(WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ClassAChildIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ClassAChildIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToClassAChild(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ConcreteClassAIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ConcreteClassAIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ConcreteClassAIdentityDTO(WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ConcreteClassAIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ConcreteClassAIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToConcreteClassA(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestImmutableObj), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemEditDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestImmutableObjIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestImmutableObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestImmutableObjIdentityDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestImmutableObjIdentityDTO(WorkflowSampleSystem.Domain.TestImmutableObj domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestImmutableObjIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestImmutableObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestImmutableObj(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestObjForNested), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestObjForNestedIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestObjForNestedIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestObjForNestedIdentityDTO(WorkflowSampleSystem.Generated.DTO.TestObjForNestedSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestObjForNestedIdentityDTO(WorkflowSampleSystem.Domain.TestObjForNested domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestObjForNestedIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestObjForNested ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestObjForNested(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestObjForNestedBase), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestObjForNestedBaseIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestObjForNestedBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestObjForNestedBaseIdentityDTO(WorkflowSampleSystem.Domain.TestObjForNestedBase domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestObjForNestedBaseIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestObjForNestedBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestObjForNestedBase ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestObjForNestedBase(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [WorkflowSampleSystem.WorkflowSampleSystemViewDomainObjectAttribute(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestRootSecurityObjIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestRootSecurityObjIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestRootSecurityObjIdentityDTO(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestRootSecurityObjIdentityDTO(WorkflowSampleSystem.Domain.TestRootSecurityObj domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestRootSecurityObjIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestRootSecurityObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestRootSecurityObj(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecurityObjItem), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestSecurityObjItemIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecurityObjItemIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecurityObjItemIdentityDTO(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestSecurityObjItemIdentityDTO(WorkflowSampleSystem.Domain.TestSecurityObjItem domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestSecurityObjItemIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestSecurityObjItem ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestSecurityObjItem(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestSecuritySubObjItemIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecuritySubObjItemIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecuritySubObjItemIdentityDTO(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestSecuritySubObjItemIdentityDTO(WorkflowSampleSystem.Domain.TestSecuritySubObjItem domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestSecuritySubObjItemIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestSecuritySubObjItem ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestSecuritySubObjItem(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestSecuritySubObjItem2IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecuritySubObjItem2IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecuritySubObjItem2IdentityDTO(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestSecuritySubObjItem2IdentityDTO(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestSecuritySubObjItem2IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestSecuritySubObjItem2 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestSecuritySubObjItem2(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct TestSecuritySubObjItem3IdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TestSecuritySubObjItem3IdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TestSecuritySubObjItem3IdentityDTO(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public TestSecuritySubObjItem3IdentityDTO(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3 domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public TestSecuritySubObjItem3IdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.TestSecuritySubObjItem3 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestSecuritySubObjItem3(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ParentEntityIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ParentEntityIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ParentEntityIdentityDTO(WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ParentEntityIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ParentEntityIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToParentEntity(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public struct ChildEntityIdentityDTO : System.IEquatable<WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO EmptyField = new WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ChildEntityIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ChildEntityIdentityDTO(WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public ChildEntityIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO Empty
        {
            get
            {
                return WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO identity1, WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO) == other.GetType()) && this.Equals(((WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO)(other)));
        }
        
        public bool Equals(WorkflowSampleSystem.Generated.DTO.ChildEntityIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToChildEntity(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.DomainObjectBase), "BaseAbstractDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public abstract partial class BaseAbstractDTO
    {
        
        protected BaseAbstractDTO()
        {
        }
        
        protected BaseAbstractDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.DomainObjectBase domainObject)
        {
            mappingService.MapDomainObjectBase(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.PersistentDomainObjectBase), "BasePersistentDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public abstract partial class BasePersistentDTO : WorkflowSampleSystem.Generated.DTO.BaseAbstractDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        protected BasePersistentDTO()
        {
        }
        
        protected BasePersistentDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.PersistentDomainObjectBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapPersistentDomainObjectBase(domainObject, this);
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsNew
        {
            get
            {
                return (default(System.Guid) == this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.AuditPersistentDomainObjectBase), "BaseAuditPersistentDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public abstract partial class BaseAuditPersistentDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? CreateDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ModifyDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        protected BaseAuditPersistentDTO()
        {
        }
        
        protected BaseAuditPersistentDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.AuditPersistentDomainObjectBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAuditPersistentDomainObjectBase(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeReportParameterStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO Position;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId;
        
        public EmployeeReportParameterStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter domainObject)
        {
            mappingService.MapEmployeeReportParameter(this, domainObject);
        }
        
        public WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeReportParameter(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Address), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.AddressFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.AddressRichDTO))]
    public partial class AddressSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.AddressType AddressType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip;
        
        public AddressSimpleDTO()
        {
        }
        
        public AddressSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Address domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAddress(domainObject, this);
        }
        
        public AddressSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.AddressStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.AddressStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Address), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.AddressRichDTO))]
    public partial class AddressFullDTO : WorkflowSampleSystem.Generated.DTO.AddressSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO CountryName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LegalEntityBaseSimpleDTO LegalEntity;
        
        public AddressFullDTO()
        {
        }
        
        public AddressFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Address domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAddress(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.AddressStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.AddressStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Address), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class AddressRichDTO : WorkflowSampleSystem.Generated.DTO.AddressFullDTO
    {
        
        public AddressRichDTO()
        {
        }
        
        public AddressRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Address domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAddress(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.AddressStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.AddressStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Address), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class AddressStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Address, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Address>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.AddressType AddressType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO CountryName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip;
        
        public AddressStrictDTO()
        {
        }
        
        public AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.AddressRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.AddressFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAddress(this, source);
        }
        
        public AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.AddressRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.AddressFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.AddressSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAddress(this, source);
        }
        
        public AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.AddressFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.AddressSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAddress(this, source);
        }
        
        public AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.AddressSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAddress(this, source);
        }
        
        private AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAddress(this, source);
        }
        
        private AddressStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.AddressIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Address domainObject)
        {
            mappingService.MapAddress(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Address ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToAddress(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public BusinessUnitVisualDTO()
        {
        }
        
        public BusinessUnitVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitRichDTO))]
    public partial class BusinessUnitSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessUnitTypeName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? FirstNewBusinessStatusMonth;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPool;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpecialCommission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastBusinessUnitHasNoLinkedProjectsWarningCheckDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastNewBusinessStatusMonth;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LeastProjectStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LobName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedSendBusinessUnitHasNoLinkedProjectsWarning;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewBusinessStatusLeft;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitOptions Options;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectStartMailList;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank;
        
        public BusinessUnitSimpleDTO()
        {
        }
        
        public BusinessUnitSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public BusinessUnitSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitRichDTO))]
    public partial class BusinessUnitFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnitForRent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO Parent;
        
        public BusinessUnitFullDTO()
        {
        }
        
        public BusinessUnitFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO> BusinessUnitEmployeeRoles = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitRichDTO> Children = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> ManagementUnits = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO> ManagerCommissions = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO>();
        
        public BusinessUnitRichDTO()
        {
        }
        
        public BusinessUnitRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnit), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnit>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO> BusinessUnitEmployeeRoles = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnitForRent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? FirstNewBusinessStatusMonth;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPool;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpecialCommission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LeastProjectStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO> ManagementUnits = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO> ManagerCommissions = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewBusinessStatusLeft;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitOptions Options;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectStartMailList;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitStrictDTO()
        {
        }
        
        public BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnit(this, source);
        }
        
        private BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnit(this, source);
        }
        
        private BusinessUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnit domainObject)
        {
            mappingService.MapBusinessUnit(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnit ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnit(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnit ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnit(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO))]
    public partial class BusinessUnitEmployeeRoleSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitEmployeeRoleType Role;
        
        public BusinessUnitEmployeeRoleSimpleDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitEmployeeRole(domainObject, this);
        }
        
        public BusinessUnitEmployeeRoleSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO))]
    public partial class BusinessUnitEmployeeRoleFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Employee;
        
        public BusinessUnitEmployeeRoleFullDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitEmployeeRole(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitEmployeeRoleRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO
    {
        
        public BusinessUnitEmployeeRoleRichDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitEmployeeRole(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitEmployeeRoleStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitEmployeeRoleType Role;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitEmployeeRoleStrictDTO()
        {
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        public BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitEmployeeRole(this, source);
        }
        
        private BusinessUnitEmployeeRoleStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitEmployeeRoleIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole domainObject)
        {
            mappingService.MapBusinessUnitEmployeeRole(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitEmployeeRole(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO))]
    public partial class BusinessUnitHrDepartmentSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO>
    {
        
        public BusinessUnitHrDepartmentSimpleDTO()
        {
        }
        
        public BusinessUnitHrDepartmentSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitHrDepartment(domainObject, this);
        }
        
        public BusinessUnitHrDepartmentSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO))]
    public partial class BusinessUnitHrDepartmentFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment;
        
        public BusinessUnitHrDepartmentFullDTO()
        {
        }
        
        public BusinessUnitHrDepartmentFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitHrDepartment(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitHrDepartmentRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO
    {
        
        public BusinessUnitHrDepartmentRichDTO()
        {
        }
        
        public BusinessUnitHrDepartmentRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitHrDepartment(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitHrDepartmentStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitHrDepartmentStrictDTO()
        {
        }
        
        public BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        public BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        public BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        public BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        private BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitHrDepartment(this, source);
        }
        
        private BusinessUnitHrDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment domainObject)
        {
            mappingService.MapBusinessUnitHrDepartment(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitHrDepartment ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitHrDepartment(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitHrDepartment ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnitHrDepartment(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO))]
    public partial class BusinessUnitManagerCommissionLinkSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        public BusinessUnitManagerCommissionLinkSimpleDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitManagerCommissionLink(domainObject, this);
        }
        
        public BusinessUnitManagerCommissionLinkSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO))]
    public partial class BusinessUnitManagerCommissionLinkFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Manager;
        
        public BusinessUnitManagerCommissionLinkFullDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitManagerCommissionLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitManagerCommissionLinkRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO
    {
        
        public BusinessUnitManagerCommissionLinkRichDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitManagerCommissionLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitManagerCommissionLinkStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Manager;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitManagerCommissionLinkStrictDTO()
        {
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        public BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitManagerCommissionLink(this, source);
        }
        
        private BusinessUnitManagerCommissionLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitManagerCommissionLinkIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink domainObject)
        {
            mappingService.MapBusinessUnitManagerCommissionLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitManagerCommissionLink(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnitManagerCommissionLink(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] ArrayDays;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period[] ArrayPeriods;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.DateTime> ListDays = new System.Collections.Generic.List<System.DateTime>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Core.Period> ListPeriods = new System.Collections.Generic.List<Framework.Core.Period>();
        
        public BusinessUnitRootFilterModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel domainObject)
        {
            mappingService.MapBusinessUnitRootFilterModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitType), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public BusinessUnitTypeVisualDTO()
        {
        }
        
        public BusinessUnitTypeVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitType(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitType), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeRichDTO))]
    public partial class BusinessUnitTypeSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalStartConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalTransferConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillingProjectAreNotAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeIsSpecialCommission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToClient;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeResourcePool;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedVertical;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.PossibleStartDate? PossibleStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.PossibleStartDate? PossibleTransferDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PracticeAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjectStartAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartBOConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TransferBOConfirm;
        
        public BusinessUnitTypeSimpleDTO()
        {
        }
        
        public BusinessUnitTypeSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitType(domainObject, this);
        }
        
        public BusinessUnitTypeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitType), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeRichDTO))]
    public partial class BusinessUnitTypeFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO
    {
        
        public BusinessUnitTypeFullDTO()
        {
        }
        
        public BusinessUnitTypeFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitType(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitType), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO> PossibleFinancialProjectTypes = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO> PossibleParents = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO> TransferTo = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO>();
        
        public BusinessUnitTypeRichDTO()
        {
        }
        
        public BusinessUnitTypeRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitType(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitType), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitType, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitType>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalStartConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdditionalTransferConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillingProjectAreNotAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeIsSpecialCommission;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToClient;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeLinkedToDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeNewBusiness;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeResourcePool;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedVertical;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO> PossibleFinancialProjectTypes = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO> PossibleParents = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.PossibleStartDate? PossibleStartDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.PossibleStartDate? PossibleTransferDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PracticeAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjectStartAllowed;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartBOConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TransferBOConfirm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO> TransferTo = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeStrictDTO()
        {
        }
        
        public BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitType(this, source);
        }
        
        public BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitType(this, source);
        }
        
        public BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitType(this, source);
        }
        
        public BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitType(this, source);
        }
        
        private BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitType(this, source);
        }
        
        private BusinessUnitTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitType domainObject)
        {
            mappingService.MapBusinessUnitType(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitType(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnitType(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.FinancialProjectType FinancialProjectType;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleFinancialProjectType(domainObject, this);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleFinancialProjectType(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO
    {
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleFinancialProjectType(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.FinancialProjectType FinancialProjectType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleFinancialProjectTypeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleFinancialProjectTypeIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitTypeLinkWithPossibleFinancialProjectType(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnitTypeLinkWithPossibleFinancialProjectType(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleParentSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO>
    {
        
        public BusinessUnitTypeLinkWithPossibleParentSimpleDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleParent(domainObject, this);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO))]
    public partial class BusinessUnitTypeLinkWithPossibleParentFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO PossibleParent;
        
        public BusinessUnitTypeLinkWithPossibleParentFullDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleParent(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleParentRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO
    {
        
        public BusinessUnitTypeLinkWithPossibleParentRichDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleParent(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeLinkWithPossibleParentStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO PossibleParent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        public BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitTypeLinkWithPossibleParent(this, source);
        }
        
        private BusinessUnitTypeLinkWithPossibleParentStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithPossibleParentIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithPossibleParent(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitTypeLinkWithPossibleParent(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnitTypeLinkWithPossibleParent(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO))]
    public partial class BusinessUnitTypeLinkWithTransferToSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO>
    {
        
        public BusinessUnitTypeLinkWithTransferToSimpleDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithTransferTo(domainObject, this);
        }
        
        public BusinessUnitTypeLinkWithTransferToSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO))]
    public partial class BusinessUnitTypeLinkWithTransferToFullDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeSimpleDTO TransferTo;
        
        public BusinessUnitTypeLinkWithTransferToFullDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithTransferTo(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeLinkWithTransferToRichDTO : WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO
    {
        
        public BusinessUnitTypeLinkWithTransferToRichDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithTransferTo(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitTypeLinkWithTransferToStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO BusinessUnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeIdentityDTO TransferTo;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO()
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        public BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnitTypeLinkWithTransferTo(this, source);
        }
        
        private BusinessUnitTypeLinkWithTransferToStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.BusinessUnitTypeLinkWithTransferToIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo domainObject)
        {
            mappingService.MapBusinessUnitTypeLinkWithTransferTo(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitTypeLinkWithTransferTo(this);
        }
        
        public WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnitTypeLinkWithTransferTo(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class CompanyLegalEntityVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public CompanyLegalEntityVisualDTO()
        {
        }
        
        public CompanyLegalEntityVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCompanyLegalEntity(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityRichDTO))]
    public partial class CompanyLegalEntitySimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.RevenueDocumentAribaStatus AribaStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEnglish;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.CompanyLegalEntityType Type;
        
        public CompanyLegalEntitySimpleDTO()
        {
        }
        
        public CompanyLegalEntitySimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCompanyLegalEntity(domainObject, this);
        }
        
        public CompanyLegalEntitySimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityRichDTO))]
    public partial class CompanyLegalEntityFullDTO : WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestObjForNestedSimpleDTO BaseObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestObjForNestedSimpleDTO CurrentObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO Parent;
        
        public CompanyLegalEntityFullDTO()
        {
        }
        
        public CompanyLegalEntityFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCompanyLegalEntity(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class CompanyLegalEntityRichDTO : WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.AddressRichDTO> Addresses = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.AddressRichDTO>();
        
        public CompanyLegalEntityRichDTO()
        {
        }
        
        public CompanyLegalEntityRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCompanyLegalEntity(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class CompanyLegalEntityStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.AddressStrictDTO> Addresses = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.AddressStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO BaseObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO CurrentObj;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEnglish;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.CompanyLegalEntityType Type;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CompanyLegalEntityStrictDTO()
        {
        }
        
        public CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCompanyLegalEntity(this, source);
        }
        
        public CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCompanyLegalEntity(this, source);
        }
        
        public CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCompanyLegalEntity(this, source);
        }
        
        public CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCompanyLegalEntity(this, source);
        }
        
        private CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCompanyLegalEntity(this, source);
        }
        
        private CompanyLegalEntityStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.CompanyLegalEntity domainObject)
        {
            mappingService.MapCompanyLegalEntity(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.CompanyLegalEntity ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToCompanyLegalEntity(this);
        }
        
        public WorkflowSampleSystem.Domain.CompanyLegalEntity ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToCompanyLegalEntity(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Country), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class CountryVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public CountryVisualDTO()
        {
        }
        
        public CountryVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Country domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCountry(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Country), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.CountryFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.CountryRichDTO))]
    public partial class CountrySimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        public CountrySimpleDTO()
        {
        }
        
        public CountrySimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Country domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCountry(domainObject, this);
        }
        
        public CountrySimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.CountryStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.CountryStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Country), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.CountryRichDTO))]
    public partial class CountryFullDTO : WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO
    {
        
        public CountryFullDTO()
        {
        }
        
        public CountryFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Country domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCountry(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.CountryStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.CountryStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Country), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class CountryRichDTO : WorkflowSampleSystem.Generated.DTO.CountryFullDTO
    {
        
        public CountryRichDTO()
        {
        }
        
        public CountryRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Country domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapCountry(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.CountryStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.CountryStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Country), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class CountryStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Country, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Country>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CountryStrictDTO()
        {
        }
        
        public CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.CountryRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.CountryFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCountry(this, source);
        }
        
        public CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.CountryRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.CountryFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCountry(this, source);
        }
        
        public CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.CountryFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCountry(this, source);
        }
        
        public CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCountry(this, source);
        }
        
        private CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCountry(this, source);
        }
        
        private CountryStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Country domainObject)
        {
            mappingService.MapCountry(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Country ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToCountry(this);
        }
        
        public WorkflowSampleSystem.Domain.Country ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToCountry(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Employee), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRichDTO))]
    public partial class EmployeeSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BirthDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBePPM;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period? CoreBusinessUnitPeriod;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? DismissDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period EducationDuration = Framework.Core.Period.Eternity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Enums.Gender Gender;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? HireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interphone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCandidate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landlinephone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastActionDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? LocationCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAccountName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Inline.FioShort NameEng;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Inline.Fio NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Inline.Fio NameRussian;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NonValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> PersonalCellPhone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? Pin;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PlannedHireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period WorkPeriod = Framework.Core.Period.Eternity;
        
        public EmployeeSimpleDTO()
        {
        }
        
        public EmployeeSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Employee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployee(domainObject, this);
        }
        
        public EmployeeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Employee), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRichDTO))]
    public partial class EmployeeFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO CoreBusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO Location;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO PersonalAssistant;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeePositionSimpleDTO> Position;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Ppm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO RegistrationType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleSimpleDTO Role;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO RoleDegree;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO VacationApprover;
        
        public EmployeeFullDTO()
        {
        }
        
        public EmployeeFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Employee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployee(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Employee), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO> CellPhones = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO> EmployeeToEmployeeLinks = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO>> PersonalCellPhones;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO> Specializations = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO>();
        
        public EmployeeRichDTO()
        {
        }
        
        public EmployeeRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Employee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployee(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Employee), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Employee, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Employee>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BirthDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBePPM;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO> CellPhones = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period EducationDuration;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO> EmployeeToEmployeeLinks = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Enums.Gender Gender;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interphone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landlinephone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastActionDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Inline.FioShort NameEng;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Inline.Fio NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.Inline.Fio NameRussian;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NonValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>> PersonalCellPhones = Framework.Core.Maybe<System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? Pin;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PlannedHireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO> Position = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Ppm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO RegistrationType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Role;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO RoleDegree;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO> Specializations = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO VacationApprover;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period WorkPeriod;
        
        public EmployeeStrictDTO()
        {
        }
        
        public EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployee(this, source);
        }
        
        private EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployee(this, source);
        }
        
        private EmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Employee domainObject)
        {
            mappingService.MapEmployee(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Employee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployee(this);
        }
        
        public WorkflowSampleSystem.Domain.Employee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToEmployee(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Employee), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Employee, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Employee>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<int> Age = Framework.Core.Maybe<int>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> BirthDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<bool> CanBePPM = Framework.Core.Maybe<bool>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>> CellPhones = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<Framework.Core.Period> EducationDuration = Framework.Core.Maybe<Framework.Core.Period>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Email = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>> EmployeeToEmployeeLinks = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<long> ExternalId = Framework.Core.Maybe<long>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Domain.Enums.Gender> Gender = Framework.Core.Maybe<WorkflowSampleSystem.Domain.Enums.Gender>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Interphone = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Landlinephone = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> LastActionDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Domain.Inline.FioShort> NameEng = Framework.Core.Maybe<WorkflowSampleSystem.Domain.Inline.FioShort>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Domain.Inline.Fio> NameNative = Framework.Core.Maybe<WorkflowSampleSystem.Domain.Inline.Fio>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Domain.Inline.Fio> NameRussian = Framework.Core.Maybe<WorkflowSampleSystem.Domain.Inline.Fio>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime> NonValidateVirtualProp = Framework.Core.Maybe<System.DateTime>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>> PersonalCellPhones = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<int?> Pin = Framework.Core.Maybe<System.Nullable<int>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> PlannedHireDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO> Position = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO> Ppm = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO> RegistrationType = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO> Role = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO> RoleDegree = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>> Specializations = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO> VacationApprover = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime> ValidateVirtualProp = Framework.Core.Maybe<System.DateTime>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<Framework.Core.Period> WorkPeriod = Framework.Core.Maybe<Framework.Core.Period>.Nothing;
        
        public EmployeeUpdateDTO()
        {
        }
        
        public EmployeeUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployee(this, currentSource);
        }
        
        public EmployeeUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployee(this, currentSource, baseSource);
        }
        
        public EmployeeUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeStrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Age.HasValue && !this.BirthDate.HasValue && !this.CanBePPM.HasValue && (this.CellPhones.Count == 0) && !this.EducationDuration.HasValue && !this.Email.HasValue && (this.EmployeeToEmployeeLinks.Count == 0) && !this.ExternalId.HasValue && !this.Gender.HasValue && !this.Interphone.HasValue && !this.Landlinephone.HasValue && !this.LastActionDate.HasValue && !this.Login.HasValue && !this.NameEng.HasValue && !this.NameNative.HasValue && !this.NameRussian.HasValue && !this.NonValidateVirtualProp.HasValue && (this.PersonalCellPhones.Count == 0) && !this.Pin.HasValue && !this.PlannedHireDate.HasValue && !this.Position.HasValue && !this.Ppm.HasValue && !this.RegistrationType.HasValue && !this.Role.HasValue && !this.RoleDegree.HasValue && (this.Specializations.Count == 0) && !this.VacationApprover.HasValue && !this.ValidateVirtualProp.HasValue && !this.WorkPeriod.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
            Framework.Persistent.UpdateExtensions.Compress<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>(this.CellPhones);
            Framework.Persistent.UpdateExtensions.Compress<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>(this.EmployeeToEmployeeLinks);
            Framework.Persistent.UpdateExtensions.Compress<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>(this.PersonalCellPhones);
            Framework.Persistent.UpdateExtensions.Compress<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkUpdateDTO, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>(this.Specializations);
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Employee domainObject)
        {
            mappingService.MapEmployee(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Employee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployee(this);
        }
        
        public WorkflowSampleSystem.Domain.Employee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToEmployee(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO))]
    public partial class EmployeeAndEmployeeSpecializationLinkSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>
    {
        
        public EmployeeAndEmployeeSpecializationLinkSimpleDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeAndEmployeeSpecializationLink(domainObject, this);
        }
        
        public EmployeeAndEmployeeSpecializationLinkSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO))]
    public partial class EmployeeAndEmployeeSpecializationLinkFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO Specialization;
        
        public EmployeeAndEmployeeSpecializationLinkFullDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeAndEmployeeSpecializationLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeAndEmployeeSpecializationLinkRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO
    {
        
        public EmployeeAndEmployeeSpecializationLinkRichDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeAndEmployeeSpecializationLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeAndEmployeeSpecializationLinkStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Specialization;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        public EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeeAndEmployeeSpecializationLink(this, source);
        }
        
        private EmployeeAndEmployeeSpecializationLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink domainObject)
        {
            mappingService.MapEmployeeAndEmployeeSpecializationLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeAndEmployeeSpecializationLink(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeAndEmployeeSpecializationLinkUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO> Employee = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO> Specialization = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO()
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeAndEmployeeSpecializationLink(this, currentSource);
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeAndEmployeeSpecializationLink(this, currentSource, baseSource);
        }
        
        public EmployeeAndEmployeeSpecializationLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkStrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeAndEmployeeSpecializationLinkIdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Employee.HasValue && !this.Specialization.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink domainObject)
        {
            mappingService.MapEmployeeAndEmployeeSpecializationLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeAndEmployeeSpecializationLink(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO))]
    public partial class EmployeeCellPhoneSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number;
        
        public EmployeeCellPhoneSimpleDTO()
        {
        }
        
        public EmployeeCellPhoneSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeCellPhone(domainObject, this);
        }
        
        public EmployeeCellPhoneSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO))]
    public partial class EmployeeCellPhoneFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Employee;
        
        public EmployeeCellPhoneFullDTO()
        {
        }
        
        public EmployeeCellPhoneFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeCellPhone(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeCellPhoneRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO
    {
        
        public EmployeeCellPhoneRichDTO()
        {
        }
        
        public EmployeeCellPhoneRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeCellPhone(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeCellPhoneStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeCellPhoneStrictDTO()
        {
        }
        
        public EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeCellPhone(this, source);
        }
        
        public EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeCellPhone(this, source);
        }
        
        public EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeCellPhone(this, source);
        }
        
        public EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeeCellPhone(this, source);
        }
        
        private EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeeCellPhone(this, source);
        }
        
        private EmployeeCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone domainObject)
        {
            mappingService.MapEmployeeCellPhone(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeCellPhone ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeCellPhone(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeCellPhoneUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CityCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CountryCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Number = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeCellPhoneUpdateDTO()
        {
        }
        
        public EmployeeCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeCellPhone(this, currentSource);
        }
        
        public EmployeeCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeCellPhone(this, currentSource, baseSource);
        }
        
        public EmployeeCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneStrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeCellPhoneIdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.CityCode.HasValue && !this.CountryCode.HasValue && !this.Number.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeCellPhone domainObject)
        {
            mappingService.MapEmployeeCellPhone(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeCellPhone ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeCellPhone(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeComplexChangeModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeComplexChangeModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeComplexChangeModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeComplexChangeModel>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO PrimaryChangingObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO> SecondaryChangingObjects = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>();
        
        public EmployeeComplexChangeModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeComplexChangeModel domainObject)
        {
            mappingService.MapEmployeeComplexChangeModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeComplexChangeModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeComplexChangeModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailChangeModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO))]
    public partial class EmployeeEmailChangeModelSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        public EmployeeEmailChangeModelSimpleDTO()
        {
        }
        
        public EmployeeEmailChangeModelSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailChangeModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeEmailChangeModel(domainObject, this);
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailChangeModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO))]
    public partial class EmployeeEmailChangeModelFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO ChangingObject;
        
        public EmployeeEmailChangeModelFullDTO()
        {
        }
        
        public EmployeeEmailChangeModelFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailChangeModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeEmailChangeModel(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailChangeModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeEmailChangeModelRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO
    {
        
        public EmployeeEmailChangeModelRichDTO()
        {
        }
        
        public EmployeeEmailChangeModelRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailChangeModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeEmailChangeModel(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailChangeModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeEmailChangeModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeEmailChangeModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeEmailChangeModel>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO ChangingObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        public EmployeeEmailChangeModelStrictDTO()
        {
        }
        
        public EmployeeEmailChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeEmailChangeModel(this, source);
        }
        
        public EmployeeEmailChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeEmailChangeModel(this, source);
        }
        
        public EmployeeEmailChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeEmailChangeModel(this, source);
        }
        
        public EmployeeEmailChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailChangeModelSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailChangeModel domainObject)
        {
            mappingService.MapEmployeeEmailChangeModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeEmailChangeModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeEmailChangeModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO))]
    public partial class EmployeeEmailMassChangeModelSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        public EmployeeEmailMassChangeModelSimpleDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeEmailMassChangeModel(domainObject, this);
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO))]
    public partial class EmployeeEmailMassChangeModelFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO
    {
        
        public EmployeeEmailMassChangeModelFullDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeEmailMassChangeModel(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeEmailMassChangeModelRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO> ChangingObjects = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO>();
        
        public EmployeeEmailMassChangeModelRichDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeEmailMassChangeModel(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeEmailMassChangeModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO> ChangingObjects = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        public EmployeeEmailMassChangeModelStrictDTO()
        {
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeEmailMassChangeModel(this, source);
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeEmailMassChangeModel(this, source);
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeEmailMassChangeModel(this, source);
        }
        
        public EmployeeEmailMassChangeModelStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeEmailMassChangeModelSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel domainObject)
        {
            mappingService.MapEmployeeEmailMassChangeModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeEmailMassChangeModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeInformation), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeInformationVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeInformationVisualDTO()
        {
        }
        
        public EmployeeInformationVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeInformation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeInformation(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeInformation), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeInformationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeInformationRichDTO))]
    public partial class EmployeeInformationSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalEmail;
        
        public EmployeeInformationSimpleDTO()
        {
        }
        
        public EmployeeInformationSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeInformation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeInformation(domainObject, this);
        }
        
        public EmployeeInformationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeInformationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeInformation), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeInformationRichDTO))]
    public partial class EmployeeInformationFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeInformationSimpleDTO
    {
        
        public EmployeeInformationFullDTO()
        {
        }
        
        public EmployeeInformationFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeInformation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeInformation(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeInformation), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeInformationRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeInformationFullDTO
    {
        
        public EmployeeInformationRichDTO()
        {
        }
        
        public EmployeeInformationRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeInformation domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeInformation(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO))]
    public partial class EmployeePersonalCellPhoneSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number;
        
        public EmployeePersonalCellPhoneSimpleDTO()
        {
        }
        
        public EmployeePersonalCellPhoneSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePersonalCellPhone(domainObject, this);
        }
        
        public EmployeePersonalCellPhoneSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO))]
    public partial class EmployeePersonalCellPhoneFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Employee;
        
        public EmployeePersonalCellPhoneFullDTO()
        {
        }
        
        public EmployeePersonalCellPhoneFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePersonalCellPhone(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeePersonalCellPhoneRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO
    {
        
        public EmployeePersonalCellPhoneRichDTO()
        {
        }
        
        public EmployeePersonalCellPhoneRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePersonalCellPhone(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeePersonalCellPhoneStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeePersonalCellPhoneStrictDTO()
        {
        }
        
        public EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        public EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        public EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        public EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        private EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeePersonalCellPhone(this, source);
        }
        
        private EmployeePersonalCellPhoneStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone domainObject)
        {
            mappingService.MapEmployeePersonalCellPhone(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeePersonalCellPhone ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeePersonalCellPhone(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeePersonalCellPhoneUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CityCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> CountryCode = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Number = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeePersonalCellPhoneUpdateDTO()
        {
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeePersonalCellPhone(this, currentSource);
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeePersonalCellPhone(this, currentSource, baseSource);
        }
        
        public EmployeePersonalCellPhoneUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneStrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeePersonalCellPhoneIdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.CityCode.HasValue && !this.CountryCode.HasValue && !this.Number.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone domainObject)
        {
            mappingService.MapEmployeePersonalCellPhone(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeePersonalCellPhone ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeePersonalCellPhone(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePhoto), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePhotoFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePhotoRichDTO))]
    public partial class EmployeePhotoSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.EmployeePhotoType Type;
        
        public EmployeePhotoSimpleDTO()
        {
        }
        
        public EmployeePhotoSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePhoto domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePhoto(domainObject, this);
        }
        
        public EmployeePhotoSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeePhotoIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePhoto), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePhotoRichDTO))]
    public partial class EmployeePhotoFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeePhotoSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Employee;
        
        public EmployeePhotoFullDTO()
        {
        }
        
        public EmployeePhotoFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePhoto domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePhoto(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePhoto), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeePhotoRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeePhotoFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data;
        
        public EmployeePhotoRichDTO()
        {
        }
        
        public EmployeePhotoRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePhoto domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePhoto(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePosition), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeePositionVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeePositionVisualDTO()
        {
        }
        
        public EmployeePositionVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePosition(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePosition), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePositionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePositionRichDTO))]
    public partial class EmployeePositionSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeePositionSimpleDTO()
        {
        }
        
        public EmployeePositionSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePosition(domainObject, this);
        }
        
        public EmployeePositionSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePosition), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeePositionRichDTO))]
    public partial class EmployeePositionFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeePositionSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO Location;
        
        public EmployeePositionFullDTO()
        {
        }
        
        public EmployeePositionFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePosition(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeePosition), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeePositionRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeePositionFullDTO
    {
        
        public EmployeePositionRichDTO()
        {
        }
        
        public EmployeePositionRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeePosition(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRegistrationTypeVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeRegistrationTypeVisualDTO()
        {
        }
        
        public EmployeeRegistrationTypeVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRegistrationType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRegistrationType(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO))]
    public partial class EmployeeRegistrationTypeSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeRegistrationTypeSimpleDTO()
        {
        }
        
        public EmployeeRegistrationTypeSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRegistrationType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRegistrationType(domainObject, this);
        }
        
        public EmployeeRegistrationTypeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeRichDTO))]
    public partial class EmployeeRegistrationTypeFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeSimpleDTO
    {
        
        public EmployeeRegistrationTypeFullDTO()
        {
        }
        
        public EmployeeRegistrationTypeFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRegistrationType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRegistrationType(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRegistrationTypeRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeRegistrationTypeFullDTO
    {
        
        public EmployeeRegistrationTypeRichDTO()
        {
        }
        
        public EmployeeRegistrationTypeRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRegistrationType domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRegistrationType(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRole), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRoleVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeRoleVisualDTO()
        {
        }
        
        public EmployeeRoleVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRole(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRole), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleRichDTO))]
    public partial class EmployeeRoleSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeRoleSimpleDTO()
        {
        }
        
        public EmployeeRoleSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRole(domainObject, this);
        }
        
        public EmployeeRoleSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeRoleIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRole), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleRichDTO))]
    public partial class EmployeeRoleFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeRoleSimpleDTO
    {
        
        public EmployeeRoleFullDTO()
        {
        }
        
        public EmployeeRoleFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRole(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRole), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRoleRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeRoleFullDTO
    {
        
        public EmployeeRoleRichDTO()
        {
        }
        
        public EmployeeRoleRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRole domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRole(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRoleDegreeVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeRoleDegreeVisualDTO()
        {
        }
        
        public EmployeeRoleDegreeVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRoleDegree domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRoleDegree(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO))]
    public partial class EmployeeRoleDegreeSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeRoleDegreeSimpleDTO()
        {
        }
        
        public EmployeeRoleDegreeSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRoleDegree domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRoleDegree(domainObject, this);
        }
        
        public EmployeeRoleDegreeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeRichDTO))]
    public partial class EmployeeRoleDegreeFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeSimpleDTO
    {
        
        public EmployeeRoleDegreeFullDTO()
        {
        }
        
        public EmployeeRoleDegreeFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRoleDegree domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRoleDegree(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRoleDegreeRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeRoleDegreeFullDTO
    {
        
        public EmployeeRoleDegreeRichDTO()
        {
        }
        
        public EmployeeRoleDegreeRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRoleDegree domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeRoleDegree(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeRootFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeRootFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeRootFilterModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeRootFilterModel>
    {
        
        public EmployeeRootFilterModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeRootFilterModel domainObject)
        {
            mappingService.MapEmployeeRootFilterModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeRootFilterModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeRootFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeSpecializationVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeSpecializationVisualDTO()
        {
        }
        
        public EmployeeSpecializationVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeSpecialization domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeSpecialization(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationRichDTO))]
    public partial class EmployeeSpecializationSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public EmployeeSpecializationSimpleDTO()
        {
        }
        
        public EmployeeSpecializationSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeSpecialization domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeSpecialization(domainObject, this);
        }
        
        public EmployeeSpecializationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationRichDTO))]
    public partial class EmployeeSpecializationFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationSimpleDTO
    {
        
        public EmployeeSpecializationFullDTO()
        {
        }
        
        public EmployeeSpecializationFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeSpecialization domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeSpecialization(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeSpecializationRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeSpecializationFullDTO
    {
        
        public EmployeeSpecializationRichDTO()
        {
        }
        
        public EmployeeSpecializationRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeSpecialization domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeSpecialization(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO))]
    public partial class EmployeeToEmployeeLinkSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.EmployeeLinkType EmployeeLinkType;
        
        public EmployeeToEmployeeLinkSimpleDTO()
        {
        }
        
        public EmployeeToEmployeeLinkSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeToEmployeeLink(domainObject, this);
        }
        
        public EmployeeToEmployeeLinkSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO))]
    public partial class EmployeeToEmployeeLinkFullDTO : WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO LinkedEmployee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Owner;
        
        public EmployeeToEmployeeLinkFullDTO()
        {
        }
        
        public EmployeeToEmployeeLinkFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeToEmployeeLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeToEmployeeLinkRichDTO : WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO
    {
        
        public EmployeeToEmployeeLinkRichDTO()
        {
        }
        
        public EmployeeToEmployeeLinkRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployeeToEmployeeLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeToEmployeeLinkStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.EmployeeLinkType EmployeeLinkType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO LinkedEmployee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeToEmployeeLinkStrictDTO()
        {
        }
        
        public EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        public EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        public EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        public EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        private EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployeeToEmployeeLink(this, source);
        }
        
        private EmployeeToEmployeeLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink domainObject)
        {
            mappingService.MapEmployeeToEmployeeLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeToEmployeeLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeToEmployeeLink(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeToEmployeeLinkUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Domain.EmployeeLinkType> EmployeeLinkType = Framework.Core.Maybe<WorkflowSampleSystem.Domain.EmployeeLinkType>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO> LinkedEmployee = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public EmployeeToEmployeeLinkUpdateDTO()
        {
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeToEmployeeLink(this, currentSource);
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployeeToEmployeeLink(this, currentSource, baseSource);
        }
        
        public EmployeeToEmployeeLinkUpdateDTO(WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkStrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.EmployeeToEmployeeLinkIdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.EmployeeLinkType.HasValue && !this.LinkedEmployee.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink domainObject)
        {
            mappingService.MapEmployeeToEmployeeLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.EmployeeToEmployeeLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeToEmployeeLink(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Location1676VisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public Location1676VisualDTO()
        {
        }
        
        public Location1676VisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.Location1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation1676(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Location1676FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Location1676RichDTO))]
    public partial class Location1676SimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public Location1676SimpleDTO()
        {
        }
        
        public Location1676SimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.Location1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation1676(domainObject, this);
        }
        
        public Location1676SimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Location1676IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Location1676RichDTO))]
    public partial class Location1676FullDTO : WorkflowSampleSystem.Generated.DTO.Location1676SimpleDTO
    {
        
        public Location1676FullDTO()
        {
        }
        
        public Location1676FullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.Location1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation1676(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Location1676RichDTO : WorkflowSampleSystem.Generated.DTO.Location1676FullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676RichDTO> Calendar = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676RichDTO>();
        
        public Location1676RichDTO()
        {
        }
        
        public Location1676RichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.Location1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation1676(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class WorkingCalendar1676VisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public WorkingCalendar1676VisualDTO()
        {
        }
        
        public WorkingCalendar1676VisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapWorkingCalendar1676(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676RichDTO))]
    public partial class WorkingCalendar1676SimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public WorkingCalendar1676SimpleDTO()
        {
        }
        
        public WorkingCalendar1676SimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapWorkingCalendar1676(domainObject, this);
        }
        
        public WorkingCalendar1676SimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676RichDTO))]
    public partial class WorkingCalendar1676FullDTO : WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676SimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.Location1676SimpleDTO Location;
        
        public WorkingCalendar1676FullDTO()
        {
        }
        
        public WorkingCalendar1676FullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapWorkingCalendar1676(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class WorkingCalendar1676RichDTO : WorkflowSampleSystem.Generated.DTO.WorkingCalendar1676FullDTO
    {
        
        public WorkingCalendar1676RichDTO()
        {
        }
        
        public WorkingCalendar1676RichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapWorkingCalendar1676(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example1), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Example1FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Example1RichDTO))]
    public partial class Example1SimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field3;
        
        public Example1SimpleDTO()
        {
        }
        
        public Example1SimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example1 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExample1(domainObject, this);
        }
        
        public Example1SimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.Example1StrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.Example1StrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example1), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Example1RichDTO))]
    public partial class Example1FullDTO : WorkflowSampleSystem.Generated.DTO.Example1SimpleDTO
    {
        
        public Example1FullDTO()
        {
        }
        
        public Example1FullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example1 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExample1(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.Example1StrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.Example1StrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example1), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Example1RichDTO : WorkflowSampleSystem.Generated.DTO.Example1FullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.Example2RichDTO> Items2 = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.Example2RichDTO>();
        
        public Example1RichDTO()
        {
        }
        
        public Example1RichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example1 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExample1(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.Example1StrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.Example1StrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example1), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Example1StrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example1, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example1>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field3 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.Example2StrictDTO> Items2 = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.Example2StrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example1StrictDTO()
        {
        }
        
        public Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.Example1RichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.Example1FullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExample1(this, source);
        }
        
        public Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.Example1RichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.Example1FullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.Example1SimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExample1(this, source);
        }
        
        public Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.Example1FullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.Example1SimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExample1(this, source);
        }
        
        public Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.Example1SimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForExample1(this, source);
        }
        
        private Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForExample1(this, source);
        }
        
        private Example1StrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example1 domainObject)
        {
            mappingService.MapExample1(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Example1 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToExample1(this);
        }
        
        public WorkflowSampleSystem.Domain.Example1 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToExample1(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example1), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Example1UpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example1, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example1>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field1 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field2 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field3 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.Example2UpdateDTO, WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>> Items2 = new System.Collections.Generic.List<Framework.Persistent.UpdateItemData<WorkflowSampleSystem.Generated.DTO.Example2UpdateDTO, WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example1UpdateDTO()
        {
        }
        
        public Example1UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example1StrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample1(this, currentSource);
        }
        
        public Example1UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example1StrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example1UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example1StrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.Example1StrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample1(this, currentSource, baseSource);
        }
        
        public Example1UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example1StrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.Example1StrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Example1IdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Field1.HasValue && !this.Field2.HasValue && !this.Field3.HasValue && (this.Items2.Count == 0);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
            Framework.Persistent.UpdateExtensions.Compress<WorkflowSampleSystem.Generated.DTO.Example2UpdateDTO, WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>(this.Items2);
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example1 domainObject)
        {
            mappingService.MapExample1(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Example1 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToExample1(this);
        }
        
        public WorkflowSampleSystem.Domain.Example1 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToExample1(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example2), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Example2FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Example2RichDTO))]
    public partial class Example2SimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2;
        
        public Example2SimpleDTO()
        {
        }
        
        public Example2SimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExample2(domainObject, this);
        }
        
        public Example2SimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.Example2StrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.Example2StrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example2), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.Example2RichDTO))]
    public partial class Example2FullDTO : WorkflowSampleSystem.Generated.DTO.Example2SimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.Example1SimpleDTO Parent;
        
        public Example2FullDTO()
        {
        }
        
        public Example2FullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExample2(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.Example2StrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.Example2StrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example2), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Example2RichDTO : WorkflowSampleSystem.Generated.DTO.Example2FullDTO
    {
        
        public Example2RichDTO()
        {
        }
        
        public Example2RichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapExample2(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.Example2StrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.Example2StrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example2), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Example2StrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example2, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example2>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field1;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Field2;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example2StrictDTO()
        {
        }
        
        public Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.Example2RichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.Example2FullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExample2(this, source);
        }
        
        public Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.Example2RichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.Example2FullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.Example2SimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExample2(this, source);
        }
        
        public Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.Example2FullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.Example2SimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExample2(this, source);
        }
        
        public Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.Example2SimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForExample2(this, source);
        }
        
        private Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForExample2(this, source);
        }
        
        private Example2StrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example2 domainObject)
        {
            mappingService.MapExample2(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Example2 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToExample2(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Example2), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class Example2UpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example2, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Example2>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field1 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.Guid> Field2 = Framework.Core.Maybe<System.Guid>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public Example2UpdateDTO()
        {
        }
        
        public Example2UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example2StrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample2(this, currentSource);
        }
        
        public Example2UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example2StrictDTO currentSource) : 
                this(currentSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public Example2UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example2StrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.Example2StrictDTO baseSource, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapExample2(this, currentSource, baseSource);
        }
        
        public Example2UpdateDTO(WorkflowSampleSystem.Generated.DTO.Example2StrictDTO currentSource, WorkflowSampleSystem.Generated.DTO.Example2StrictDTO baseSource) : 
                this(currentSource, baseSource, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.Example2IdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Field1.HasValue && !this.Field2.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Example2 domainObject)
        {
            mappingService.MapExample2(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Example2 ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToExample2(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public HRDepartmentVisualDTO()
        {
        }
        
        public HRDepartmentVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentRichDTO))]
    public partial class HRDepartmentSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyLegalEntityName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        public HRDepartmentSimpleDTO()
        {
        }
        
        public HRDepartmentSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public HRDepartmentSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentRichDTO))]
    public partial class HRDepartmentFullDTO : WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO ApprovedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntitySimpleDTO> CompanyLegalEntity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Head;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO Location;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO Parent;
        
        public HRDepartmentFullDTO()
        {
        }
        
        public HRDepartmentFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentRichDTO : WorkflowSampleSystem.Generated.DTO.HRDepartmentFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO> BusinessUnitHrDepartments = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentRichDTO> Children = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO> EmployeePositions = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO> HrDepartmentRoleEmployees = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> ManagementUnits = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>();
        
        public HRDepartmentRichDTO()
        {
        }
        
        public HRDepartmentRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartment), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.HRDepartment, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.HRDepartment>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO ApprovedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO> BusinessUnitHrDepartments = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.BusinessUnitHrDepartmentStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO> CompanyLegalEntity = Framework.Core.Maybe<WorkflowSampleSystem.Generated.DTO.CompanyLegalEntityIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO> EmployeePositions = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Head;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO> HrDepartmentRoleEmployees = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO> ManagementUnits = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentStrictDTO()
        {
        }
        
        public HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.HRDepartmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartment(this, source);
        }
        
        private HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartment(this, source);
        }
        
        private HRDepartmentStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartment domainObject)
        {
            mappingService.MapHRDepartment(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.HRDepartment ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartment(this);
        }
        
        public WorkflowSampleSystem.Domain.HRDepartment ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToHRDepartment(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO))]
    public partial class HRDepartmentEmployeePositionSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO>
    {
        
        public HRDepartmentEmployeePositionSimpleDTO()
        {
        }
        
        public HRDepartmentEmployeePositionSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartmentEmployeePosition(domainObject, this);
        }
        
        public HRDepartmentEmployeePositionSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO))]
    public partial class HRDepartmentEmployeePositionFullDTO : WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeePositionSimpleDTO EmployeePosition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO HrDepartment;
        
        public HRDepartmentEmployeePositionFullDTO()
        {
        }
        
        public HRDepartmentEmployeePositionFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartmentEmployeePosition(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentEmployeePositionRichDTO : WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO
    {
        
        public HRDepartmentEmployeePositionRichDTO()
        {
        }
        
        public HRDepartmentEmployeePositionRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartmentEmployeePosition(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentEmployeePositionStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeePositionIdentityDTO EmployeePosition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO HrDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentEmployeePositionStrictDTO()
        {
        }
        
        public HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        public HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        public HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        public HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        private HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartmentEmployeePosition(this, source);
        }
        
        private HRDepartmentEmployeePositionStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentEmployeePositionIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition domainObject)
        {
            mappingService.MapHRDepartmentEmployeePosition(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartmentEmployeePosition(this);
        }
        
        public WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToHRDepartmentEmployeePosition(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO))]
    public partial class HRDepartmentRoleEmployeeSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType HRDepartmentEmployeeRoleType;
        
        public HRDepartmentRoleEmployeeSimpleDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartmentRoleEmployee(domainObject, this);
        }
        
        public HRDepartmentRoleEmployeeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO))]
    public partial class HRDepartmentRoleEmployeeFullDTO : WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment;
        
        public HRDepartmentRoleEmployeeFullDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartmentRoleEmployee(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentRoleEmployeeRichDTO : WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO
    {
        
        public HRDepartmentRoleEmployeeRichDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartmentRoleEmployee(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HRDepartmentRoleEmployeeStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO Employee;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType HRDepartmentEmployeeRoleType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentRoleEmployeeStrictDTO()
        {
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        public HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartmentRoleEmployee(this, source);
        }
        
        private HRDepartmentRoleEmployeeStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.HRDepartmentRoleEmployeeIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee domainObject)
        {
            mappingService.MapHRDepartmentRoleEmployee(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartmentRoleEmployee(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequest), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class IMRequestVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public IMRequestVisualDTO()
        {
        }
        
        public IMRequestVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequest domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequest(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequest), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.IMRequestFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.IMRequestRichDTO))]
    public partial class IMRequestSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public IMRequestSimpleDTO()
        {
        }
        
        public IMRequestSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequest domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequest(domainObject, this);
        }
        
        public IMRequestSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.IMRequestIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequest), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.IMRequestRichDTO))]
    public partial class IMRequestFullDTO : WorkflowSampleSystem.Generated.DTO.IMRequestSimpleDTO
    {
        
        public IMRequestFullDTO()
        {
        }
        
        public IMRequestFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequest domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequest(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequest), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class IMRequestRichDTO : WorkflowSampleSystem.Generated.DTO.IMRequestFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.IMRequestDetailRichDTO OneToOneDetail;
        
        public IMRequestRichDTO()
        {
        }
        
        public IMRequestRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequest domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequest(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequestDetail), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.IMRequestDetailFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.IMRequestDetailRichDTO))]
    public partial class IMRequestDetailSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO>
    {
        
        public IMRequestDetailSimpleDTO()
        {
        }
        
        public IMRequestDetailSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequestDetail domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequestDetail(domainObject, this);
        }
        
        public IMRequestDetailSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.IMRequestDetailIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequestDetail), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.IMRequestDetailRichDTO))]
    public partial class IMRequestDetailFullDTO : WorkflowSampleSystem.Generated.DTO.IMRequestDetailSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.IMRequestSimpleDTO Request;
        
        public IMRequestDetailFullDTO()
        {
        }
        
        public IMRequestDetailFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequestDetail domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequestDetail(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.IMRequestDetail), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class IMRequestDetailRichDTO : WorkflowSampleSystem.Generated.DTO.IMRequestDetailFullDTO
    {
        
        public IMRequestDetailRichDTO()
        {
        }
        
        public IMRequestDetailRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.IMRequestDetail domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapIMRequestDetail(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Information), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class InformationVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public InformationVisualDTO()
        {
        }
        
        public InformationVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Information domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapInformation(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Information), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.InformationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.InformationRichDTO))]
    public partial class InformationSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public InformationSimpleDTO()
        {
        }
        
        public InformationSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Information domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapInformation(domainObject, this);
        }
        
        public InformationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.InformationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Information), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.InformationRichDTO))]
    public partial class InformationFullDTO : WorkflowSampleSystem.Generated.DTO.InformationSimpleDTO
    {
        
        public InformationFullDTO()
        {
        }
        
        public InformationFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Information domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapInformation(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Information), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class InformationRichDTO : WorkflowSampleSystem.Generated.DTO.InformationFullDTO
    {
        
        public InformationRichDTO()
        {
        }
        
        public InformationRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Information domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapInformation(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.LegalEntityBase), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class LegalEntityBaseSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.RevenueDocumentAribaStatus AribaStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEnglish;
        
        public LegalEntityBaseSimpleDTO()
        {
        }
        
        public LegalEntityBaseSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.LegalEntityBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLegalEntityBase(domainObject, this);
        }
        
        public LegalEntityBaseSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.LegalEntityBaseIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class LocationVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public LocationVisualDTO()
        {
        }
        
        public LocationVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.LocationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.LocationRichDTO))]
    public partial class LocationSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CloseDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainsOnlyInactiveChildren;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinancial;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLeaf;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.LocationType LocationType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public LocationSimpleDTO()
        {
        }
        
        public LocationSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public LocationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.LocationRichDTO))]
    public partial class LocationFullDTO : WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.CountrySimpleDTO Country;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO Parent;
        
        public LocationFullDTO()
        {
        }
        
        public LocationFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class LocationRichDTO : WorkflowSampleSystem.Generated.DTO.LocationFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BinaryData;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.LocationRichDTO> Children = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.LocationRichDTO>();
        
        public LocationRichDTO()
        {
        }
        
        public LocationRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Location), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class LocationStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Location, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Location>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BinaryData;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CloseDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.CountryIdentityDTO Country;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinancial;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.LocationType LocationType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public LocationStrictDTO()
        {
        }
        
        public LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.LocationRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.LocationFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.LocationRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.LocationFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.LocationFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForLocation(this, source);
        }
        
        private LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForLocation(this, source);
        }
        
        private LocationStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Location domainObject)
        {
            mappingService.MapLocation(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Location ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToLocation(this);
        }
        
        public WorkflowSampleSystem.Domain.Location ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToLocation(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public ManagementUnitVisualDTO()
        {
        }
        
        public ManagementUnitVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnit(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitRichDTO))]
    public partial class ManagementUnitSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        public ManagementUnitSimpleDTO()
        {
        }
        
        public ManagementUnitSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnit(domainObject, this);
        }
        
        public ManagementUnitSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.ManagementUnitStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitRichDTO))]
    public partial class ManagementUnitFullDTO : WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO Parent;
        
        public ManagementUnitFullDTO()
        {
        }
        
        public ManagementUnitFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnit(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.ManagementUnitStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitRichDTO : WorkflowSampleSystem.Generated.DTO.ManagementUnitFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO> BusinessUnits = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitRichDTO> Children = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO> HRDepartments = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO>();
        
        public ManagementUnitRichDTO()
        {
        }
        
        public ManagementUnitRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnit(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.ManagementUnitStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnit), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.ManagementUnit, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.ManagementUnit>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO> BusinessUnits = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO> HRDepartments = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ManagementUnitStrictDTO()
        {
        }
        
        public ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.ManagementUnitFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForManagementUnit(this, source);
        }
        
        public ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForManagementUnit(this, source);
        }
        
        public ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForManagementUnit(this, source);
        }
        
        public ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForManagementUnit(this, source);
        }
        
        private ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForManagementUnit(this, source);
        }
        
        private ManagementUnitStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnit domainObject)
        {
            mappingService.MapManagementUnit(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnit ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnit(this);
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnit ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToManagementUnit(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO))]
    public partial class ManagementUnitAndBusinessUnitLinkSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EqualBU;
        
        public ManagementUnitAndBusinessUnitLinkSimpleDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitAndBusinessUnitLink(domainObject, this);
        }
        
        public ManagementUnitAndBusinessUnitLinkSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO))]
    public partial class ManagementUnitAndBusinessUnitLinkFullDTO : WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit;
        
        public ManagementUnitAndBusinessUnitLinkFullDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitAndBusinessUnitLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitAndBusinessUnitLinkRichDTO : WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO
    {
        
        public ManagementUnitAndBusinessUnitLinkRichDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitAndBusinessUnitLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitAndBusinessUnitLinkStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EqualBU;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO ManagementUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO()
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        public ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForManagementUnitAndBusinessUnitLink(this, source);
        }
        
        private ManagementUnitAndBusinessUnitLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndBusinessUnitLinkIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink domainObject)
        {
            mappingService.MapManagementUnitAndBusinessUnitLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitAndBusinessUnitLink(this);
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToManagementUnitAndBusinessUnitLink(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO))]
    public partial class ManagementUnitAndHRDepartmentLinkSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO>
    {
        
        public ManagementUnitAndHRDepartmentLinkSimpleDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitAndHRDepartmentLink(domainObject, this);
        }
        
        public ManagementUnitAndHRDepartmentLinkSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO))]
    public partial class ManagementUnitAndHRDepartmentLinkFullDTO : WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitSimpleDTO ManagementUnit;
        
        public ManagementUnitAndHRDepartmentLinkFullDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitAndHRDepartmentLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitAndHRDepartmentLinkRichDTO : WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO
    {
        
        public ManagementUnitAndHRDepartmentLinkRichDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitAndHRDepartmentLink(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitAndHRDepartmentLinkStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.HRDepartmentIdentityDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitIdentityDTO ManagementUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO()
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        public ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForManagementUnitAndHRDepartmentLink(this, source);
        }
        
        private ManagementUnitAndHRDepartmentLinkStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitAndHRDepartmentLinkIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink domainObject)
        {
            mappingService.MapManagementUnitAndHRDepartmentLink(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToManagementUnitAndHRDepartmentLink(this);
        }
        
        public WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToManagementUnitAndHRDepartmentLink(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class ManagementUnitFluentMappingSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.BusinessUnitStatus BusinessUnitStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.MuComponent MuComponent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        public ManagementUnitFluentMappingSimpleDTO()
        {
        }
        
        public ManagementUnitFluentMappingSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.ManagementUnitFluentMapping domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapManagementUnitFluentMapping(domainObject, this);
        }
        
        public ManagementUnitFluentMappingSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class BusinessUnitProgramClassFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid? AncestorIdent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterVirtualName;
        
        public BusinessUnitProgramClassFilterModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel domainObject)
        {
            mappingService.MapBusinessUnitProgramClassFilterModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnitProgramClassFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class EmployeeFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel>
    {
        
        public EmployeeFilterModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel domainObject)
        {
            mappingService.MapEmployeeFilterModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployeeFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class HierarchicalBusinessUnitFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel>
    {
        
        public HierarchicalBusinessUnitFilterModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel domainObject)
        {
            mappingService.MapHierarchicalBusinessUnitFilterModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHierarchicalBusinessUnitFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class SingleEmployeeFilterModelStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel>
    {
        
        public SingleEmployeeFilterModelStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel domainObject)
        {
            mappingService.MapSingleEmployeeFilterModel(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToSingleEmployeeFilterModel(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Principal), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.PrincipalFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.PrincipalRichDTO))]
    public partial class PrincipalSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId;
        
        public PrincipalSimpleDTO()
        {
        }
        
        public PrincipalSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Principal domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapPrincipal(domainObject, this);
        }
        
        public PrincipalSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.PrincipalStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.PrincipalStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Principal), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.PrincipalRichDTO))]
    public partial class PrincipalFullDTO : WorkflowSampleSystem.Generated.DTO.PrincipalSimpleDTO
    {
        
        public PrincipalFullDTO()
        {
        }
        
        public PrincipalFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Principal domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapPrincipal(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.PrincipalStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.PrincipalStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Principal), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class PrincipalRichDTO : WorkflowSampleSystem.Generated.DTO.PrincipalFullDTO
    {
        
        public PrincipalRichDTO()
        {
        }
        
        public PrincipalRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Principal domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapPrincipal(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.PrincipalStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.PrincipalStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.Principal), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class PrincipalStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Principal, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.Principal>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public PrincipalStrictDTO()
        {
        }
        
        public PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.PrincipalRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.PrincipalFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForPrincipal(this, source);
        }
        
        public PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.PrincipalRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.PrincipalFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.PrincipalSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForPrincipal(this, source);
        }
        
        public PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.PrincipalFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.PrincipalSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForPrincipal(this, source);
        }
        
        public PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.PrincipalSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForPrincipal(this, source);
        }
        
        private PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForPrincipal(this, source);
        }
        
        private PrincipalStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.PrincipalIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.Principal domainObject)
        {
            mappingService.MapPrincipal(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.Principal ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToPrincipal(this);
        }
        
        public WorkflowSampleSystem.Domain.Principal ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToPrincipal(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObj), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjFullDTO))]
    public partial class SqlParserTestObjSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotNullColumn;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueColumn;
        
        public SqlParserTestObjSimpleDTO()
        {
        }
        
        public SqlParserTestObjSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.SqlParserTestObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSqlParserTestObj(domainObject, this);
        }
        
        public SqlParserTestObjSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.SqlParserTestObjStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObj), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class SqlParserTestObjFullDTO : WorkflowSampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO
    {
        
        public SqlParserTestObjFullDTO()
        {
        }
        
        public SqlParserTestObjFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.SqlParserTestObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSqlParserTestObj(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.SqlParserTestObjStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObj), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class SqlParserTestObjStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.SqlParserTestObj, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.SqlParserTestObj>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotNullColumn;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueColumn;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public SqlParserTestObjStrictDTO()
        {
        }
        
        public SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSqlParserTestObj(this, source);
        }
        
        public SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSqlParserTestObj(this, source);
        }
        
        public SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSqlParserTestObj(this, source);
        }
        
        private SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSqlParserTestObj(this, source);
        }
        
        private SqlParserTestObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.SqlParserTestObj domainObject)
        {
            mappingService.MapSqlParserTestObj(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.SqlParserTestObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToSqlParserTestObj(this);
        }
        
        public WorkflowSampleSystem.Domain.SqlParserTestObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToSqlParserTestObj(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO))]
    public partial class SqlParserTestObjContainerSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO>
    {
        
        public SqlParserTestObjContainerSimpleDTO()
        {
        }
        
        public SqlParserTestObjContainerSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.SqlParserTestObjContainer domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSqlParserTestObjContainer(domainObject, this);
        }
        
        public SqlParserTestObjContainerSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class SqlParserTestObjContainerFullDTO : WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.SqlParserTestObjSimpleDTO IncludedObject;
        
        public SqlParserTestObjContainerFullDTO()
        {
        }
        
        public SqlParserTestObjContainerFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.SqlParserTestObjContainer domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapSqlParserTestObjContainer(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class SqlParserTestObjContainerStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.SqlParserTestObjContainer>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.SqlParserTestObjIdentityDTO IncludedObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public SqlParserTestObjContainerStrictDTO()
        {
        }
        
        public SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSqlParserTestObjContainer(this, source);
        }
        
        public SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSqlParserTestObjContainer(this, source);
        }
        
        public SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSqlParserTestObjContainer(this, source);
        }
        
        private SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSqlParserTestObjContainer(this, source);
        }
        
        private SqlParserTestObjContainerStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.SqlParserTestObjContainerIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.SqlParserTestObjContainer domainObject)
        {
            mappingService.MapSqlParserTestObjContainer(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.SqlParserTestObjContainer ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToSqlParserTestObjContainer(this);
        }
        
        public WorkflowSampleSystem.Domain.SqlParserTestObjContainer ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToSqlParserTestObjContainer(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestCustomContextSecurityObjVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestCustomContextSecurityObjVisualDTO()
        {
        }
        
        public TestCustomContextSecurityObjVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestCustomContextSecurityObj(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO))]
    public partial class TestCustomContextSecurityObjSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestCustomContextSecurityObjSimpleDTO()
        {
        }
        
        public TestCustomContextSecurityObjSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestCustomContextSecurityObj(domainObject, this);
        }
        
        public TestCustomContextSecurityObjSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjRichDTO))]
    public partial class TestCustomContextSecurityObjFullDTO : WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjSimpleDTO
    {
        
        public TestCustomContextSecurityObjFullDTO()
        {
        }
        
        public TestCustomContextSecurityObjFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestCustomContextSecurityObj(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestCustomContextSecurityObjRichDTO : WorkflowSampleSystem.Generated.DTO.TestCustomContextSecurityObjFullDTO
    {
        
        public TestCustomContextSecurityObjRichDTO()
        {
        }
        
        public TestCustomContextSecurityObjRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestCustomContextSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestCustomContextSecurityObj(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestDefaultFieldsMappingObjSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DayOfWeek EnumVal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntVal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrVal;
        
        public TestDefaultFieldsMappingObjSimpleDTO()
        {
        }
        
        public TestDefaultFieldsMappingObjSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestDefaultFieldsMappingObj(domainObject, this);
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.TestDefaultFieldsMappingObjStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.TestDefaultFieldsMappingObjStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestDefaultFieldsMappingObjStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DayOfWeek EnumVal = System.DayOfWeek.Thursday;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntVal = 123;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrVal = "abcde";
        
        public TestDefaultFieldsMappingObjStrictDTO()
        {
        }
        
        public TestDefaultFieldsMappingObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTestDefaultFieldsMappingObj(this, source);
        }
        
        public TestDefaultFieldsMappingObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestDefaultFieldsMappingObjSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj domainObject)
        {
            mappingService.MapTestDefaultFieldsMappingObj(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestDefaultFieldsMappingObj(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestEmployeeFilter), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestEmployeeFilterStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.TestEmployeeFilter>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.TestEmployeeFilter>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitIdentityDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Domain.SampleStruct SampleStruct;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TestValue;
        
        public TestEmployeeFilterStrictDTO()
        {
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestEmployeeFilter domainObject)
        {
            mappingService.MapTestEmployeeFilter(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.TestEmployeeFilter ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestEmployeeFilter(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestImmutableObj), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestImmutableObjFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestImmutableObjRichDTO))]
    public partial class TestImmutableObjSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestImmutablePrimitiveProperty;
        
        public TestImmutableObjSimpleDTO()
        {
        }
        
        public TestImmutableObjSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestImmutableObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestImmutableObj(domainObject, this);
        }
        
        public TestImmutableObjSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO(this.Id);
            }
        }
        
        public virtual WorkflowSampleSystem.Generated.DTO.TestImmutableObjStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.TestImmutableObjStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestImmutableObj), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestImmutableObjRichDTO))]
    public partial class TestImmutableObjFullDTO : WorkflowSampleSystem.Generated.DTO.TestImmutableObjSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeSimpleDTO TestImmutableRefProperty;
        
        public TestImmutableObjFullDTO()
        {
        }
        
        public TestImmutableObjFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestImmutableObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestImmutableObj(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.TestImmutableObjStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.TestImmutableObjStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestImmutableObj), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestImmutableObjRichDTO : WorkflowSampleSystem.Generated.DTO.TestImmutableObjFullDTO
    {
        
        public TestImmutableObjRichDTO()
        {
        }
        
        public TestImmutableObjRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestImmutableObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestImmutableObj(domainObject, this);
        }
        
        public override WorkflowSampleSystem.Generated.DTO.TestImmutableObjStrictDTO ToStrict()
        {
            return new WorkflowSampleSystem.Generated.DTO.TestImmutableObjStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestImmutableObj), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestImmutableObjStrictDTO : Framework.DomainDriven.IMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.TestImmutableObj, System.Guid>, Framework.DomainDriven.IConvertMappingObject<WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService, WorkflowSampleSystem.Domain.TestImmutableObj>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestImmutablePrimitiveProperty;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.EmployeeIdentityDTO TestImmutableRefProperty;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TestImmutableObjStrictDTO()
        {
        }
        
        public TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjRichDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.TestImmutableObjFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTestImmutableObj(this, source);
        }
        
        public TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjRichDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjFullDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.TestImmutableObjSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTestImmutableObj(this, source);
        }
        
        public TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjFullDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjSimpleDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTestImmutableObj(this, source);
        }
        
        public TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.TestImmutableObjSimpleDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService) : 
                this(((WorkflowSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTestImmutableObj(this, source);
        }
        
        private TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source, WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTestImmutableObj(this, source);
        }
        
        private TestImmutableObjStrictDTO(WorkflowSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, WorkflowSampleSystem.Generated.DTO.WorkflowSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestImmutableObjIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestImmutableObj domainObject)
        {
            mappingService.MapTestImmutableObj(this, domainObject);
        }
        
        public WorkflowSampleSystem.Domain.TestImmutableObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToTestImmutableObj(this);
        }
        
        public WorkflowSampleSystem.Domain.TestImmutableObj ToDomainObject(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToTestImmutableObj(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestObjForNested), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestObjForNestedSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        public TestObjForNestedSimpleDTO()
        {
        }
        
        public TestObjForNestedSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestObjForNested domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestObjForNested(domainObject, this);
        }
        
        public TestObjForNestedSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestObjForNestedIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestRootSecurityObjVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestRootSecurityObjVisualDTO()
        {
        }
        
        public TestRootSecurityObjVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestRootSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestRootSecurityObj(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjRichDTO))]
    public partial class TestRootSecurityObjSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestRootSecurityObjSimpleDTO()
        {
        }
        
        public TestRootSecurityObjSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestRootSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestRootSecurityObj(domainObject, this);
        }
        
        public TestRootSecurityObjSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjRichDTO))]
    public partial class TestRootSecurityObjFullDTO : WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.BusinessUnitSimpleDTO BusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.LocationSimpleDTO Location;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.ManagementUnitFluentMappingSimpleDTO ManagementUnitFluentMapping;
        
        public TestRootSecurityObjFullDTO()
        {
        }
        
        public TestRootSecurityObjFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestRootSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestRootSecurityObj(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestRootSecurityObjRichDTO : WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemRichDTO> Items = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemRichDTO>();
        
        public TestRootSecurityObjRichDTO()
        {
        }
        
        public TestRootSecurityObjRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestRootSecurityObj domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestRootSecurityObj(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecurityObjItem), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecurityObjItemVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecurityObjItemVisualDTO()
        {
        }
        
        public TestSecurityObjItemVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecurityObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecurityObjItem(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecurityObjItem), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemRichDTO))]
    public partial class TestSecurityObjItemSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecurityObjItemSimpleDTO()
        {
        }
        
        public TestSecurityObjItemSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecurityObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecurityObjItem(domainObject, this);
        }
        
        public TestSecurityObjItemSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecurityObjItem), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemRichDTO))]
    public partial class TestSecurityObjItemFullDTO : WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO FirstMaster;
        
        public TestSecurityObjItemFullDTO()
        {
        }
        
        public TestSecurityObjItemFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecurityObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecurityObjItem(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecurityObjItem), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecurityObjItemRichDTO : WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO> Items = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO> Items2 = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO> Items3 = new System.Collections.Generic.List<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO>();
        
        public TestSecurityObjItemRichDTO()
        {
        }
        
        public TestSecurityObjItemRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecurityObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecurityObjItem(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecuritySubObjItemVisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecuritySubObjItemVisualDTO()
        {
        }
        
        public TestSecuritySubObjItemVisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO))]
    public partial class TestSecuritySubObjItemSimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecuritySubObjItemSimpleDTO()
        {
        }
        
        public TestSecuritySubObjItemSimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem(domainObject, this);
        }
        
        public TestSecuritySubObjItemSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemRichDTO))]
    public partial class TestSecuritySubObjItemFullDTO : WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster;
        
        public TestSecuritySubObjItemFullDTO()
        {
        }
        
        public TestSecuritySubObjItemFullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecuritySubObjItemRichDTO : WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItemFullDTO
    {
        
        public TestSecuritySubObjItemRichDTO()
        {
        }
        
        public TestSecuritySubObjItemRichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecuritySubObjItem2VisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecuritySubObjItem2VisualDTO()
        {
        }
        
        public TestSecuritySubObjItem2VisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem2(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO))]
    public partial class TestSecuritySubObjItem2SimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecuritySubObjItem2SimpleDTO()
        {
        }
        
        public TestSecuritySubObjItem2SimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem2(domainObject, this);
        }
        
        public TestSecuritySubObjItem2SimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2RichDTO))]
    public partial class TestSecuritySubObjItem2FullDTO : WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2SimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestRootSecurityObjSimpleDTO RootSecurityObj;
        
        public TestSecuritySubObjItem2FullDTO()
        {
        }
        
        public TestSecuritySubObjItem2FullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem2(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecuritySubObjItem2RichDTO : WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem2FullDTO
    {
        
        public TestSecuritySubObjItem2RichDTO()
        {
        }
        
        public TestSecuritySubObjItem2RichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem2(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecuritySubObjItem3VisualDTO : WorkflowSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecuritySubObjItem3VisualDTO()
        {
        }
        
        public TestSecuritySubObjItem3VisualDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem3(domainObject, this);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO))]
    public partial class TestSecuritySubObjItem3SimpleDTO : WorkflowSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public TestSecuritySubObjItem3SimpleDTO()
        {
        }
        
        public TestSecuritySubObjItem3SimpleDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem3(domainObject, this);
        }
        
        public TestSecuritySubObjItem3SimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO Identity
        {
            get
            {
                return new WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3IdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3RichDTO))]
    public partial class TestSecuritySubObjItem3FullDTO : WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3SimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WorkflowSampleSystem.Generated.DTO.TestSecurityObjItemSimpleDTO InnerMaster;
        
        public TestSecuritySubObjItem3FullDTO()
        {
        }
        
        public TestSecuritySubObjItem3FullDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem3(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="WorkflowSampleSystem")]
    public partial class TestSecuritySubObjItem3RichDTO : WorkflowSampleSystem.Generated.DTO.TestSecuritySubObjItem3FullDTO
    {
        
        public TestSecuritySubObjItem3RichDTO()
        {
        }
        
        public TestSecuritySubObjItem3RichDTO(WorkflowSampleSystem.Generated.DTO.IWorkflowSampleSystemDTOMappingService mappingService, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3 domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapTestSecuritySubObjItem3(domainObject, this);
        }
    }
}
