//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Configurator.Client.Context.AuthService
{
    
    
    public partial class AuthSLJsonControllerServiceProxy : Framework.ServiceModel.Async.ServiceProxy<Configurator.Client.Context.AuthService.AuthSLJsonControllerClient>, Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>, Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>, Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.PrincipalCreateModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>, Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.PrincipalCreateModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.OperationFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.OperationFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalFullDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelStrictDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelRichDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.OperationSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.OperationSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.OperationSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.BusinessRoleStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.BusinessRoleRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.OperationStrictDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.OperationRichDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.PrincipalStrictDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.PrincipalRichDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>
    {
        
        private Configurator.Client.Context.AuthService.AuthSLJsonController _service;
        
        public AuthSLJsonControllerServiceProxy(System.Func<Configurator.Client.Context.AuthService.AuthSLJsonControllerClient> facadeFactory) : 
                base(facadeFactory)
        {
            this._service = this.GetService().Channel;
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.ChangePermissionDelegatesModelStrictDTO, Framework.Core.Ignore> ChangeDelegatePermissionsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.ChangePermissionDelegatesModelStrictDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.ChangePermissionDelegatesModelStrictDTO>((changePermissionDelegatesModelStrictDTO, callback, state) => this._service.BeginChangeDelegatePermissions(changePermissionDelegatesModelStrictDTO, callback, state), asyncResult => this._service.EndChangeDelegatePermissions(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.ChangePermissionDelegatesModelRichDTO, Framework.Core.Ignore> ChangeDelegatePermissionsAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.ChangePermissionDelegatesModelRichDTO, Framework.Core.Ignore>((changePermissionDelegatesModelStrictDTO, callback) => this.ChangeDelegatePermissionsAsyncFunc.Run(changePermissionDelegatesModelStrictDTO.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> CreateBusinessRoleAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>((businessRoleCreateModel, callback, state) => this._service.BeginCreateBusinessRole(businessRoleCreateModel, callback, state), asyncResult => this._service.EndCreateBusinessRole(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> CreateBusinessRoleAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>((businessRoleCreateModel, callback) => this.CreateBusinessRoleAsyncFunc.Run(businessRoleCreateModel.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>.CreateFunc
        {
            get
            {
                return this.CreateBusinessRoleAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.BusinessRoleCreateModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>.CreateFunc
        {
            get
            {
                return this.CreateBusinessRoleAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalCreateModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.PrincipalCreateModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>.CreateFunc
        {
            get
            {
                return this.CreatePrincipalAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalCreateModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> Framework.ServiceModel.Async.IAsyncCreateService<Framework.Authorization.Generated.DTO.PrincipalCreateModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>.CreateFunc
        {
            get
            {
                return this.CreatePrincipalAsyncFuncR;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalCreateModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> CreatePrincipalAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalCreateModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalCreateModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>((principalCreateModel, callback, state) => this._service.BeginCreatePrincipal(principalCreateModel, callback, state), asyncResult => this._service.EndCreatePrincipal(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalCreateModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> CreatePrincipalAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalCreateModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>((principalCreateModel, callback) => this.CreatePrincipalAsyncFunc.Run(principalCreateModel.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, Framework.Core.Ignore> FinishRunAsUserAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore>((_, callback, state) => this._service.BeginFinishRunAsUser(callback, state), asyncResult => this._service.EndFinishRunAsUser(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, Framework.Authorization.Generated.DTO.PrincipalFullDTO> GetCurrentPrincipalAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, Framework.Authorization.Generated.DTO.PrincipalFullDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, Framework.Authorization.Generated.DTO.PrincipalFullDTO>((_, callback, state) => this._service.BeginGetCurrentPrincipal(callback, state), asyncResult => this._service.EndGetCurrentPrincipal(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> GetFullBusinessRolesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>>((businessRoleIdents, callback, state) => this._service.BeginGetFullBusinessRolesByIdents(businessRoleIdents, callback, state), asyncResult => this._service.EndGetFullBusinessRolesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> GetFullBusinessRolesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>>((filter, callback, state) => this._service.BeginGetFullBusinessRolesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullBusinessRolesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> GetFullBusinessRolesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>>((filter, callback) => this.GetFullBusinessRolesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> GetFullOperationsByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>>((operationIdents, callback, state) => this._service.BeginGetFullOperationsByIdents(operationIdents, callback, state), asyncResult => this._service.EndGetFullOperationsByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> GetFullOperationsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>>((filter, callback, state) => this._service.BeginGetFullOperationsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullOperationsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> GetFullOperationsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>>((filter, callback) => this.GetFullOperationsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> GetFullPrincipalsByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>>((principalIdents, callback, state) => this._service.BeginGetFullPrincipalsByIdents(principalIdents, callback, state), asyncResult => this._service.EndGetFullPrincipalsByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> GetFullPrincipalsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>>((filter, callback, state) => this._service.BeginGetFullPrincipalsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullPrincipalsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> GetFullPrincipalsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>>((filter, callback) => this.GetFullPrincipalsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeIdentityDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.SecurityEntityFullDTO>> GetFullSecurityEntitiesAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeIdentityDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.SecurityEntityFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.EntityTypeIdentityDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.SecurityEntityFullDTO>>((entityTypeIdentity, callback, state) => this._service.BeginGetFullSecurityEntities(entityTypeIdentity, callback, state), asyncResult => this._service.EndGetFullSecurityEntities(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.GetFullSecurityEntitiesByIdentsRequest, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.SecurityEntityFullDTO>> GetFullSecurityEntitiesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.GetFullSecurityEntitiesByIdentsRequest, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.SecurityEntityFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.GetFullSecurityEntitiesByIdentsRequest, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.SecurityEntityFullDTO>>((request, callback, state) => this._service.BeginGetFullSecurityEntitiesByIdents(request, callback, state), asyncResult => this._service.EndGetFullSecurityEntitiesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> GetRichBusinessRoleAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>((businessRoleIdentity, callback, state) => this._service.BeginGetRichBusinessRole(businessRoleIdentity, callback, state), asyncResult => this._service.EndGetRichBusinessRole(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationRichDTO> GetRichOperationAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationRichDTO>((operationIdentity, callback, state) => this._service.BeginGetRichOperation(operationIdentity, callback, state), asyncResult => this._service.EndGetRichOperation(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO> GetRichPermissionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>((permissionIdentity, callback, state) => this._service.BeginGetRichPermission(permissionIdentity, callback, state), asyncResult => this._service.EndGetRichPermission(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>> GetRichPermissionsByDirectFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>>((filter, callback, state) => this._service.BeginGetRichPermissionsByDirectFilter(filter, callback, state), asyncResult => this._service.EndGetRichPermissionsByDirectFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>> GetRichPermissionsByDirectFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>>((filter, callback) => this.GetRichPermissionsByDirectFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> GetRichPrincipalAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>((principalIdentity, callback, state) => this._service.BeginGetRichPrincipal(principalIdentity, callback, state), asyncResult => this._service.EndGetRichPrincipal(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<string>> GetSecurityOperationsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<string>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<string>>((_, callback, state) => this._service.BeginGetSecurityOperations(callback, state), asyncResult => this._service.EndGetSecurityOperations(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> GetSimpleBusinessRolesAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleBusinessRoles(callback, state), asyncResult => this._service.EndGetSimpleBusinessRoles(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> GetSimpleBusinessRolesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleBusinessRolesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleBusinessRolesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> GetSimpleBusinessRolesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>>((filter, callback) => this.GetSimpleBusinessRolesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<string, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO> GetSimpleEntityTypeByNameAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<string, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<string, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>((entityTypeName, callback, state) => this._service.BeginGetSimpleEntityTypeByName(entityTypeName, callback, state), asyncResult => this._service.EndGetSimpleEntityTypeByName(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> GetSimpleEntityTypesAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleEntityTypes(callback, state), asyncResult => this._service.EndGetSimpleEntityTypes(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> GetSimpleEntityTypesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleEntityTypesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleEntityTypesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> GetSimpleEntityTypesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>>((filter, callback) => this.GetSimpleEntityTypesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> GetSimpleOperationsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleOperations(callback, state), asyncResult => this._service.EndGetSimpleOperations(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> GetSimpleOperationsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleOperationsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleOperationsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> GetSimpleOperationsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>>((filter, callback) => this.GetSimpleOperationsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<string, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO> GetSimplePrincipalByNameAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<string, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<string, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>((principalName, callback, state) => this._service.BeginGetSimplePrincipalByName(principalName, callback, state), asyncResult => this._service.EndGetSimplePrincipalByName(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> GetSimplePrincipalsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>>((_, callback, state) => this._service.BeginGetSimplePrincipals(callback, state), asyncResult => this._service.EndGetSimplePrincipals(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> GetSimplePrincipalsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimplePrincipalsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimplePrincipalsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> GetSimplePrincipalsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>>((filter, callback) => this.GetSimplePrincipalsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>> GetVisualBusinessRolesAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>>((_, callback, state) => this._service.BeginGetVisualBusinessRoles(callback, state), asyncResult => this._service.EndGetVisualBusinessRoles(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>> GetVisualBusinessRolesByPermissionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>>((permission, callback, state) => this._service.BeginGetVisualBusinessRolesByPermission(permission, callback, state), asyncResult => this._service.EndGetVisualBusinessRolesByPermission(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalVisualDTO>> GetVisualPrincipalsWithoutSecurityAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalVisualDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalVisualDTO>>((_, callback, state) => this._service.BeginGetVisualPrincipalsWithoutSecurity(callback, state), asyncResult => this._service.EndGetVisualPrincipalsWithoutSecurity(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveBusinessRoleAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemovePrincipalAsyncFunc;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Core.Ignore> RemoveBusinessRoleAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>((businessRoleIdent, callback, state) => this._service.BeginRemoveBusinessRole(businessRoleIdent, callback, state), asyncResult => this._service.EndRemoveBusinessRole(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Core.Ignore> RemovePrincipalAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>((principalIdent, callback, state) => this._service.BeginRemovePrincipal(principalIdent, callback, state), asyncResult => this._service.EndRemovePrincipal(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Core.Ignore> RunAsUserAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>((principal, callback, state) => this._service.BeginRunAsUser(principal, callback, state), asyncResult => this._service.EndRunAsUser(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO> SaveBusinessRoleAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>((businessRoleStrict, callback, state) => this._service.BeginSaveBusinessRole(businessRoleStrict, callback, state), asyncResult => this._service.EndSaveBusinessRole(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO> SaveBusinessRoleAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.BusinessRoleRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>((businessRoleStrict, callback) => this.SaveBusinessRoleAsyncFunc.Run(businessRoleStrict.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.BusinessRoleStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveBusinessRoleAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.BusinessRoleRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveBusinessRoleAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationStrictDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.OperationStrictDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveOperationAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRichDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.OperationRichDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveOperationAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalStrictDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.PrincipalStrictDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SavePrincipalAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRichDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Authorization.Generated.DTO.PrincipalRichDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SavePrincipalAsyncFuncR;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationStrictDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO> SaveOperationAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationStrictDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationStrictDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO>((operationStrict, callback, state) => this._service.BeginSaveOperation(operationStrict, callback, state), asyncResult => this._service.EndSaveOperation(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRichDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO> SaveOperationAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.OperationRichDTO, Framework.Authorization.Generated.DTO.OperationIdentityDTO>((operationStrict, callback) => this.SaveOperationAsyncFunc.Run(operationStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalStrictDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO> SavePrincipalAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalStrictDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalStrictDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>((principalStrict, callback, state) => this._service.BeginSavePrincipal(principalStrict, callback, state), asyncResult => this._service.EndSavePrincipal(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRichDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO> SavePrincipalAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Authorization.Generated.DTO.PrincipalRichDTO, Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>((principalStrict, callback) => this.SavePrincipalAsyncFunc.Run(principalStrict.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullBusinessRolesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullBusinessRolesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullBusinessRolesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullOperationsByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.OperationFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullOperationsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.OperationFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullOperationsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullPrincipalsByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullPrincipalsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullPrincipalsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelStrictDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>.SourceFunc
        {
            get
            {
                return this.GetRichPermissionsByDirectFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PermissionRichDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PermissionDirectFilterModelRichDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>.SourceFunc
        {
            get
            {
                return this.GetRichPermissionsByDirectFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleBusinessRolesAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleBusinessRolesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.BusinessRoleRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.BusinessRoleSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleBusinessRolesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleEntityTypesAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleEntityTypesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.EntityTypeRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.EntityTypeSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleEntityTypesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.OperationSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleOperationsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.OperationSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleOperationsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.OperationSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.OperationRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.OperationSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleOperationsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimplePrincipalsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelStrictDTO, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimplePrincipalsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Authorization.Generated.DTO.PrincipalRootFilterModelRichDTO, Framework.Authorization.Generated.DTO.PrincipalSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimplePrincipalsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Authorization.Generated.DTO.BusinessRoleVisualDTO>.SourceFunc
        {
            get
            {
                return this.GetVisualBusinessRolesAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.BusinessRoleIdentityDTO, Framework.Authorization.Generated.DTO.BusinessRoleRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichBusinessRoleAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.OperationIdentityDTO, Framework.Authorization.Generated.DTO.OperationRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichOperationAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.PermissionIdentityDTO, Framework.Authorization.Generated.DTO.PermissionRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichPermissionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Authorization.Generated.DTO.PrincipalIdentityDTO, Framework.Authorization.Generated.DTO.PrincipalRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichPrincipalAsyncFunc;
            }
        }
    }
}
