//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.Configuration.Generated.DTO
{
    
    
    public partial interface IConfigurationClientDTOMappingService
    {
        
        void MapBaseAuditPersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapFullToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentFullDTO currentSource);
        
        void MapFullToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO currentSource);
        
        void MapFullToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagFullDTO currentSource);
        
        void MapFullToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO currentSource);
        
        void MapFullToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsFullDTO currentSource);
        
        void MapFullToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO currentSource);
        
        void MapFullToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO currentSource);
        
        void MapFullToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO currentSource);
        
        void MapFullToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO currentSource);
        
        void MapFullToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobFullDTO currentSource);
        
        void MapFullToStrictForRegularJobRevisionFilterModel(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO currentSource);
        
        void MapFullToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceFullDTO currentSource);
        
        void MapFullToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO currentSource);
        
        void MapFullToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantFullDTO currentSource);
        
        void MapFullToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemFullDTO currentSource);
        
        void MapFullToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO currentSource);
        
        void MapFullToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO currentSource);
        
        void MapFullToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO currentSource);
        
        void MapRichToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentRichDTO currentSource);
        
        void MapRichToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO currentSource);
        
        void MapRichToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagRichDTO currentSource);
        
        void MapRichToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO currentSource);
        
        void MapRichToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsRichDTO currentSource);
        
        void MapRichToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO currentSource);
        
        void MapRichToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO currentSource);
        
        void MapRichToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO currentSource);
        
        void MapRichToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO currentSource);
        
        void MapRichToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRichDTO currentSource);
        
        void MapRichToStrictForRegularJobRevisionFilterModel(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO currentSource);
        
        void MapRichToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRichDTO currentSource);
        
        void MapRichToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO currentSource);
        
        void MapRichToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRichDTO currentSource);
        
        void MapRichToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRichDTO currentSource);
        
        void MapRichToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO currentSource);
        
        void MapRichToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO currentSource);
        
        void MapRichToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO currentSource);
        
        void MapSimpleToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentSimpleDTO currentSource);
        
        void MapSimpleToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO currentSource);
        
        void MapSimpleToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO currentSource);
        
        void MapSimpleToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO currentSource);
        
        void MapSimpleToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO currentSource);
        
        void MapSimpleToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO currentSource);
        
        void MapSimpleToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO currentSource);
        
        void MapSimpleToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobSimpleDTO currentSource);
        
        void MapSimpleToStrictForRegularJobRevisionFilterModel(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceSimpleDTO currentSource);
        
        void MapSimpleToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO currentSource);
        
        void MapSimpleToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO currentSource);
        
        void MapSimpleToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO currentSource);
    }
    
    public abstract partial class ConfigurationClientPrimitiveDTOMappingServiceBase : Framework.Persistent.ClientDTOMappingServiceBase, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService
    {
        
        public virtual void MapBaseAuditPersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapBasePersistentToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapFullToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.DomainType, null))
            {
                target.DomainType = currentSource.DomainType.Identity;
            }
            else
            {
                target.DomainType = Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Parent, null))
            {
                target.Parent = currentSource.Parent.Identity;
            }
            else
            {
                target.Parent = Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Operation, null))
            {
                target.Operation = currentSource.Operation.Identity;
            }
            else
            {
                target.Operation = Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.TargetSystem, null))
            {
                target.TargetSystem = currentSource.TargetSystem.Identity;
            }
            else
            {
                target.TargetSystem = Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForRegularJobRevisionFilterModel(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.RegularJob, null))
            {
                target.RegularJob = currentSource.RegularJob.Identity;
            }
            else
            {
                target.RegularJob = Framework.Configuration.Generated.DTO.RegularJobIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Content, null))
            {
                target.Content = System.Linq.Enumerable.ToArray(currentSource.Content);
            }
            else
            {
                target.Content = null;
            }
            if (!object.ReferenceEquals(currentSource.Tags, null))
            {
                target.Tags = Framework.Core.EnumerableExtensions.ToList(currentSource.Tags, attachmentTag => new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(attachmentTag));
            }
        }
        
        public virtual void MapRichToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Children, null))
            {
                target.Children = Framework.Core.EnumerableExtensions.ToList(currentSource.Children, controlSettings => new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(controlSettings));
            }
            if (!object.ReferenceEquals(currentSource.ControlSettingsParams, null))
            {
                target.ControlSettingsParams = Framework.Core.EnumerableExtensions.ToList(currentSource.ControlSettingsParams, controlSettingsParam => new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(controlSettingsParam));
            }
        }
        
        public virtual void MapRichToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ControlSettingsParamValues, null))
            {
                target.ControlSettingsParamValues = Framework.Core.EnumerableExtensions.ToList(currentSource.ControlSettingsParamValues, controlSettingsParamValue => new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(controlSettingsParamValue));
            }
        }
        
        public virtual void MapRichToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.DomainObjectIdents = currentSource.DomainObjectIdents;
        }
        
        public virtual void MapRichToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.InnerException, null))
            {
                target.InnerException = new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(currentSource.InnerException);
            }
            else
            {
                target.InnerException = null;
            }
        }
        
        public virtual void MapRichToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForRegularJobRevisionFilterModel(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ObjectIdentities, null))
            {
                target.ObjectIdentities = Framework.Core.EnumerableExtensions.ToList(currentSource.ObjectIdentities, userActionObjectModel => new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(userActionObjectModel));
            }
        }
        
        public virtual void MapRichToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.ActionNames = currentSource.ActionNames;
            target.DomainTypeNames = currentSource.DomainTypeNames;
        }
        
        public virtual void MapSimpleToStrictForAttachment(Framework.Configuration.Generated.DTO.AttachmentStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForAttachmentContainerReference(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.ObjectId = currentSource.ObjectId;
        }
        
        public virtual void MapSimpleToStrictForAttachmentTag(Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO target, Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Name = currentSource.Name;
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForCodeFirstSubscription(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForCodeFirstSubscriptionRootFilterModel(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForControlSettings(Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Name = currentSource.Name;
            target.Type = currentSource.Type;
        }
        
        public virtual void MapSimpleToStrictForControlSettingsParam(Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Type = currentSource.Type;
        }
        
        public virtual void MapSimpleToStrictForControlSettingsParamValue(Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO target, Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Culture = currentSource.Culture;
            target.Value = currentSource.Value;
            target.ValueTypeName = currentSource.ValueTypeName;
        }
        
        public virtual void MapSimpleToStrictForDomainTypeEventModel(Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Revision = currentSource.Revision;
        }
        
        public virtual void MapSimpleToStrictForDomainTypeRootFilterModel(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForExceptionMessage(Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Message = currentSource.Message;
            target.MessageType = currentSource.MessageType;
            target.StackTrace = currentSource.StackTrace;
        }
        
        public virtual void MapSimpleToStrictForExceptionMessageRootFilterModel(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.IsRoot = currentSource.IsRoot;
            target.Period = currentSource.Period;
        }
        
        public virtual void MapSimpleToStrictForRegularJob(Framework.Configuration.Generated.DTO.RegularJobStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.ExpectedNextStartTime = currentSource.ExpectedNextStartTime;
            target.Function = currentSource.Function;
            target.Name = currentSource.Name;
            if (!object.ReferenceEquals(currentSource.ShedulerTime, null))
            {
                target.ShedulerTime = new Framework.Configuration.Generated.DTO.ShedulerTime(currentSource.ShedulerTime);
            }
            target.State = currentSource.State;
            target.Version = currentSource.Version;
            target.WrapUpSession = currentSource.WrapUpSession;
        }
        
        public virtual void MapSimpleToStrictForRegularJobRevisionFilterModel(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CountingEntities = currentSource.CountingEntities;
        }
        
        public virtual void MapSimpleToStrictForSequence(Framework.Configuration.Generated.DTO.SequenceStrictDTO target, Framework.Configuration.Generated.DTO.SequenceSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Name = currentSource.Name;
            target.Number = currentSource.Number;
        }
        
        public virtual void MapSimpleToStrictForSequenceCreateModel(Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForSequenceRootFilterModel(Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForSystemConstant(Framework.Configuration.Generated.DTO.SystemConstantStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForSystemConstantRootFilterModel(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForTargetSystem(Framework.Configuration.Generated.DTO.TargetSystemStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Name = currentSource.Name;
            target.SubscriptionEnabled = currentSource.SubscriptionEnabled;
        }
        
        public virtual void MapSimpleToStrictForTargetSystemRootFilterModel(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.IsMain = currentSource.IsMain;
            target.IsRevision = currentSource.IsRevision;
            target.SubscriptionEnabled = currentSource.SubscriptionEnabled;
        }
        
        public virtual void MapSimpleToStrictForUserActionCreateModel(Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.DomainType = currentSource.DomainType;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForUserActionObjectModel(Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Name = currentSource.Name;
            target.ObjectIdentity = currentSource.ObjectIdentity;
        }
        
        public virtual void MapSimpleToStrictForUserActionObjectRootFilterModel(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO target, Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.CountingEntities = currentSource.CountingEntities;
            target.Period = currentSource.Period;
        }
    }
    
    public partial class ConfigurationClientPrimitiveDTOMappingService : Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingServiceBase
    {
        
        private static Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService _default = new Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService();
        
        public static Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService Default
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService._default;
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct AttachmentIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.AttachmentIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public AttachmentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public AttachmentIdentityDTO(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.AttachmentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity1, Framework.Configuration.Generated.DTO.AttachmentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.AttachmentIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.AttachmentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SubscriptionEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SubscriptionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct CodeFirstSubscriptionIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CodeFirstSubscriptionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CodeFirstSubscriptionIdentityDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity1, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity1, Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct ControlSettingsIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ControlSettingsIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ControlSettingsIdentityDTO(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity1, Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct DomainTypeIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public DomainTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public DomainTypeIdentityDTO(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct DomainTypeEventOperationIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public DomainTypeEventOperationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public DomainTypeEventOperationIdentityDTO(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity1, Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ExceptionMessageView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct ExceptionMessageIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ExceptionMessageIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ExceptionMessageIdentityDTO(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity1, Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.RegularJobEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.RegularJobView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct RegularJobIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.RegularJobIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.RegularJobIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.RegularJobIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public RegularJobIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public RegularJobIdentityDTO(Framework.Configuration.Generated.DTO.RegularJobSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.RegularJobIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.RegularJobIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.RegularJobIdentityDTO identity1, Framework.Configuration.Generated.DTO.RegularJobIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.RegularJobIdentityDTO identity1, Framework.Configuration.Generated.DTO.RegularJobIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.RegularJobIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.RegularJobIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.RegularJobIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ReportEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ReportView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct ReportIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.ReportIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.ReportIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.ReportIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ReportIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public static Framework.Configuration.Generated.DTO.ReportIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.ReportIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.ReportIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.ReportIdentityDTO identity1, Framework.Configuration.Generated.DTO.ReportIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.ReportIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.ReportIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.ReportIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SequenceEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SequenceView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct SequenceIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.SequenceIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public SequenceIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public SequenceIdentityDTO(Framework.Configuration.Generated.DTO.SequenceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.SequenceIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.SequenceIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity1, Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity1, Framework.Configuration.Generated.DTO.SequenceIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.SequenceIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.SequenceIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.SequenceIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SystemConstantEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SystemConstantView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct SystemConstantIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public SystemConstantIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public SystemConstantIdentityDTO(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity1, Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity1, Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.TargetSystemEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.TargetSystemView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct TargetSystemIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TargetSystemIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TargetSystemIdentityDTO(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity1, Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity1, Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.UserActionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct UserActionIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.UserActionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.UserActionIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.UserActionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public UserActionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public UserActionIdentityDTO(Framework.Configuration.Generated.DTO.UserActionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.UserActionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.UserActionIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.UserActionIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.UserActionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public struct UserActionObjectIdentityDTO : System.IEquatable<Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO EmptyField = new Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public UserActionObjectIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public UserActionObjectIdentityDTO(Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO Empty
        {
            get
            {
                return Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity1, Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO) == other.GetType()) && this.Equals(((Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    public partial interface IBaseAbstractDTO : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged, Framework.Reactive.IBaseRaiseObject
    {
    }
    
    public partial interface IBasePersistentDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        System.Guid Id
        {
            get;
            set;
        }
    }
    
    public partial interface IBaseAuditPersistentDTO : Framework.Configuration.Generated.DTO.IBasePersistentDTO
    {
        
        bool Active
        {
            get;
            set;
        }
        
        System.DateTime? CreateDate
        {
            get;
            set;
        }
        
        string CreatedBy
        {
            get;
            set;
        }
        
        string ModifiedBy
        {
            get;
            set;
        }
        
        System.DateTime? ModifyDate
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public abstract partial class BaseAbstractDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        public BaseAbstractDTO(Framework.Configuration.Generated.DTO.IBaseAbstractDTO source) : 
                this()
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
        }
        
        System.ComponentModel.PropertyChangedEventHandler Framework.Reactive.IBaseRaiseObject.PropertyChanged
        {
            get
            {
                return this.PropertyChanged;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        protected void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [Framework.Persistent.TargetSystemAttribute("50465868-4b49-42cf-a702-a39400e6c317", "Configuration")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public abstract partial class BasePersistentDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IBasePersistentDTO
    {
        
        private System.Guid _id;
        
        protected BasePersistentDTO()
        {
        }
        
        public BasePersistentDTO(Framework.Configuration.Generated.DTO.IBasePersistentDTO source) : 
                this(source, true)
        {
        }
        
        public BasePersistentDTO(Framework.Configuration.Generated.DTO.IBasePersistentDTO source, bool copyId) : 
                base(source)
        {
            if (copyId)
            {
                this.Id = source.Id;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    base.RaisePropertyChanging("Id");
                    this._id = newValue;
                    base.RaisePropertyChanged("Id");
                }
            }
        }
        
        public bool IsNew
        {
            get
            {
                return (default(System.Guid) == this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public abstract partial class BaseAuditPersistentDTO : Framework.Configuration.Generated.DTO.BasePersistentDTO, Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        private bool _active = true;
        
        private System.DateTime? _createDate;
        
        private string _createdBy;
        
        private string _modifiedBy;
        
        private System.DateTime? _modifyDate;
        
        protected BaseAuditPersistentDTO()
        {
        }
        
        public BaseAuditPersistentDTO(Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO source) : 
                this(source, true)
        {
        }
        
        public BaseAuditPersistentDTO(Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Active = source.Active;
            this.CreateDate = source.CreateDate;
            this.CreatedBy = source.CreatedBy;
            this.ModifiedBy = source.ModifiedBy;
            this.ModifyDate = source.ModifyDate;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._active, newValue))
                {
                    base.RaisePropertyChanging("Active");
                    this._active = newValue;
                    base.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? CreateDate
        {
            get
            {
                return this._createDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._createDate, newValue))
                {
                    base.RaisePropertyChanging("CreateDate");
                    this._createDate = newValue;
                    base.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._createdBy);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._createdBy, newValue))
                {
                    base.RaisePropertyChanging("CreatedBy");
                    this._createdBy = newValue;
                    base.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._modifiedBy);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._modifiedBy, newValue))
                {
                    base.RaisePropertyChanging("ModifiedBy");
                    this._modifiedBy = newValue;
                    base.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ModifyDate
        {
            get
            {
                return this._modifyDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._modifyDate, newValue))
                {
                    base.RaisePropertyChanging("ModifyDate");
                    this._modifyDate = newValue;
                    base.RaisePropertyChanged("ModifyDate");
                }
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentRichDTO))]
    public partial class AttachmentSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IAttachmentSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.AttachmentSimpleDTO>
    {
        
        private string _name;
        
        public AttachmentSimpleDTO()
        {
        }
        
        public AttachmentSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentRichDTO))]
    public partial class AttachmentFullDTO : Framework.Configuration.Generated.DTO.AttachmentSimpleDTO, Framework.Configuration.Generated.DTO.IAttachmentFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO _container;
        
        public AttachmentFullDTO()
        {
        }
        
        public AttachmentFullDTO(Framework.Configuration.Generated.DTO.IAttachmentFullDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentFullDTO(Framework.Configuration.Generated.DTO.IAttachmentFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Container = source.Container;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO Container
        {
            get
            {
                return this._container;
            }
            set
            {
                Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._container, newValue))
                {
                    base.RaisePropertyChanging("Container");
                    this._container = newValue;
                    base.RaisePropertyChanged("Container");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentRichDTO : Framework.Configuration.Generated.DTO.AttachmentFullDTO, Framework.Configuration.Generated.DTO.IAttachmentRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO>
    {
        
        private byte[] _content;
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> _tags = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO>();
        
        public AttachmentRichDTO()
        {
        }
        
        public AttachmentRichDTO(Framework.Configuration.Generated.DTO.IAttachmentRichDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentRichDTO(Framework.Configuration.Generated.DTO.IAttachmentRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Content, null))
            {
                this.Content = Framework.Core.ArrayExtensions.CloneA(source.Content);
            }
            if (!object.ReferenceEquals(source.Tags, null))
            {
                this.Tags = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Tags, attachmentTag => attachmentTag.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public byte[] Content
        {
            get
            {
                return this._content;
            }
            set
            {
                byte[] newValue;
                newValue = value;
                if (!object.Equals(this._content, newValue))
                {
                    base.RaisePropertyChanging("Content");
                    this._content = newValue;
                    base.RaisePropertyChanged("Content");
                }
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO>.Details
        {
            get
            {
                return this.Tags;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> Tags
        {
            get
            {
                return this._tags;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._tags, newValue))
                {
                    base.RaisePropertyChanging("Tags");
                    this._tags = newValue;
                    base.RaisePropertyChanged("Tags");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.AttachmentIdentityDTO>
    {
        
        private byte[] _content;
        
        private System.Guid _id;
        
        private string _name;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO> _tags = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO>();
        
        public AttachmentStrictDTO()
        {
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachment(this, source);
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachment(this, source);
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachment(this, source);
        }
        
        public AttachmentStrictDTO(Framework.Configuration.Generated.DTO.AttachmentSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAttachment(this, source);
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAttachment(this, source);
        }
        
        private AttachmentStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                return this._content;
            }
            set
            {
                byte[] newValue;
                newValue = value;
                if (!object.Equals(this._content, newValue))
                {
                    this._content = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.AttachmentIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO> Tags
        {
            get
            {
                return this._tags;
            }
            set
            {
                System.Collections.Generic.List<Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO> newValue;
                newValue = value;
                if (!object.Equals(this._tags, newValue))
                {
                    this._tags = newValue;
                }
            }
        }
    }
    
    public partial interface IAttachmentSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IAttachmentFullDTO : Framework.Configuration.Generated.DTO.IAttachmentSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO Container
        {
            get;
            set;
        }
    }
    
    public partial interface IAttachmentRichDTO : Framework.Configuration.Generated.DTO.IAttachmentFullDTO
    {
        
        byte[] Content
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO> Tags
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IAttachmentContainerSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO>
    {
        
        private System.Guid _objectId;
        
        public AttachmentContainerSimpleDTO()
        {
        }
        
        public AttachmentContainerSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentContainerSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentContainerSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentContainerSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ObjectId = source.ObjectId;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._objectId, newValue))
                {
                    base.RaisePropertyChanging("ObjectId");
                    this._objectId = newValue;
                    base.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerSimpleDTO(this);
        }
    }
    
    public partial interface IAttachmentContainerSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        System.Guid ObjectId
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO))]
    public partial class AttachmentContainerReferenceSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO>
    {
        
        private System.Guid _objectId;
        
        public AttachmentContainerReferenceSimpleDTO()
        {
        }
        
        public AttachmentContainerReferenceSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceSimpleDTO source) : 
                base(source)
        {
            this.ObjectId = source.ObjectId;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._objectId, newValue))
                {
                    base.RaisePropertyChanging("ObjectId");
                    this._objectId = newValue;
                    base.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO))]
    public partial class AttachmentContainerReferenceFullDTO : Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO, Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public AttachmentContainerReferenceFullDTO()
        {
        }
        
        public AttachmentContainerReferenceFullDTO(Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceFullDTO source) : 
                base(source)
        {
            this.DomainType = source.DomainType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerReferenceRichDTO : Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO, Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO>
    {
        
        public AttachmentContainerReferenceRichDTO()
        {
        }
        
        public AttachmentContainerReferenceRichDTO(Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentContainerReferenceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentContainerReferenceStrictDTO
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO _domainType;
        
        private System.Guid _objectId;
        
        public AttachmentContainerReferenceStrictDTO()
        {
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachmentContainerReference(this, source);
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachmentContainerReference(this, source);
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachmentContainerReference(this, source);
        }
        
        public AttachmentContainerReferenceStrictDTO(Framework.Configuration.Generated.DTO.AttachmentContainerReferenceSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    this._domainType = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectId
        {
            get
            {
                return this._objectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._objectId, newValue))
                {
                    this._objectId = newValue;
                }
            }
        }
    }
    
    public partial interface IAttachmentContainerReferenceSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        System.Guid ObjectId
        {
            get;
            set;
        }
    }
    
    public partial interface IAttachmentContainerReferenceFullDTO : Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get;
            set;
        }
    }
    
    public partial interface IAttachmentContainerReferenceRichDTO : Framework.Configuration.Generated.DTO.IAttachmentContainerReferenceFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO))]
    public partial class AttachmentTagSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IAttachmentTagSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO>
    {
        
        private string _name;
        
        private string _value;
        
        public AttachmentTagSimpleDTO()
        {
        }
        
        public AttachmentTagSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentTagSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentTagSimpleDTO(Framework.Configuration.Generated.DTO.IAttachmentTagSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO))]
    public partial class AttachmentTagFullDTO : Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO, Framework.Configuration.Generated.DTO.IAttachmentTagFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentTagFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.AttachmentSimpleDTO _attachment;
        
        public AttachmentTagFullDTO()
        {
        }
        
        public AttachmentTagFullDTO(Framework.Configuration.Generated.DTO.IAttachmentTagFullDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentTagFullDTO(Framework.Configuration.Generated.DTO.IAttachmentTagFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Attachment = source.Attachment;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.AttachmentSimpleDTO Attachment
        {
            get
            {
                return this._attachment;
            }
            set
            {
                Framework.Configuration.Generated.DTO.AttachmentSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._attachment, newValue))
                {
                    base.RaisePropertyChanging("Attachment");
                    this._attachment = newValue;
                    base.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentTagFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentTagFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentTagRichDTO : Framework.Configuration.Generated.DTO.AttachmentTagFullDTO, Framework.Configuration.Generated.DTO.IAttachmentTagRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.AttachmentTagRichDTO>
    {
        
        public AttachmentTagRichDTO()
        {
        }
        
        public AttachmentTagRichDTO(Framework.Configuration.Generated.DTO.IAttachmentTagRichDTO source) : 
                this(source, true)
        {
        }
        
        public AttachmentTagRichDTO(Framework.Configuration.Generated.DTO.IAttachmentTagRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.AttachmentTagRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentTagRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.AttachmentTagRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.AttachmentTagStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class AttachmentTagStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private string _value;
        
        public AttachmentTagStrictDTO()
        {
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentTagFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAttachmentTag(this, source);
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAttachmentTag(this, source);
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAttachmentTag(this, source);
        }
        
        public AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.AttachmentTagSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForAttachmentTag(this, source);
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForAttachmentTag(this, source);
        }
        
        private AttachmentTagStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    this._value = newValue;
                }
            }
        }
    }
    
    public partial interface IAttachmentTagSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IAttachmentTagFullDTO : Framework.Configuration.Generated.DTO.IAttachmentTagSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.AttachmentSimpleDTO Attachment
        {
            get;
            set;
        }
    }
    
    public partial interface IAttachmentTagRichDTO : Framework.Configuration.Generated.DTO.IAttachmentTagFullDTO
    {
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SubscriptionEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SubscriptionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO))]
    public partial class CodeFirstSubscriptionSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO>
    {
        
        private string _code;
        
        public CodeFirstSubscriptionSimpleDTO()
        {
        }
        
        public CodeFirstSubscriptionSimpleDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CodeFirstSubscriptionSimpleDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Code = source.Code;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute(512)]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Code
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._code);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._code, newValue))
                {
                    base.RaisePropertyChanging("Code");
                    this._code = newValue;
                    base.RaisePropertyChanged("Code");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(this.Id);
            }
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO))]
    public partial class CodeFirstSubscriptionFullDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO, Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public CodeFirstSubscriptionFullDTO()
        {
        }
        
        public CodeFirstSubscriptionFullDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionFullDTO source) : 
                this(source, true)
        {
        }
        
        public CodeFirstSubscriptionFullDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.DomainType = source.DomainType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionRichDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO, Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO>
    {
        
        public CodeFirstSubscriptionRichDTO()
        {
        }
        
        public CodeFirstSubscriptionRichDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRichDTO source) : 
                this(source, true)
        {
        }
        
        public CodeFirstSubscriptionRichDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO>
    {
        
        private bool _active = true;
        
        private System.Guid _id;
        
        public CodeFirstSubscriptionStrictDTO()
        {
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCodeFirstSubscription(this, source);
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCodeFirstSubscription(this, source);
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCodeFirstSubscription(this, source);
        }
        
        public CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCodeFirstSubscription(this, source);
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCodeFirstSubscription(this, source);
        }
        
        private CodeFirstSubscriptionStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._active, newValue))
                {
                    this._active = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ICodeFirstSubscriptionSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Code
        {
            get;
            set;
        }
    }
    
    public partial interface ICodeFirstSubscriptionFullDTO : Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get;
            set;
        }
    }
    
    public partial interface ICodeFirstSubscriptionRichDTO : Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO))]
    public partial class CodeFirstSubscriptionRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO>
    {
        
        public CodeFirstSubscriptionRootFilterModelSimpleDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO))]
    public partial class CodeFirstSubscriptionRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO>
    {
        
        public CodeFirstSubscriptionRootFilterModelFullDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO>
    {
        
        public CodeFirstSubscriptionRootFilterModelRichDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class CodeFirstSubscriptionRootFilterModelStrictDTO
    {
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO()
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCodeFirstSubscriptionRootFilterModel(this, source);
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCodeFirstSubscriptionRootFilterModel(this, source);
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCodeFirstSubscriptionRootFilterModel(this, source);
        }
        
        public CodeFirstSubscriptionRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.CodeFirstSubscriptionRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ICodeFirstSubscriptionRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ICodeFirstSubscriptionRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelSimpleDTO
    {
    }
    
    public partial interface ICodeFirstSubscriptionRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.ICodeFirstSubscriptionRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO))]
    public partial class ControlSettingsSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IControlSettingsSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO>
    {
        
        private string _accountName;
        
        private string _name;
        
        private Framework.Configuration.Generated.DTO.ControlSettingsType _type;
        
        public ControlSettingsSimpleDTO()
        {
        }
        
        public ControlSettingsSimpleDTO(Framework.Configuration.Generated.DTO.IControlSettingsSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsSimpleDTO(Framework.Configuration.Generated.DTO.IControlSettingsSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AccountName = source.AccountName;
            this.Name = source.Name;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._accountName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._accountName, newValue))
                {
                    base.RaisePropertyChanging("AccountName");
                    this._accountName = newValue;
                    base.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingsType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO))]
    public partial class ControlSettingsFullDTO : Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO, Framework.Configuration.Generated.DTO.IControlSettingsFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsFullDTO>, Framework.Persistent.IParentSource<Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO _parent;
        
        public ControlSettingsFullDTO()
        {
        }
        
        public ControlSettingsFullDTO(Framework.Configuration.Generated.DTO.IControlSettingsFullDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsFullDTO(Framework.Configuration.Generated.DTO.IControlSettingsFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Parent = source.Parent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    base.RaisePropertyChanging("Parent");
                    this._parent = newValue;
                    base.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsRichDTO : Framework.Configuration.Generated.DTO.ControlSettingsFullDTO, Framework.Configuration.Generated.DTO.IControlSettingsRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> _children = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> _controlSettingsParams = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO>();
        
        public ControlSettingsRichDTO()
        {
        }
        
        public ControlSettingsRichDTO(Framework.Configuration.Generated.DTO.IControlSettingsRichDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsRichDTO(Framework.Configuration.Generated.DTO.IControlSettingsRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Children, null))
            {
                this.Children = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Children, controlSettings => controlSettings.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.ControlSettingsParams, null))
            {
                this.ControlSettingsParams = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ControlSettingsParams, controlSettingsParam => controlSettingsParam.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._children, newValue))
                {
                    base.RaisePropertyChanging("Children");
                    this._children = newValue;
                    base.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> ControlSettingsParams
        {
            get
            {
                return this._controlSettingsParams;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._controlSettingsParams, newValue))
                {
                    base.RaisePropertyChanging("ControlSettingsParams");
                    this._controlSettingsParams = newValue;
                    base.RaisePropertyChanged("ControlSettingsParams");
                }
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO>.Details
        {
            get
            {
                return this.Children;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO>.Details
        {
            get
            {
                return this.ControlSettingsParams;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO> _children = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO>();
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO> _controlSettingsParams = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO>();
        
        private System.Guid _id;
        
        private string _name;
        
        private Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO _parent;
        
        private Framework.Configuration.Generated.DTO.ControlSettingsType _type;
        
        public ControlSettingsStrictDTO()
        {
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForControlSettings(this, source);
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForControlSettings(this, source);
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForControlSettings(this, source);
        }
        
        public ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForControlSettings(this, source);
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForControlSettings(this, source);
        }
        
        private ControlSettingsStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO> Children
        {
            get
            {
                return this._children;
            }
            set
            {
                System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsStrictDTO> newValue;
                newValue = value;
                if (!object.Equals(this._children, newValue))
                {
                    this._children = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO> ControlSettingsParams
        {
            get
            {
                return this._controlSettingsParams;
            }
            set
            {
                System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO> newValue;
                newValue = value;
                if (!object.Equals(this._controlSettingsParams, newValue))
                {
                    this._controlSettingsParams = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO Parent
        {
            get
            {
                return this._parent;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingsIdentityDTO newValue;
                newValue = value;
                if (!object.Equals(this._parent, newValue))
                {
                    this._parent = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingsType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    this._type = newValue;
                }
            }
        }
    }
    
    public partial interface IControlSettingsSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string AccountName
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Configuration.Generated.DTO.ControlSettingsType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IControlSettingsFullDTO : Framework.Configuration.Generated.DTO.IControlSettingsSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO Parent
        {
            get;
            set;
        }
    }
    
    public partial interface IControlSettingsRichDTO : Framework.Configuration.Generated.DTO.IControlSettingsFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsRichDTO> Children
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO> ControlSettingsParams
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO))]
    public partial class ControlSettingsParamSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IControlSettingsParamSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingParamType _type;
        
        public ControlSettingsParamSimpleDTO()
        {
        }
        
        public ControlSettingsParamSimpleDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsParamSimpleDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingParamType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingParamType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO))]
    public partial class ControlSettingsParamFullDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO, Framework.Configuration.Generated.DTO.IControlSettingsParamFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO _controlSettings;
        
        public ControlSettingsParamFullDTO()
        {
        }
        
        public ControlSettingsParamFullDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamFullDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsParamFullDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ControlSettings = source.ControlSettings;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO ControlSettings
        {
            get
            {
                return this._controlSettings;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._controlSettings, newValue))
                {
                    base.RaisePropertyChanging("ControlSettings");
                    this._controlSettings = newValue;
                    base.RaisePropertyChanged("ControlSettings");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamRichDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO, Framework.Configuration.Generated.DTO.IControlSettingsParamRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> _controlSettingsParamValues = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO>();
        
        public ControlSettingsParamRichDTO()
        {
        }
        
        public ControlSettingsParamRichDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamRichDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsParamRichDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.ControlSettingsParamValues, null))
            {
                this.ControlSettingsParamValues = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ControlSettingsParamValues, controlSettingsParamValue => controlSettingsParamValue.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> ControlSettingsParamValues
        {
            get
            {
                return this._controlSettingsParamValues;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._controlSettingsParamValues, newValue))
                {
                    base.RaisePropertyChanging("ControlSettingsParamValues");
                    this._controlSettingsParamValues = newValue;
                    base.RaisePropertyChanged("ControlSettingsParamValues");
                }
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO>.Details
        {
            get
            {
                return this.ControlSettingsParamValues;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO> _controlSettingsParamValues = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO>();
        
        private System.Guid _id;
        
        private Framework.Configuration.Generated.DTO.ControlSettingParamType _type;
        
        public ControlSettingsParamStrictDTO()
        {
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForControlSettingsParam(this, source);
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForControlSettingsParam(this, source);
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForControlSettingsParam(this, source);
        }
        
        public ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForControlSettingsParam(this, source);
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForControlSettingsParam(this, source);
        }
        
        private ControlSettingsParamStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO> ControlSettingsParamValues
        {
            get
            {
                return this._controlSettingsParamValues;
            }
            set
            {
                System.Collections.Generic.List<Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO> newValue;
                newValue = value;
                if (!object.Equals(this._controlSettingsParamValues, newValue))
                {
                    this._controlSettingsParamValues = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingParamType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingParamType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    this._type = newValue;
                }
            }
        }
    }
    
    public partial interface IControlSettingsParamSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        Framework.Configuration.Generated.DTO.ControlSettingParamType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IControlSettingsParamFullDTO : Framework.Configuration.Generated.DTO.IControlSettingsParamSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.ControlSettingsSimpleDTO ControlSettings
        {
            get;
            set;
        }
    }
    
    public partial interface IControlSettingsParamRichDTO : Framework.Configuration.Generated.DTO.IControlSettingsParamFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO> ControlSettingsParamValues
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO))]
    public partial class ControlSettingsParamValueSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IControlSettingsParamValueSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO>
    {
        
        private string _culture;
        
        private string _value;
        
        private string _valueTypeName;
        
        public ControlSettingsParamValueSimpleDTO()
        {
        }
        
        public ControlSettingsParamValueSimpleDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamValueSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsParamValueSimpleDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamValueSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Culture = source.Culture;
            this.Value = source.Value;
            this.ValueTypeName = source.ValueTypeName;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._culture);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._culture, newValue))
                {
                    base.RaisePropertyChanging("Culture");
                    this._culture = newValue;
                    base.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueTypeName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._valueTypeName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._valueTypeName, newValue))
                {
                    base.RaisePropertyChanging("ValueTypeName");
                    this._valueTypeName = newValue;
                    base.RaisePropertyChanged("ValueTypeName");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO))]
    public partial class ControlSettingsParamValueFullDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO, Framework.Configuration.Generated.DTO.IControlSettingsParamValueFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO _controlSettingsParam;
        
        public ControlSettingsParamValueFullDTO()
        {
        }
        
        public ControlSettingsParamValueFullDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamValueFullDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsParamValueFullDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamValueFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ControlSettingsParam = source.ControlSettingsParam;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO ControlSettingsParam
        {
            get
            {
                return this._controlSettingsParam;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._controlSettingsParam, newValue))
                {
                    base.RaisePropertyChanging("ControlSettingsParam");
                    this._controlSettingsParam = newValue;
                    base.RaisePropertyChanged("ControlSettingsParam");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamValueRichDTO : Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO, Framework.Configuration.Generated.DTO.IControlSettingsParamValueRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO>
    {
        
        public ControlSettingsParamValueRichDTO()
        {
        }
        
        public ControlSettingsParamValueRichDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamValueRichDTO source) : 
                this(source, true)
        {
        }
        
        public ControlSettingsParamValueRichDTO(Framework.Configuration.Generated.DTO.IControlSettingsParamValueRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ControlSettingsParamValueStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ControlSettingsParamValueStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private string _culture;
        
        private System.Guid _id;
        
        private string _value;
        
        private string _valueTypeName;
        
        public ControlSettingsParamValueStrictDTO()
        {
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForControlSettingsParamValue(this, source);
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForControlSettingsParamValue(this, source);
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForControlSettingsParamValue(this, source);
        }
        
        public ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.ControlSettingsParamValueSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForControlSettingsParamValue(this, source);
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForControlSettingsParamValue(this, source);
        }
        
        private ControlSettingsParamValueStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._culture);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._culture, newValue))
                {
                    this._culture = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    this._value = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueTypeName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._valueTypeName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._valueTypeName, newValue))
                {
                    this._valueTypeName = newValue;
                }
            }
        }
    }
    
    public partial interface IControlSettingsParamValueSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Culture
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
        
        string ValueTypeName
        {
            get;
            set;
        }
    }
    
    public partial interface IControlSettingsParamValueFullDTO : Framework.Configuration.Generated.DTO.IControlSettingsParamValueSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.ControlSettingsParamSimpleDTO ControlSettingsParam
        {
            get;
            set;
        }
    }
    
    public partial interface IControlSettingsParamValueRichDTO : Framework.Configuration.Generated.DTO.IControlSettingsParamValueFullDTO
    {
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRichDTO))]
    public partial class DomainTypeSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IDomainTypeSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO>
    {
        
        private string _fullTypeName;
        
        private bool _hasSecurityAttachment;
        
        private string _name;
        
        private string _nameSpace;
        
        public DomainTypeSimpleDTO()
        {
        }
        
        public DomainTypeSimpleDTO(Framework.Configuration.Generated.DTO.IDomainTypeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeSimpleDTO(Framework.Configuration.Generated.DTO.IDomainTypeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.FullTypeName = source.FullTypeName;
            this.HasSecurityAttachment = source.HasSecurityAttachment;
            this.Name = source.Name;
            this.NameSpace = source.NameSpace;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullTypeName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._fullTypeName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._fullTypeName, newValue))
                {
                    base.RaisePropertyChanging("FullTypeName");
                    this._fullTypeName = newValue;
                    base.RaisePropertyChanged("FullTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSecurityAttachment
        {
            get
            {
                return this._hasSecurityAttachment;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._hasSecurityAttachment, newValue))
                {
                    base.RaisePropertyChanging("HasSecurityAttachment");
                    this._hasSecurityAttachment = newValue;
                    base.RaisePropertyChanged("HasSecurityAttachment");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string NameSpace
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._nameSpace);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._nameSpace, newValue))
                {
                    base.RaisePropertyChanging("NameSpace");
                    this._nameSpace = newValue;
                    base.RaisePropertyChanged("NameSpace");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRichDTO))]
    public partial class DomainTypeFullDTO : Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO, Framework.Configuration.Generated.DTO.IDomainTypeFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        public DomainTypeFullDTO()
        {
        }
        
        public DomainTypeFullDTO(Framework.Configuration.Generated.DTO.IDomainTypeFullDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeFullDTO(Framework.Configuration.Generated.DTO.IDomainTypeFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.TargetSystem = source.TargetSystem;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._targetSystem, newValue))
                {
                    base.RaisePropertyChanging("TargetSystem");
                    this._targetSystem = newValue;
                    base.RaisePropertyChanged("TargetSystem");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeRichDTO : Framework.Configuration.Generated.DTO.DomainTypeFullDTO, Framework.Configuration.Generated.DTO.IDomainTypeRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> _eventOperations = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO>();
        
        public DomainTypeRichDTO()
        {
        }
        
        public DomainTypeRichDTO(Framework.Configuration.Generated.DTO.IDomainTypeRichDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeRichDTO(Framework.Configuration.Generated.DTO.IDomainTypeRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.EventOperations, null))
            {
                this.EventOperations = Framework.Core.EnumerableExtensions.ToObservableCollection(source.EventOperations, domainTypeEventOperation => domainTypeEventOperation.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO>.Details
        {
            get
            {
                return this.EventOperations;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> EventOperations
        {
            get
            {
                return this._eventOperations;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._eventOperations, newValue))
                {
                    base.RaisePropertyChanging("EventOperations");
                    this._eventOperations = newValue;
                    base.RaisePropertyChanged("EventOperations");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRichDTO(this);
        }
    }
    
    public partial interface IDomainTypeSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string FullTypeName
        {
            get;
            set;
        }
        
        bool HasSecurityAttachment
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string NameSpace
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeFullDTO : Framework.Configuration.Generated.DTO.IDomainTypeSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeRichDTO : Framework.Configuration.Generated.DTO.IDomainTypeFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO> EventOperations
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO))]
    public partial class DomainTypeEventModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IDomainTypeEventModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO>
    {
        
        private long? _revision;
        
        public DomainTypeEventModelSimpleDTO()
        {
        }
        
        public DomainTypeEventModelSimpleDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventModelSimpleDTO source) : 
                base(source)
        {
            this.Revision = source.Revision;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long? Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                long? newValue;
                newValue = value;
                if (!object.Equals(this._revision, newValue))
                {
                    base.RaisePropertyChanging("Revision");
                    this._revision = newValue;
                    base.RaisePropertyChanged("Revision");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO))]
    public partial class DomainTypeEventModelFullDTO : Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO, Framework.Configuration.Generated.DTO.IDomainTypeEventModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO _operation;
        
        public DomainTypeEventModelFullDTO()
        {
        }
        
        public DomainTypeEventModelFullDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventModelFullDTO source) : 
                base(source)
        {
            this.Operation = source.Operation;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO Operation
        {
            get
            {
                return this._operation;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._operation, newValue))
                {
                    base.RaisePropertyChanging("Operation");
                    this._operation = newValue;
                    base.RaisePropertyChanged("Operation");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventModelRichDTO : Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO, Framework.Configuration.Generated.DTO.IDomainTypeEventModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO>
    {
        
        private System.Collections.Generic.List<System.Guid> _domainObjectIdents = new System.Collections.Generic.List<System.Guid>();
        
        public DomainTypeEventModelRichDTO()
        {
        }
        
        public DomainTypeEventModelRichDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventModelRichDTO source) : 
                base(source)
        {
            this.DomainObjectIdents = source.DomainObjectIdents;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public System.Collections.Generic.List<System.Guid> DomainObjectIdents
        {
            get
            {
                return this._domainObjectIdents;
            }
            set
            {
                System.Collections.Generic.List<System.Guid> newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectIdents, newValue))
                {
                    base.RaisePropertyChanging("DomainObjectIdents");
                    this._domainObjectIdents = newValue;
                    base.RaisePropertyChanged("DomainObjectIdents");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventModelStrictDTO
    {
        
        private System.Collections.Generic.List<System.Guid> _domainObjectIdents = new System.Collections.Generic.List<System.Guid>();
        
        private Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO _operation;
        
        private long? _revision;
        
        public DomainTypeEventModelStrictDTO()
        {
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainTypeEventModel(this, source);
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainTypeEventModel(this, source);
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainTypeEventModel(this, source);
        }
        
        public DomainTypeEventModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeEventModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Guid> DomainObjectIdents
        {
            get
            {
                return this._domainObjectIdents;
            }
            set
            {
                System.Collections.Generic.List<System.Guid> newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectIdents, newValue))
                {
                    this._domainObjectIdents = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Operation
        {
            get
            {
                return this._operation;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO newValue;
                newValue = value;
                if (!object.Equals(this._operation, newValue))
                {
                    this._operation = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long? Revision
        {
            get
            {
                return this._revision;
            }
            set
            {
                long? newValue;
                newValue = value;
                if (!object.Equals(this._revision, newValue))
                {
                    this._revision = newValue;
                }
            }
        }
    }
    
    public partial interface IDomainTypeEventModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        long? Revision
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeEventModelFullDTO : Framework.Configuration.Generated.DTO.IDomainTypeEventModelSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO Operation
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeEventModelRichDTO : Framework.Configuration.Generated.DTO.IDomainTypeEventModelFullDTO
    {
        
        System.Collections.Generic.List<System.Guid> DomainObjectIdents
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO))]
    public partial class DomainTypeEventOperationSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IDomainTypeEventOperationSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO>
    {
        
        private string _name;
        
        public DomainTypeEventOperationSimpleDTO()
        {
        }
        
        public DomainTypeEventOperationSimpleDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventOperationSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeEventOperationSimpleDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventOperationSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO))]
    public partial class DomainTypeEventOperationFullDTO : Framework.Configuration.Generated.DTO.DomainTypeEventOperationSimpleDTO, Framework.Configuration.Generated.DTO.IDomainTypeEventOperationFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public DomainTypeEventOperationFullDTO()
        {
        }
        
        public DomainTypeEventOperationFullDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventOperationFullDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeEventOperationFullDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventOperationFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.DomainType = source.DomainType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeEventOperationRichDTO : Framework.Configuration.Generated.DTO.DomainTypeEventOperationFullDTO, Framework.Configuration.Generated.DTO.IDomainTypeEventOperationRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO>
    {
        
        public DomainTypeEventOperationRichDTO()
        {
        }
        
        public DomainTypeEventOperationRichDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventOperationRichDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeEventOperationRichDTO(Framework.Configuration.Generated.DTO.IDomainTypeEventOperationRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeEventOperationRichDTO(this);
        }
    }
    
    public partial interface IDomainTypeEventOperationSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeEventOperationFullDTO : Framework.Configuration.Generated.DTO.IDomainTypeEventOperationSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeEventOperationRichDTO : Framework.Configuration.Generated.DTO.IDomainTypeEventOperationFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO))]
    public partial class DomainTypeRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO>
    {
        
        public DomainTypeRootFilterModelSimpleDTO()
        {
        }
        
        public DomainTypeRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO))]
    public partial class DomainTypeRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        public DomainTypeRootFilterModelFullDTO()
        {
        }
        
        public DomainTypeRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelFullDTO source) : 
                base(source)
        {
            this.TargetSystem = source.TargetSystem;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._targetSystem, newValue))
                {
                    base.RaisePropertyChanging("TargetSystem");
                    this._targetSystem = newValue;
                    base.RaisePropertyChanged("TargetSystem");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO>
    {
        
        public DomainTypeRootFilterModelRichDTO()
        {
        }
        
        public DomainTypeRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class DomainTypeRootFilterModelStrictDTO
    {
        
        private Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO _targetSystem;
        
        public DomainTypeRootFilterModelStrictDTO()
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO newValue;
                newValue = value;
                if (!object.Equals(this._targetSystem, newValue))
                {
                    this._targetSystem = newValue;
                }
            }
        }
    }
    
    public partial interface IDomainTypeRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IDomainTypeRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.IDomainTypeRootFilterModelFullDTO
    {
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.ExceptionMessageView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO))]
    public partial class ExceptionMessageSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IExceptionMessageSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO>
    {
        
        private bool _isClient;
        
        private bool _isRoot;
        
        private string _message;
        
        private string _messageType;
        
        private string _stackTrace;
        
        public ExceptionMessageSimpleDTO()
        {
        }
        
        public ExceptionMessageSimpleDTO(Framework.Configuration.Generated.DTO.IExceptionMessageSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ExceptionMessageSimpleDTO(Framework.Configuration.Generated.DTO.IExceptionMessageSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.IsClient = source.IsClient;
            this.IsRoot = source.IsRoot;
            this.Message = source.Message;
            this.MessageType = source.MessageType;
            this.StackTrace = source.StackTrace;
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClient
        {
            get
            {
                return this._isClient;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isClient, newValue))
                {
                    base.RaisePropertyChanging("IsClient");
                    this._isClient = newValue;
                    base.RaisePropertyChanged("IsClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isRoot, newValue))
                {
                    base.RaisePropertyChanging("IsRoot");
                    this._isRoot = newValue;
                    base.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Message
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._message);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._message, newValue))
                {
                    base.RaisePropertyChanging("Message");
                    this._message = newValue;
                    base.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._messageType);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._messageType, newValue))
                {
                    base.RaisePropertyChanging("MessageType");
                    this._messageType = newValue;
                    base.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string StackTrace
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._stackTrace);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._stackTrace, newValue))
                {
                    base.RaisePropertyChanging("StackTrace");
                    this._stackTrace = newValue;
                    base.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO))]
    public partial class ExceptionMessageFullDTO : Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO, Framework.Configuration.Generated.DTO.IExceptionMessageFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO>
    {
        
        public ExceptionMessageFullDTO()
        {
        }
        
        public ExceptionMessageFullDTO(Framework.Configuration.Generated.DTO.IExceptionMessageFullDTO source) : 
                this(source, true)
        {
        }
        
        public ExceptionMessageFullDTO(Framework.Configuration.Generated.DTO.IExceptionMessageFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageRichDTO : Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO, Framework.Configuration.Generated.DTO.IExceptionMessageRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO _innerException;
        
        public ExceptionMessageRichDTO()
        {
        }
        
        public ExceptionMessageRichDTO(Framework.Configuration.Generated.DTO.IExceptionMessageRichDTO source) : 
                this(source, true)
        {
        }
        
        public ExceptionMessageRichDTO(Framework.Configuration.Generated.DTO.IExceptionMessageRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.InnerException = source.InnerException;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO InnerException
        {
            get
            {
                return this._innerException;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO newValue;
                newValue = value;
                if (!object.Equals(this._innerException, newValue))
                {
                    base.RaisePropertyChanging("InnerException");
                    this._innerException = newValue;
                    base.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO>
    {
        
        private System.Guid _id;
        
        private Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO _innerException;
        
        private string _message;
        
        private string _messageType;
        
        private string _stackTrace;
        
        public ExceptionMessageStrictDTO()
        {
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExceptionMessage(this, source);
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExceptionMessage(this, source);
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExceptionMessage(this, source);
        }
        
        public ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForExceptionMessage(this, source);
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForExceptionMessage(this, source);
        }
        
        private ExceptionMessageStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.ExceptionMessageIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO InnerException
        {
            get
            {
                return this._innerException;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ExceptionMessageStrictDTO newValue;
                newValue = value;
                if (!object.Equals(this._innerException, newValue))
                {
                    this._innerException = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._message);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._message, newValue))
                {
                    this._message = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._messageType);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._messageType, newValue))
                {
                    this._messageType = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._stackTrace);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._stackTrace, newValue))
                {
                    this._stackTrace = newValue;
                }
            }
        }
    }
    
    public partial interface IExceptionMessageSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool IsClient
        {
            get;
            set;
        }
        
        bool IsRoot
        {
            get;
            set;
        }
        
        string Message
        {
            get;
            set;
        }
        
        string MessageType
        {
            get;
            set;
        }
        
        string StackTrace
        {
            get;
            set;
        }
    }
    
    public partial interface IExceptionMessageFullDTO : Framework.Configuration.Generated.DTO.IExceptionMessageSimpleDTO
    {
    }
    
    public partial interface IExceptionMessageRichDTO : Framework.Configuration.Generated.DTO.IExceptionMessageFullDTO
    {
        
        Framework.Configuration.Generated.DTO.ExceptionMessageRichDTO InnerException
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO))]
    public partial class ExceptionMessageRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO>
    {
        
        private bool _isRoot;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public ExceptionMessageRootFilterModelSimpleDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.IsRoot = source.IsRoot;
            this.Period = source.Period;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isRoot, newValue))
                {
                    base.RaisePropertyChanging("IsRoot");
                    this._isRoot = newValue;
                    base.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO))]
    public partial class ExceptionMessageRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO>
    {
        
        public ExceptionMessageRootFilterModelFullDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO>
    {
        
        public ExceptionMessageRootFilterModelRichDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExceptionMessageRootFilterModelStrictDTO
    {
        
        private bool _isRoot;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public ExceptionMessageRootFilterModelStrictDTO()
        {
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExceptionMessageRootFilterModel(this, source);
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExceptionMessageRootFilterModel(this, source);
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExceptionMessageRootFilterModel(this, source);
        }
        
        public ExceptionMessageRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.ExceptionMessageRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isRoot, newValue))
                {
                    this._isRoot = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    this._period = newValue;
                }
            }
        }
    }
    
    public partial interface IExceptionMessageRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        bool IsRoot
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
    }
    
    public partial interface IExceptionMessageRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelSimpleDTO
    {
    }
    
    public partial interface IExceptionMessageRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.IExceptionMessageRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class ExecuteRegularJobResultSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IExecuteRegularJobResultSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO>
    {
        
        private string _description;
        
        private long? _executionTime;
        
        private Framework.Configuration.Generated.DTO.RegularJobStatus _status;
        
        private long? _time;
        
        public ExecuteRegularJobResultSimpleDTO()
        {
        }
        
        public ExecuteRegularJobResultSimpleDTO(Framework.Configuration.Generated.DTO.IExecuteRegularJobResultSimpleDTO source) : 
                base(source)
        {
            this.Description = source.Description;
            this.ExecutionTime = source.ExecutionTime;
            this.Status = source.Status;
            this.Time = source.Time;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long? ExecutionTime
        {
            get
            {
                return this._executionTime;
            }
            set
            {
                long? newValue;
                newValue = value;
                if (!object.Equals(this._executionTime, newValue))
                {
                    base.RaisePropertyChanging("ExecutionTime");
                    this._executionTime = newValue;
                    base.RaisePropertyChanged("ExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.RegularJobStatus Status
        {
            get
            {
                return this._status;
            }
            set
            {
                Framework.Configuration.Generated.DTO.RegularJobStatus newValue;
                newValue = value;
                if (!object.Equals(this._status, newValue))
                {
                    base.RaisePropertyChanging("Status");
                    this._status = newValue;
                    base.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long? Time
        {
            get
            {
                return this._time;
            }
            set
            {
                long? newValue;
                newValue = value;
                if (!object.Equals(this._time, newValue))
                {
                    base.RaisePropertyChanging("Time");
                    this._time = newValue;
                    base.RaisePropertyChanged("Time");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO(this);
        }
    }
    
    public partial interface IExecuteRegularJobResultSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        long? ExecutionTime
        {
            get;
            set;
        }
        
        Framework.Configuration.Generated.DTO.RegularJobStatus Status
        {
            get;
            set;
        }
        
        long? Time
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO))]
    public partial class UserActionCreateModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IUserActionCreateModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO>
    {
        
        private string _domainType;
        
        private string _name;
        
        public UserActionCreateModelSimpleDTO()
        {
        }
        
        public UserActionCreateModelSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionCreateModelSimpleDTO source) : 
                base(source)
        {
            this.DomainType = source.DomainType;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainType
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._domainType);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO))]
    public partial class UserActionCreateModelFullDTO : Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO, Framework.Configuration.Generated.DTO.IUserActionCreateModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO>
    {
        
        public UserActionCreateModelFullDTO()
        {
        }
        
        public UserActionCreateModelFullDTO(Framework.Configuration.Generated.DTO.IUserActionCreateModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionCreateModelRichDTO : Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO, Framework.Configuration.Generated.DTO.IUserActionCreateModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> _objectIdentities = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO>();
        
        public UserActionCreateModelRichDTO()
        {
        }
        
        public UserActionCreateModelRichDTO(Framework.Configuration.Generated.DTO.IUserActionCreateModelRichDTO source) : 
                base(source)
        {
            if (!object.ReferenceEquals(source.ObjectIdentities, null))
            {
                this.ObjectIdentities = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ObjectIdentities, userActionObjectModel => userActionObjectModel.Clone());
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._objectIdentities, newValue))
                {
                    base.RaisePropertyChanging("ObjectIdentities");
                    this._objectIdentities = newValue;
                    base.RaisePropertyChanged("ObjectIdentities");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionCreateModelStrictDTO
    {
        
        private string _domainType;
        
        private string _name;
        
        private System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO> _objectIdentities = new System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO>();
        
        public UserActionCreateModelStrictDTO()
        {
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionCreateModel(this, source);
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionCreateModel(this, source);
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionCreateModel(this, source);
        }
        
        public UserActionCreateModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionCreateModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainType
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._domainType);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._domainType, newValue))
                {
                    this._domainType = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                System.Collections.Generic.List<Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO> newValue;
                newValue = value;
                if (!object.Equals(this._objectIdentities, newValue))
                {
                    this._objectIdentities = newValue;
                }
            }
        }
    }
    
    public partial interface IUserActionCreateModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        string DomainType
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionCreateModelFullDTO : Framework.Configuration.Generated.DTO.IUserActionCreateModelSimpleDTO
    {
    }
    
    public partial interface IUserActionCreateModelRichDTO : Framework.Configuration.Generated.DTO.IUserActionCreateModelFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO> ObjectIdentities
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO))]
    public partial class UserActionObjectModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IUserActionObjectModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO>
    {
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        public UserActionObjectModelSimpleDTO()
        {
        }
        
        public UserActionObjectModelSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionObjectModelSimpleDTO source) : 
                base(source)
        {
            this.Name = source.Name;
            this.ObjectIdentity = source.ObjectIdentity;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._objectIdentity, newValue))
                {
                    base.RaisePropertyChanging("ObjectIdentity");
                    this._objectIdentity = newValue;
                    base.RaisePropertyChanged("ObjectIdentity");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO))]
    public partial class UserActionObjectModelFullDTO : Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO, Framework.Configuration.Generated.DTO.IUserActionObjectModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO>
    {
        
        public UserActionObjectModelFullDTO()
        {
        }
        
        public UserActionObjectModelFullDTO(Framework.Configuration.Generated.DTO.IUserActionObjectModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectModelRichDTO : Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO, Framework.Configuration.Generated.DTO.IUserActionObjectModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO>
    {
        
        public UserActionObjectModelRichDTO()
        {
        }
        
        public UserActionObjectModelRichDTO(Framework.Configuration.Generated.DTO.IUserActionObjectModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectModelStrictDTO
    {
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        public UserActionObjectModelStrictDTO()
        {
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionObjectModel(this, source);
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionObjectModel(this, source);
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionObjectModel(this, source);
        }
        
        public UserActionObjectModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._objectIdentity, newValue))
                {
                    this._objectIdentity = newValue;
                }
            }
        }
    }
    
    public partial interface IUserActionObjectModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        string Name
        {
            get;
            set;
        }
        
        System.Guid ObjectIdentity
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionObjectModelFullDTO : Framework.Configuration.Generated.DTO.IUserActionObjectModelSimpleDTO
    {
    }
    
    public partial interface IUserActionObjectModelRichDTO : Framework.Configuration.Generated.DTO.IUserActionObjectModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO))]
    public partial class RegularJobRevisionFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO>
    {
        
        private int _countingEntities;
        
        public RegularJobRevisionFilterModelSimpleDTO()
        {
        }
        
        public RegularJobRevisionFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelSimpleDTO source) : 
                base(source)
        {
            this.CountingEntities = source.CountingEntities;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountingEntities
        {
            get
            {
                return this._countingEntities;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._countingEntities, newValue))
                {
                    base.RaisePropertyChanging("CountingEntities");
                    this._countingEntities = newValue;
                    base.RaisePropertyChanged("CountingEntities");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO))]
    public partial class RegularJobRevisionFilterModelFullDTO : Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.RegularJobSimpleDTO _regularJob;
        
        public RegularJobRevisionFilterModelFullDTO()
        {
        }
        
        public RegularJobRevisionFilterModelFullDTO(Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelFullDTO source) : 
                base(source)
        {
            this.RegularJob = source.RegularJob;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Configuration.Generated.DTO.RegularJobSimpleDTO RegularJob
        {
            get
            {
                return this._regularJob;
            }
            set
            {
                Framework.Configuration.Generated.DTO.RegularJobSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._regularJob, newValue))
                {
                    base.RaisePropertyChanging("RegularJob");
                    this._regularJob = newValue;
                    base.RaisePropertyChanged("RegularJob");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class RegularJobRevisionFilterModelRichDTO : Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO, Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO>
    {
        
        public RegularJobRevisionFilterModelRichDTO()
        {
        }
        
        public RegularJobRevisionFilterModelRichDTO(Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class RegularJobRevisionFilterModelStrictDTO
    {
        
        private int _countingEntities;
        
        private Framework.Configuration.Generated.DTO.RegularJobIdentityDTO _regularJob;
        
        public RegularJobRevisionFilterModelStrictDTO()
        {
        }
        
        public RegularJobRevisionFilterModelStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForRegularJobRevisionFilterModel(this, source);
        }
        
        public RegularJobRevisionFilterModelStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RegularJobRevisionFilterModelStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForRegularJobRevisionFilterModel(this, source);
        }
        
        public RegularJobRevisionFilterModelStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RegularJobRevisionFilterModelStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForRegularJobRevisionFilterModel(this, source);
        }
        
        public RegularJobRevisionFilterModelStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRevisionFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountingEntities
        {
            get
            {
                return this._countingEntities;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._countingEntities, newValue))
                {
                    this._countingEntities = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.RegularJobIdentityDTO RegularJob
        {
            get
            {
                return this._regularJob;
            }
            set
            {
                Framework.Configuration.Generated.DTO.RegularJobIdentityDTO newValue;
                newValue = value;
                if (!object.Equals(this._regularJob, newValue))
                {
                    this._regularJob = newValue;
                }
            }
        }
    }
    
    public partial interface IRegularJobRevisionFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        int CountingEntities
        {
            get;
            set;
        }
    }
    
    public partial interface IRegularJobRevisionFilterModelFullDTO : Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.RegularJobSimpleDTO RegularJob
        {
            get;
            set;
        }
    }
    
    public partial interface IRegularJobRevisionFilterModelRichDTO : Framework.Configuration.Generated.DTO.IRegularJobRevisionFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO))]
    public partial class UserActionObjectRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO>
    {
        
        private int _countingEntities;
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public UserActionObjectRootFilterModelSimpleDTO()
        {
        }
        
        public UserActionObjectRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.CountingEntities = source.CountingEntities;
            this.Period = source.Period;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountingEntities
        {
            get
            {
                return this._countingEntities;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._countingEntities, newValue))
                {
                    base.RaisePropertyChanging("CountingEntities");
                    this._countingEntities = newValue;
                    base.RaisePropertyChanged("CountingEntities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    base.RaisePropertyChanging("Period");
                    this._period = newValue;
                    base.RaisePropertyChanged("Period");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO))]
    public partial class UserActionObjectRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO>
    {
        
        public UserActionObjectRootFilterModelFullDTO()
        {
        }
        
        public UserActionObjectRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO>
    {
        
        private System.Collections.Generic.List<string> _actionNames = new System.Collections.Generic.List<string>();
        
        private System.Collections.Generic.List<string> _domainTypeNames = new System.Collections.Generic.List<string>();
        
        public UserActionObjectRootFilterModelRichDTO()
        {
        }
        
        public UserActionObjectRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelRichDTO source) : 
                base(source)
        {
            this.ActionNames = source.ActionNames;
            this.DomainTypeNames = source.DomainTypeNames;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ActionNames
        {
            get
            {
                return this._actionNames;
            }
            set
            {
                System.Collections.Generic.List<string> newValue;
                newValue = value;
                if (!object.Equals(this._actionNames, newValue))
                {
                    base.RaisePropertyChanging("ActionNames");
                    this._actionNames = newValue;
                    base.RaisePropertyChanged("ActionNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DomainTypeNames
        {
            get
            {
                return this._domainTypeNames;
            }
            set
            {
                System.Collections.Generic.List<string> newValue;
                newValue = value;
                if (!object.Equals(this._domainTypeNames, newValue))
                {
                    base.RaisePropertyChanging("DomainTypeNames");
                    this._domainTypeNames = newValue;
                    base.RaisePropertyChanged("DomainTypeNames");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectRootFilterModelStrictDTO
    {
        
        private System.Collections.Generic.List<string> _actionNames = new System.Collections.Generic.List<string>();
        
        private int _countingEntities;
        
        private System.Collections.Generic.List<string> _domainTypeNames = new System.Collections.Generic.List<string>();
        
        private Framework.Core.Period _period = Framework.Core.Period.Eternity;
        
        public UserActionObjectRootFilterModelStrictDTO()
        {
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForUserActionObjectRootFilterModel(this, source);
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForUserActionObjectRootFilterModel(this, source);
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForUserActionObjectRootFilterModel(this, source);
        }
        
        public UserActionObjectRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.UserActionObjectRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ActionNames
        {
            get
            {
                return this._actionNames;
            }
            set
            {
                System.Collections.Generic.List<string> newValue;
                newValue = value;
                if (!object.Equals(this._actionNames, newValue))
                {
                    this._actionNames = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountingEntities
        {
            get
            {
                return this._countingEntities;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._countingEntities, newValue))
                {
                    this._countingEntities = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DomainTypeNames
        {
            get
            {
                return this._domainTypeNames;
            }
            set
            {
                System.Collections.Generic.List<string> newValue;
                newValue = value;
                if (!object.Equals(this._domainTypeNames, newValue))
                {
                    this._domainTypeNames = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period
        {
            get
            {
                return this._period;
            }
            set
            {
                Framework.Core.Period newValue;
                newValue = value;
                if (!object.Equals(this._period, newValue))
                {
                    this._period = newValue;
                }
            }
        }
    }
    
    public partial interface IUserActionObjectRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        int CountingEntities
        {
            get;
            set;
        }
        
        Framework.Core.Period Period
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionObjectRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelSimpleDTO
    {
    }
    
    public partial interface IUserActionObjectRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.IUserActionObjectRootFilterModelFullDTO
    {
        
        System.Collections.Generic.List<string> ActionNames
        {
            get;
            set;
        }
        
        System.Collections.Generic.List<string> DomainTypeNames
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class QueueProcessingStateSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IQueueProcessingStateSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO>
    {
        
        private System.DateTime? _lastProcessedItemDateTime;
        
        private int _unprocessedCount;
        
        public QueueProcessingStateSimpleDTO()
        {
        }
        
        public QueueProcessingStateSimpleDTO(Framework.Configuration.Generated.DTO.IQueueProcessingStateSimpleDTO source) : 
                base(source)
        {
            this.LastProcessedItemDateTime = source.LastProcessedItemDateTime;
            this.UnprocessedCount = source.UnprocessedCount;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastProcessedItemDateTime
        {
            get
            {
                return this._lastProcessedItemDateTime;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._lastProcessedItemDateTime, newValue))
                {
                    base.RaisePropertyChanging("LastProcessedItemDateTime");
                    this._lastProcessedItemDateTime = newValue;
                    base.RaisePropertyChanged("LastProcessedItemDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnprocessedCount
        {
            get
            {
                return this._unprocessedCount;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._unprocessedCount, newValue))
                {
                    base.RaisePropertyChanging("UnprocessedCount");
                    this._unprocessedCount = newValue;
                    base.RaisePropertyChanged("UnprocessedCount");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.QueueProcessingStateSimpleDTO(this);
        }
    }
    
    public partial interface IQueueProcessingStateSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        System.DateTime? LastProcessedItemDateTime
        {
            get;
            set;
        }
        
        int UnprocessedCount
        {
            get;
            set;
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.RegularJobEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.RegularJobView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobRichDTO))]
    public partial class RegularJobSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IRegularJobSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.RegularJobIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.RegularJobSimpleDTO>
    {
        
        private System.DateTime _expectedNextStartTime;
        
        private string _function;
        
        private System.DateTime? _lastPulseTime;
        
        private string _name;
        
        private Framework.Configuration.Generated.DTO.ShedulerTime _shedulerTime;
        
        private Framework.Configuration.Generated.DTO.RegularJobState _state;
        
        private long _version;
        
        private bool _wrapUpSession;
        
        public RegularJobSimpleDTO()
        {
        }
        
        public RegularJobSimpleDTO(Framework.Configuration.Generated.DTO.IRegularJobSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public RegularJobSimpleDTO(Framework.Configuration.Generated.DTO.IRegularJobSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ExpectedNextStartTime = source.ExpectedNextStartTime;
            this.Function = source.Function;
            this.LastPulseTime = source.LastPulseTime;
            this.Name = source.Name;
            if (!object.ReferenceEquals(source.ShedulerTime, null))
            {
                this.ShedulerTime = new Framework.Configuration.Generated.DTO.ShedulerTime(source.ShedulerTime);
            }
            this.State = source.State;
            this.Version = source.Version;
            this.WrapUpSession = source.WrapUpSession;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpectedNextStartTime
        {
            get
            {
                return this._expectedNextStartTime;
            }
            set
            {
                System.DateTime newValue;
                newValue = value;
                if (!object.Equals(this._expectedNextStartTime, newValue))
                {
                    base.RaisePropertyChanging("ExpectedNextStartTime");
                    this._expectedNextStartTime = newValue;
                    base.RaisePropertyChanged("ExpectedNextStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Function
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._function);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._function, newValue))
                {
                    base.RaisePropertyChanging("Function");
                    this._function = newValue;
                    base.RaisePropertyChanged("Function");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.RegularJobIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastPulseTime
        {
            get
            {
                return this._lastPulseTime;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._lastPulseTime, newValue))
                {
                    base.RaisePropertyChanging("LastPulseTime");
                    this._lastPulseTime = newValue;
                    base.RaisePropertyChanged("LastPulseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ShedulerTime ShedulerTime
        {
            get
            {
                return this._shedulerTime;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ShedulerTime newValue;
                newValue = value;
                if (!object.Equals(this._shedulerTime, newValue))
                {
                    base.RaisePropertyChanging("ShedulerTime");
                    this._shedulerTime = newValue;
                    base.RaisePropertyChanged("ShedulerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.RegularJobState State
        {
            get
            {
                return this._state;
            }
            set
            {
                Framework.Configuration.Generated.DTO.RegularJobState newValue;
                newValue = value;
                if (!object.Equals(this._state, newValue))
                {
                    base.RaisePropertyChanging("State");
                    this._state = newValue;
                    base.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._version, newValue))
                {
                    base.RaisePropertyChanging("Version");
                    this._version = newValue;
                    base.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WrapUpSession
        {
            get
            {
                return this._wrapUpSession;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._wrapUpSession, newValue))
                {
                    base.RaisePropertyChanging("WrapUpSession");
                    this._wrapUpSession = newValue;
                    base.RaisePropertyChanged("WrapUpSession");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.RegularJobSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.RegularJobSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.RegularJobStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobRichDTO))]
    public partial class RegularJobFullDTO : Framework.Configuration.Generated.DTO.RegularJobSimpleDTO, Framework.Configuration.Generated.DTO.IRegularJobFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO _executionResult;
        
        public RegularJobFullDTO()
        {
        }
        
        public RegularJobFullDTO(Framework.Configuration.Generated.DTO.IRegularJobFullDTO source) : 
                this(source, true)
        {
        }
        
        public RegularJobFullDTO(Framework.Configuration.Generated.DTO.IRegularJobFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ExecutionResult = source.ExecutionResult;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO ExecutionResult
        {
            get
            {
                return this._executionResult;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._executionResult, newValue))
                {
                    base.RaisePropertyChanging("ExecutionResult");
                    this._executionResult = newValue;
                    base.RaisePropertyChanged("ExecutionResult");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.RegularJobFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.RegularJobStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class RegularJobRichDTO : Framework.Configuration.Generated.DTO.RegularJobFullDTO, Framework.Configuration.Generated.DTO.IRegularJobRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobRichDTO>
    {
        
        public RegularJobRichDTO()
        {
        }
        
        public RegularJobRichDTO(Framework.Configuration.Generated.DTO.IRegularJobRichDTO source) : 
                this(source, true)
        {
        }
        
        public RegularJobRichDTO(Framework.Configuration.Generated.DTO.IRegularJobRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.RegularJobStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class RegularJobStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.RegularJobIdentityDTO>
    {
        
        private bool _active = true;
        
        private System.DateTime _expectedNextStartTime;
        
        private string _function;
        
        private System.Guid _id;
        
        private string _name;
        
        private Framework.Configuration.Generated.DTO.ShedulerTime _shedulerTime;
        
        private Framework.Configuration.Generated.DTO.RegularJobState _state;
        
        private long _version;
        
        private bool _wrapUpSession;
        
        public RegularJobStrictDTO()
        {
        }
        
        public RegularJobStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.RegularJobFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForRegularJob(this, source);
        }
        
        public RegularJobStrictDTO(Framework.Configuration.Generated.DTO.RegularJobRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RegularJobStrictDTO(Framework.Configuration.Generated.DTO.RegularJobFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.RegularJobSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForRegularJob(this, source);
        }
        
        public RegularJobStrictDTO(Framework.Configuration.Generated.DTO.RegularJobFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RegularJobStrictDTO(Framework.Configuration.Generated.DTO.RegularJobSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForRegularJob(this, source);
        }
        
        public RegularJobStrictDTO(Framework.Configuration.Generated.DTO.RegularJobSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private RegularJobStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForRegularJob(this, source);
        }
        
        private RegularJobStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private RegularJobStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForRegularJob(this, source);
        }
        
        private RegularJobStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._active, newValue))
                {
                    this._active = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpectedNextStartTime
        {
            get
            {
                return this._expectedNextStartTime;
            }
            set
            {
                System.DateTime newValue;
                newValue = value;
                if (!object.Equals(this._expectedNextStartTime, newValue))
                {
                    this._expectedNextStartTime = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Function
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._function);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._function, newValue))
                {
                    this._function = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.RegularJobIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ShedulerTime ShedulerTime
        {
            get
            {
                return this._shedulerTime;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ShedulerTime newValue;
                newValue = value;
                if (!object.Equals(this._shedulerTime, newValue))
                {
                    this._shedulerTime = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.RegularJobState State
        {
            get
            {
                return this._state;
            }
            set
            {
                Framework.Configuration.Generated.DTO.RegularJobState newValue;
                newValue = value;
                if (!object.Equals(this._state, newValue))
                {
                    this._state = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._version, newValue))
                {
                    this._version = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WrapUpSession
        {
            get
            {
                return this._wrapUpSession;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._wrapUpSession, newValue))
                {
                    this._wrapUpSession = newValue;
                }
            }
        }
    }
    
    public partial interface IRegularJobSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        System.DateTime ExpectedNextStartTime
        {
            get;
            set;
        }
        
        string Function
        {
            get;
            set;
        }
        
        System.DateTime? LastPulseTime
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Configuration.Generated.DTO.ShedulerTime ShedulerTime
        {
            get;
            set;
        }
        
        Framework.Configuration.Generated.DTO.RegularJobState State
        {
            get;
            set;
        }
        
        long Version
        {
            get;
            set;
        }
        
        bool WrapUpSession
        {
            get;
            set;
        }
    }
    
    public partial interface IRegularJobFullDTO : Framework.Configuration.Generated.DTO.IRegularJobSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO ExecutionResult
        {
            get;
            set;
        }
    }
    
    public partial interface IRegularJobRichDTO : Framework.Configuration.Generated.DTO.IRegularJobFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.RegularJobRevisionModelFullDTO))]
    public partial class RegularJobRevisionModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.IRegularJobRevisionModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobRevisionModelSimpleDTO>
    {
        
        private long _revisionNumber;
        
        public RegularJobRevisionModelSimpleDTO()
        {
        }
        
        public RegularJobRevisionModelSimpleDTO(Framework.Configuration.Generated.DTO.IRegularJobRevisionModelSimpleDTO source) : 
                base(source)
        {
            this.RevisionNumber = source.RevisionNumber;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RevisionNumber
        {
            get
            {
                return this._revisionNumber;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._revisionNumber, newValue))
                {
                    base.RaisePropertyChanging("RevisionNumber");
                    this._revisionNumber = newValue;
                    base.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.RegularJobRevisionModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionModelSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class RegularJobRevisionModelFullDTO : Framework.Configuration.Generated.DTO.RegularJobRevisionModelSimpleDTO, Framework.Configuration.Generated.DTO.IRegularJobRevisionModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.RegularJobRevisionModelFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO _executionResult;
        
        private Framework.Configuration.Generated.DTO.RegularJobSimpleDTO _extendedObject;
        
        public RegularJobRevisionModelFullDTO()
        {
        }
        
        public RegularJobRevisionModelFullDTO(Framework.Configuration.Generated.DTO.IRegularJobRevisionModelFullDTO source) : 
                base(source)
        {
            this.ExecutionResult = source.ExecutionResult;
            this.ExtendedObject = source.ExtendedObject;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO ExecutionResult
        {
            get
            {
                return this._executionResult;
            }
            set
            {
                Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._executionResult, newValue))
                {
                    base.RaisePropertyChanging("ExecutionResult");
                    this._executionResult = newValue;
                    base.RaisePropertyChanged("ExecutionResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.RegularJobSimpleDTO ExtendedObject
        {
            get
            {
                return this._extendedObject;
            }
            set
            {
                Framework.Configuration.Generated.DTO.RegularJobSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._extendedObject, newValue))
                {
                    base.RaisePropertyChanging("ExtendedObject");
                    this._extendedObject = newValue;
                    base.RaisePropertyChanged("ExtendedObject");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.RegularJobRevisionModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.RegularJobRevisionModelFullDTO(this);
        }
    }
    
    public partial interface IRegularJobRevisionModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        long RevisionNumber
        {
            get;
            set;
        }
    }
    
    public partial interface IRegularJobRevisionModelFullDTO : Framework.Configuration.Generated.DTO.IRegularJobRevisionModelSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.ExecuteRegularJobResultSimpleDTO ExecutionResult
        {
            get;
            set;
        }
        
        Framework.Configuration.Generated.DTO.RegularJobSimpleDTO ExtendedObject
        {
            get;
            set;
        }
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SequenceEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SequenceView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRichDTO))]
    public partial class SequenceSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.ISequenceSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.SequenceSimpleDTO>
    {
        
        private string _name;
        
        private long _number;
        
        public SequenceSimpleDTO()
        {
        }
        
        public SequenceSimpleDTO(Framework.Configuration.Generated.DTO.ISequenceSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public SequenceSimpleDTO(Framework.Configuration.Generated.DTO.ISequenceSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
            this.Number = source.Number;
        }
        
        public Framework.Configuration.Generated.DTO.SequenceIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Number
        {
            get
            {
                return this._number;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._number, newValue))
                {
                    base.RaisePropertyChanging("Number");
                    this._number = newValue;
                    base.RaisePropertyChanged("Number");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.SequenceSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.SequenceSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.SequenceSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.SequenceSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.SequenceSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SequenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRichDTO))]
    public partial class SequenceFullDTO : Framework.Configuration.Generated.DTO.SequenceSimpleDTO, Framework.Configuration.Generated.DTO.ISequenceFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceFullDTO>
    {
        
        public SequenceFullDTO()
        {
        }
        
        public SequenceFullDTO(Framework.Configuration.Generated.DTO.ISequenceFullDTO source) : 
                this(source, true)
        {
        }
        
        public SequenceFullDTO(Framework.Configuration.Generated.DTO.ISequenceFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.SequenceFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.SequenceFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.SequenceFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceRichDTO : Framework.Configuration.Generated.DTO.SequenceFullDTO, Framework.Configuration.Generated.DTO.ISequenceRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceRichDTO>
    {
        
        public SequenceRichDTO()
        {
        }
        
        public SequenceRichDTO(Framework.Configuration.Generated.DTO.ISequenceRichDTO source) : 
                this(source, true)
        {
        }
        
        public SequenceRichDTO(Framework.Configuration.Generated.DTO.ISequenceRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.SequenceRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.SequenceRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SequenceIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private long _number;
        
        public SequenceStrictDTO()
        {
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSequence(this, source);
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSequence(this, source);
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSequence(this, source);
        }
        
        public SequenceStrictDTO(Framework.Configuration.Generated.DTO.SequenceSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSequence(this, source);
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSequence(this, source);
        }
        
        private SequenceStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SequenceIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SequenceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Number
        {
            get
            {
                return this._number;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._number, newValue))
                {
                    this._number = newValue;
                }
            }
        }
    }
    
    public partial interface ISequenceSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
        
        long Number
        {
            get;
            set;
        }
    }
    
    public partial interface ISequenceFullDTO : Framework.Configuration.Generated.DTO.ISequenceSimpleDTO
    {
    }
    
    public partial interface ISequenceRichDTO : Framework.Configuration.Generated.DTO.ISequenceFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO))]
    public partial class SequenceCreateModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.ISequenceCreateModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO>
    {
        
        public SequenceCreateModelSimpleDTO()
        {
        }
        
        public SequenceCreateModelSimpleDTO(Framework.Configuration.Generated.DTO.ISequenceCreateModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO))]
    public partial class SequenceCreateModelFullDTO : Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO, Framework.Configuration.Generated.DTO.ISequenceCreateModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO>
    {
        
        public SequenceCreateModelFullDTO()
        {
        }
        
        public SequenceCreateModelFullDTO(Framework.Configuration.Generated.DTO.ISequenceCreateModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceCreateModelRichDTO : Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO, Framework.Configuration.Generated.DTO.ISequenceCreateModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO>
    {
        
        public SequenceCreateModelRichDTO()
        {
        }
        
        public SequenceCreateModelRichDTO(Framework.Configuration.Generated.DTO.ISequenceCreateModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceCreateModelStrictDTO
    {
        
        public SequenceCreateModelStrictDTO()
        {
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSequenceCreateModel(this, source);
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSequenceCreateModel(this, source);
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSequenceCreateModel(this, source);
        }
        
        public SequenceCreateModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceCreateModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ISequenceCreateModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ISequenceCreateModelFullDTO : Framework.Configuration.Generated.DTO.ISequenceCreateModelSimpleDTO
    {
    }
    
    public partial interface ISequenceCreateModelRichDTO : Framework.Configuration.Generated.DTO.ISequenceCreateModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO))]
    public partial class SequenceRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.ISequenceRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO>
    {
        
        public SequenceRootFilterModelSimpleDTO()
        {
        }
        
        public SequenceRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.ISequenceRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO))]
    public partial class SequenceRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.ISequenceRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO>
    {
        
        public SequenceRootFilterModelFullDTO()
        {
        }
        
        public SequenceRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.ISequenceRootFilterModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.ISequenceRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO>
    {
        
        public SequenceRootFilterModelRichDTO()
        {
        }
        
        public SequenceRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.ISequenceRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SequenceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SequenceRootFilterModelStrictDTO
    {
        
        public SequenceRootFilterModelStrictDTO()
        {
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSequenceRootFilterModel(this, source);
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSequenceRootFilterModel(this, source);
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSequenceRootFilterModel(this, source);
        }
        
        public SequenceRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SequenceRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ISequenceRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ISequenceRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.ISequenceRootFilterModelSimpleDTO
    {
    }
    
    public partial interface ISequenceRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.ISequenceRootFilterModelFullDTO
    {
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SystemConstantEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.SystemConstantView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRichDTO))]
    public partial class SystemConstantSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.ISystemConstantSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>, System.IComparable<Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO>
    {
        
        private string _code;
        
        private string _description;
        
        private bool _isManual;
        
        private string _value;
        
        public SystemConstantSimpleDTO()
        {
        }
        
        public SystemConstantSimpleDTO(Framework.Configuration.Generated.DTO.ISystemConstantSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public SystemConstantSimpleDTO(Framework.Configuration.Generated.DTO.ISystemConstantSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Code = source.Code;
            this.Description = source.Description;
            this.IsManual = source.IsManual;
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Code
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._code);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._code, newValue))
                {
                    base.RaisePropertyChanging("Code");
                    this._code = newValue;
                    base.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManual
        {
            get
            {
                return this._isManual;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isManual, newValue))
                {
                    base.RaisePropertyChanging("IsManual");
                    this._isManual = newValue;
                    base.RaisePropertyChanged("IsManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO other)
        {
            return this.Code.CompareTo(other.Code);
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SystemConstantStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Code;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRichDTO))]
    public partial class SystemConstantFullDTO : Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO, Framework.Configuration.Generated.DTO.ISystemConstantFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SystemConstantFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _type;
        
        public SystemConstantFullDTO()
        {
        }
        
        public SystemConstantFullDTO(Framework.Configuration.Generated.DTO.ISystemConstantFullDTO source) : 
                this(source, true)
        {
        }
        
        public SystemConstantFullDTO(Framework.Configuration.Generated.DTO.ISystemConstantFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantRichDTO : Framework.Configuration.Generated.DTO.SystemConstantFullDTO, Framework.Configuration.Generated.DTO.ISystemConstantRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SystemConstantRichDTO>
    {
        
        public SystemConstantRichDTO()
        {
        }
        
        public SystemConstantRichDTO(Framework.Configuration.Generated.DTO.ISystemConstantRichDTO source) : 
                this(source, true)
        {
        }
        
        public SystemConstantRichDTO(Framework.Configuration.Generated.DTO.ISystemConstantRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO>
    {
        
        private string _description;
        
        private System.Guid _id;
        
        private string _value;
        
        public SystemConstantStrictDTO()
        {
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSystemConstant(this, source);
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSystemConstant(this, source);
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSystemConstant(this, source);
        }
        
        public SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForSystemConstant(this, source);
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForSystemConstant(this, source);
        }
        
        private SystemConstantStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    this._description = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.SystemConstantIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    this._value = newValue;
                }
            }
        }
    }
    
    public partial interface ISystemConstantSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Code
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool IsManual
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface ISystemConstantFullDTO : Framework.Configuration.Generated.DTO.ISystemConstantSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get;
            set;
        }
    }
    
    public partial interface ISystemConstantRichDTO : Framework.Configuration.Generated.DTO.ISystemConstantFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO))]
    public partial class SystemConstantRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO>
    {
        
        public SystemConstantRootFilterModelSimpleDTO()
        {
        }
        
        public SystemConstantRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO))]
    public partial class SystemConstantRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO>
    {
        
        public SystemConstantRootFilterModelFullDTO()
        {
        }
        
        public SystemConstantRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO>
    {
        
        public SystemConstantRootFilterModelRichDTO()
        {
        }
        
        public SystemConstantRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class SystemConstantRootFilterModelStrictDTO
    {
        
        public SystemConstantRootFilterModelStrictDTO()
        {
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForSystemConstantRootFilterModel(this, source);
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForSystemConstantRootFilterModel(this, source);
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForSystemConstantRootFilterModel(this, source);
        }
        
        public SystemConstantRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.SystemConstantRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ISystemConstantRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ISystemConstantRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelSimpleDTO
    {
    }
    
    public partial interface ISystemConstantRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.ISystemConstantRootFilterModelFullDTO
    {
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.TargetSystemEdit)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.TargetSystemView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRichDTO))]
    public partial class TargetSystemSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.ITargetSystemSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO>
    {
        
        private bool _isBase;
        
        private bool _isMain;
        
        private bool _isRevision;
        
        private string _name;
        
        private bool _subscriptionEnabled;
        
        public TargetSystemSimpleDTO()
        {
        }
        
        public TargetSystemSimpleDTO(Framework.Configuration.Generated.DTO.ITargetSystemSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TargetSystemSimpleDTO(Framework.Configuration.Generated.DTO.ITargetSystemSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.IsBase = source.IsBase;
            this.IsMain = source.IsMain;
            this.IsRevision = source.IsRevision;
            this.Name = source.Name;
            this.SubscriptionEnabled = source.SubscriptionEnabled;
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBase
        {
            get
            {
                return this._isBase;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isBase, newValue))
                {
                    base.RaisePropertyChanging("IsBase");
                    this._isBase = newValue;
                    base.RaisePropertyChanged("IsBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isMain, newValue))
                {
                    base.RaisePropertyChanging("IsMain");
                    this._isMain = newValue;
                    base.RaisePropertyChanged("IsMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRevision
        {
            get
            {
                return this._isRevision;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isRevision, newValue))
                {
                    base.RaisePropertyChanging("IsRevision");
                    this._isRevision = newValue;
                    base.RaisePropertyChanged("IsRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._subscriptionEnabled, newValue))
                {
                    base.RaisePropertyChanging("SubscriptionEnabled");
                    this._subscriptionEnabled = newValue;
                    base.RaisePropertyChanged("SubscriptionEnabled");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.TargetSystemStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRichDTO))]
    public partial class TargetSystemFullDTO : Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO, Framework.Configuration.Generated.DTO.ITargetSystemFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.TargetSystemFullDTO>
    {
        
        public TargetSystemFullDTO()
        {
        }
        
        public TargetSystemFullDTO(Framework.Configuration.Generated.DTO.ITargetSystemFullDTO source) : 
                this(source, true)
        {
        }
        
        public TargetSystemFullDTO(Framework.Configuration.Generated.DTO.ITargetSystemFullDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemStrictDTO(this);
        }
    }
    
    [Framework.Restriction.UniqueGroupAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemRichDTO : Framework.Configuration.Generated.DTO.TargetSystemFullDTO, Framework.Configuration.Generated.DTO.ITargetSystemRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.TargetSystemRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.DomainTypeRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> _domainTypes = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeRichDTO>();
        
        public TargetSystemRichDTO()
        {
        }
        
        public TargetSystemRichDTO(Framework.Configuration.Generated.DTO.ITargetSystemRichDTO source) : 
                this(source, true)
        {
        }
        
        public TargetSystemRichDTO(Framework.Configuration.Generated.DTO.ITargetSystemRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.DomainTypes, null))
            {
                this.DomainTypes = Framework.Core.EnumerableExtensions.ToObservableCollection(source.DomainTypes, domainType => domainType.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.DomainTypeRichDTO>.Details
        {
            get
            {
                return this.DomainTypes;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> DomainTypes
        {
            get
            {
                return this._domainTypes;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._domainTypes, newValue))
                {
                    base.RaisePropertyChanging("DomainTypes");
                    this._domainTypes = newValue;
                    base.RaisePropertyChanged("DomainTypes");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO>
    {
        
        private System.Guid _id;
        
        private string _name;
        
        private bool _subscriptionEnabled;
        
        public TargetSystemStrictDTO()
        {
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTargetSystem(this, source);
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTargetSystem(this, source);
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTargetSystem(this, source);
        }
        
        public TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTargetSystem(this, source);
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTargetSystem(this, source);
        }
        
        private TargetSystemStrictDTO(Framework.Configuration.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    this._id = newValue;
                }
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.TargetSystemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    this._name = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._subscriptionEnabled, newValue))
                {
                    this._subscriptionEnabled = newValue;
                }
            }
        }
    }
    
    public partial interface ITargetSystemSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool IsBase
        {
            get;
            set;
        }
        
        bool IsMain
        {
            get;
            set;
        }
        
        bool IsRevision
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        bool SubscriptionEnabled
        {
            get;
            set;
        }
    }
    
    public partial interface ITargetSystemFullDTO : Framework.Configuration.Generated.DTO.ITargetSystemSimpleDTO
    {
    }
    
    public partial interface ITargetSystemRichDTO : Framework.Configuration.Generated.DTO.ITargetSystemFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.DomainTypeRichDTO> DomainTypes
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO))]
    public partial class TargetSystemRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.BaseAbstractDTO, Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO>
    {
        
        private bool? _isMain;
        
        private bool? _isRevision;
        
        private bool? _subscriptionEnabled;
        
        public TargetSystemRootFilterModelSimpleDTO()
        {
        }
        
        public TargetSystemRootFilterModelSimpleDTO(Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.IsMain = source.IsMain;
            this.IsRevision = source.IsRevision;
            this.SubscriptionEnabled = source.SubscriptionEnabled;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isMain, newValue))
                {
                    base.RaisePropertyChanging("IsMain");
                    this._isMain = newValue;
                    base.RaisePropertyChanged("IsMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsRevision
        {
            get
            {
                return this._isRevision;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isRevision, newValue))
                {
                    base.RaisePropertyChanging("IsRevision");
                    this._isRevision = newValue;
                    base.RaisePropertyChanged("IsRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._subscriptionEnabled, newValue))
                {
                    base.RaisePropertyChanging("SubscriptionEnabled");
                    this._subscriptionEnabled = newValue;
                    base.RaisePropertyChanged("SubscriptionEnabled");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO))]
    public partial class TargetSystemRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO, Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO>
    {
        
        public TargetSystemRootFilterModelFullDTO()
        {
        }
        
        public TargetSystemRootFilterModelFullDTO(Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO, Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO>
    {
        
        public TargetSystemRootFilterModelRichDTO()
        {
        }
        
        public TargetSystemRootFilterModelRichDTO(Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO(this);
        }
        
        public override Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class TargetSystemRootFilterModelStrictDTO
    {
        
        private bool? _isMain;
        
        private bool? _isRevision;
        
        private bool? _subscriptionEnabled;
        
        public TargetSystemRootFilterModelStrictDTO()
        {
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTargetSystemRootFilterModel(this, source);
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelRichDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService) : 
                this(((Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTargetSystemRootFilterModel(this, source);
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelFullDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO source, Framework.Configuration.Generated.DTO.IConfigurationClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTargetSystemRootFilterModel(this, source);
        }
        
        public TargetSystemRootFilterModelStrictDTO(Framework.Configuration.Generated.DTO.TargetSystemRootFilterModelSimpleDTO source) : 
                this(source, Framework.Configuration.Generated.DTO.ConfigurationClientPrimitiveDTOMappingService.Default)
        {
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isMain, newValue))
                {
                    this._isMain = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsRevision
        {
            get
            {
                return this._isRevision;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isRevision, newValue))
                {
                    this._isRevision = newValue;
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? SubscriptionEnabled
        {
            get
            {
                return this._subscriptionEnabled;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._subscriptionEnabled, newValue))
                {
                    this._subscriptionEnabled = newValue;
                }
            }
        }
    }
    
    public partial interface ITargetSystemRootFilterModelSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAbstractDTO
    {
        
        bool? IsMain
        {
            get;
            set;
        }
        
        bool? IsRevision
        {
            get;
            set;
        }
        
        bool? SubscriptionEnabled
        {
            get;
            set;
        }
    }
    
    public partial interface ITargetSystemRootFilterModelFullDTO : Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelSimpleDTO
    {
    }
    
    public partial interface ITargetSystemRootFilterModelRichDTO : Framework.Configuration.Generated.DTO.ITargetSystemRootFilterModelFullDTO
    {
    }
    
    [Framework.Configuration.ConfigurationEditDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.UserActionView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionRichDTO))]
    public partial class UserActionSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IUserActionSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.UserActionIdentityDTO>, Framework.Persistent.IVisualIdentityObject
    {
        
        private string _name;
        
        public UserActionSimpleDTO()
        {
        }
        
        public UserActionSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public UserActionSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Name = source.Name;
        }
        
        public Framework.Configuration.Generated.DTO.UserActionIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.UserActionIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.UserActionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.UserActionSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.UserActionSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionRichDTO))]
    public partial class UserActionFullDTO : Framework.Configuration.Generated.DTO.UserActionSimpleDTO, Framework.Configuration.Generated.DTO.IUserActionFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public UserActionFullDTO()
        {
        }
        
        public UserActionFullDTO(Framework.Configuration.Generated.DTO.IUserActionFullDTO source) : 
                this(source, true)
        {
        }
        
        public UserActionFullDTO(Framework.Configuration.Generated.DTO.IUserActionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.DomainType = source.DomainType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.UserActionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.UserActionFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionRichDTO : Framework.Configuration.Generated.DTO.UserActionFullDTO, Framework.Configuration.Generated.DTO.IUserActionRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionRichDTO>, Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> _objectIdentities = new System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO>();
        
        public UserActionRichDTO()
        {
        }
        
        public UserActionRichDTO(Framework.Configuration.Generated.DTO.IUserActionRichDTO source) : 
                this(source, true)
        {
        }
        
        public UserActionRichDTO(Framework.Configuration.Generated.DTO.IUserActionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.ObjectIdentities, null))
            {
                this.ObjectIdentities = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ObjectIdentities, userActionObject => userActionObject.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> Framework.Persistent.IMaster<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO>.Details
        {
            get
            {
                return this.ObjectIdentities;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> ObjectIdentities
        {
            get
            {
                return this._objectIdentities;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._objectIdentities, newValue))
                {
                    base.RaisePropertyChanging("ObjectIdentities");
                    this._objectIdentities = newValue;
                    base.RaisePropertyChanged("ObjectIdentities");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.UserActionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.UserActionRichDTO(this);
        }
    }
    
    public partial interface IUserActionSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionFullDTO : Framework.Configuration.Generated.DTO.IUserActionSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionRichDTO : Framework.Configuration.Generated.DTO.IUserActionFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO> ObjectIdentities
        {
            get;
            set;
        }
    }
    
    [Framework.Configuration.ConfigurationViewDomainObjectAttribute(Framework.Configuration.ConfigurationSecurityOperationCode.Disabled)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO))]
    public partial class UserActionObjectSimpleDTO : Framework.Configuration.Generated.DTO.BaseAuditPersistentDTO, Framework.Configuration.Generated.DTO.IUserActionObjectSimpleDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO>, Framework.Persistent.IVisualIdentityObject
    {
        
        private string _domainTypeName;
        
        private string _name;
        
        private System.Guid _objectIdentity;
        
        private string _userActionName;
        
        public UserActionObjectSimpleDTO()
        {
        }
        
        public UserActionObjectSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionObjectSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public UserActionObjectSimpleDTO(Framework.Configuration.Generated.DTO.IUserActionObjectSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.DomainTypeName = source.DomainTypeName;
            this.Name = source.Name;
            this.ObjectIdentity = source.ObjectIdentity;
            this.UserActionName = source.UserActionName;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainTypeName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._domainTypeName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._domainTypeName, newValue))
                {
                    base.RaisePropertyChanging("DomainTypeName");
                    this._domainTypeName = newValue;
                    base.RaisePropertyChanged("DomainTypeName");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO Identity
        {
            get
            {
                return new Framework.Configuration.Generated.DTO.UserActionObjectIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ObjectIdentity
        {
            get
            {
                return this._objectIdentity;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._objectIdentity, newValue))
                {
                    base.RaisePropertyChanging("ObjectIdentity");
                    this._objectIdentity = newValue;
                    base.RaisePropertyChanged("ObjectIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserActionName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._userActionName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._userActionName, newValue))
                {
                    base.RaisePropertyChanging("UserActionName");
                    this._userActionName = newValue;
                    base.RaisePropertyChanged("UserActionName");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO ToSimple()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Configuration.Generated.DTO.UserActionObjectRichDTO))]
    public partial class UserActionObjectFullDTO : Framework.Configuration.Generated.DTO.UserActionObjectSimpleDTO, Framework.Configuration.Generated.DTO.IUserActionObjectFullDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectFullDTO>
    {
        
        private Framework.Configuration.Generated.DTO.UserActionSimpleDTO _userAction;
        
        public UserActionObjectFullDTO()
        {
        }
        
        public UserActionObjectFullDTO(Framework.Configuration.Generated.DTO.IUserActionObjectFullDTO source) : 
                this(source, true)
        {
        }
        
        public UserActionObjectFullDTO(Framework.Configuration.Generated.DTO.IUserActionObjectFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.UserAction = source.UserAction;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Configuration.Generated.DTO.UserActionSimpleDTO UserAction
        {
            get
            {
                return this._userAction;
            }
            set
            {
                Framework.Configuration.Generated.DTO.UserActionSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._userAction, newValue))
                {
                    base.RaisePropertyChanging("UserAction");
                    this._userAction = newValue;
                    base.RaisePropertyChanged("UserAction");
                }
            }
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectFullDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectFullDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectFullDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectFullDTO ToFull()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Configuration")]
    public partial class UserActionObjectRichDTO : Framework.Configuration.Generated.DTO.UserActionObjectFullDTO, Framework.Configuration.Generated.DTO.IUserActionObjectRichDTO, System.ICloneable<Framework.Configuration.Generated.DTO.UserActionObjectRichDTO>
    {
        
        public UserActionObjectRichDTO()
        {
        }
        
        public UserActionObjectRichDTO(Framework.Configuration.Generated.DTO.IUserActionObjectRichDTO source) : 
                this(source, true)
        {
        }
        
        public UserActionObjectRichDTO(Framework.Configuration.Generated.DTO.IUserActionObjectRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Configuration.Generated.DTO.UserActionObjectRichDTO Clone(bool copyId)
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRichDTO Clone()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRichDTO(this);
        }
        
        public new Framework.Configuration.Generated.DTO.UserActionObjectRichDTO ToRich()
        {
            return new Framework.Configuration.Generated.DTO.UserActionObjectRichDTO(this);
        }
    }
    
    public partial interface IUserActionObjectSimpleDTO : Framework.Configuration.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string DomainTypeName
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        System.Guid ObjectIdentity
        {
            get;
            set;
        }
        
        string UserActionName
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionObjectFullDTO : Framework.Configuration.Generated.DTO.IUserActionObjectSimpleDTO
    {
        
        Framework.Configuration.Generated.DTO.UserActionSimpleDTO UserAction
        {
            get;
            set;
        }
    }
    
    public partial interface IUserActionObjectRichDTO : Framework.Configuration.Generated.DTO.IUserActionObjectFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class ShedulerTime : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged, Framework.Reactive.IBaseRaiseObject, System.ICloneable<Framework.Configuration.Generated.DTO.ShedulerTime>
    {
        
        private int _value;
        
        private Framework.Configuration.SheduleValueType _valueType;
        
        public ShedulerTime()
        {
        }
        
        public ShedulerTime(Framework.Configuration.Generated.DTO.ShedulerTime source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Value = source.Value;
            this.ValueType = source.ValueType;
        }
        
        System.ComponentModel.PropertyChangedEventHandler Framework.Reactive.IBaseRaiseObject.PropertyChanged
        {
            get
            {
                return this.PropertyChanged;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value
        {
            get
            {
                return this._value;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._value, newValue))
                {
                    this.RaisePropertyChanging("Value");
                    this._value = newValue;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Configuration.SheduleValueType ValueType
        {
            get
            {
                return this._valueType;
            }
            set
            {
                Framework.Configuration.SheduleValueType newValue;
                newValue = value;
                if (!object.Equals(this._valueType, newValue))
                {
                    this.RaisePropertyChanging("ValueType");
                    this._valueType = newValue;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Configuration.Generated.DTO.ShedulerTime Clone()
        {
            return new Framework.Configuration.Generated.DTO.ShedulerTime(this);
        }
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        protected void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Configuration.Domain")]
    public enum ControlSettingParamType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveOperation = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        From = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Height = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsActive = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedApply = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Order = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchState = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SortDirection = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SortOrder = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StringFilterMode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        To = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Value = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Visible = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Width = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XLocation = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YLocation = 5,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Configuration.Domain")]
    public enum ControlSettingsType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Column = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Composite = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connector = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Filter = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiValueFilter = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PropertyUnion = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RangeValueFilter = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StringValueFilter = 6,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Configuration.Domain")]
    public enum RegularJobStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initial = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Successed = 1,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Configuration.Domain")]
    public enum RegularJobState : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToProcessing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitPulse = 0,
    }
}
