//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.Configuration.BLL
{
    
    
    public partial class CodeFirstSubscriptionBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.CodeFirstSubscription, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.ICodeFirstSubscriptionBLL
    {
        
		partial void Initialize();
        
        public CodeFirstSubscriptionBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.CodeFirstSubscription> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class CodeFirstSubscriptionBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.ICodeFirstSubscriptionBLL, Framework.Configuration.BLL.CodeFirstSubscriptionBLL, Framework.Configuration.Domain.CodeFirstSubscription>, Framework.Configuration.BLL.ICodeFirstSubscriptionBLLFactory
    {
        
        public CodeFirstSubscriptionBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class DomainObjectEventBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.DomainObjectEvent, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.IDomainObjectEventBLL
    {
        
		partial void Initialize();
        
        public DomainObjectEventBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.DomainObjectEvent> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class DomainObjectEventBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.IDomainObjectEventBLL, Framework.Configuration.BLL.DomainObjectEventBLL, Framework.Configuration.Domain.DomainObjectEvent>, Framework.Configuration.BLL.IDomainObjectEventBLLFactory
    {
        
        public DomainObjectEventBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class DomainObjectModificationBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.DomainObjectModification, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.IDomainObjectModificationBLL
    {
        
		partial void Initialize();
        
        public DomainObjectModificationBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.DomainObjectModification> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class DomainObjectModificationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.IDomainObjectModificationBLL, Framework.Configuration.BLL.DomainObjectModificationBLL, Framework.Configuration.Domain.DomainObjectModification>, Framework.Configuration.BLL.IDomainObjectModificationBLLFactory
    {
        
        public DomainObjectModificationBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class DomainObjectNotificationBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.DomainObjectNotification, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.IDomainObjectNotificationBLL
    {
        
		partial void Initialize();
        
        public DomainObjectNotificationBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.DomainObjectNotification> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class DomainObjectNotificationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.IDomainObjectNotificationBLL, Framework.Configuration.BLL.DomainObjectNotificationBLL, Framework.Configuration.Domain.DomainObjectNotification>, Framework.Configuration.BLL.IDomainObjectNotificationBLLFactory
    {
        
        public DomainObjectNotificationBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class DomainTypeBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.DomainType, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.IDomainTypeBLL
    {
        
		partial void Initialize();
        
        public DomainTypeBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.DomainType> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class DomainTypeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.IDomainTypeBLL, Framework.Configuration.BLL.DomainTypeBLL, Framework.Configuration.Domain.DomainType>, Framework.Configuration.BLL.IDomainTypeBLLFactory
    {
        
        public DomainTypeBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class ExceptionMessageBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.ExceptionMessage, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.IExceptionMessageBLL
    {
        
		partial void Initialize();
        
        public ExceptionMessageBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.ExceptionMessage> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class ExceptionMessageBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.IExceptionMessageBLL, Framework.Configuration.BLL.ExceptionMessageBLL, Framework.Configuration.Domain.ExceptionMessage>, Framework.Configuration.BLL.IExceptionMessageBLLFactory
    {
        
        public ExceptionMessageBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class NamedLockBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.NamedLock, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.INamedLockBLL
    {
        
		partial void Initialize();
        
        public NamedLockBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.NamedLock> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class NamedLockBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.INamedLockBLL, Framework.Configuration.BLL.NamedLockBLL, Framework.Configuration.Domain.NamedLock>, Framework.Configuration.BLL.INamedLockBLLFactory
    {
        
        public NamedLockBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SentMessageBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.SentMessage, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.ISentMessageBLL
    {
        
		partial void Initialize();
        
        public SentMessageBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.SentMessage> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class SentMessageBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.ISentMessageBLL, Framework.Configuration.BLL.SentMessageBLL, Framework.Configuration.Domain.SentMessage>, Framework.Configuration.BLL.ISentMessageBLLFactory
    {
        
        public SentMessageBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SequenceBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.Sequence, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.ISequenceBLL
    {
        
		partial void Initialize();
        
        public SequenceBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.Sequence> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class SequenceBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.ISequenceBLL, Framework.Configuration.BLL.SequenceBLL, Framework.Configuration.Domain.Sequence>, Framework.Configuration.BLL.ISequenceBLLFactory
    {
        
        public SequenceBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SystemConstantBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.SystemConstant, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.ISystemConstantBLL
    {
        
		partial void Initialize();
        
        public SystemConstantBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.SystemConstant> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class SystemConstantBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.ISystemConstantBLL, Framework.Configuration.BLL.SystemConstantBLL, Framework.Configuration.Domain.SystemConstant>, Framework.Configuration.BLL.ISystemConstantBLLFactory
    {
        
        public SystemConstantBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TargetSystemBLL : Framework.Configuration.BLL.SecurityDomainBLLBase<Framework.Configuration.Domain.TargetSystem, Framework.DomainDriven.BLL.BLLBaseOperation>, Framework.Configuration.BLL.ITargetSystemBLL
    {
        
		partial void Initialize();
        
        public TargetSystemBLL(Framework.Configuration.BLL.IConfigurationBLLContext context, Framework.SecuritySystem.ISecurityProvider<Framework.Configuration.Domain.TargetSystem> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
            this.Initialize();
        }
    }
    
    public partial class TargetSystemBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.BLL.ITargetSystemBLL, Framework.Configuration.BLL.TargetSystemBLL, Framework.Configuration.Domain.TargetSystem>, Framework.Configuration.BLL.ITargetSystemBLLFactory
    {
        
        public TargetSystemBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class ConfigurationBLLFactoryContainer : Framework.DomainDriven.BLL.BLLContextContainer<Framework.Configuration.BLL.IConfigurationBLLContext>, Framework.Configuration.BLL.IConfigurationBLLFactoryContainer
    {
        
        private Framework.Configuration.BLL.ICodeFirstSubscriptionBLL codeFirstSubscriptionBLL;
        
        private Framework.Configuration.BLL.ConfigurationDefaultBLLFactory defaultBLLFactory;
        
        private Framework.Configuration.BLL.IDomainObjectEventBLL domainObjectEventBLL;
        
        private Framework.Configuration.BLL.IDomainObjectModificationBLL domainObjectModificationBLL;
        
        private Framework.Configuration.BLL.IDomainObjectNotificationBLL domainObjectNotificationBLL;
        
        private Framework.Configuration.BLL.IDomainTypeBLL domainTypeBLL;
        
        private Framework.Configuration.BLL.IExceptionMessageBLL exceptionMessageBLL;
        
        private Framework.Configuration.BLL.ConfigurationImplementedBLLFactory implementedBLLFactory;
        
        private Framework.Configuration.BLL.INamedLockBLL namedLockBLL;
        
        private Framework.Configuration.BLL.ISentMessageBLL sentMessageBLL;
        
        private Framework.Configuration.BLL.ISequenceBLL sequenceBLL;
        
        private Framework.Configuration.BLL.ISystemConstantBLL systemConstantBLL;
        
        private Framework.Configuration.BLL.ITargetSystemBLL targetSystemBLL;
        
        public ConfigurationBLLFactoryContainer(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
        
        public Framework.Configuration.BLL.ICodeFirstSubscriptionBLL CodeFirstSubscription
        {
            get
            {
                if (object.ReferenceEquals(this.codeFirstSubscriptionBLL, null))
                {
                    this.codeFirstSubscriptionBLL = this.CodeFirstSubscriptionFactory.Create();
                }
                return this.codeFirstSubscriptionBLL;
            }
        }
        
        public Framework.Configuration.BLL.ICodeFirstSubscriptionBLLFactory CodeFirstSubscriptionFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.ICodeFirstSubscriptionBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid> Default
        {
            get
            {
                if (object.ReferenceEquals(this.defaultBLLFactory, null))
                {
                    this.defaultBLLFactory = new Framework.Configuration.BLL.ConfigurationDefaultBLLFactory(this.Context);
                }
                return this.defaultBLLFactory;
            }
        }
        
        public Framework.Configuration.BLL.IDomainObjectEventBLL DomainObjectEvent
        {
            get
            {
                if (object.ReferenceEquals(this.domainObjectEventBLL, null))
                {
                    this.domainObjectEventBLL = this.DomainObjectEventFactory.Create();
                }
                return this.domainObjectEventBLL;
            }
        }
        
        public Framework.Configuration.BLL.IDomainObjectEventBLLFactory DomainObjectEventFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.IDomainObjectEventBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.IDomainObjectModificationBLL DomainObjectModification
        {
            get
            {
                if (object.ReferenceEquals(this.domainObjectModificationBLL, null))
                {
                    this.domainObjectModificationBLL = this.DomainObjectModificationFactory.Create();
                }
                return this.domainObjectModificationBLL;
            }
        }
        
        public Framework.Configuration.BLL.IDomainObjectModificationBLLFactory DomainObjectModificationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.IDomainObjectModificationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.IDomainObjectNotificationBLL DomainObjectNotification
        {
            get
            {
                if (object.ReferenceEquals(this.domainObjectNotificationBLL, null))
                {
                    this.domainObjectNotificationBLL = this.DomainObjectNotificationFactory.Create();
                }
                return this.domainObjectNotificationBLL;
            }
        }
        
        public Framework.Configuration.BLL.IDomainObjectNotificationBLLFactory DomainObjectNotificationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.IDomainObjectNotificationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.IDomainTypeBLL DomainType
        {
            get
            {
                if (object.ReferenceEquals(this.domainTypeBLL, null))
                {
                    this.domainTypeBLL = this.DomainTypeFactory.Create();
                }
                return this.domainTypeBLL;
            }
        }
        
        public Framework.Configuration.BLL.IDomainTypeBLLFactory DomainTypeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.IDomainTypeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.IExceptionMessageBLL ExceptionMessage
        {
            get
            {
                if (object.ReferenceEquals(this.exceptionMessageBLL, null))
                {
                    this.exceptionMessageBLL = this.ExceptionMessageFactory.Create();
                }
                return this.exceptionMessageBLL;
            }
        }
        
        public Framework.Configuration.BLL.IExceptionMessageBLLFactory ExceptionMessageFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.IExceptionMessageBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid> Implemented
        {
            get
            {
                if (object.ReferenceEquals(this.implementedBLLFactory, null))
                {
                    this.implementedBLLFactory = new Framework.Configuration.BLL.ConfigurationImplementedBLLFactory(this.Context);
                }
                return this.implementedBLLFactory;
            }
        }
        
        public Framework.Configuration.BLL.INamedLockBLL NamedLock
        {
            get
            {
                if (object.ReferenceEquals(this.namedLockBLL, null))
                {
                    this.namedLockBLL = this.NamedLockFactory.Create();
                }
                return this.namedLockBLL;
            }
        }
        
        public Framework.Configuration.BLL.INamedLockBLLFactory NamedLockFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.INamedLockBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.ISentMessageBLL SentMessage
        {
            get
            {
                if (object.ReferenceEquals(this.sentMessageBLL, null))
                {
                    this.sentMessageBLL = this.SentMessageFactory.Create();
                }
                return this.sentMessageBLL;
            }
        }
        
        public Framework.Configuration.BLL.ISentMessageBLLFactory SentMessageFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.ISentMessageBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.ISequenceBLL Sequence
        {
            get
            {
                if (object.ReferenceEquals(this.sequenceBLL, null))
                {
                    this.sequenceBLL = this.SequenceFactory.Create();
                }
                return this.sequenceBLL;
            }
        }
        
        public Framework.Configuration.BLL.ISequenceBLLFactory SequenceFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.ISequenceBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.ISystemConstantBLL SystemConstant
        {
            get
            {
                if (object.ReferenceEquals(this.systemConstantBLL, null))
                {
                    this.systemConstantBLL = this.SystemConstantFactory.Create();
                }
                return this.systemConstantBLL;
            }
        }
        
        public Framework.Configuration.BLL.ISystemConstantBLLFactory SystemConstantFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.ISystemConstantBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.Configuration.BLL.ITargetSystemBLL TargetSystem
        {
            get
            {
                if (object.ReferenceEquals(this.targetSystemBLL, null))
                {
                    this.targetSystemBLL = this.TargetSystemFactory.Create();
                }
                return this.targetSystemBLL;
            }
        }
        
        public Framework.Configuration.BLL.ITargetSystemBLLFactory TargetSystemFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Framework.Configuration.BLL.ITargetSystemBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public static void RegisterBLLFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.ICodeFirstSubscriptionBLLFactory, Framework.Configuration.BLL.CodeFirstSubscriptionBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.CodeFirstSubscription, System.Guid>, Framework.Configuration.Domain.CodeFirstSubscription>, Framework.Configuration.BLL.ICodeFirstSubscriptionBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.IDomainObjectEventBLLFactory, Framework.Configuration.BLL.DomainObjectEventBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.DomainObjectEvent, System.Guid>, Framework.Configuration.Domain.DomainObjectEvent>, Framework.Configuration.BLL.IDomainObjectEventBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.IDomainObjectModificationBLLFactory, Framework.Configuration.BLL.DomainObjectModificationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.DomainObjectModification, System.Guid>, Framework.Configuration.Domain.DomainObjectModification>, Framework.Configuration.BLL.IDomainObjectModificationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.IDomainObjectNotificationBLLFactory, Framework.Configuration.BLL.DomainObjectNotificationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.DomainObjectNotification, System.Guid>, Framework.Configuration.Domain.DomainObjectNotification>, Framework.Configuration.BLL.IDomainObjectNotificationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.IDomainTypeBLLFactory, Framework.Configuration.BLL.DomainTypeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.DomainType, System.Guid>, Framework.Configuration.Domain.DomainType>, Framework.Configuration.BLL.IDomainTypeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.IExceptionMessageBLLFactory, Framework.Configuration.BLL.ExceptionMessageBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.ExceptionMessage, System.Guid>, Framework.Configuration.Domain.ExceptionMessage>, Framework.Configuration.BLL.IExceptionMessageBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.INamedLockBLLFactory, Framework.Configuration.BLL.NamedLockBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.NamedLock, System.Guid>, Framework.Configuration.Domain.NamedLock>, Framework.Configuration.BLL.INamedLockBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.ISentMessageBLLFactory, Framework.Configuration.BLL.SentMessageBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.SentMessage, System.Guid>, Framework.Configuration.Domain.SentMessage>, Framework.Configuration.BLL.ISentMessageBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.ISequenceBLLFactory, Framework.Configuration.BLL.SequenceBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.Sequence, System.Guid>, Framework.Configuration.Domain.Sequence>, Framework.Configuration.BLL.ISequenceBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.ISystemConstantBLLFactory, Framework.Configuration.BLL.SystemConstantBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.SystemConstant, System.Guid>, Framework.Configuration.Domain.SystemConstant>, Framework.Configuration.BLL.ISystemConstantBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.Configuration.BLL.ITargetSystemBLLFactory, Framework.Configuration.BLL.TargetSystemBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, Framework.Configuration.Domain.TargetSystem, System.Guid>, Framework.Configuration.Domain.TargetSystem>, Framework.Configuration.BLL.ITargetSystemBLLFactory>(serviceCollection);
        }
    }
    
    public partial class ConfigurationDefaultBLLFactory : Framework.DomainDriven.BLL.Security.DefaultSecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid>, Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        public ConfigurationDefaultBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
        
        public override Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> Create<TDomainObject>(Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityProvider)
        {
            return new Framework.Configuration.BLL.SecurityDomainBLLBase<TDomainObject>(this.Context, securityProvider);
        }
    }
    
    public partial class ConfigurationImplementedBLLFactory : Framework.DomainDriven.BLL.Security.ImplementedSecurityBLLFactory<Framework.Configuration.BLL.IConfigurationBLLContext, Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid>, Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<Framework.Configuration.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        public ConfigurationImplementedBLLFactory(Framework.Configuration.BLL.IConfigurationBLLContext context) : 
                base(context)
        {
        }
        
        protected override Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<Framework.Configuration.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> CreateDefault<TDomainObject>(Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityProvider)
        {
            return new Framework.Configuration.BLL.SecurityDomainBLLBase<TDomainObject>(this.Context, securityProvider);
        }
    }
}
