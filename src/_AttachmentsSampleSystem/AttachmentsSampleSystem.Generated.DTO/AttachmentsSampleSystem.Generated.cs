//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttachmentsSampleSystem.Generated.DTO
{
    
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public enum AttachmentsSampleSystemBusinessUnitSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessUnitView = AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.BusinessUnitView,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.EmployeeEdit,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public enum AttachmentsSampleSystemHRDepartmentSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeEdit = AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.EmployeeEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentView = AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.HRDepartmentView,
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "DomainObjectSecurityOperationCode", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public enum AttachmentsSampleSystemLocationSecurityOperationCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRDepartmentEdit = AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.HRDepartmentEdit,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocationView = AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.LocationView,
    }
    
    [AttachmentsSampleSystem.AttachmentsSampleSystemEditDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.BusinessUnitEdit)]
    [AttachmentsSampleSystem.AttachmentsSampleSystemViewDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.BusinessUnitView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public struct BusinessUnitIdentityDTO : System.IEquatable<AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO EmptyField = new AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public BusinessUnitIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public BusinessUnitIdentityDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public BusinessUnitIdentityDTO(AttachmentsSampleSystem.Domain.BusinessUnit domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public BusinessUnitIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Empty
        {
            get
            {
                return AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO) == other.GetType()) && this.Equals(((AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO)(other)));
        }
        
        public bool Equals(AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public AttachmentsSampleSystem.Domain.BusinessUnit ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnit(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [AttachmentsSampleSystem.AttachmentsSampleSystemEditDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.EmployeeEdit)]
    [AttachmentsSampleSystem.AttachmentsSampleSystemViewDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.EmployeeView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Employee), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public struct EmployeeIdentityDTO : System.IEquatable<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO EmptyField = new AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EmployeeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EmployeeIdentityDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public EmployeeIdentityDTO(AttachmentsSampleSystem.Domain.Employee domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public EmployeeIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO Empty
        {
            get
            {
                return AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO) == other.GetType()) && this.Equals(((AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO)(other)));
        }
        
        public bool Equals(AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public AttachmentsSampleSystem.Domain.Employee ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployee(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [AttachmentsSampleSystem.AttachmentsSampleSystemEditDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.HRDepartmentEdit)]
    [AttachmentsSampleSystem.AttachmentsSampleSystemViewDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.HRDepartmentView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public struct HRDepartmentIdentityDTO : System.IEquatable<AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO EmptyField = new AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public HRDepartmentIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public HRDepartmentIdentityDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public HRDepartmentIdentityDTO(AttachmentsSampleSystem.Domain.HRDepartment domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public HRDepartmentIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Empty
        {
            get
            {
                return AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO) == other.GetType()) && this.Equals(((AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO)(other)));
        }
        
        public bool Equals(AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public AttachmentsSampleSystem.Domain.HRDepartment ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartment(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [AttachmentsSampleSystem.AttachmentsSampleSystemEditDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.LocationEdit)]
    [AttachmentsSampleSystem.AttachmentsSampleSystemViewDomainObjectAttribute(AttachmentsSampleSystem.AttachmentsSampleSystemSecurityOperationCode.LocationView)]
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "IdentityDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public struct LocationIdentityDTO : System.IEquatable<AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO EmptyField = new AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public LocationIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public LocationIdentityDTO(AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public LocationIdentityDTO(AttachmentsSampleSystem.Domain.Location domainObject)
        {
            if (object.ReferenceEquals(domainObject, null))
            {
                throw new System.ArgumentNullException("domainObject");
            }
            this.Id = domainObject.Id;
        }
        
        public LocationIdentityDTO(string id) : 
                this(new System.Guid(id))
        {
        }
        
        public static AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO Empty
        {
            get
            {
                return AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO identity1, AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO) == other.GetType()) && this.Equals(((AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO)(other)));
        }
        
        public bool Equals(AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public AttachmentsSampleSystem.Domain.Location ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToLocation(this);
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.DomainObjectBase), "BaseAbstractDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public abstract partial class BaseAbstractDTO
    {
        
        protected BaseAbstractDTO()
        {
        }
        
        protected BaseAbstractDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.DomainObjectBase domainObject)
        {
            mappingService.MapDomainObjectBase(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.PersistentDomainObjectBase), "BasePersistentDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public abstract partial class BasePersistentDTO : AttachmentsSampleSystem.Generated.DTO.BaseAbstractDTO, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        protected BasePersistentDTO()
        {
        }
        
        protected BasePersistentDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.PersistentDomainObjectBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapPersistentDomainObjectBase(domainObject, this);
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public bool IsNew
        {
            get
            {
                return (default(System.Guid) == this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.AuditPersistentDomainObjectBase), "BaseAuditPersistentDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public abstract partial class BaseAuditPersistentDTO : AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? CreateDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ModifyDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        protected BaseAuditPersistentDTO()
        {
        }
        
        protected BaseAuditPersistentDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.AuditPersistentDomainObjectBase domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapAuditPersistentDomainObjectBase(domainObject, this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class BusinessUnitVisualDTO : AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public BusinessUnitVisualDTO()
        {
        }
        
        public BusinessUnitVisualDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.BusinessUnitFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.BusinessUnitRichDTO))]
    public partial class BusinessUnitSimpleDTO : AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period Period = Framework.Core.Period.Eternity;
        
        public BusinessUnitSimpleDTO()
        {
        }
        
        public BusinessUnitSimpleDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public BusinessUnitSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
        
        public virtual AttachmentsSampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.BusinessUnitRichDTO))]
    public partial class BusinessUnitFullDTO : AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO Parent;
        
        public BusinessUnitFullDTO()
        {
        }
        
        public BusinessUnitFullDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class BusinessUnitRichDTO : AttachmentsSampleSystem.Generated.DTO.BusinessUnitFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AttachmentsSampleSystem.Generated.DTO.BusinessUnitRichDTO> Children = new System.Collections.Generic.List<AttachmentsSampleSystem.Generated.DTO.BusinessUnitRichDTO>();
        
        public BusinessUnitRichDTO()
        {
        }
        
        public BusinessUnitRichDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.BusinessUnit domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapBusinessUnit(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.BusinessUnitStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.BusinessUnitStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.BusinessUnit), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class BusinessUnitStrictDTO : Framework.DomainDriven.IMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.BusinessUnit, System.Guid>, Framework.DomainDriven.IConvertMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.BusinessUnit>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public BusinessUnitStrictDTO()
        {
        }
        
        public BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitRichDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BusinessUnitFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitRichDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitFullDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitFullDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForBusinessUnit(this, source);
        }
        
        public BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForBusinessUnit(this, source);
        }
        
        private BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForBusinessUnit(this, source);
        }
        
        private BusinessUnitStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.BusinessUnitIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.BusinessUnit domainObject)
        {
            mappingService.MapBusinessUnit(this, domainObject);
        }
        
        public AttachmentsSampleSystem.Domain.BusinessUnit ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToBusinessUnit(this);
        }
        
        public AttachmentsSampleSystem.Domain.BusinessUnit ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToBusinessUnit(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Employee), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.EmployeeFullDTO))]
    public partial class EmployeeSimpleDTO : AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BirthDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period? CoreBusinessUnitPeriod;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? DismissDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period EducationDuration = Framework.Core.Period.Eternity;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? HireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interphone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCandidate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landlinephone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastActionDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAccountName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Domain.Inline.FioShort NameEng;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Domain.Inline.Fio NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Domain.Inline.Fio NameRussian;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NonValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalCellPhone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? Pin;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PlannedHireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period WorkPeriod = Framework.Core.Period.Eternity;
        
        public EmployeeSimpleDTO()
        {
        }
        
        public EmployeeSimpleDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Employee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployee(domainObject, this);
        }
        
        public EmployeeSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        public virtual AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Employee), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class EmployeeFullDTO : AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.BusinessUnitSimpleDTO CoreBusinessUnit;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO HRDepartment;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO Location;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO Ppm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO VacationApprover;
        
        public EmployeeFullDTO()
        {
        }
        
        public EmployeeFullDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Employee domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapEmployee(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Employee), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class EmployeeStrictDTO : Framework.DomainDriven.IMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.Employee, System.Guid>, Framework.DomainDriven.IConvertMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.Employee>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? BirthDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period EducationDuration;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interphone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landlinephone;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? LastActionDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Domain.Inline.FioShort NameEng;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Domain.Inline.Fio NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Domain.Inline.Fio NameRussian;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NonValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int? Pin;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? PlannedHireDate;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO Ppm;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO VacationApprover;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidateVirtualProp;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Period WorkPeriod;
        
        public EmployeeStrictDTO()
        {
        }
        
        public EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeFullDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeFullDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEmployee(this, source);
        }
        
        public EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForEmployee(this, source);
        }
        
        private EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForEmployee(this, source);
        }
        
        private EmployeeStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Employee domainObject)
        {
            mappingService.MapEmployee(this, domainObject);
        }
        
        public AttachmentsSampleSystem.Domain.Employee ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployee(this);
        }
        
        public AttachmentsSampleSystem.Domain.Employee ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToEmployee(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Employee), "UpdateDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class EmployeeUpdateDTO : Framework.Persistent.IUpdateDTO, Framework.DomainDriven.IMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.Employee, System.Guid>, Framework.DomainDriven.IConvertMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.Employee>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<int> Age = Framework.Core.Maybe<int>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> BirthDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<Framework.Core.Period> EducationDuration = Framework.Core.Maybe<Framework.Core.Period>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Email = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<long> ExternalId = Framework.Core.Maybe<long>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Interphone = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Landlinephone = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> LastActionDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<string> Login = Framework.Core.Maybe<string>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<AttachmentsSampleSystem.Domain.Inline.FioShort> NameEng = Framework.Core.Maybe<AttachmentsSampleSystem.Domain.Inline.FioShort>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<AttachmentsSampleSystem.Domain.Inline.Fio> NameNative = Framework.Core.Maybe<AttachmentsSampleSystem.Domain.Inline.Fio>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<AttachmentsSampleSystem.Domain.Inline.Fio> NameRussian = Framework.Core.Maybe<AttachmentsSampleSystem.Domain.Inline.Fio>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime> NonValidateVirtualProp = Framework.Core.Maybe<System.DateTime>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<int?> Pin = Framework.Core.Maybe<System.Nullable<int>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime?> PlannedHireDate = Framework.Core.Maybe<System.Nullable<System.DateTime>>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO> Ppm = Framework.Core.Maybe<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO> VacationApprover = Framework.Core.Maybe<AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<System.DateTime> ValidateVirtualProp = Framework.Core.Maybe<System.DateTime>.Nothing;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Core.Maybe<Framework.Core.Period> WorkPeriod = Framework.Core.Maybe<Framework.Core.Period>.Nothing;
        
        public EmployeeUpdateDTO()
        {
        }
        
        public EmployeeUpdateDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployee(this, currentSource);
        }
        
        public EmployeeUpdateDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource) : 
                this(currentSource, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EmployeeUpdateDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO baseSource, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapEmployee(this, currentSource, baseSource);
        }
        
        public EmployeeUpdateDTO(AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO currentSource, AttachmentsSampleSystem.Generated.DTO.EmployeeStrictDTO baseSource) : 
                this(currentSource, baseSource, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO(this.Id);
            }
        }
        
        public bool IsEmpty
        {
            get
            {
                return !this.Age.HasValue && !this.BirthDate.HasValue && !this.EducationDuration.HasValue && !this.Email.HasValue && !this.ExternalId.HasValue && !this.Interphone.HasValue && !this.Landlinephone.HasValue && !this.LastActionDate.HasValue && !this.Login.HasValue && !this.NameEng.HasValue && !this.NameNative.HasValue && !this.NameRussian.HasValue && !this.NonValidateVirtualProp.HasValue && !this.Pin.HasValue && !this.PlannedHireDate.HasValue && !this.Ppm.HasValue && !this.VacationApprover.HasValue && !this.ValidateVirtualProp.HasValue && !this.WorkPeriod.HasValue;
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void Compress()
        {
        }
        
        public void MapToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Employee domainObject)
        {
            mappingService.MapEmployee(this, domainObject);
        }
        
        public AttachmentsSampleSystem.Domain.Employee ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToEmployee(this);
        }
        
        public AttachmentsSampleSystem.Domain.Employee ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToEmployee(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class HRDepartmentVisualDTO : AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public HRDepartmentVisualDTO()
        {
        }
        
        public HRDepartmentVisualDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.HRDepartmentFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.HRDepartmentRichDTO))]
    public partial class HRDepartmentSimpleDTO : AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        public HRDepartmentSimpleDTO()
        {
        }
        
        public HRDepartmentSimpleDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public HRDepartmentSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
        
        public virtual AttachmentsSampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.HRDepartmentRichDTO))]
    public partial class HRDepartmentFullDTO : AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.EmployeeSimpleDTO Head;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO Location;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO Parent;
        
        public HRDepartmentFullDTO()
        {
        }
        
        public HRDepartmentFullDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class HRDepartmentRichDTO : AttachmentsSampleSystem.Generated.DTO.HRDepartmentFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AttachmentsSampleSystem.Generated.DTO.HRDepartmentRichDTO> Children = new System.Collections.Generic.List<AttachmentsSampleSystem.Generated.DTO.HRDepartmentRichDTO>();
        
        public HRDepartmentRichDTO()
        {
        }
        
        public HRDepartmentRichDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.HRDepartment domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapHRDepartment(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.HRDepartmentStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.HRDepartmentStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.HRDepartment), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class HRDepartmentStrictDTO : Framework.DomainDriven.IMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.HRDepartment, System.Guid>, Framework.DomainDriven.IConvertMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.HRDepartment>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExternalId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.EmployeeIdentityDTO Head;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLegal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProduction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNative;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public HRDepartmentStrictDTO()
        {
        }
        
        public HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentRichDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.HRDepartmentFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentRichDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentFullDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentFullDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForHRDepartment(this, source);
        }
        
        public HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.HRDepartmentSimpleDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForHRDepartment(this, source);
        }
        
        private HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForHRDepartment(this, source);
        }
        
        private HRDepartmentStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.HRDepartmentIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.HRDepartment domainObject)
        {
            mappingService.MapHRDepartment(this, domainObject);
        }
        
        public AttachmentsSampleSystem.Domain.HRDepartment ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToHRDepartment(this);
        }
        
        public AttachmentsSampleSystem.Domain.HRDepartment ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToHRDepartment(this, allowCreate);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "VisualDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class LocationVisualDTO : AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public LocationVisualDTO()
        {
        }
        
        public LocationVisualDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "SimpleDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.LocationFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.LocationRichDTO))]
    public partial class LocationSimpleDTO : AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public LocationSimpleDTO()
        {
        }
        
        public LocationSimpleDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public LocationSimpleDTO(string id)
        {
            this.Id = new System.Guid(id);
        }
        
        public AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
        
        public virtual AttachmentsSampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "FullDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AttachmentsSampleSystem.Generated.DTO.LocationRichDTO))]
    public partial class LocationFullDTO : AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO Parent;
        
        public LocationFullDTO()
        {
        }
        
        public LocationFullDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "RichDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class LocationRichDTO : AttachmentsSampleSystem.Generated.DTO.LocationFullDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AttachmentsSampleSystem.Generated.DTO.LocationRichDTO> Children = new System.Collections.Generic.List<AttachmentsSampleSystem.Generated.DTO.LocationRichDTO>();
        
        public LocationRichDTO()
        {
        }
        
        public LocationRichDTO(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Location domainObject) : 
                base(mappingService, domainObject)
        {
            mappingService.MapLocation(domainObject, this);
        }
        
        public override AttachmentsSampleSystem.Generated.DTO.LocationStrictDTO ToStrict()
        {
            return new AttachmentsSampleSystem.Generated.DTO.LocationStrictDTO(this);
        }
    }
    
    [Framework.DomainDriven.DTOFileTypeAttribute(typeof(AttachmentsSampleSystem.Domain.Location), "StrictDTO", Framework.DomainDriven.Serialization.DTORole.Client)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="AttachmentsSampleSystem")]
    public partial class LocationStrictDTO : Framework.DomainDriven.IMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.Location, System.Guid>, Framework.DomainDriven.IConvertMappingObject<AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService, AttachmentsSampleSystem.Domain.Location>, Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO>, Framework.Persistent.IVersionObject<long>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO Parent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public LocationStrictDTO()
        {
        }
        
        public LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.LocationRichDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.LocationFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.LocationRichDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.LocationFullDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.LocationFullDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForLocation(this, source);
        }
        
        public LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.LocationSimpleDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService) : 
                this(((AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForLocation(this, source);
        }
        
        private LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source, AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForLocation(this, source);
        }
        
        private LocationStrictDTO(AttachmentsSampleSystem.Generated.DTO.BasePersistentDTO source) : 
                this(source, AttachmentsSampleSystem.Generated.DTO.AttachmentsSampleSystemClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO Identity
        {
            get
            {
                return new AttachmentsSampleSystem.Generated.DTO.LocationIdentityDTO(this.Id);
            }
        }
        
        long Framework.Persistent.IVersionObject<long>.Version
        {
            get
            {
                return this.Version;
            }
        }
        
        public void MapToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, AttachmentsSampleSystem.Domain.Location domainObject)
        {
            mappingService.MapLocation(this, domainObject);
        }
        
        public AttachmentsSampleSystem.Domain.Location ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService)
        {
            return mappingService.ToLocation(this);
        }
        
        public AttachmentsSampleSystem.Domain.Location ToDomainObject(AttachmentsSampleSystem.Generated.DTO.IAttachmentsSampleSystemDTOMappingService mappingService, bool allowCreate)
        {
            return mappingService.ToLocation(this, allowCreate);
        }
    }
}
