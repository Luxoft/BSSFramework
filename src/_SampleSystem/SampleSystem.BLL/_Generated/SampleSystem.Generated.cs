//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleSystem.BLL
{
    
    
    public partial class ApprovePermissionWorkflowDomainObjectBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.ApprovePermissionWorkflowDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLL
    {
        
        public ApprovePermissionWorkflowDomainObjectBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ApprovePermissionWorkflowDomainObject> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class ApprovePermissionWorkflowDomainObjectBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLL, SampleSystem.BLL.ApprovePermissionWorkflowDomainObjectBLL, SampleSystem.Domain.ApprovePermissionWorkflowDomainObject>, SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLLFactory
    {
        
        public ApprovePermissionWorkflowDomainObjectBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class BusinessUnitBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.BusinessUnit, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IBusinessUnitBLL
    {
        
        public BusinessUnitBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnit> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class BusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IBusinessUnitBLL, SampleSystem.BLL.BusinessUnitBLL, SampleSystem.Domain.BusinessUnit>, SampleSystem.BLL.IBusinessUnitBLLFactory
    {
        
        public BusinessUnitBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class BusinessUnitHrDepartmentBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.BusinessUnitHrDepartment, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IBusinessUnitHrDepartmentBLL
    {
        
        public BusinessUnitHrDepartmentBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnitHrDepartment> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class BusinessUnitHrDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IBusinessUnitHrDepartmentBLL, SampleSystem.BLL.BusinessUnitHrDepartmentBLL, SampleSystem.Domain.BusinessUnitHrDepartment>, SampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory
    {
        
        public BusinessUnitHrDepartmentBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class BusinessUnitManagerCommissionLinkBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.BusinessUnitManagerCommissionLink, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL
    {
        
        public BusinessUnitManagerCommissionLinkBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnitManagerCommissionLink> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class BusinessUnitManagerCommissionLinkBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL, SampleSystem.BLL.BusinessUnitManagerCommissionLinkBLL, SampleSystem.Domain.BusinessUnitManagerCommissionLink>, SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory
    {
        
        public BusinessUnitManagerCommissionLinkBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class BusinessUnitTypeBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.BusinessUnitType, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IBusinessUnitTypeBLL
    {
        
        public BusinessUnitTypeBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.BusinessUnitType> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class BusinessUnitTypeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IBusinessUnitTypeBLL, SampleSystem.BLL.BusinessUnitTypeBLL, SampleSystem.Domain.BusinessUnitType>, SampleSystem.BLL.IBusinessUnitTypeBLLFactory
    {
        
        public BusinessUnitTypeBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class CompanyLegalEntityBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.CompanyLegalEntity, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ICompanyLegalEntityBLL
    {
        
        public CompanyLegalEntityBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.CompanyLegalEntity> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class CompanyLegalEntityBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ICompanyLegalEntityBLL, SampleSystem.BLL.CompanyLegalEntityBLL, SampleSystem.Domain.CompanyLegalEntity>, SampleSystem.BLL.ICompanyLegalEntityBLLFactory
    {
        
        public CompanyLegalEntityBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class CountryBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Country, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ICountryBLL
    {
    }
    
    public partial class CountryBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ICountryBLL, SampleSystem.BLL.CountryBLL, SampleSystem.Domain.Country>, SampleSystem.BLL.ICountryBLLFactory
    {
        
        public CountryBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Employee, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeeBLL
    {
        
        public EmployeeBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Employee> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeeBLL, SampleSystem.BLL.EmployeeBLL, SampleSystem.Domain.Employee>, SampleSystem.BLL.IEmployeeBLLFactory
    {
        
        public EmployeeBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeInformationBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeeInformation, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeeInformationBLL
    {
        
        public EmployeeInformationBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeInformation> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeInformationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeeInformationBLL, SampleSystem.BLL.EmployeeInformationBLL, SampleSystem.Domain.EmployeeInformation>, SampleSystem.BLL.IEmployeeInformationBLLFactory
    {
        
        public EmployeeInformationBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeePhotoBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeePhoto, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeePhotoBLL
    {
        
        public EmployeePhotoBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeePhoto> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeePhotoBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeePhotoBLL, SampleSystem.BLL.EmployeePhotoBLL, SampleSystem.Domain.EmployeePhoto>, SampleSystem.BLL.IEmployeePhotoBLLFactory
    {
        
        public EmployeePhotoBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeePositionBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeePosition, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeePositionBLL
    {
        
        public EmployeePositionBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeePosition> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeePositionBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeePositionBLL, SampleSystem.BLL.EmployeePositionBLL, SampleSystem.Domain.EmployeePosition>, SampleSystem.BLL.IEmployeePositionBLLFactory
    {
        
        public EmployeePositionBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeRegistrationTypeBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeeRegistrationType, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeeRegistrationTypeBLL
    {
        
        public EmployeeRegistrationTypeBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeRegistrationType> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeRegistrationTypeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeeRegistrationTypeBLL, SampleSystem.BLL.EmployeeRegistrationTypeBLL, SampleSystem.Domain.EmployeeRegistrationType>, SampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory
    {
        
        public EmployeeRegistrationTypeBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeRoleBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeeRole, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeeRoleBLL
    {
        
        public EmployeeRoleBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeRole> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeRoleBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeeRoleBLL, SampleSystem.BLL.EmployeeRoleBLL, SampleSystem.Domain.EmployeeRole>, SampleSystem.BLL.IEmployeeRoleBLLFactory
    {
        
        public EmployeeRoleBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeRoleDegreeBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeeRoleDegree, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeeRoleDegreeBLL
    {
        
        public EmployeeRoleDegreeBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeRoleDegree> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeRoleDegreeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeeRoleDegreeBLL, SampleSystem.BLL.EmployeeRoleDegreeBLL, SampleSystem.Domain.EmployeeRoleDegree>, SampleSystem.BLL.IEmployeeRoleDegreeBLLFactory
    {
        
        public EmployeeRoleDegreeBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class EmployeeSpecializationBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EmployeeSpecialization, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IEmployeeSpecializationBLL
    {
        
        public EmployeeSpecializationBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EmployeeSpecialization> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class EmployeeSpecializationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IEmployeeSpecializationBLL, SampleSystem.BLL.EmployeeSpecializationBLL, SampleSystem.Domain.EmployeeSpecialization>, SampleSystem.BLL.IEmployeeSpecializationBLLFactory
    {
        
        public EmployeeSpecializationBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class Location1676BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EnversBug1676.Location1676, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ILocation1676BLL
    {
        
        public Location1676BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EnversBug1676.Location1676> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class Location1676BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ILocation1676BLL, SampleSystem.BLL.Location1676BLL, SampleSystem.Domain.EnversBug1676.Location1676>, SampleSystem.BLL.ILocation1676BLLFactory
    {
        
        public Location1676BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class WorkingCalendar1676BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.EnversBug1676.WorkingCalendar1676, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IWorkingCalendar1676BLL
    {
        
        public WorkingCalendar1676BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.EnversBug1676.WorkingCalendar1676> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class WorkingCalendar1676BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IWorkingCalendar1676BLL, SampleSystem.BLL.WorkingCalendar1676BLL, SampleSystem.Domain.EnversBug1676.WorkingCalendar1676>, SampleSystem.BLL.IWorkingCalendar1676BLLFactory
    {
        
        public WorkingCalendar1676BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class Example1BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Example1, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IExample1BLL
    {
        
        public Example1BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Example1> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class Example1BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IExample1BLL, SampleSystem.BLL.Example1BLL, SampleSystem.Domain.Example1>, SampleSystem.BLL.IExample1BLLFactory
    {
        
        public Example1BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class HRDepartmentBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.HRDepartment, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IHRDepartmentBLL
    {
        
        public HRDepartmentBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.HRDepartment> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class HRDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IHRDepartmentBLL, SampleSystem.BLL.HRDepartmentBLL, SampleSystem.Domain.HRDepartment>, SampleSystem.BLL.IHRDepartmentBLLFactory
    {
        
        public HRDepartmentBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class IMRequestBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.IMRequest, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IIMRequestBLL
    {
        
        public IMRequestBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.IMRequest> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class IMRequestBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IIMRequestBLL, SampleSystem.BLL.IMRequestBLL, SampleSystem.Domain.IMRequest>, SampleSystem.BLL.IIMRequestBLLFactory
    {
        
        public IMRequestBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class InformationBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Information, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IInformationBLL
    {
        
        public InformationBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Information> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class InformationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IInformationBLL, SampleSystem.BLL.InformationBLL, SampleSystem.Domain.Information>, SampleSystem.BLL.IInformationBLLFactory
    {
        
        public InformationBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class IntegrationVersionContainer1BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IIntegrationVersionContainer1BLL
    {
        
        public IntegrationVersionContainer1BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class IntegrationVersionContainer1BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IIntegrationVersionContainer1BLL, SampleSystem.BLL.IntegrationVersionContainer1BLL, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>, SampleSystem.BLL.IIntegrationVersionContainer1BLLFactory
    {
        
        public IntegrationVersionContainer1BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class IntegrationVersionContainer2BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IIntegrationVersionContainer2BLL
    {
        
        public IntegrationVersionContainer2BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class IntegrationVersionContainer2BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IIntegrationVersionContainer2BLL, SampleSystem.BLL.IntegrationVersionContainer2BLL, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>, SampleSystem.BLL.IIntegrationVersionContainer2BLLFactory
    {
        
        public IntegrationVersionContainer2BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class LocationBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Location, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ILocationBLL
    {
        
        public LocationBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Location> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class LocationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ILocationBLL, SampleSystem.BLL.LocationBLL, SampleSystem.Domain.Location>, SampleSystem.BLL.ILocationBLLFactory
    {
        
        public LocationBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class ManagementUnitBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.ManagementUnit, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IManagementUnitBLL
    {
        
        public ManagementUnitBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnit> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class ManagementUnitBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IManagementUnitBLL, SampleSystem.BLL.ManagementUnitBLL, SampleSystem.Domain.ManagementUnit>, SampleSystem.BLL.IManagementUnitBLLFactory
    {
        
        public ManagementUnitBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class ManagementUnitAndBusinessUnitLinkBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL
    {
        
        public ManagementUnitAndBusinessUnitLinkBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnitAndBusinessUnitLink> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class ManagementUnitAndBusinessUnitLinkBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL, SampleSystem.BLL.ManagementUnitAndBusinessUnitLinkBLL, SampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory
    {
        
        public ManagementUnitAndBusinessUnitLinkBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class ManagementUnitAndHRDepartmentLinkBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL
    {
        
        public ManagementUnitAndHRDepartmentLinkBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnitAndHRDepartmentLink> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class ManagementUnitAndHRDepartmentLinkBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL, SampleSystem.BLL.ManagementUnitAndHRDepartmentLinkBLL, SampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory
    {
        
        public ManagementUnitAndHRDepartmentLinkBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class ManagementUnitFluentMappingBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.ManagementUnitFluentMapping, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IManagementUnitFluentMappingBLL
    {
        
        public ManagementUnitFluentMappingBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManagementUnitFluentMapping> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class ManagementUnitFluentMappingBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IManagementUnitFluentMappingBLL, SampleSystem.BLL.ManagementUnitFluentMappingBLL, SampleSystem.Domain.ManagementUnitFluentMapping>, SampleSystem.BLL.IManagementUnitFluentMappingBLLFactory
    {
        
        public ManagementUnitFluentMappingBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestManualEmployeeProjectionBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestManualEmployeeProjectionBLL
    {
        
        public TestManualEmployeeProjectionBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestManualEmployeeProjectionBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestManualEmployeeProjectionBLL, SampleSystem.BLL.TestManualEmployeeProjectionBLL, SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection>, SampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory
    {
        
        public TestManualEmployeeProjectionBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class PrincipalBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Principal, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IPrincipalBLL
    {
        
        public PrincipalBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Principal> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class PrincipalBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IPrincipalBLL, SampleSystem.BLL.PrincipalBLL, SampleSystem.Domain.Principal>, SampleSystem.BLL.IPrincipalBLLFactory
    {
        
        public PrincipalBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class BusinessUnitProgramClassBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.BusinessUnitProgramClass, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IBusinessUnitProgramClassBLL
    {
        
        public BusinessUnitProgramClassBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.BusinessUnitProgramClass> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class BusinessUnitProgramClassBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IBusinessUnitProgramClassBLL, SampleSystem.BLL.BusinessUnitProgramClassBLL, SampleSystem.Domain.Projections.BusinessUnitProgramClass>, SampleSystem.BLL.IBusinessUnitProgramClassBLLFactory
    {
        
        public BusinessUnitProgramClassBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class CustomCompanyLegalEntityBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.CustomCompanyLegalEntity, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ICustomCompanyLegalEntityBLL
    {
        
        public CustomCompanyLegalEntityBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.CustomCompanyLegalEntity> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class CustomCompanyLegalEntityBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ICustomCompanyLegalEntityBLL, SampleSystem.BLL.CustomCompanyLegalEntityBLL, SampleSystem.Domain.Projections.CustomCompanyLegalEntity>, SampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory
    {
        
        public CustomCompanyLegalEntityBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestBusinessUnitBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestBusinessUnit, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestBusinessUnitBLL
    {
        
        public TestBusinessUnitBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestBusinessUnit> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestBusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestBusinessUnitBLL, SampleSystem.BLL.TestBusinessUnitBLL, SampleSystem.Domain.Projections.TestBusinessUnit>, SampleSystem.BLL.ITestBusinessUnitBLLFactory
    {
        
        public TestBusinessUnitBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestCustomContextSecurityObjProjectionBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL
    {
        
        public TestCustomContextSecurityObjProjectionBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestCustomContextSecurityObjProjectionBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL, SampleSystem.BLL.TestCustomContextSecurityObjProjectionBLL, SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection>, SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory
    {
        
        public TestCustomContextSecurityObjProjectionBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestDepartmentBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestDepartment, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestDepartmentBLL
    {
        
        public TestDepartmentBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestDepartment> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestDepartmentBLL, SampleSystem.BLL.TestDepartmentBLL, SampleSystem.Domain.Projections.TestDepartment>, SampleSystem.BLL.ITestDepartmentBLLFactory
    {
        
        public TestDepartmentBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestEmployeeBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestEmployee, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestEmployeeBLL
    {
        
        public TestEmployeeBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestEmployee> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestEmployeeBLL, SampleSystem.BLL.TestEmployeeBLL, SampleSystem.Domain.Projections.TestEmployee>, SampleSystem.BLL.ITestEmployeeBLLFactory
    {
        
        public TestEmployeeBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestIMRequestBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestIMRequest, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestIMRequestBLL
    {
        
        public TestIMRequestBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestIMRequest> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestIMRequestBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestIMRequestBLL, SampleSystem.BLL.TestIMRequestBLL, SampleSystem.Domain.Projections.TestIMRequest>, SampleSystem.BLL.ITestIMRequestBLLFactory
    {
        
        public TestIMRequestBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestLegacyEmployeeBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestLegacyEmployee, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestLegacyEmployeeBLL
    {
        
        public TestLegacyEmployeeBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestLegacyEmployee> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestLegacyEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestLegacyEmployeeBLL, SampleSystem.BLL.TestLegacyEmployeeBLL, SampleSystem.Domain.Projections.TestLegacyEmployee>, SampleSystem.BLL.ITestLegacyEmployeeBLLFactory
    {
        
        public TestLegacyEmployeeBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestLocationBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestLocation, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestLocationBLL
    {
        
        public TestLocationBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestLocation> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestLocationBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestLocationBLL, SampleSystem.BLL.TestLocationBLL, SampleSystem.Domain.Projections.TestLocation>, SampleSystem.BLL.ITestLocationBLLFactory
    {
        
        public TestLocationBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestLocationCollectionPropertiesBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestLocationCollectionProperties, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestLocationCollectionPropertiesBLL
    {
        
        public TestLocationCollectionPropertiesBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestLocationCollectionProperties> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestLocationCollectionPropertiesBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestLocationCollectionPropertiesBLL, SampleSystem.BLL.TestLocationCollectionPropertiesBLL, SampleSystem.Domain.Projections.TestLocationCollectionProperties>, SampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory
    {
        
        public TestLocationCollectionPropertiesBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestSecurityObjItemProjectionBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.Projections.TestSecurityObjItemProjection, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestSecurityObjItemProjectionBLL
    {
        
        public TestSecurityObjItemProjectionBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.Projections.TestSecurityObjItemProjection> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestSecurityObjItemProjectionBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestSecurityObjItemProjectionBLL, SampleSystem.BLL.TestSecurityObjItemProjectionBLL, SampleSystem.Domain.Projections.TestSecurityObjItemProjection>, SampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory
    {
        
        public TestSecurityObjItemProjectionBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class RoleRoleDegreeLinkBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.RoleRoleDegreeLink, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IRoleRoleDegreeLinkBLL
    {
        
        public RoleRoleDegreeLinkBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.RoleRoleDegreeLink> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class RoleRoleDegreeLinkBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IRoleRoleDegreeLinkBLL, SampleSystem.BLL.RoleRoleDegreeLinkBLL, SampleSystem.Domain.RoleRoleDegreeLink>, SampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory
    {
        
        public RoleRoleDegreeLinkBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SqlParserTestObjBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.SqlParserTestObj, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ISqlParserTestObjBLL
    {
        
        public SqlParserTestObjBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.SqlParserTestObj> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class SqlParserTestObjBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ISqlParserTestObjBLL, SampleSystem.BLL.SqlParserTestObjBLL, SampleSystem.Domain.SqlParserTestObj>, SampleSystem.BLL.ISqlParserTestObjBLLFactory
    {
        
        public SqlParserTestObjBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SqlParserTestObjContainerBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.SqlParserTestObjContainer, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ISqlParserTestObjContainerBLL
    {
        
        public SqlParserTestObjContainerBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.SqlParserTestObjContainer> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class SqlParserTestObjContainerBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ISqlParserTestObjContainerBLL, SampleSystem.BLL.SqlParserTestObjContainerBLL, SampleSystem.Domain.SqlParserTestObjContainer>, SampleSystem.BLL.ISqlParserTestObjContainerBLLFactory
    {
        
        public SqlParserTestObjContainerBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestCustomContextSecurityObjBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestCustomContextSecurityObj, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestCustomContextSecurityObjBLL
    {
        
        public TestCustomContextSecurityObjBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestCustomContextSecurityObj> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestCustomContextSecurityObjBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestCustomContextSecurityObjBLL, SampleSystem.BLL.TestCustomContextSecurityObjBLL, SampleSystem.Domain.TestCustomContextSecurityObj>, SampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory
    {
        
        public TestCustomContextSecurityObjBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestImmutableObjBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestImmutableObj, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestImmutableObjBLL
    {
        
        public TestImmutableObjBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestImmutableObj> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestImmutableObjBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestImmutableObjBLL, SampleSystem.BLL.TestImmutableObjBLL, SampleSystem.Domain.TestImmutableObj>, SampleSystem.BLL.ITestImmutableObjBLLFactory
    {
        
        public TestImmutableObjBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestPerformanceObjectBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestPerformanceObject, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestPerformanceObjectBLL
    {
        
        public TestPerformanceObjectBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestPerformanceObject> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestPerformanceObjectBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestPerformanceObjectBLL, SampleSystem.BLL.TestPerformanceObjectBLL, SampleSystem.Domain.TestPerformanceObject>, SampleSystem.BLL.ITestPerformanceObjectBLLFactory
    {
        
        public TestPerformanceObjectBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestPlainAuthObjectBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestPlainAuthObject, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestPlainAuthObjectBLL
    {
        
        public TestPlainAuthObjectBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestPlainAuthObject> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestPlainAuthObjectBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestPlainAuthObjectBLL, SampleSystem.BLL.TestPlainAuthObjectBLL, SampleSystem.Domain.TestPlainAuthObject>, SampleSystem.BLL.ITestPlainAuthObjectBLLFactory
    {
        
        public TestPlainAuthObjectBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestRootSecurityObjBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestRootSecurityObj, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestRootSecurityObjBLL
    {
        
        public TestRootSecurityObjBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestRootSecurityObj> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestRootSecurityObjBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestRootSecurityObjBLL, SampleSystem.BLL.TestRootSecurityObjBLL, SampleSystem.Domain.TestRootSecurityObj>, SampleSystem.BLL.ITestRootSecurityObjBLLFactory
    {
        
        public TestRootSecurityObjBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestSecurityObjItemBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestSecurityObjItem, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestSecurityObjItemBLL
    {
        
        public TestSecurityObjItemBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecurityObjItem> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestSecurityObjItemBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestSecurityObjItemBLL, SampleSystem.BLL.TestSecurityObjItemBLL, SampleSystem.Domain.TestSecurityObjItem>, SampleSystem.BLL.ITestSecurityObjItemBLLFactory
    {
        
        public TestSecurityObjItemBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestSecuritySubObjItemBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestSecuritySubObjItem, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestSecuritySubObjItemBLL
    {
        
        public TestSecuritySubObjItemBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecuritySubObjItem> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestSecuritySubObjItemBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestSecuritySubObjItemBLL, SampleSystem.BLL.TestSecuritySubObjItemBLL, SampleSystem.Domain.TestSecuritySubObjItem>, SampleSystem.BLL.ITestSecuritySubObjItemBLLFactory
    {
        
        public TestSecuritySubObjItemBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestSecuritySubObjItem2BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestSecuritySubObjItem2, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestSecuritySubObjItem2BLL
    {
        
        public TestSecuritySubObjItem2BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecuritySubObjItem2> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestSecuritySubObjItem2BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestSecuritySubObjItem2BLL, SampleSystem.BLL.TestSecuritySubObjItem2BLL, SampleSystem.Domain.TestSecuritySubObjItem2>, SampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory
    {
        
        public TestSecuritySubObjItem2BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class TestSecuritySubObjItem3BLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.TestSecuritySubObjItem3, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.ITestSecuritySubObjItem3BLL
    {
        
        public TestSecuritySubObjItem3BLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.TestSecuritySubObjItem3> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class TestSecuritySubObjItem3BLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.ITestSecuritySubObjItem3BLL, SampleSystem.BLL.TestSecuritySubObjItem3BLL, SampleSystem.Domain.TestSecuritySubObjItem3>, SampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory
    {
        
        public TestSecuritySubObjItem3BLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class WorkflowCoreExecutionErrorBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.WorkflowCoreExecutionError, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IWorkflowCoreExecutionErrorBLL
    {
        
        public WorkflowCoreExecutionErrorBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.WorkflowCoreExecutionError> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class WorkflowCoreExecutionErrorBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IWorkflowCoreExecutionErrorBLL, SampleSystem.BLL.WorkflowCoreExecutionErrorBLL, SampleSystem.Domain.WorkflowCoreExecutionError>, SampleSystem.BLL.IWorkflowCoreExecutionErrorBLLFactory
    {
        
        public WorkflowCoreExecutionErrorBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class WorkflowCoreInstanceBLL : SampleSystem.BLL.SecurityDomainBLLBase<SampleSystem.Domain.WorkflowCoreInstance, Framework.DomainDriven.BLL.BLLBaseOperation>, SampleSystem.BLL.IWorkflowCoreInstanceBLL
    {
        
        public WorkflowCoreInstanceBLL(SampleSystem.BLL.ISampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<SampleSystem.Domain.WorkflowCoreInstance> securityProvider, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityProvider, specificationEvaluator)
        {
        }
    }
    
    public partial class WorkflowCoreInstanceBLLFactory : Framework.DomainDriven.BLL.Security.SecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.BLL.IWorkflowCoreInstanceBLL, SampleSystem.BLL.WorkflowCoreInstanceBLL, SampleSystem.Domain.WorkflowCoreInstance>, SampleSystem.BLL.IWorkflowCoreInstanceBLLFactory
    {
        
        public WorkflowCoreInstanceBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SampleSystemBLLFactoryContainer : Framework.DomainDriven.BLL.BLLContextContainer<SampleSystem.BLL.ISampleSystemBLLContext>, SampleSystem.BLL.ISampleSystemBLLFactoryContainer
    {
        
        private SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLL approvePermissionWorkflowDomainObjectBLL;
        
        private SampleSystem.BLL.IBusinessUnitBLL businessUnitBLL;
        
        private SampleSystem.BLL.IBusinessUnitHrDepartmentBLL businessUnitHrDepartmentBLL;
        
        private SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL businessUnitManagerCommissionLinkBLL;
        
        private SampleSystem.BLL.IBusinessUnitProgramClassBLL businessUnitProgramClassBLL;
        
        private SampleSystem.BLL.IBusinessUnitTypeBLL businessUnitTypeBLL;
        
        private SampleSystem.BLL.ICompanyLegalEntityBLL companyLegalEntityBLL;
        
        private SampleSystem.BLL.ICountryBLL countryBLL;
        
        private SampleSystem.BLL.ICustomCompanyLegalEntityBLL customCompanyLegalEntityBLL;
        
        private SampleSystem.BLL.SampleSystemDefaultBLLFactory defaultBLLFactory;
        
        private SampleSystem.BLL.IEmployeeBLL employeeBLL;
        
        private SampleSystem.BLL.IEmployeeInformationBLL employeeInformationBLL;
        
        private SampleSystem.BLL.IEmployeePhotoBLL employeePhotoBLL;
        
        private SampleSystem.BLL.IEmployeePositionBLL employeePositionBLL;
        
        private SampleSystem.BLL.IEmployeeRegistrationTypeBLL employeeRegistrationTypeBLL;
        
        private SampleSystem.BLL.IEmployeeRoleBLL employeeRoleBLL;
        
        private SampleSystem.BLL.IEmployeeRoleDegreeBLL employeeRoleDegreeBLL;
        
        private SampleSystem.BLL.IEmployeeSpecializationBLL employeeSpecializationBLL;
        
        private SampleSystem.BLL.IExample1BLL example1BLL;
        
        private SampleSystem.BLL.IHRDepartmentBLL hRDepartmentBLL;
        
        private SampleSystem.BLL.SampleSystemImplementedBLLFactory implementedBLLFactory;
        
        private SampleSystem.BLL.IIMRequestBLL iMRequestBLL;
        
        private SampleSystem.BLL.IInformationBLL informationBLL;
        
        private SampleSystem.BLL.IIntegrationVersionContainer1BLL integrationVersionContainer1BLL;
        
        private SampleSystem.BLL.IIntegrationVersionContainer2BLL integrationVersionContainer2BLL;
        
        private SampleSystem.BLL.ILocation1676BLL location1676BLL;
        
        private SampleSystem.BLL.ILocationBLL locationBLL;
        
        private SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL managementUnitAndBusinessUnitLinkBLL;
        
        private SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL managementUnitAndHRDepartmentLinkBLL;
        
        private SampleSystem.BLL.IManagementUnitBLL managementUnitBLL;
        
        private SampleSystem.BLL.IManagementUnitFluentMappingBLL managementUnitFluentMappingBLL;
        
        private SampleSystem.BLL.IPrincipalBLL principalBLL;
        
        private SampleSystem.BLL.IRoleRoleDegreeLinkBLL roleRoleDegreeLinkBLL;
        
        private SampleSystem.BLL.ISqlParserTestObjBLL sqlParserTestObjBLL;
        
        private SampleSystem.BLL.ISqlParserTestObjContainerBLL sqlParserTestObjContainerBLL;
        
        private SampleSystem.BLL.ITestBusinessUnitBLL testBusinessUnitBLL;
        
        private SampleSystem.BLL.ITestCustomContextSecurityObjBLL testCustomContextSecurityObjBLL;
        
        private SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL testCustomContextSecurityObjProjectionBLL;
        
        private SampleSystem.BLL.ITestDepartmentBLL testDepartmentBLL;
        
        private SampleSystem.BLL.ITestEmployeeBLL testEmployeeBLL;
        
        private SampleSystem.BLL.ITestImmutableObjBLL testImmutableObjBLL;
        
        private SampleSystem.BLL.ITestIMRequestBLL testIMRequestBLL;
        
        private SampleSystem.BLL.ITestLegacyEmployeeBLL testLegacyEmployeeBLL;
        
        private SampleSystem.BLL.ITestLocationBLL testLocationBLL;
        
        private SampleSystem.BLL.ITestLocationCollectionPropertiesBLL testLocationCollectionPropertiesBLL;
        
        private SampleSystem.BLL.ITestManualEmployeeProjectionBLL testManualEmployeeProjectionBLL;
        
        private SampleSystem.BLL.ITestPerformanceObjectBLL testPerformanceObjectBLL;
        
        private SampleSystem.BLL.ITestPlainAuthObjectBLL testPlainAuthObjectBLL;
        
        private SampleSystem.BLL.ITestRootSecurityObjBLL testRootSecurityObjBLL;
        
        private SampleSystem.BLL.ITestSecurityObjItemBLL testSecurityObjItemBLL;
        
        private SampleSystem.BLL.ITestSecurityObjItemProjectionBLL testSecurityObjItemProjectionBLL;
        
        private SampleSystem.BLL.ITestSecuritySubObjItem2BLL testSecuritySubObjItem2BLL;
        
        private SampleSystem.BLL.ITestSecuritySubObjItem3BLL testSecuritySubObjItem3BLL;
        
        private SampleSystem.BLL.ITestSecuritySubObjItemBLL testSecuritySubObjItemBLL;
        
        private SampleSystem.BLL.IWorkflowCoreExecutionErrorBLL workflowCoreExecutionErrorBLL;
        
        private SampleSystem.BLL.IWorkflowCoreInstanceBLL workflowCoreInstanceBLL;
        
        private SampleSystem.BLL.IWorkingCalendar1676BLL workingCalendar1676BLL;
        
        public SampleSystemBLLFactoryContainer(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLL ApprovePermissionWorkflowDomainObject
        {
            get
            {
                if (object.ReferenceEquals(this.approvePermissionWorkflowDomainObjectBLL, null))
                {
                    this.approvePermissionWorkflowDomainObjectBLL = this.ApprovePermissionWorkflowDomainObjectFactory.Create();
                }
                return this.approvePermissionWorkflowDomainObjectBLL;
            }
        }
        
        public SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLLFactory ApprovePermissionWorkflowDomainObjectFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitBLL BusinessUnit
        {
            get
            {
                if (object.ReferenceEquals(this.businessUnitBLL, null))
                {
                    this.businessUnitBLL = this.BusinessUnitFactory.Create();
                }
                return this.businessUnitBLL;
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitBLLFactory BusinessUnitFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IBusinessUnitBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitHrDepartmentBLL BusinessUnitHrDepartment
        {
            get
            {
                if (object.ReferenceEquals(this.businessUnitHrDepartmentBLL, null))
                {
                    this.businessUnitHrDepartmentBLL = this.BusinessUnitHrDepartmentFactory.Create();
                }
                return this.businessUnitHrDepartmentBLL;
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory BusinessUnitHrDepartmentFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLL BusinessUnitManagerCommissionLink
        {
            get
            {
                if (object.ReferenceEquals(this.businessUnitManagerCommissionLinkBLL, null))
                {
                    this.businessUnitManagerCommissionLinkBLL = this.BusinessUnitManagerCommissionLinkFactory.Create();
                }
                return this.businessUnitManagerCommissionLinkBLL;
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory BusinessUnitManagerCommissionLinkFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitProgramClassBLL BusinessUnitProgramClass
        {
            get
            {
                if (object.ReferenceEquals(this.businessUnitProgramClassBLL, null))
                {
                    this.businessUnitProgramClassBLL = this.BusinessUnitProgramClassFactory.Create();
                }
                return this.businessUnitProgramClassBLL;
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitProgramClassBLLFactory BusinessUnitProgramClassFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IBusinessUnitProgramClassBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitTypeBLL BusinessUnitType
        {
            get
            {
                if (object.ReferenceEquals(this.businessUnitTypeBLL, null))
                {
                    this.businessUnitTypeBLL = this.BusinessUnitTypeFactory.Create();
                }
                return this.businessUnitTypeBLL;
            }
        }
        
        public SampleSystem.BLL.IBusinessUnitTypeBLLFactory BusinessUnitTypeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IBusinessUnitTypeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ICompanyLegalEntityBLL CompanyLegalEntity
        {
            get
            {
                if (object.ReferenceEquals(this.companyLegalEntityBLL, null))
                {
                    this.companyLegalEntityBLL = this.CompanyLegalEntityFactory.Create();
                }
                return this.companyLegalEntityBLL;
            }
        }
        
        public SampleSystem.BLL.ICompanyLegalEntityBLLFactory CompanyLegalEntityFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ICompanyLegalEntityBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ICountryBLL Country
        {
            get
            {
                if (object.ReferenceEquals(this.countryBLL, null))
                {
                    this.countryBLL = this.CountryFactory.Create();
                }
                return this.countryBLL;
            }
        }
        
        public SampleSystem.BLL.ICountryBLLFactory CountryFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ICountryBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ICustomCompanyLegalEntityBLL CustomCompanyLegalEntity
        {
            get
            {
                if (object.ReferenceEquals(this.customCompanyLegalEntityBLL, null))
                {
                    this.customCompanyLegalEntityBLL = this.CustomCompanyLegalEntityFactory.Create();
                }
                return this.customCompanyLegalEntityBLL;
            }
        }
        
        public SampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory CustomCompanyLegalEntityFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> Default
        {
            get
            {
                if (object.ReferenceEquals(this.defaultBLLFactory, null))
                {
                    this.defaultBLLFactory = new SampleSystem.BLL.SampleSystemDefaultBLLFactory(this.Context);
                }
                return this.defaultBLLFactory;
            }
        }
        
        public SampleSystem.BLL.IEmployeeBLL Employee
        {
            get
            {
                if (object.ReferenceEquals(this.employeeBLL, null))
                {
                    this.employeeBLL = this.EmployeeFactory.Create();
                }
                return this.employeeBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeeBLLFactory EmployeeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeeInformationBLL EmployeeInformation
        {
            get
            {
                if (object.ReferenceEquals(this.employeeInformationBLL, null))
                {
                    this.employeeInformationBLL = this.EmployeeInformationFactory.Create();
                }
                return this.employeeInformationBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeeInformationBLLFactory EmployeeInformationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeeInformationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeePhotoBLL EmployeePhoto
        {
            get
            {
                if (object.ReferenceEquals(this.employeePhotoBLL, null))
                {
                    this.employeePhotoBLL = this.EmployeePhotoFactory.Create();
                }
                return this.employeePhotoBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeePhotoBLLFactory EmployeePhotoFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeePhotoBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeePositionBLL EmployeePosition
        {
            get
            {
                if (object.ReferenceEquals(this.employeePositionBLL, null))
                {
                    this.employeePositionBLL = this.EmployeePositionFactory.Create();
                }
                return this.employeePositionBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeePositionBLLFactory EmployeePositionFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeePositionBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeeRegistrationTypeBLL EmployeeRegistrationType
        {
            get
            {
                if (object.ReferenceEquals(this.employeeRegistrationTypeBLL, null))
                {
                    this.employeeRegistrationTypeBLL = this.EmployeeRegistrationTypeFactory.Create();
                }
                return this.employeeRegistrationTypeBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory EmployeeRegistrationTypeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeeRoleBLL EmployeeRole
        {
            get
            {
                if (object.ReferenceEquals(this.employeeRoleBLL, null))
                {
                    this.employeeRoleBLL = this.EmployeeRoleFactory.Create();
                }
                return this.employeeRoleBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeeRoleDegreeBLL EmployeeRoleDegree
        {
            get
            {
                if (object.ReferenceEquals(this.employeeRoleDegreeBLL, null))
                {
                    this.employeeRoleDegreeBLL = this.EmployeeRoleDegreeFactory.Create();
                }
                return this.employeeRoleDegreeBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeeRoleDegreeBLLFactory EmployeeRoleDegreeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeeRoleDegreeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeeRoleBLLFactory EmployeeRoleFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeeRoleBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IEmployeeSpecializationBLL EmployeeSpecialization
        {
            get
            {
                if (object.ReferenceEquals(this.employeeSpecializationBLL, null))
                {
                    this.employeeSpecializationBLL = this.EmployeeSpecializationFactory.Create();
                }
                return this.employeeSpecializationBLL;
            }
        }
        
        public SampleSystem.BLL.IEmployeeSpecializationBLLFactory EmployeeSpecializationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IEmployeeSpecializationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IExample1BLL Example1
        {
            get
            {
                if (object.ReferenceEquals(this.example1BLL, null))
                {
                    this.example1BLL = this.Example1Factory.Create();
                }
                return this.example1BLL;
            }
        }
        
        public SampleSystem.BLL.IExample1BLLFactory Example1Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IExample1BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IHRDepartmentBLL HRDepartment
        {
            get
            {
                if (object.ReferenceEquals(this.hRDepartmentBLL, null))
                {
                    this.hRDepartmentBLL = this.HRDepartmentFactory.Create();
                }
                return this.hRDepartmentBLL;
            }
        }
        
        public SampleSystem.BLL.IHRDepartmentBLLFactory HRDepartmentFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IHRDepartmentBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid> Implemented
        {
            get
            {
                if (object.ReferenceEquals(this.implementedBLLFactory, null))
                {
                    this.implementedBLLFactory = new SampleSystem.BLL.SampleSystemImplementedBLLFactory(this.Context);
                }
                return this.implementedBLLFactory;
            }
        }
        
        public SampleSystem.BLL.IIMRequestBLL IMRequest
        {
            get
            {
                if (object.ReferenceEquals(this.iMRequestBLL, null))
                {
                    this.iMRequestBLL = this.IMRequestFactory.Create();
                }
                return this.iMRequestBLL;
            }
        }
        
        public SampleSystem.BLL.IIMRequestBLLFactory IMRequestFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IIMRequestBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IInformationBLL Information
        {
            get
            {
                if (object.ReferenceEquals(this.informationBLL, null))
                {
                    this.informationBLL = this.InformationFactory.Create();
                }
                return this.informationBLL;
            }
        }
        
        public SampleSystem.BLL.IInformationBLLFactory InformationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IInformationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IIntegrationVersionContainer1BLL IntegrationVersionContainer1
        {
            get
            {
                if (object.ReferenceEquals(this.integrationVersionContainer1BLL, null))
                {
                    this.integrationVersionContainer1BLL = this.IntegrationVersionContainer1Factory.Create();
                }
                return this.integrationVersionContainer1BLL;
            }
        }
        
        public SampleSystem.BLL.IIntegrationVersionContainer1BLLFactory IntegrationVersionContainer1Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IIntegrationVersionContainer1BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IIntegrationVersionContainer2BLL IntegrationVersionContainer2
        {
            get
            {
                if (object.ReferenceEquals(this.integrationVersionContainer2BLL, null))
                {
                    this.integrationVersionContainer2BLL = this.IntegrationVersionContainer2Factory.Create();
                }
                return this.integrationVersionContainer2BLL;
            }
        }
        
        public SampleSystem.BLL.IIntegrationVersionContainer2BLLFactory IntegrationVersionContainer2Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IIntegrationVersionContainer2BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ILocationBLL Location
        {
            get
            {
                if (object.ReferenceEquals(this.locationBLL, null))
                {
                    this.locationBLL = this.LocationFactory.Create();
                }
                return this.locationBLL;
            }
        }
        
        public SampleSystem.BLL.ILocation1676BLL Location1676
        {
            get
            {
                if (object.ReferenceEquals(this.location1676BLL, null))
                {
                    this.location1676BLL = this.Location1676Factory.Create();
                }
                return this.location1676BLL;
            }
        }
        
        public SampleSystem.BLL.ILocation1676BLLFactory Location1676Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ILocation1676BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ILocationBLLFactory LocationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ILocationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IManagementUnitBLL ManagementUnit
        {
            get
            {
                if (object.ReferenceEquals(this.managementUnitBLL, null))
                {
                    this.managementUnitBLL = this.ManagementUnitFactory.Create();
                }
                return this.managementUnitBLL;
            }
        }
        
        public SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLL ManagementUnitAndBusinessUnitLink
        {
            get
            {
                if (object.ReferenceEquals(this.managementUnitAndBusinessUnitLinkBLL, null))
                {
                    this.managementUnitAndBusinessUnitLinkBLL = this.ManagementUnitAndBusinessUnitLinkFactory.Create();
                }
                return this.managementUnitAndBusinessUnitLinkBLL;
            }
        }
        
        public SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory ManagementUnitAndBusinessUnitLinkFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLL ManagementUnitAndHRDepartmentLink
        {
            get
            {
                if (object.ReferenceEquals(this.managementUnitAndHRDepartmentLinkBLL, null))
                {
                    this.managementUnitAndHRDepartmentLinkBLL = this.ManagementUnitAndHRDepartmentLinkFactory.Create();
                }
                return this.managementUnitAndHRDepartmentLinkBLL;
            }
        }
        
        public SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory ManagementUnitAndHRDepartmentLinkFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IManagementUnitBLLFactory ManagementUnitFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IManagementUnitBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IManagementUnitFluentMappingBLL ManagementUnitFluentMapping
        {
            get
            {
                if (object.ReferenceEquals(this.managementUnitFluentMappingBLL, null))
                {
                    this.managementUnitFluentMappingBLL = this.ManagementUnitFluentMappingFactory.Create();
                }
                return this.managementUnitFluentMappingBLL;
            }
        }
        
        public SampleSystem.BLL.IManagementUnitFluentMappingBLLFactory ManagementUnitFluentMappingFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IManagementUnitFluentMappingBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IPrincipalBLL Principal
        {
            get
            {
                if (object.ReferenceEquals(this.principalBLL, null))
                {
                    this.principalBLL = this.PrincipalFactory.Create();
                }
                return this.principalBLL;
            }
        }
        
        public SampleSystem.BLL.IPrincipalBLLFactory PrincipalFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IPrincipalBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IRoleRoleDegreeLinkBLL RoleRoleDegreeLink
        {
            get
            {
                if (object.ReferenceEquals(this.roleRoleDegreeLinkBLL, null))
                {
                    this.roleRoleDegreeLinkBLL = this.RoleRoleDegreeLinkFactory.Create();
                }
                return this.roleRoleDegreeLinkBLL;
            }
        }
        
        public SampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory RoleRoleDegreeLinkFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ISqlParserTestObjBLL SqlParserTestObj
        {
            get
            {
                if (object.ReferenceEquals(this.sqlParserTestObjBLL, null))
                {
                    this.sqlParserTestObjBLL = this.SqlParserTestObjFactory.Create();
                }
                return this.sqlParserTestObjBLL;
            }
        }
        
        public SampleSystem.BLL.ISqlParserTestObjContainerBLL SqlParserTestObjContainer
        {
            get
            {
                if (object.ReferenceEquals(this.sqlParserTestObjContainerBLL, null))
                {
                    this.sqlParserTestObjContainerBLL = this.SqlParserTestObjContainerFactory.Create();
                }
                return this.sqlParserTestObjContainerBLL;
            }
        }
        
        public SampleSystem.BLL.ISqlParserTestObjContainerBLLFactory SqlParserTestObjContainerFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ISqlParserTestObjContainerBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ISqlParserTestObjBLLFactory SqlParserTestObjFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ISqlParserTestObjBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestBusinessUnitBLL TestBusinessUnit
        {
            get
            {
                if (object.ReferenceEquals(this.testBusinessUnitBLL, null))
                {
                    this.testBusinessUnitBLL = this.TestBusinessUnitFactory.Create();
                }
                return this.testBusinessUnitBLL;
            }
        }
        
        public SampleSystem.BLL.ITestBusinessUnitBLLFactory TestBusinessUnitFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestBusinessUnitBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestCustomContextSecurityObjBLL TestCustomContextSecurityObj
        {
            get
            {
                if (object.ReferenceEquals(this.testCustomContextSecurityObjBLL, null))
                {
                    this.testCustomContextSecurityObjBLL = this.TestCustomContextSecurityObjFactory.Create();
                }
                return this.testCustomContextSecurityObjBLL;
            }
        }
        
        public SampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory TestCustomContextSecurityObjFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLL TestCustomContextSecurityObjProjection
        {
            get
            {
                if (object.ReferenceEquals(this.testCustomContextSecurityObjProjectionBLL, null))
                {
                    this.testCustomContextSecurityObjProjectionBLL = this.TestCustomContextSecurityObjProjectionFactory.Create();
                }
                return this.testCustomContextSecurityObjProjectionBLL;
            }
        }
        
        public SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory TestCustomContextSecurityObjProjectionFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestDepartmentBLL TestDepartment
        {
            get
            {
                if (object.ReferenceEquals(this.testDepartmentBLL, null))
                {
                    this.testDepartmentBLL = this.TestDepartmentFactory.Create();
                }
                return this.testDepartmentBLL;
            }
        }
        
        public SampleSystem.BLL.ITestDepartmentBLLFactory TestDepartmentFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestDepartmentBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestEmployeeBLL TestEmployee
        {
            get
            {
                if (object.ReferenceEquals(this.testEmployeeBLL, null))
                {
                    this.testEmployeeBLL = this.TestEmployeeFactory.Create();
                }
                return this.testEmployeeBLL;
            }
        }
        
        public SampleSystem.BLL.ITestEmployeeBLLFactory TestEmployeeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestEmployeeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestImmutableObjBLL TestImmutableObj
        {
            get
            {
                if (object.ReferenceEquals(this.testImmutableObjBLL, null))
                {
                    this.testImmutableObjBLL = this.TestImmutableObjFactory.Create();
                }
                return this.testImmutableObjBLL;
            }
        }
        
        public SampleSystem.BLL.ITestImmutableObjBLLFactory TestImmutableObjFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestImmutableObjBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestIMRequestBLL TestIMRequest
        {
            get
            {
                if (object.ReferenceEquals(this.testIMRequestBLL, null))
                {
                    this.testIMRequestBLL = this.TestIMRequestFactory.Create();
                }
                return this.testIMRequestBLL;
            }
        }
        
        public SampleSystem.BLL.ITestIMRequestBLLFactory TestIMRequestFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestIMRequestBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestLegacyEmployeeBLL TestLegacyEmployee
        {
            get
            {
                if (object.ReferenceEquals(this.testLegacyEmployeeBLL, null))
                {
                    this.testLegacyEmployeeBLL = this.TestLegacyEmployeeFactory.Create();
                }
                return this.testLegacyEmployeeBLL;
            }
        }
        
        public SampleSystem.BLL.ITestLegacyEmployeeBLLFactory TestLegacyEmployeeFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestLegacyEmployeeBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestLocationBLL TestLocation
        {
            get
            {
                if (object.ReferenceEquals(this.testLocationBLL, null))
                {
                    this.testLocationBLL = this.TestLocationFactory.Create();
                }
                return this.testLocationBLL;
            }
        }
        
        public SampleSystem.BLL.ITestLocationCollectionPropertiesBLL TestLocationCollectionProperties
        {
            get
            {
                if (object.ReferenceEquals(this.testLocationCollectionPropertiesBLL, null))
                {
                    this.testLocationCollectionPropertiesBLL = this.TestLocationCollectionPropertiesFactory.Create();
                }
                return this.testLocationCollectionPropertiesBLL;
            }
        }
        
        public SampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory TestLocationCollectionPropertiesFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestLocationBLLFactory TestLocationFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestLocationBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestManualEmployeeProjectionBLL TestManualEmployeeProjection
        {
            get
            {
                if (object.ReferenceEquals(this.testManualEmployeeProjectionBLL, null))
                {
                    this.testManualEmployeeProjectionBLL = this.TestManualEmployeeProjectionFactory.Create();
                }
                return this.testManualEmployeeProjectionBLL;
            }
        }
        
        public SampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory TestManualEmployeeProjectionFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestPerformanceObjectBLL TestPerformanceObject
        {
            get
            {
                if (object.ReferenceEquals(this.testPerformanceObjectBLL, null))
                {
                    this.testPerformanceObjectBLL = this.TestPerformanceObjectFactory.Create();
                }
                return this.testPerformanceObjectBLL;
            }
        }
        
        public SampleSystem.BLL.ITestPerformanceObjectBLLFactory TestPerformanceObjectFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestPerformanceObjectBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestPlainAuthObjectBLL TestPlainAuthObject
        {
            get
            {
                if (object.ReferenceEquals(this.testPlainAuthObjectBLL, null))
                {
                    this.testPlainAuthObjectBLL = this.TestPlainAuthObjectFactory.Create();
                }
                return this.testPlainAuthObjectBLL;
            }
        }
        
        public SampleSystem.BLL.ITestPlainAuthObjectBLLFactory TestPlainAuthObjectFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestPlainAuthObjectBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestRootSecurityObjBLL TestRootSecurityObj
        {
            get
            {
                if (object.ReferenceEquals(this.testRootSecurityObjBLL, null))
                {
                    this.testRootSecurityObjBLL = this.TestRootSecurityObjFactory.Create();
                }
                return this.testRootSecurityObjBLL;
            }
        }
        
        public SampleSystem.BLL.ITestRootSecurityObjBLLFactory TestRootSecurityObjFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestRootSecurityObjBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestSecurityObjItemBLL TestSecurityObjItem
        {
            get
            {
                if (object.ReferenceEquals(this.testSecurityObjItemBLL, null))
                {
                    this.testSecurityObjItemBLL = this.TestSecurityObjItemFactory.Create();
                }
                return this.testSecurityObjItemBLL;
            }
        }
        
        public SampleSystem.BLL.ITestSecurityObjItemBLLFactory TestSecurityObjItemFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestSecurityObjItemBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestSecurityObjItemProjectionBLL TestSecurityObjItemProjection
        {
            get
            {
                if (object.ReferenceEquals(this.testSecurityObjItemProjectionBLL, null))
                {
                    this.testSecurityObjItemProjectionBLL = this.TestSecurityObjItemProjectionFactory.Create();
                }
                return this.testSecurityObjItemProjectionBLL;
            }
        }
        
        public SampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory TestSecurityObjItemProjectionFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestSecuritySubObjItemBLL TestSecuritySubObjItem
        {
            get
            {
                if (object.ReferenceEquals(this.testSecuritySubObjItemBLL, null))
                {
                    this.testSecuritySubObjItemBLL = this.TestSecuritySubObjItemFactory.Create();
                }
                return this.testSecuritySubObjItemBLL;
            }
        }
        
        public SampleSystem.BLL.ITestSecuritySubObjItem2BLL TestSecuritySubObjItem2
        {
            get
            {
                if (object.ReferenceEquals(this.testSecuritySubObjItem2BLL, null))
                {
                    this.testSecuritySubObjItem2BLL = this.TestSecuritySubObjItem2Factory.Create();
                }
                return this.testSecuritySubObjItem2BLL;
            }
        }
        
        public SampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory TestSecuritySubObjItem2Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestSecuritySubObjItem3BLL TestSecuritySubObjItem3
        {
            get
            {
                if (object.ReferenceEquals(this.testSecuritySubObjItem3BLL, null))
                {
                    this.testSecuritySubObjItem3BLL = this.TestSecuritySubObjItem3Factory.Create();
                }
                return this.testSecuritySubObjItem3BLL;
            }
        }
        
        public SampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory TestSecuritySubObjItem3Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.ITestSecuritySubObjItemBLLFactory TestSecuritySubObjItemFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.ITestSecuritySubObjItemBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IWorkflowCoreExecutionErrorBLL WorkflowCoreExecutionError
        {
            get
            {
                if (object.ReferenceEquals(this.workflowCoreExecutionErrorBLL, null))
                {
                    this.workflowCoreExecutionErrorBLL = this.WorkflowCoreExecutionErrorFactory.Create();
                }
                return this.workflowCoreExecutionErrorBLL;
            }
        }
        
        public SampleSystem.BLL.IWorkflowCoreExecutionErrorBLLFactory WorkflowCoreExecutionErrorFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IWorkflowCoreExecutionErrorBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IWorkflowCoreInstanceBLL WorkflowCoreInstance
        {
            get
            {
                if (object.ReferenceEquals(this.workflowCoreInstanceBLL, null))
                {
                    this.workflowCoreInstanceBLL = this.WorkflowCoreInstanceFactory.Create();
                }
                return this.workflowCoreInstanceBLL;
            }
        }
        
        public SampleSystem.BLL.IWorkflowCoreInstanceBLLFactory WorkflowCoreInstanceFactory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IWorkflowCoreInstanceBLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public SampleSystem.BLL.IWorkingCalendar1676BLL WorkingCalendar1676
        {
            get
            {
                if (object.ReferenceEquals(this.workingCalendar1676BLL, null))
                {
                    this.workingCalendar1676BLL = this.WorkingCalendar1676Factory.Create();
                }
                return this.workingCalendar1676BLL;
            }
        }
        
        public SampleSystem.BLL.IWorkingCalendar1676BLLFactory WorkingCalendar1676Factory
        {
            get
            {
                return Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleSystem.BLL.IWorkingCalendar1676BLLFactory>(this.Context.ServiceProvider);
            }
        }
        
        public static void RegisterBLLFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLLFactory, SampleSystem.BLL.ApprovePermissionWorkflowDomainObjectBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ApprovePermissionWorkflowDomainObject, System.Guid>, SampleSystem.Domain.ApprovePermissionWorkflowDomainObject>, SampleSystem.BLL.IApprovePermissionWorkflowDomainObjectBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IBusinessUnitBLLFactory, SampleSystem.BLL.BusinessUnitBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnit, System.Guid>, SampleSystem.Domain.BusinessUnit>, SampleSystem.BLL.IBusinessUnitBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory, SampleSystem.BLL.BusinessUnitHrDepartmentBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitHrDepartment, System.Guid>, SampleSystem.Domain.BusinessUnitHrDepartment>, SampleSystem.BLL.IBusinessUnitHrDepartmentBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory, SampleSystem.BLL.BusinessUnitManagerCommissionLinkBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Guid>, SampleSystem.Domain.BusinessUnitManagerCommissionLink>, SampleSystem.BLL.IBusinessUnitManagerCommissionLinkBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IBusinessUnitTypeBLLFactory, SampleSystem.BLL.BusinessUnitTypeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.BusinessUnitType, System.Guid>, SampleSystem.Domain.BusinessUnitType>, SampleSystem.BLL.IBusinessUnitTypeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ICompanyLegalEntityBLLFactory, SampleSystem.BLL.CompanyLegalEntityBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.CompanyLegalEntity, System.Guid>, SampleSystem.Domain.CompanyLegalEntity>, SampleSystem.BLL.ICompanyLegalEntityBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ICountryBLLFactory, SampleSystem.BLL.CountryBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Country, System.Guid>, SampleSystem.Domain.Country>, SampleSystem.BLL.ICountryBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeeBLLFactory, SampleSystem.BLL.EmployeeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Employee, System.Guid>, SampleSystem.Domain.Employee>, SampleSystem.BLL.IEmployeeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeeInformationBLLFactory, SampleSystem.BLL.EmployeeInformationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeInformation, System.Guid>, SampleSystem.Domain.EmployeeInformation>, SampleSystem.BLL.IEmployeeInformationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeePhotoBLLFactory, SampleSystem.BLL.EmployeePhotoBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePhoto, System.Guid>, SampleSystem.Domain.EmployeePhoto>, SampleSystem.BLL.IEmployeePhotoBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeePositionBLLFactory, SampleSystem.BLL.EmployeePositionBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeePosition, System.Guid>, SampleSystem.Domain.EmployeePosition>, SampleSystem.BLL.IEmployeePositionBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory, SampleSystem.BLL.EmployeeRegistrationTypeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRegistrationType, System.Guid>, SampleSystem.Domain.EmployeeRegistrationType>, SampleSystem.BLL.IEmployeeRegistrationTypeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeeRoleBLLFactory, SampleSystem.BLL.EmployeeRoleBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRole, System.Guid>, SampleSystem.Domain.EmployeeRole>, SampleSystem.BLL.IEmployeeRoleBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeeRoleDegreeBLLFactory, SampleSystem.BLL.EmployeeRoleDegreeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeRoleDegree, System.Guid>, SampleSystem.Domain.EmployeeRoleDegree>, SampleSystem.BLL.IEmployeeRoleDegreeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IEmployeeSpecializationBLLFactory, SampleSystem.BLL.EmployeeSpecializationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EmployeeSpecialization, System.Guid>, SampleSystem.Domain.EmployeeSpecialization>, SampleSystem.BLL.IEmployeeSpecializationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ILocation1676BLLFactory, SampleSystem.BLL.Location1676BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EnversBug1676.Location1676, System.Guid>, SampleSystem.Domain.EnversBug1676.Location1676>, SampleSystem.BLL.ILocation1676BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IWorkingCalendar1676BLLFactory, SampleSystem.BLL.WorkingCalendar1676BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.Guid>, SampleSystem.Domain.EnversBug1676.WorkingCalendar1676>, SampleSystem.BLL.IWorkingCalendar1676BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IExample1BLLFactory, SampleSystem.BLL.Example1BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Example1, System.Guid>, SampleSystem.Domain.Example1>, SampleSystem.BLL.IExample1BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IHRDepartmentBLLFactory, SampleSystem.BLL.HRDepartmentBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.HRDepartment, System.Guid>, SampleSystem.Domain.HRDepartment>, SampleSystem.BLL.IHRDepartmentBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IIMRequestBLLFactory, SampleSystem.BLL.IMRequestBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IMRequest, System.Guid>, SampleSystem.Domain.IMRequest>, SampleSystem.BLL.IIMRequestBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IInformationBLLFactory, SampleSystem.BLL.InformationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Information, System.Guid>, SampleSystem.Domain.Information>, SampleSystem.BLL.IInformationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IIntegrationVersionContainer1BLLFactory, SampleSystem.BLL.IntegrationVersionContainer1BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.Guid>, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>, SampleSystem.BLL.IIntegrationVersionContainer1BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IIntegrationVersionContainer2BLLFactory, SampleSystem.BLL.IntegrationVersionContainer2BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.Guid>, SampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>, SampleSystem.BLL.IIntegrationVersionContainer2BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ILocationBLLFactory, SampleSystem.BLL.LocationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Location, System.Guid>, SampleSystem.Domain.Location>, SampleSystem.BLL.ILocationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IManagementUnitBLLFactory, SampleSystem.BLL.ManagementUnitBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnit, System.Guid>, SampleSystem.Domain.ManagementUnit>, SampleSystem.BLL.IManagementUnitBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory, SampleSystem.BLL.ManagementUnitAndBusinessUnitLinkBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Guid>, SampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, SampleSystem.BLL.IManagementUnitAndBusinessUnitLinkBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory, SampleSystem.BLL.ManagementUnitAndHRDepartmentLinkBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Guid>, SampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, SampleSystem.BLL.IManagementUnitAndHRDepartmentLinkBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IManagementUnitFluentMappingBLLFactory, SampleSystem.BLL.ManagementUnitFluentMappingBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManagementUnitFluentMapping, System.Guid>, SampleSystem.Domain.ManagementUnitFluentMapping>, SampleSystem.BLL.IManagementUnitFluentMappingBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory, SampleSystem.BLL.TestManualEmployeeProjectionBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection, System.Guid>, SampleSystem.Domain.ManualProjections.TestManualEmployeeProjection>, SampleSystem.BLL.ITestManualEmployeeProjectionBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IPrincipalBLLFactory, SampleSystem.BLL.PrincipalBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Principal, System.Guid>, SampleSystem.Domain.Principal>, SampleSystem.BLL.IPrincipalBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IBusinessUnitProgramClassBLLFactory, SampleSystem.BLL.BusinessUnitProgramClassBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.BusinessUnitProgramClass, System.Guid>, SampleSystem.Domain.Projections.BusinessUnitProgramClass>, SampleSystem.BLL.IBusinessUnitProgramClassBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory, SampleSystem.BLL.CustomCompanyLegalEntityBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.CustomCompanyLegalEntity, System.Guid>, SampleSystem.Domain.Projections.CustomCompanyLegalEntity>, SampleSystem.BLL.ICustomCompanyLegalEntityBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestBusinessUnitBLLFactory, SampleSystem.BLL.TestBusinessUnitBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestBusinessUnit, System.Guid>, SampleSystem.Domain.Projections.TestBusinessUnit>, SampleSystem.BLL.ITestBusinessUnitBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory, SampleSystem.BLL.TestCustomContextSecurityObjProjectionBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection, System.Guid>, SampleSystem.Domain.Projections.TestCustomContextSecurityObjProjection>, SampleSystem.BLL.ITestCustomContextSecurityObjProjectionBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestDepartmentBLLFactory, SampleSystem.BLL.TestDepartmentBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestDepartment, System.Guid>, SampleSystem.Domain.Projections.TestDepartment>, SampleSystem.BLL.ITestDepartmentBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestEmployeeBLLFactory, SampleSystem.BLL.TestEmployeeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestEmployee, System.Guid>, SampleSystem.Domain.Projections.TestEmployee>, SampleSystem.BLL.ITestEmployeeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestIMRequestBLLFactory, SampleSystem.BLL.TestIMRequestBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestIMRequest, System.Guid>, SampleSystem.Domain.Projections.TestIMRequest>, SampleSystem.BLL.ITestIMRequestBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestLegacyEmployeeBLLFactory, SampleSystem.BLL.TestLegacyEmployeeBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLegacyEmployee, System.Guid>, SampleSystem.Domain.Projections.TestLegacyEmployee>, SampleSystem.BLL.ITestLegacyEmployeeBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestLocationBLLFactory, SampleSystem.BLL.TestLocationBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLocation, System.Guid>, SampleSystem.Domain.Projections.TestLocation>, SampleSystem.BLL.ITestLocationBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory, SampleSystem.BLL.TestLocationCollectionPropertiesBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestLocationCollectionProperties, System.Guid>, SampleSystem.Domain.Projections.TestLocationCollectionProperties>, SampleSystem.BLL.ITestLocationCollectionPropertiesBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory, SampleSystem.BLL.TestSecurityObjItemProjectionBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.Projections.TestSecurityObjItemProjection, System.Guid>, SampleSystem.Domain.Projections.TestSecurityObjItemProjection>, SampleSystem.BLL.ITestSecurityObjItemProjectionBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory, SampleSystem.BLL.RoleRoleDegreeLinkBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.RoleRoleDegreeLink, System.Guid>, SampleSystem.Domain.RoleRoleDegreeLink>, SampleSystem.BLL.IRoleRoleDegreeLinkBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ISqlParserTestObjBLLFactory, SampleSystem.BLL.SqlParserTestObjBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.SqlParserTestObj, System.Guid>, SampleSystem.Domain.SqlParserTestObj>, SampleSystem.BLL.ISqlParserTestObjBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ISqlParserTestObjContainerBLLFactory, SampleSystem.BLL.SqlParserTestObjContainerBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.SqlParserTestObjContainer, System.Guid>, SampleSystem.Domain.SqlParserTestObjContainer>, SampleSystem.BLL.ISqlParserTestObjContainerBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory, SampleSystem.BLL.TestCustomContextSecurityObjBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestCustomContextSecurityObj, System.Guid>, SampleSystem.Domain.TestCustomContextSecurityObj>, SampleSystem.BLL.ITestCustomContextSecurityObjBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestImmutableObjBLLFactory, SampleSystem.BLL.TestImmutableObjBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestImmutableObj, System.Guid>, SampleSystem.Domain.TestImmutableObj>, SampleSystem.BLL.ITestImmutableObjBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestPerformanceObjectBLLFactory, SampleSystem.BLL.TestPerformanceObjectBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestPerformanceObject, System.Guid>, SampleSystem.Domain.TestPerformanceObject>, SampleSystem.BLL.ITestPerformanceObjectBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestPlainAuthObjectBLLFactory, SampleSystem.BLL.TestPlainAuthObjectBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestPlainAuthObject, System.Guid>, SampleSystem.Domain.TestPlainAuthObject>, SampleSystem.BLL.ITestPlainAuthObjectBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestRootSecurityObjBLLFactory, SampleSystem.BLL.TestRootSecurityObjBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestRootSecurityObj, System.Guid>, SampleSystem.Domain.TestRootSecurityObj>, SampleSystem.BLL.ITestRootSecurityObjBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestSecurityObjItemBLLFactory, SampleSystem.BLL.TestSecurityObjItemBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecurityObjItem, System.Guid>, SampleSystem.Domain.TestSecurityObjItem>, SampleSystem.BLL.ITestSecurityObjItemBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestSecuritySubObjItemBLLFactory, SampleSystem.BLL.TestSecuritySubObjItemBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem, System.Guid>, SampleSystem.Domain.TestSecuritySubObjItem>, SampleSystem.BLL.ITestSecuritySubObjItemBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory, SampleSystem.BLL.TestSecuritySubObjItem2BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem2, System.Guid>, SampleSystem.Domain.TestSecuritySubObjItem2>, SampleSystem.BLL.ITestSecuritySubObjItem2BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory, SampleSystem.BLL.TestSecuritySubObjItem3BLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.TestSecuritySubObjItem3, System.Guid>, SampleSystem.Domain.TestSecuritySubObjItem3>, SampleSystem.BLL.ITestSecuritySubObjItem3BLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IWorkflowCoreExecutionErrorBLLFactory, SampleSystem.BLL.WorkflowCoreExecutionErrorBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.WorkflowCoreExecutionError, System.Guid>, SampleSystem.Domain.WorkflowCoreExecutionError>, SampleSystem.BLL.IWorkflowCoreExecutionErrorBLLFactory>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<SampleSystem.BLL.IWorkflowCoreInstanceBLLFactory, SampleSystem.BLL.WorkflowCoreInstanceBLLFactory>(serviceCollection);
            Framework.DependencyInjection.ServiceCollectionExtensions.AddScopedFrom<Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, SampleSystem.Domain.WorkflowCoreInstance, System.Guid>, SampleSystem.Domain.WorkflowCoreInstance>, SampleSystem.BLL.IWorkflowCoreInstanceBLLFactory>(serviceCollection);
        }
    }
    
    public partial class SampleSystemDefaultBLLFactory : Framework.DomainDriven.BLL.Security.DefaultSecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, System.Guid>, Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        public SampleSystemDefaultBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public override Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> Create<TDomainObject>(Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityProvider)
        {
            return new SampleSystem.BLL.SecurityDomainBLLBase<TDomainObject>(this.Context, securityProvider);
        }
    }
    
    public partial class SampleSystemImplementedBLLFactory : Framework.DomainDriven.BLL.Security.ImplementedSecurityBLLFactory<SampleSystem.BLL.ISampleSystemBLLContext, SampleSystem.Domain.PersistentDomainObjectBase, System.Guid>, Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<SampleSystem.Domain.PersistentDomainObjectBase, System.Guid>
    {
        
        public SampleSystemImplementedBLLFactory(SampleSystem.BLL.ISampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        protected override Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<SampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> CreateDefault<TDomainObject>(Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityProvider)
        {
            return new SampleSystem.BLL.SecurityDomainBLLBase<TDomainObject>(this.Context, securityProvider);
        }
    }
}
