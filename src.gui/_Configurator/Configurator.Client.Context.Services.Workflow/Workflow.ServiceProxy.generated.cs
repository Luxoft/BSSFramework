//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Configurator.Client.Context.WorkflowService
{
    
    
    public partial class WorkflowFacadeServiceProxy : Framework.ServiceModel.Async.ServiceProxy<Configurator.Client.Context.WorkflowService.WorkflowFacadeClient>, Framework.ServiceModel.Async.IAsyncCreateService<Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>, Framework.ServiceModel.Async.IAsyncCreateService<Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.CommandFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.CommandFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ConditionStateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ParallelStateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO, Framework.Workflow.Generated.DTO.StateInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StateFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StateFullDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TransitionFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TransitionFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateRichDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.RoleIdentityDTO, Framework.Workflow.Generated.DTO.RoleRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.CommandSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.CommandSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.EventSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.EventSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.EventSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.RoleSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.RoleSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>, Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StateSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StateSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TaskSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TaskSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TransitionSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TransitionSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>, Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.StateIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.CommandStrictDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.CommandRichDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ConditionStateRichDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ParallelStateRichDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StateStrictDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StateRichDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskStrictDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskRichDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TransitionStrictDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TransitionRichDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowStrictDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowRichDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>
    {
        
        private Configurator.Client.Context.WorkflowService.IWorkflowFacade _service;
        
        public WorkflowFacadeServiceProxy(System.Func<Configurator.Client.Context.WorkflowService.WorkflowFacadeClient> facadeFactory) : 
                base(facadeFactory)
        {
            this._service = this.GetService().Channel;
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Core.Ignore> AbortWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>((workflowInstanceIdentityDTO, callback, state) => this._service.BeginAbortWorkflow(workflowInstanceIdentityDTO, callback, state), asyncResult => this._service.EndAbortWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> Framework.ServiceModel.Async.IAsyncCreateService<Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>.CreateFunc
        {
            get
            {
                return this.CreateWorkflowAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> Framework.ServiceModel.Async.IAsyncCreateService<Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>.CreateFunc
        {
            get
            {
                return this.CreateWorkflowAsyncFuncR;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> CreateWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>((workflowCreateModel, callback, state) => this._service.BeginCreateWorkflow(workflowCreateModel, callback, state), asyncResult => this._service.EndCreateWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> CreateWorkflowAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>((workflowCreateModel, callback) => this.CreateWorkflowAsyncFunc.Run(workflowCreateModel.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DrawWorkflowRequest, byte[]> DrawWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DrawWorkflowRequest, byte[]> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.DrawWorkflowRequest, byte[]>((request, callback, state) => this._service.BeginDrawWorkflow(request, callback, state), asyncResult => this._service.EndDrawWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DrawWorkflowInstanceRequest, byte[]> DrawWorkflowInstanceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DrawWorkflowInstanceRequest, byte[]> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.DrawWorkflowInstanceRequest, byte[]>((request, callback, state) => this._service.BeginDrawWorkflowInstance(request, callback, state), asyncResult => this._service.EndDrawWorkflowInstance(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO, Framework.Core.Ignore> ExecuteCommandAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO>((executeCommandRequest, callback, state) => this._service.BeginExecuteCommand(executeCommandRequest, callback, state), asyncResult => this._service.EndExecuteCommand(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO, Framework.Core.Ignore> ExecuteCommandAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO, Framework.Core.Ignore>((executeCommandRequest, callback) => this.ExecuteCommandAsyncFunc.Run(executeCommandRequest.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO, Framework.Core.Ignore> ExecuteCommandsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO>((executeCommandRequest, callback, state) => this._service.BeginExecuteCommands(executeCommandRequest, callback, state), asyncResult => this._service.EndExecuteCommands(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO, Framework.Core.Ignore> ExecuteCommandsAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO, Framework.Core.Ignore>((executeCommandRequest, callback) => this.ExecuteCommandsAsyncFunc.Run(executeCommandRequest.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> GetFullCommandsByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>>((commandIdents, callback, state) => this._service.BeginGetFullCommandsByIdents(commandIdents, callback, state), asyncResult => this._service.EndGetFullCommandsByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> GetFullCommandsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>>((filter, callback, state) => this._service.BeginGetFullCommandsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullCommandsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> GetFullCommandsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>>((filter, callback) => this.GetFullCommandsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> GetFullConditionStatesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>>((conditionStateIdents, callback, state) => this._service.BeginGetFullConditionStatesByIdents(conditionStateIdents, callback, state), asyncResult => this._service.EndGetFullConditionStatesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> GetFullConditionStatesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>>((filter, callback, state) => this._service.BeginGetFullConditionStatesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullConditionStatesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> GetFullConditionStatesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>>((filter, callback) => this.GetFullConditionStatesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> GetFullParallelStatesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>>((parallelStateIdents, callback, state) => this._service.BeginGetFullParallelStatesByIdents(parallelStateIdents, callback, state), asyncResult => this._service.EndGetFullParallelStatesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> GetFullParallelStatesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>>((filter, callback, state) => this._service.BeginGetFullParallelStatesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullParallelStatesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> GetFullParallelStatesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>>((filter, callback) => this.GetFullParallelStatesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> GetFullStartWorkflowDomainObjectConditionsByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>>((startWorkflowDomainObjectConditionIdents, callback, state) => this._service.BeginGetFullStartWorkflowDomainObjectConditionsByIdents(startWorkflowDomainObjectConditionIdents, callback, state), asyncResult => this._service.EndGetFullStartWorkflowDomainObjectConditionsByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> GetFullStartWorkflowDomainObjectConditionsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>>((filter, callback, state) => this._service.BeginGetFullStartWorkflowDomainObjectConditionsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullStartWorkflowDomainObjectConditionsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> GetFullStartWorkflowDomainObjectConditionsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>>((filter, callback) => this.GetFullStartWorkflowDomainObjectConditionsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceFullDTO>> GetFullStateInstancesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceFullDTO>>((stateInstanceIdents, callback, state) => this._service.BeginGetFullStateInstancesByIdents(stateInstanceIdents, callback, state), asyncResult => this._service.EndGetFullStateInstancesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> GetFullStatesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>>((stateIdents, callback, state) => this._service.BeginGetFullStatesByIdents(stateIdents, callback, state), asyncResult => this._service.EndGetFullStatesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> GetFullStatesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>>((filter, callback, state) => this._service.BeginGetFullStatesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullStatesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> GetFullStatesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>>((filter, callback) => this.GetFullStatesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO> GetFullTaskAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>((taskIdentity, callback, state) => this._service.BeginGetFullTask(taskIdentity, callback, state), asyncResult => this._service.EndGetFullTask(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> GetFullTaskInstancesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>>((taskInstanceIdents, callback, state) => this._service.BeginGetFullTaskInstancesByIdents(taskInstanceIdents, callback, state), asyncResult => this._service.EndGetFullTaskInstancesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> GetFullTaskInstancesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>>((filter, callback, state) => this._service.BeginGetFullTaskInstancesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullTaskInstancesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> GetFullTaskInstancesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>>((filter, callback) => this.GetFullTaskInstancesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> GetFullTasksByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>>((taskIdents, callback, state) => this._service.BeginGetFullTasksByIdents(taskIdents, callback, state), asyncResult => this._service.EndGetFullTasksByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> GetFullTasksByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>>((filter, callback, state) => this._service.BeginGetFullTasksByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullTasksByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> GetFullTasksByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>>((filter, callback) => this.GetFullTasksByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> GetFullTransitionsByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>>((transitionIdents, callback, state) => this._service.BeginGetFullTransitionsByIdents(transitionIdents, callback, state), asyncResult => this._service.EndGetFullTransitionsByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> GetFullTransitionsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>>((filter, callback, state) => this._service.BeginGetFullTransitionsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullTransitionsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> GetFullTransitionsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>>((filter, callback) => this.GetFullTransitionsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> GetFullWorkflowInstancesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>>((workflowInstanceIdents, callback, state) => this._service.BeginGetFullWorkflowInstancesByIdents(workflowInstanceIdents, callback, state), asyncResult => this._service.EndGetFullWorkflowInstancesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> GetFullWorkflowInstancesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>>((filter, callback, state) => this._service.BeginGetFullWorkflowInstancesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullWorkflowInstancesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> GetFullWorkflowInstancesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>>((filter, callback) => this.GetFullWorkflowInstancesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> GetFullWorkflowLambdasByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>>((workflowLambdaIdents, callback, state) => this._service.BeginGetFullWorkflowLambdasByIdents(workflowLambdaIdents, callback, state), asyncResult => this._service.EndGetFullWorkflowLambdasByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> GetFullWorkflowLambdasByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>>((filter, callback, state) => this._service.BeginGetFullWorkflowLambdasByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullWorkflowLambdasByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> GetFullWorkflowLambdasByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>>((filter, callback) => this.GetFullWorkflowLambdasByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> GetFullWorkflowsByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>>((workflowIdents, callback, state) => this._service.BeginGetFullWorkflowsByIdents(workflowIdents, callback, state), asyncResult => this._service.EndGetFullWorkflowsByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> GetFullWorkflowsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>>((filter, callback, state) => this._service.BeginGetFullWorkflowsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullWorkflowsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> GetFullWorkflowsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>>((filter, callback) => this.GetFullWorkflowsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> GetFullWorkflowSourcesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>>((workflowSourceIdents, callback, state) => this._service.BeginGetFullWorkflowSourcesByIdents(workflowSourceIdents, callback, state), asyncResult => this._service.EndGetFullWorkflowSourcesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> GetFullWorkflowSourcesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>>((filter, callback, state) => this._service.BeginGetFullWorkflowSourcesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetFullWorkflowSourcesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> GetFullWorkflowSourcesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>>((filter, callback) => this.GetFullWorkflowSourcesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceWorkflowGroupProjectionDTO>> GetMiniAvailableTaskInstancesByMainFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceWorkflowGroupProjectionDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceWorkflowGroupProjectionDTO>>((filter, callback, state) => this._service.BeginGetMiniAvailableTaskInstancesByMainFilter(filter, callback, state), asyncResult => this._service.EndGetMiniAvailableTaskInstancesByMainFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceWorkflowGroupProjectionDTO>> GetMiniAvailableTaskInstancesByMainFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceWorkflowGroupProjectionDTO>>((filter, callback) => this.GetMiniAvailableTaskInstancesByMainFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandRichDTO> GetRichCommandAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandRichDTO>((commandIdentity, callback, state) => this._service.BeginGetRichCommand(commandIdentity, callback, state), asyncResult => this._service.EndGetRichCommand(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateRichDTO> GetRichConditionStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateRichDTO>((conditionStateIdentity, callback, state) => this._service.BeginGetRichConditionState(conditionStateIdentity, callback, state), asyncResult => this._service.EndGetRichConditionState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateRichDTO> GetRichParallelStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateRichDTO>((parallelStateIdentity, callback, state) => this._service.BeginGetRichParallelState(parallelStateIdentity, callback, state), asyncResult => this._service.EndGetRichParallelState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO>> GetRichRolesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO>>((roleIdents, callback, state) => this._service.BeginGetRichRolesByIdents(roleIdents, callback, state), asyncResult => this._service.EndGetRichRolesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> GetRichStartWorkflowDomainObjectConditionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>((startWorkflowDomainObjectConditionIdentity, callback, state) => this._service.BeginGetRichStartWorkflowDomainObjectCondition(startWorkflowDomainObjectConditionIdentity, callback, state), asyncResult => this._service.EndGetRichStartWorkflowDomainObjectCondition(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateRichDTO> GetRichStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateRichDTO>((stateIdentity, callback, state) => this._service.BeginGetRichState(stateIdentity, callback, state), asyncResult => this._service.EndGetRichState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskRichDTO> GetRichTaskAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskRichDTO>((taskIdentity, callback, state) => this._service.BeginGetRichTask(taskIdentity, callback, state), asyncResult => this._service.EndGetRichTask(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> GetRichTaskInstanceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>((taskInstanceIdentity, callback, state) => this._service.BeginGetRichTaskInstance(taskInstanceIdentity, callback, state), asyncResult => this._service.EndGetRichTaskInstance(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionRichDTO> GetRichTransitionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionRichDTO>((transitionIdentity, callback, state) => this._service.BeginGetRichTransition(transitionIdentity, callback, state), asyncResult => this._service.EndGetRichTransition(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> GetRichWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>((workflowIdentity, callback, state) => this._service.BeginGetRichWorkflow(workflowIdentity, callback, state), asyncResult => this._service.EndGetRichWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO> GetRichWorkflowInstanceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO>((workflowInstanceIdentity, callback, state) => this._service.BeginGetRichWorkflowInstance(workflowInstanceIdentity, callback, state), asyncResult => this._service.EndGetRichWorkflowInstance(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> GetRichWorkflowLambdaAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>((workflowLambdaIdentity, callback, state) => this._service.BeginGetRichWorkflowLambda(workflowLambdaIdentity, callback, state), asyncResult => this._service.EndGetRichWorkflowLambda(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> GetRichWorkflowSourceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>((workflowSourceIdentity, callback, state) => this._service.BeginGetRichWorkflowSource(workflowSourceIdentity, callback, state), asyncResult => this._service.EndGetRichWorkflowSource(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>> GetSimpleCommandEventsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleCommandEventsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleCommandEventsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>> GetSimpleCommandEventsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>>((filter, callback) => this.GetSimpleCommandEventsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> GetSimpleCommandsByAvailableCommandFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleCommandsByAvailableCommandFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleCommandsByAvailableCommandFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> GetSimpleCommandsByAvailableCommandFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>>((filter, callback) => this.GetSimpleCommandsByAvailableCommandFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> GetSimpleCommandsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleCommandsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleCommandsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> GetSimpleCommandsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>>((filter, callback) => this.GetSimpleCommandsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>> GetSimpleConditionStatesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleConditionStatesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleConditionStatesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>> GetSimpleConditionStatesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>>((filter, callback) => this.GetSimpleConditionStatesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> GetSimpleDomainTypesAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleDomainTypes(callback, state), asyncResult => this._service.EndGetSimpleDomainTypes(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> GetSimpleDomainTypesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleDomainTypesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleDomainTypesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> GetSimpleDomainTypesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>>((filter, callback) => this.GetSimpleDomainTypesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> GetSimpleEventsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleEvents(callback, state), asyncResult => this._service.EndGetSimpleEvents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> GetSimpleEventsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleEventsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleEventsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> GetSimpleEventsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>>((filter, callback) => this.GetSimpleEventsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>> GetSimpleParallelStatesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleParallelStatesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleParallelStatesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>> GetSimpleParallelStatesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>>((filter, callback) => this.GetSimpleParallelStatesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>> GetSimpleRolesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleRolesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleRolesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>> GetSimpleRolesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>>((filter, callback) => this.GetSimpleRolesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>> GetSimpleStartWorkflowDomainObjectConditionsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleStartWorkflowDomainObjectConditionsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleStartWorkflowDomainObjectConditionsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>> GetSimpleStartWorkflowDomainObjectConditionsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>>((filter, callback) => this.GetSimpleStartWorkflowDomainObjectConditionsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO> GetSimpleStateBaseAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>((stateBaseIdentity, callback, state) => this._service.BeginGetSimpleStateBase(stateBaseIdentity, callback, state), asyncResult => this._service.EndGetSimpleStateBase(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> GetSimpleStateBasesAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleStateBases(callback, state), asyncResult => this._service.EndGetSimpleStateBases(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> GetSimpleStateBasesByIdentsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>>((stateBaseIdents, callback, state) => this._service.BeginGetSimpleStateBasesByIdents(stateBaseIdents, callback, state), asyncResult => this._service.EndGetSimpleStateBasesByIdents(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> GetSimpleStateBasesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleStateBasesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleStateBasesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> GetSimpleStateBasesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>>((filter, callback) => this.GetSimpleStateBasesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>> GetSimpleStatesByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleStatesByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleStatesByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>> GetSimpleStatesByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>>((filter, callback) => this.GetSimpleStatesByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>> GetSimpleTargetSystemsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleTargetSystems(callback, state), asyncResult => this._service.EndGetSimpleTargetSystems(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>> GetSimpleTasksByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleTasksByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleTasksByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>> GetSimpleTasksByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>>((filter, callback) => this.GetSimpleTasksByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> GetSimpleTransitionsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleTransitions(callback, state), asyncResult => this._service.EndGetSimpleTransitions(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> GetSimpleTransitionsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleTransitionsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleTransitionsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> GetSimpleTransitionsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>>((filter, callback) => this.GetSimpleTransitionsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> GetSimpleWorkflowLambdasAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleWorkflowLambdas(callback, state), asyncResult => this._service.EndGetSimpleWorkflowLambdas(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> GetSimpleWorkflowLambdasByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleWorkflowLambdasByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleWorkflowLambdasByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> GetSimpleWorkflowLambdasByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>>((filter, callback) => this.GetSimpleWorkflowLambdasByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> GetSimpleWorkflowsAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>>((_, callback, state) => this._service.BeginGetSimpleWorkflows(callback, state), asyncResult => this._service.EndGetSimpleWorkflows(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> GetSimpleWorkflowsByRootFilterAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>>((filter, callback, state) => this._service.BeginGetSimpleWorkflowsByRootFilter(filter, callback, state), asyncResult => this._service.EndGetSimpleWorkflowsByRootFilter(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> GetSimpleWorkflowsByRootFilterAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>>((filter, callback) => this.GetSimpleWorkflowsByRootFilterAsyncFunc.Run(filter.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.CommandIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveCommandAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveConditionStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveParallelStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveStartWorkflowDomainObjectConditionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.StateIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.TaskIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveTaskAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveTransitionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveWorkflowAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveWorkflowInstanceAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Core.Ignore> Framework.ServiceModel.Async.IAsyncRemoveService<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>.RemoveAction
        {
            get
            {
                return this.RemoveWorkflowLambdaAsyncFunc;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Core.Ignore> RemoveCommandAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandIdentityDTO>((commandIdent, callback, state) => this._service.BeginRemoveCommand(commandIdent, callback, state), asyncResult => this._service.EndRemoveCommand(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Core.Ignore> RemoveConditionStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>((conditionStateIdent, callback, state) => this._service.BeginRemoveConditionState(conditionStateIdent, callback, state), asyncResult => this._service.EndRemoveConditionState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Core.Ignore> RemoveParallelStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>((parallelStateIdent, callback, state) => this._service.BeginRemoveParallelState(parallelStateIdent, callback, state), asyncResult => this._service.EndRemoveParallelState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Core.Ignore> RemoveStartWorkflowDomainObjectConditionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>((startWorkflowDomainObjectConditionIdent, callback, state) => this._service.BeginRemoveStartWorkflowDomainObjectCondition(startWorkflowDomainObjectConditionIdent, callback, state), asyncResult => this._service.EndRemoveStartWorkflowDomainObjectCondition(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Core.Ignore> RemoveStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateIdentityDTO>((stateIdent, callback, state) => this._service.BeginRemoveState(stateIdent, callback, state), asyncResult => this._service.EndRemoveState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Core.Ignore> RemoveTaskAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskIdentityDTO>((taskIdent, callback, state) => this._service.BeginRemoveTask(taskIdent, callback, state), asyncResult => this._service.EndRemoveTask(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Core.Ignore> RemoveTransitionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>((transitionIdent, callback, state) => this._service.BeginRemoveTransition(transitionIdent, callback, state), asyncResult => this._service.EndRemoveTransition(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Core.Ignore> RemoveWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>((workflowIdent, callback, state) => this._service.BeginRemoveWorkflow(workflowIdent, callback, state), asyncResult => this._service.EndRemoveWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Core.Ignore> RemoveWorkflowInstanceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>((workflowInstanceIdent, callback, state) => this._service.BeginRemoveWorkflowInstance(workflowInstanceIdent, callback, state), asyncResult => this._service.EndRemoveWorkflowInstance(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Core.Ignore> RemoveWorkflowLambdaAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Core.Ignore> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>((workflowLambdaIdent, callback, state) => this._service.BeginRemoveWorkflowLambda(workflowLambdaIdent, callback, state), asyncResult => this._service.EndRemoveWorkflowLambda(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandStrictDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO> SaveCommandAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandStrictDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandStrictDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO>((commandStrict, callback, state) => this._service.BeginSaveCommand(commandStrict, callback, state), asyncResult => this._service.EndSaveCommand(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRichDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO> SaveCommandAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.CommandRichDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO>((commandStrict, callback) => this.SaveCommandAsyncFunc.Run(commandStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO> SaveConditionStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>((conditionStateStrict, callback, state) => this._service.BeginSaveConditionState(conditionStateStrict, callback, state), asyncResult => this._service.EndSaveConditionState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRichDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO> SaveConditionStateAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ConditionStateRichDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>((conditionStateStrict, callback) => this.SaveConditionStateAsyncFunc.Run(conditionStateStrict.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandStrictDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.CommandStrictDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveCommandAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRichDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.CommandRichDTO, Framework.Workflow.Generated.DTO.CommandIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveCommandAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveConditionStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRichDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ConditionStateRichDTO, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveConditionStateAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveParallelStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRichDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.ParallelStateRichDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveParallelStateAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveStartWorkflowDomainObjectConditionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveStartWorkflowDomainObjectConditionAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateStrictDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StateStrictDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRichDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.StateRichDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveStateAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskStrictDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskStrictDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveTaskAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRichDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskRichDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveTaskAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveTaskInstanceAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveTaskInstanceAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionStrictDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TransitionStrictDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveTransitionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRichDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.TransitionRichDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveTransitionAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowStrictDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowStrictDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveWorkflowAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRichDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowRichDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveWorkflowAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveWorkflowInstanceAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveWorkflowInstanceAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveWorkflowLambdaAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO> Framework.ServiceModel.Async.IAsyncSaveService<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>.SaveFunc
        {
            get
            {
                return this.SaveWorkflowLambdaAsyncFuncR;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO> SaveParallelStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>((parallelStateStrict, callback, state) => this._service.BeginSaveParallelState(parallelStateStrict, callback, state), asyncResult => this._service.EndSaveParallelState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRichDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO> SaveParallelStateAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.ParallelStateRichDTO, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>((parallelStateStrict, callback) => this.SaveParallelStateAsyncFunc.Run(parallelStateStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO> SaveStartWorkflowDomainObjectConditionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>((startWorkflowDomainObjectConditionStrict, callback, state) => this._service.BeginSaveStartWorkflowDomainObjectCondition(startWorkflowDomainObjectConditionStrict, callback, state), asyncResult => this._service.EndSaveStartWorkflowDomainObjectCondition(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO> SaveStartWorkflowDomainObjectConditionAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>((startWorkflowDomainObjectConditionStrict, callback) => this.SaveStartWorkflowDomainObjectConditionAsyncFunc.Run(startWorkflowDomainObjectConditionStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateStrictDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO> SaveStateAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateStrictDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateStrictDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO>((stateStrict, callback, state) => this._service.BeginSaveState(stateStrict, callback, state), asyncResult => this._service.EndSaveState(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRichDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO> SaveStateAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StateRichDTO, Framework.Workflow.Generated.DTO.StateIdentityDTO>((stateStrict, callback) => this.SaveStateAsyncFunc.Run(stateStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskStrictDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO> SaveTaskAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskStrictDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskStrictDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO>((taskStrict, callback, state) => this._service.BeginSaveTask(taskStrict, callback, state), asyncResult => this._service.EndSaveTask(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRichDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO> SaveTaskAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskRichDTO, Framework.Workflow.Generated.DTO.TaskIdentityDTO>((taskStrict, callback) => this.SaveTaskAsyncFunc.Run(taskStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> SaveTaskInstanceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>((taskInstanceStrict, callback, state) => this._service.BeginSaveTaskInstance(taskInstanceStrict, callback, state), asyncResult => this._service.EndSaveTaskInstance(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> SaveTaskInstanceAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>((taskInstanceStrict, callback) => this.SaveTaskInstanceAsyncFunc.Run(taskInstanceStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionStrictDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO> SaveTransitionAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionStrictDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionStrictDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO>((transitionStrict, callback, state) => this._service.BeginSaveTransition(transitionStrict, callback, state), asyncResult => this._service.EndSaveTransition(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRichDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO> SaveTransitionAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.TransitionRichDTO, Framework.Workflow.Generated.DTO.TransitionIdentityDTO>((transitionStrict, callback) => this.SaveTransitionAsyncFunc.Run(transitionStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowStrictDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO> SaveWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowStrictDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowStrictDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>((workflowStrict, callback, state) => this._service.BeginSaveWorkflow(workflowStrict, callback, state), asyncResult => this._service.EndSaveWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRichDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO> SaveWorkflowAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowRichDTO, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>((workflowStrict, callback) => this.SaveWorkflowAsyncFunc.Run(workflowStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> SaveWorkflowInstanceAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>((workflowInstanceStrict, callback, state) => this._service.BeginSaveWorkflowInstance(workflowInstanceStrict, callback, state), asyncResult => this._service.EndSaveWorkflowInstance(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> SaveWorkflowInstanceAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>((workflowInstanceStrict, callback) => this.SaveWorkflowInstanceAsyncFunc.Run(workflowInstanceStrict.ToStrict(), callback));
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO> SaveWorkflowLambdaAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>((workflowLambdaStrict, callback, state) => this._service.BeginSaveWorkflowLambda(workflowLambdaStrict, callback, state), asyncResult => this._service.EndSaveWorkflowLambda(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO> SaveWorkflowLambdaAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>((workflowLambdaStrict, callback) => this.SaveWorkflowLambdaAsyncFunc.Run(workflowLambdaStrict.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullCommandsByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.CommandFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullCommandsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.CommandFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullCommandsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullConditionStatesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullConditionStatesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ConditionStateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullConditionStatesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullParallelStatesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullParallelStatesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ParallelStateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullParallelStatesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStartWorkflowDomainObjectConditionsByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStartWorkflowDomainObjectConditionsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStartWorkflowDomainObjectConditionsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO, Framework.Workflow.Generated.DTO.StateInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStateInstancesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStatesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStatesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StateFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullStatesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTaskInstancesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTaskInstancesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTaskInstancesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTasksByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTasksByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTasksByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTransitionsByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TransitionFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTransitionsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TransitionFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullTransitionsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowInstancesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowInstancesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowInstancesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowLambdasByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowLambdasByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowLambdasByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowsByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowSourcesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowSourcesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>.SourceFunc
        {
            get
            {
                return this.GetFullWorkflowSourcesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.RoleIdentityDTO, Framework.Workflow.Generated.DTO.RoleRichDTO>.SourceFunc
        {
            get
            {
                return this.GetRichRolesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleCommandEventsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleCommandEventsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.CommandSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleCommandsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.CommandSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleCommandsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleConditionStatesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleConditionStatesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleDomainTypesAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleDomainTypesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleDomainTypesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.EventSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleEventsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.EventSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleEventsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.EventSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleEventsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleParallelStatesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleParallelStatesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.RoleSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleRolesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.RoleSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleRolesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStartWorkflowDomainObjectConditionsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStartWorkflowDomainObjectConditionsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStateBasesAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO>, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByIdentsService<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStateBasesByIdentsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStateBasesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStateBasesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.StateSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStatesByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.StateSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleStatesByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleTargetSystemsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TaskSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleTasksByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TaskSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleTasksByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleTransitionsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.TransitionSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleTransitionsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.TransitionSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleTransitionsByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleWorkflowLambdasAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleWorkflowLambdasByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleWorkflowLambdasByRootFilterAsyncFuncR;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Core.Ignore, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceService<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleWorkflowsAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO, Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleWorkflowsByRootFilterAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>> Framework.ServiceModel.Async.IAsyncSourceByFilterService<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO, Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>.SourceFunc
        {
            get
            {
                return this.GetSimpleWorkflowsByRootFilterAsyncFuncR;
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> StartWorkflowAsyncFunc
        {
            get
            {
                Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> asyncFunc = Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>((startWorkflowRequest, callback, state) => this._service.BeginStartWorkflow(startWorkflowRequest, callback, state), asyncResult => this._service.EndStartWorkflow(asyncResult));
                return Framework.Async.AsyncProcessFuncBaseExtensions.WithSync(asyncFunc);
            }
        }
        
        public virtual Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> StartWorkflowAsyncFuncR
        {
            get
            {
                return Framework.Async.AsyncProcessFunc.Create<Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>((startWorkflowRequest, callback) => this.StartWorkflowAsyncFunc.Run(startWorkflowRequest.ToStrict(), callback));
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskFullDTO>.ViewFunc
        {
            get
            {
                return this.GetFullTaskAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.CommandIdentityDTO, Framework.Workflow.Generated.DTO.CommandRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichCommandAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO, Framework.Workflow.Generated.DTO.ConditionStateRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichConditionStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO, Framework.Workflow.Generated.DTO.ParallelStateRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichParallelStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichStartWorkflowDomainObjectConditionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.StateIdentityDTO, Framework.Workflow.Generated.DTO.StateRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichStateAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TaskIdentityDTO, Framework.Workflow.Generated.DTO.TaskRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichTaskAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichTaskInstanceAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.TransitionIdentityDTO, Framework.Workflow.Generated.DTO.TransitionRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichTransitionAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichWorkflowAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichWorkflowInstanceAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichWorkflowLambdaAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>.ViewFunc
        {
            get
            {
                return this.GetRichWorkflowSourceAsyncFunc;
            }
        }
        
        Framework.Async.IAsyncProcessFunc<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO> Framework.ServiceModel.Async.IAsyncViewService<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO, Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>.ViewFunc
        {
            get
            {
                return this.GetSimpleStateBaseAsyncFunc;
            }
        }
    }
}
