//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Configurator.Client.Context.WorkflowService
{
    
    
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkflowService.WorkflowSLJsonController")]
    public partial interface IWorkflowFacade
    {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/AbortWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/AbortWorkflowResponse")]
        System.IAsyncResult BeginAbortWorkflow(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO workflowInstanceIdentityDTO, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/CreateWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/CreateWorkflowResponse")]
        System.IAsyncResult BeginCreateWorkflow(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO workflowCreateModel, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/DrawWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/DrawWorkflowResponse")]
        System.IAsyncResult BeginDrawWorkflow(Framework.Workflow.Generated.DTO.DrawWorkflowRequest request, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/DrawWorkflowInstance", ReplyAction="http://tempuri.org/WorkflowSLJsonController/DrawWorkflowInstanceResponse")]
        System.IAsyncResult BeginDrawWorkflowInstance(Framework.Workflow.Generated.DTO.DrawWorkflowInstanceRequest request, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/ExecuteCommand", ReplyAction="http://tempuri.org/WorkflowSLJsonController/ExecuteCommandResponse")]
        System.IAsyncResult BeginExecuteCommand(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO executeCommandRequest, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/ExecuteCommands", ReplyAction="http://tempuri.org/WorkflowSLJsonController/ExecuteCommandsResponse")]
        System.IAsyncResult BeginExecuteCommands(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO executeCommandRequest, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullCommandsByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullCommandsByIdentsResponse")]
        System.IAsyncResult BeginGetFullCommandsByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandIdentityDTO> commandIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullCommandsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullCommandsByRootFilterResponse")]
        System.IAsyncResult BeginGetFullCommandsByRootFilter(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullConditionStatesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullConditionStatesByIdentsRespons" +
            "e")]
        System.IAsyncResult BeginGetFullConditionStatesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO> conditionStateIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullConditionStatesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullConditionStatesByRootFilterRes" +
            "ponse")]
        System.IAsyncResult BeginGetFullConditionStatesByRootFilter(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullParallelStatesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullParallelStatesByIdentsResponse" +
            "")]
        System.IAsyncResult BeginGetFullParallelStatesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO> parallelStateIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullParallelStatesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullParallelStatesByRootFilterResp" +
            "onse")]
        System.IAsyncResult BeginGetFullParallelStatesByRootFilter(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullStartWorkflowDomainObjectCondi" +
            "tionsByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullStartWorkflowDomainObjectCondi" +
            "tionsByIdentsResponse")]
        System.IAsyncResult BeginGetFullStartWorkflowDomainObjectConditionsByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO> startWorkflowDomainObjectConditionIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullStartWorkflowDomainObjectCondi" +
            "tionsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullStartWorkflowDomainObjectCondi" +
            "tionsByRootFilterResponse")]
        System.IAsyncResult BeginGetFullStartWorkflowDomainObjectConditionsByRootFilter(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullStateInstancesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullStateInstancesByIdentsResponse" +
            "")]
        System.IAsyncResult BeginGetFullStateInstancesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO> stateInstanceIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullStatesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullStatesByIdentsResponse")]
        System.IAsyncResult BeginGetFullStatesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateIdentityDTO> stateIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullStatesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullStatesByRootFilterResponse")]
        System.IAsyncResult BeginGetFullStatesByRootFilter(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTask", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTaskResponse")]
        System.IAsyncResult BeginGetFullTask(Framework.Workflow.Generated.DTO.TaskIdentityDTO taskIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTaskInstancesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTaskInstancesByIdentsResponse")]
        System.IAsyncResult BeginGetFullTaskInstancesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> taskInstanceIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTaskInstancesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTaskInstancesByRootFilterRespo" +
            "nse")]
        System.IAsyncResult BeginGetFullTaskInstancesByRootFilter(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTasksByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTasksByIdentsResponse")]
        System.IAsyncResult BeginGetFullTasksByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskIdentityDTO> taskIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTasksByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTasksByRootFilterResponse")]
        System.IAsyncResult BeginGetFullTasksByRootFilter(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTransitionsByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTransitionsByIdentsResponse")]
        System.IAsyncResult BeginGetFullTransitionsByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionIdentityDTO> transitionIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullTransitionsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullTransitionsByRootFilterRespons" +
            "e")]
        System.IAsyncResult BeginGetFullTransitionsByRootFilter(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowInstancesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowInstancesByIdentsRespo" +
            "nse")]
        System.IAsyncResult BeginGetFullWorkflowInstancesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO> workflowInstanceIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowInstancesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowInstancesByRootFilterR" +
            "esponse")]
        System.IAsyncResult BeginGetFullWorkflowInstancesByRootFilter(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowLambdasByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowLambdasByIdentsRespons" +
            "e")]
        System.IAsyncResult BeginGetFullWorkflowLambdasByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO> workflowLambdaIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowLambdasByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowLambdasByRootFilterRes" +
            "ponse")]
        System.IAsyncResult BeginGetFullWorkflowLambdasByRootFilter(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowsByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowsByIdentsResponse")]
        System.IAsyncResult BeginGetFullWorkflowsByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO> workflowIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowsByRootFilterResponse")]
        System.IAsyncResult BeginGetFullWorkflowsByRootFilter(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowSourcesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowSourcesByIdentsRespons" +
            "e")]
        System.IAsyncResult BeginGetFullWorkflowSourcesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO> workflowSourceIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowSourcesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetFullWorkflowSourcesByRootFilterRes" +
            "ponse")]
        System.IAsyncResult BeginGetFullWorkflowSourcesByRootFilter(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetMiniAvailableTaskInstancesByMainFi" +
            "lter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetMiniAvailableTaskInstancesByMainFi" +
            "lterResponse")]
        System.IAsyncResult BeginGetMiniAvailableTaskInstancesByMainFilter(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichCommand", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichCommandResponse")]
        System.IAsyncResult BeginGetRichCommand(Framework.Workflow.Generated.DTO.CommandIdentityDTO commandIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichConditionState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichConditionStateResponse")]
        System.IAsyncResult BeginGetRichConditionState(Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO conditionStateIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichParallelState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichParallelStateResponse")]
        System.IAsyncResult BeginGetRichParallelState(Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO parallelStateIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichRolesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichRolesByIdentsResponse")]
        System.IAsyncResult BeginGetRichRolesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleIdentityDTO> roleIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichStartWorkflowDomainObjectCondi" +
            "tion", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichStartWorkflowDomainObjectCondi" +
            "tionResponse")]
        System.IAsyncResult BeginGetRichStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO startWorkflowDomainObjectConditionIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichStateResponse")]
        System.IAsyncResult BeginGetRichState(Framework.Workflow.Generated.DTO.StateIdentityDTO stateIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichTask", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichTaskResponse")]
        System.IAsyncResult BeginGetRichTask(Framework.Workflow.Generated.DTO.TaskIdentityDTO taskIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichTaskInstance", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichTaskInstanceResponse")]
        System.IAsyncResult BeginGetRichTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO taskInstanceIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichTransition", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichTransitionResponse")]
        System.IAsyncResult BeginGetRichTransition(Framework.Workflow.Generated.DTO.TransitionIdentityDTO transitionIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowResponse")]
        System.IAsyncResult BeginGetRichWorkflow(Framework.Workflow.Generated.DTO.WorkflowIdentityDTO workflowIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowInstance", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowInstanceResponse")]
        System.IAsyncResult BeginGetRichWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO workflowInstanceIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowLambda", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowLambdaResponse")]
        System.IAsyncResult BeginGetRichWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO workflowLambdaIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowSource", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetRichWorkflowSourceResponse")]
        System.IAsyncResult BeginGetRichWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO workflowSourceIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleCommandEventsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleCommandEventsByRootFilterRes" +
            "ponse")]
        System.IAsyncResult BeginGetSimpleCommandEventsByRootFilter(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleCommandsByAvailableCommandFi" +
            "lter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleCommandsByAvailableCommandFi" +
            "lterResponse")]
        System.IAsyncResult BeginGetSimpleCommandsByAvailableCommandFilter(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleCommandsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleCommandsByRootFilterResponse" +
            "")]
        System.IAsyncResult BeginGetSimpleCommandsByRootFilter(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleConditionStatesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleConditionStatesByRootFilterR" +
            "esponse")]
        System.IAsyncResult BeginGetSimpleConditionStatesByRootFilter(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleDomainTypes", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleDomainTypesResponse")]
        System.IAsyncResult BeginGetSimpleDomainTypes(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleDomainTypesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleDomainTypesByRootFilterRespo" +
            "nse")]
        System.IAsyncResult BeginGetSimpleDomainTypesByRootFilter(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleEvents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleEventsResponse")]
        System.IAsyncResult BeginGetSimpleEvents(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleEventsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleEventsByRootFilterResponse")]
        System.IAsyncResult BeginGetSimpleEventsByRootFilter(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleParallelStatesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleParallelStatesByRootFilterRe" +
            "sponse")]
        System.IAsyncResult BeginGetSimpleParallelStatesByRootFilter(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleRolesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleRolesByRootFilterResponse")]
        System.IAsyncResult BeginGetSimpleRolesByRootFilter(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleStartWorkflowDomainObjectCon" +
            "ditionsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleStartWorkflowDomainObjectCon" +
            "ditionsByRootFilterResponse")]
        System.IAsyncResult BeginGetSimpleStartWorkflowDomainObjectConditionsByRootFilter(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBase", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBaseResponse")]
        System.IAsyncResult BeginGetSimpleStateBase(Framework.Workflow.Generated.DTO.StateBaseIdentityDTO stateBaseIdentity, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBases", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBasesResponse")]
        System.IAsyncResult BeginGetSimpleStateBases(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBasesByIdents", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBasesByIdentsResponse")]
        System.IAsyncResult BeginGetSimpleStateBasesByIdents(System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO> stateBaseIdents, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBasesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleStateBasesByRootFilterRespon" +
            "se")]
        System.IAsyncResult BeginGetSimpleStateBasesByRootFilter(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleStatesByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleStatesByRootFilterResponse")]
        System.IAsyncResult BeginGetSimpleStatesByRootFilter(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleTargetSystems", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleTargetSystemsResponse")]
        System.IAsyncResult BeginGetSimpleTargetSystems(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleTasksByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleTasksByRootFilterResponse")]
        System.IAsyncResult BeginGetSimpleTasksByRootFilter(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleTransitions", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleTransitionsResponse")]
        System.IAsyncResult BeginGetSimpleTransitions(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleTransitionsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleTransitionsByRootFilterRespo" +
            "nse")]
        System.IAsyncResult BeginGetSimpleTransitionsByRootFilter(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowLambdas", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowLambdasResponse")]
        System.IAsyncResult BeginGetSimpleWorkflowLambdas(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowLambdasByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowLambdasByRootFilterR" +
            "esponse")]
        System.IAsyncResult BeginGetSimpleWorkflowLambdasByRootFilter(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflows", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowsResponse")]
        System.IAsyncResult BeginGetSimpleWorkflows(System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowsByRootFilter", ReplyAction="http://tempuri.org/WorkflowSLJsonController/GetSimpleWorkflowsByRootFilterRespons" +
            "e")]
        System.IAsyncResult BeginGetSimpleWorkflowsByRootFilter(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO filter, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveCommand", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveCommandResponse")]
        System.IAsyncResult BeginRemoveCommand(Framework.Workflow.Generated.DTO.CommandIdentityDTO commandIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveConditionState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveConditionStateResponse")]
        System.IAsyncResult BeginRemoveConditionState(Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO conditionStateIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveParallelState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveParallelStateResponse")]
        System.IAsyncResult BeginRemoveParallelState(Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO parallelStateIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveStartWorkflowDomainObjectCondit" +
            "ion", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveStartWorkflowDomainObjectCondit" +
            "ionResponse")]
        System.IAsyncResult BeginRemoveStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO startWorkflowDomainObjectConditionIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveStateResponse")]
        System.IAsyncResult BeginRemoveState(Framework.Workflow.Generated.DTO.StateIdentityDTO stateIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveTask", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveTaskResponse")]
        System.IAsyncResult BeginRemoveTask(Framework.Workflow.Generated.DTO.TaskIdentityDTO taskIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveTransition", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveTransitionResponse")]
        System.IAsyncResult BeginRemoveTransition(Framework.Workflow.Generated.DTO.TransitionIdentityDTO transitionIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveWorkflowResponse")]
        System.IAsyncResult BeginRemoveWorkflow(Framework.Workflow.Generated.DTO.WorkflowIdentityDTO workflowIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveWorkflowInstance", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveWorkflowInstanceResponse")]
        System.IAsyncResult BeginRemoveWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO workflowInstanceIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/RemoveWorkflowLambda", ReplyAction="http://tempuri.org/WorkflowSLJsonController/RemoveWorkflowLambdaResponse")]
        System.IAsyncResult BeginRemoveWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO workflowLambdaIdent, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveCommand", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveCommandResponse")]
        System.IAsyncResult BeginSaveCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO commandStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveConditionState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveConditionStateResponse")]
        System.IAsyncResult BeginSaveConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO conditionStateStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveParallelState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveParallelStateResponse")]
        System.IAsyncResult BeginSaveParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO parallelStateStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveStartWorkflowDomainObjectConditio" +
            "n", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveStartWorkflowDomainObjectConditio" +
            "nResponse")]
        System.IAsyncResult BeginSaveStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO startWorkflowDomainObjectConditionStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveState", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveStateResponse")]
        System.IAsyncResult BeginSaveState(Framework.Workflow.Generated.DTO.StateStrictDTO stateStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveTask", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveTaskResponse")]
        System.IAsyncResult BeginSaveTask(Framework.Workflow.Generated.DTO.TaskStrictDTO taskStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveTaskInstance", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveTaskInstanceResponse")]
        System.IAsyncResult BeginSaveTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO taskInstanceStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveTransition", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveTransitionResponse")]
        System.IAsyncResult BeginSaveTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO transitionStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveWorkflowResponse")]
        System.IAsyncResult BeginSaveWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO workflowStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveWorkflowInstance", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveWorkflowInstanceResponse")]
        System.IAsyncResult BeginSaveWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO workflowInstanceStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/SaveWorkflowLambda", ReplyAction="http://tempuri.org/WorkflowSLJsonController/SaveWorkflowLambdaResponse")]
        System.IAsyncResult BeginSaveWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO workflowLambdaStrict, System.AsyncCallback callback, object asyncState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WorkflowSLJsonController/StartWorkflow", ReplyAction="http://tempuri.org/WorkflowSLJsonController/StartWorkflowResponse")]
        System.IAsyncResult BeginStartWorkflow(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO startWorkflowRequest, System.AsyncCallback callback, object asyncState);
        
        void EndAbortWorkflow(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowRichDTO EndCreateWorkflow(System.IAsyncResult result);
        
        byte[] EndDrawWorkflow(System.IAsyncResult result);
        
        byte[] EndDrawWorkflowInstance(System.IAsyncResult result);
        
        void EndExecuteCommand(System.IAsyncResult result);
        
        void EndExecuteCommands(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO> EndGetFullCommandsByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandFullDTO> EndGetFullCommandsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO> EndGetFullConditionStatesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateFullDTO> EndGetFullConditionStatesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO> EndGetFullParallelStatesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFullDTO> EndGetFullParallelStatesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO> EndGetFullStartWorkflowDomainObjectConditionsByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO> EndGetFullStartWorkflowDomainObjectConditionsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceFullDTO> EndGetFullStateInstancesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO> EndGetFullStatesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateFullDTO> EndGetFullStatesByRootFilter(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TaskFullDTO EndGetFullTask(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO> EndGetFullTaskInstancesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO> EndGetFullTaskInstancesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO> EndGetFullTasksByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskFullDTO> EndGetFullTasksByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO> EndGetFullTransitionsByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionFullDTO> EndGetFullTransitionsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO> EndGetFullWorkflowInstancesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO> EndGetFullWorkflowInstancesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO> EndGetFullWorkflowLambdasByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO> EndGetFullWorkflowLambdasByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO> EndGetFullWorkflowsByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowFullDTO> EndGetFullWorkflowsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO> EndGetFullWorkflowSourcesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO> EndGetFullWorkflowSourcesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceWorkflowGroupProjectionDTO> EndGetMiniAvailableTaskInstancesByMainFilter(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.CommandRichDTO EndGetRichCommand(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.ConditionStateRichDTO EndGetRichConditionState(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.ParallelStateRichDTO EndGetRichParallelState(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO> EndGetRichRolesByIdents(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO EndGetRichStartWorkflowDomainObjectCondition(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.StateRichDTO EndGetRichState(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TaskRichDTO EndGetRichTask(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TaskInstanceRichDTO EndGetRichTaskInstance(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TransitionRichDTO EndGetRichTransition(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowRichDTO EndGetRichWorkflow(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO EndGetRichWorkflowInstance(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO EndGetRichWorkflowLambda(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO EndGetRichWorkflowSource(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO> EndGetSimpleCommandEventsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO> EndGetSimpleCommandsByAvailableCommandFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandSimpleDTO> EndGetSimpleCommandsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO> EndGetSimpleConditionStatesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO> EndGetSimpleDomainTypes(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO> EndGetSimpleDomainTypesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO> EndGetSimpleEvents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.EventSimpleDTO> EndGetSimpleEventsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO> EndGetSimpleParallelStatesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleSimpleDTO> EndGetSimpleRolesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO> EndGetSimpleStartWorkflowDomainObjectConditionsByRootFilter(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.StateBaseSimpleDTO EndGetSimpleStateBase(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO> EndGetSimpleStateBases(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO> EndGetSimpleStateBasesByIdents(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO> EndGetSimpleStateBasesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateSimpleDTO> EndGetSimpleStatesByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO> EndGetSimpleTargetSystems(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskSimpleDTO> EndGetSimpleTasksByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO> EndGetSimpleTransitions(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionSimpleDTO> EndGetSimpleTransitionsByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO> EndGetSimpleWorkflowLambdas(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO> EndGetSimpleWorkflowLambdasByRootFilter(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO> EndGetSimpleWorkflows(System.IAsyncResult result);
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO> EndGetSimpleWorkflowsByRootFilter(System.IAsyncResult result);
        
        void EndRemoveCommand(System.IAsyncResult result);
        
        void EndRemoveConditionState(System.IAsyncResult result);
        
        void EndRemoveParallelState(System.IAsyncResult result);
        
        void EndRemoveStartWorkflowDomainObjectCondition(System.IAsyncResult result);
        
        void EndRemoveState(System.IAsyncResult result);
        
        void EndRemoveTask(System.IAsyncResult result);
        
        void EndRemoveTransition(System.IAsyncResult result);
        
        void EndRemoveWorkflow(System.IAsyncResult result);
        
        void EndRemoveWorkflowInstance(System.IAsyncResult result);
        
        void EndRemoveWorkflowLambda(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.CommandIdentityDTO EndSaveCommand(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO EndSaveConditionState(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO EndSaveParallelState(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO EndSaveStartWorkflowDomainObjectCondition(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.StateIdentityDTO EndSaveState(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TaskIdentityDTO EndSaveTask(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO EndSaveTaskInstance(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.TransitionIdentityDTO EndSaveTransition(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowIdentityDTO EndSaveWorkflow(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO EndSaveWorkflowInstance(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO EndSaveWorkflowLambda(System.IAsyncResult result);
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO EndStartWorkflow(System.IAsyncResult result);
    }
}
