//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkflowSampleSystem.BLL
{
    
    
    public partial class WorkflowSampleSystemValidationMapBase : Framework.Validation.ValidationMapBase
    {
        
        private Framework.Validation.IValidationMap _defaultValidatorMap;
        
        protected WorkflowSampleSystemValidationMapBase(Framework.Core.IDynamicSource extendedValidationData) : 
                base(extendedValidationData)
        {
            this._defaultValidatorMap = new Framework.Validation.ValidationMap(extendedValidationData);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, string>> GetAddress_CityNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Address>(100);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, WorkflowSampleSystem.Domain.Country>> GetAddress_CountryNameValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Address, WorkflowSampleSystem.Domain.Country>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, System.DateTime?>> GetAddress_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Address>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, string>> GetAddress_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Address>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, string>> GetAddress_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Address>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, System.DateTime?>> GetAddress_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Address>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, string>> GetAddress_RegionNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Address>(100);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, string>> GetAddress_StreetValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Address>(100);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Address, string>> GetAddress_ZipValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Address>(100);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Address>> GetAddressProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Address> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, string>(source => source.CityName, currentClass, this.GetAddress_CityNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, WorkflowSampleSystem.Domain.Country>(source => source.CountryName, currentClass, this.GetAddress_CountryNameValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Country>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, System.DateTime?>(source => source.CreateDate, currentClass, this.GetAddress_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, string>(source => source.CreatedBy, currentClass, this.GetAddress_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, string>(source => source.ModifiedBy, currentClass, this.GetAddress_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetAddress_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, string>(source => source.RegionName, currentClass, this.GetAddress_RegionNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, string>(source => source.Street, currentClass, this.GetAddress_StreetValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Address, string>(source => source.Zip, currentClass, this.GetAddress_ZipValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Address> GetAddressValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Address>(this.GetAddressProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, System.DateTime?>> GetAnotherSqlParserTestObj_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>> GetAnotherSqlParserTestObj_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>> GetAnotherSqlParserTestObj_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, System.DateTime?>> GetAnotherSqlParserTestObj_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>> GetAnotherSqlParserTestObj_NotNullColumnValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>> GetAnotherSqlParserTestObj_UniqueColumnValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>> GetAnotherSqlParserTestObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, System.DateTime?>(source => source.CreateDate, currentClass, this.GetAnotherSqlParserTestObj_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>(source => source.CreatedBy, currentClass, this.GetAnotherSqlParserTestObj_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>(source => source.ModifiedBy, currentClass, this.GetAnotherSqlParserTestObj_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetAnotherSqlParserTestObj_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>(source => source.NotNullColumn, currentClass, this.GetAnotherSqlParserTestObj_NotNullColumnValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj, string>(source => source.UniqueColumn, currentClass, this.GetAnotherSqlParserTestObj_UniqueColumnValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj> GetAnotherSqlParserTestObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.AnotherSqlParserTestObj>(this.GetAnotherSqlParserTestObjProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>>> GetBusinessUnit_BusinessUnitEmployeeRolesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnit>>> GetBusinessUnit_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnit>, WorkflowSampleSystem.Domain.BusinessUnit>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, decimal>> GetBusinessUnit_CommissionValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Decimal.Create<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<decimal>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_FirstNewBusinessStatusMonthValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_LastBusinessUnitHasNoLinkedProjectsWarningCheckDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_LeastProjectStartDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>>> GetBusinessUnit_ManagementUnitsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Tuple<WorkflowSampleSystem.Domain.ManagementUnit, WorkflowSampleSystem.Domain.BusinessUnit>>(source => new System.Tuple<WorkflowSampleSystem.Domain.ManagementUnit, WorkflowSampleSystem.Domain.BusinessUnit>(source.ManagementUnit, source.BusinessUnit), "ManagementUnit, BusinessUnit");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>>> GetBusinessUnit_ManagerCommissionsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.Tuple<WorkflowSampleSystem.Domain.Employee, System.DateTime>>(source => new System.Tuple<WorkflowSampleSystem.Domain.Employee, System.DateTime>(source.Manager, source.StartDate), "Manager, StartDate");
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, Framework.Core.Period>> GetBusinessUnit_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_ProjectStartMailListValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Project>>> GetBusinessUnit_ProjectsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Project>, WorkflowSampleSystem.Domain.Project>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>> GetBusinessUnitAncestorLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>> GetBusinessUnitAncestorLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>> GetBusinessUnitAncestorLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>> GetBusinessUnitAncestorLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>> GetBusinessUnitAncestorLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitAncestorLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitAncestorLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitAncestorLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitAncestorLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink> GetBusinessUnitAncestorLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.GetBusinessUnitAncestorLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, WorkflowSampleSystem.Domain.BusinessUnit>> GetBusinessUnitEmployeeRole_BusinessUnitValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, WorkflowSampleSystem.Domain.BusinessUnit>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, System.DateTime?>> GetBusinessUnitEmployeeRole_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, string>> GetBusinessUnitEmployeeRole_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, WorkflowSampleSystem.Domain.Employee>> GetBusinessUnitEmployeeRole_EmployeeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, string>> GetBusinessUnitEmployeeRole_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, System.DateTime?>> GetBusinessUnitEmployeeRole_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>> GetBusinessUnitEmployeeRoleProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.BusinessUnit, currentClass, this.GetBusinessUnitEmployeeRole_BusinessUnitValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitEmployeeRole_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitEmployeeRole_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, WorkflowSampleSystem.Domain.Employee>(source => source.Employee, currentClass, this.GetBusinessUnitEmployeeRole_EmployeeValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitEmployeeRole_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitEmployeeRole_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole> GetBusinessUnitEmployeeRoleValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(this.GetBusinessUnitEmployeeRoleProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.Domain.BusinessUnit>> GetBusinessUnitHrDepartment_BusinessUnitValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.Domain.BusinessUnit>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.DateTime?>> GetBusinessUnitHrDepartment_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, string>> GetBusinessUnitHrDepartment_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.Domain.HRDepartment>> GetBusinessUnitHrDepartment_HRDepartmentValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.Domain.HRDepartment>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, string>> GetBusinessUnitHrDepartment_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.DateTime?>> GetBusinessUnitHrDepartment_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>> GetBusinessUnitHrDepartmentProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.BusinessUnit, currentClass, this.GetBusinessUnitHrDepartment_BusinessUnitValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitHrDepartment_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitHrDepartment_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, WorkflowSampleSystem.Domain.HRDepartment>(source => source.HRDepartment, currentClass, this.GetBusinessUnitHrDepartment_HRDepartmentValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.HRDepartment>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitHrDepartment_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitHrDepartment_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment> GetBusinessUnitHrDepartmentValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(this.GetBusinessUnitHrDepartmentProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.Domain.BusinessUnit>> GetBusinessUnitManagerCommissionLink_BusinessUnitValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.Domain.BusinessUnit>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, decimal>> GetBusinessUnitManagerCommissionLink_CommissionValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Decimal.Create<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableRange<decimal>());
            yield return Framework.Validation.PropertyValidatorExtensions.Unbox<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, object, decimal, object>(new Framework.Validation.SignValidator((Framework.Validation.SignType.Positive | Framework.Validation.SignType.Negative)));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.DateTime?>> GetBusinessUnitManagerCommissionLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, string>> GetBusinessUnitManagerCommissionLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.Domain.Employee>> GetBusinessUnitManagerCommissionLink_ManagerValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, string>> GetBusinessUnitManagerCommissionLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.DateTime?>> GetBusinessUnitManagerCommissionLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, Framework.Core.Period>> GetBusinessUnitManagerCommissionLink_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.DateTime>> GetBusinessUnitManagerCommissionLink_StartDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.Create<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>> GetBusinessUnitManagerCommissionLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.BusinessUnit, currentClass, this.GetBusinessUnitManagerCommissionLink_BusinessUnitValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, decimal>(source => source.Commission, currentClass, this.GetBusinessUnitManagerCommissionLink_CommissionValidators(), this.GetClassMap<decimal>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitManagerCommissionLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitManagerCommissionLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, WorkflowSampleSystem.Domain.Employee>(source => source.Manager, currentClass, this.GetBusinessUnitManagerCommissionLink_ManagerValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitManagerCommissionLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitManagerCommissionLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, Framework.Core.Period>(source => source.Period, currentClass, this.GetBusinessUnitManagerCommissionLink_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink, System.DateTime>(source => source.StartDate, currentClass, this.GetBusinessUnitManagerCommissionLink_StartDateValidators(), this.GetClassMap<System.DateTime>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink> GetBusinessUnitManagerCommissionLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(this.GetBusinessUnitManagerCommissionLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel, string>> GetBusinessUnitProgramClassFilterModel_FilterVirtualNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel>> GetBusinessUnitProgramClassFilterModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel, string>(source => source.FilterVirtualName, currentClass, this.GetBusinessUnitProgramClassFilterModel_FilterVirtualNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel> GetBusinessUnitProgramClassFilterModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel>(this.GetBusinessUnitProgramClassFilterModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit>> GetBusinessUnitProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnit> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>, WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(source => source.BusinessUnitEmployeeRoles, currentClass, this.GetBusinessUnit_BusinessUnitEmployeeRolesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnit>, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.Children, currentClass, this.GetBusinessUnit_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, decimal>(source => source.Commission, currentClass, this.GetBusinessUnit_CommissionValidators(), this.GetClassMap<decimal>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnit_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnit_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.FirstNewBusinessStatusMonth, currentClass, this.GetBusinessUnit_FirstNewBusinessStatusMonthValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.LastBusinessUnitHasNoLinkedProjectsWarningCheckDate, currentClass, this.GetBusinessUnit_LastBusinessUnitHasNoLinkedProjectsWarningCheckDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.LeastProjectStartDate, currentClass, this.GetBusinessUnit_LeastProjectStartDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(source => source.ManagementUnits, currentClass, this.GetBusinessUnit_ManagementUnitsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>, WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(source => source.ManagerCommissions, currentClass, this.GetBusinessUnit_ManagerCommissionsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnit_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnit_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.Name, currentClass, this.GetBusinessUnit_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, Framework.Core.Period>(source => source.Period, currentClass, this.GetBusinessUnit_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Project>, WorkflowSampleSystem.Domain.Project>(source => source.Projects, currentClass, this.GetBusinessUnit_ProjectsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Project>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.ProjectStartMailList, currentClass, this.GetBusinessUnit_ProjectStartMailListValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel, System.Collections.Generic.List<System.DateTime>>> GetBusinessUnitRootFilterModel_ListDaysValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel, System.Collections.Generic.List<System.DateTime>, System.DateTime>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel, System.Collections.Generic.List<Framework.Core.Period>>> GetBusinessUnitRootFilterModel_ListPeriodsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel, System.Collections.Generic.List<Framework.Core.Period>, Framework.Core.Period>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel>> GetBusinessUnitRootFilterModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel, System.Collections.Generic.List<System.DateTime>, System.DateTime>(source => source.ListDays, currentClass, this.GetBusinessUnitRootFilterModel_ListDaysValidators(), this.GetClassMap<System.DateTime>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel, System.Collections.Generic.List<Framework.Core.Period>, Framework.Core.Period>(source => source.ListPeriods, currentClass, this.GetBusinessUnitRootFilterModel_ListPeriodsValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel> GetBusinessUnitRootFilterModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel>(this.GetBusinessUnitRootFilterModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>> GetBusinessUnitToAncestorChildView_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>> GetBusinessUnitToAncestorChildView_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>> GetBusinessUnitToAncestorChildView_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>> GetBusinessUnitToAncestorChildView_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>> GetBusinessUnitToAncestorChildViewProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitToAncestorChildView_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitToAncestorChildView_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitToAncestorChildView_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitToAncestorChildView_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView> GetBusinessUnitToAncestorChildViewValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.GetBusinessUnitToAncestorChildViewProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.DateTime?>> GetBusinessUnitType_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, string>> GetBusinessUnitType_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, string>> GetBusinessUnitType_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.DateTime?>> GetBusinessUnitType_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, string>> GetBusinessUnitType_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitType>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnitType, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>>> GetBusinessUnitType_PossibleFinancialProjectTypesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>>> GetBusinessUnitType_PossibleParentsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>>> GetBusinessUnitType_TransferToValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, System.DateTime?>> GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, string>> GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, string>> GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, System.DateTime?>> GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>> GetBusinessUnitTypeLinkWithPossibleFinancialProjectTypeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitTypeLinkWithPossibleFinancialProjectType_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType> GetBusinessUnitTypeLinkWithPossibleFinancialProjectTypeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(this.GetBusinessUnitTypeLinkWithPossibleFinancialProjectTypeProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, System.DateTime?>> GetBusinessUnitTypeLinkWithPossibleParent_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, string>> GetBusinessUnitTypeLinkWithPossibleParent_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, string>> GetBusinessUnitTypeLinkWithPossibleParent_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, System.DateTime?>> GetBusinessUnitTypeLinkWithPossibleParent_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>> GetBusinessUnitTypeLinkWithPossibleParentProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitTypeLinkWithPossibleParent_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitTypeLinkWithPossibleParent_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitTypeLinkWithPossibleParent_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitTypeLinkWithPossibleParent_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent> GetBusinessUnitTypeLinkWithPossibleParentValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(this.GetBusinessUnitTypeLinkWithPossibleParentProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, System.DateTime?>> GetBusinessUnitTypeLinkWithTransferTo_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, string>> GetBusinessUnitTypeLinkWithTransferTo_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, string>> GetBusinessUnitTypeLinkWithTransferTo_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, System.DateTime?>> GetBusinessUnitTypeLinkWithTransferTo_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>> GetBusinessUnitTypeLinkWithTransferToProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitTypeLinkWithTransferTo_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitTypeLinkWithTransferTo_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitTypeLinkWithTransferTo_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitTypeLinkWithTransferTo_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo> GetBusinessUnitTypeLinkWithTransferToValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(this.GetBusinessUnitTypeLinkWithTransferToProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType>> GetBusinessUnitTypeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitType_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitType_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitType_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitType_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, string>(source => source.Name, currentClass, this.GetBusinessUnitType_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(source => source.PossibleFinancialProjectTypes, currentClass, this.GetBusinessUnitType_PossibleFinancialProjectTypesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(source => source.PossibleParents, currentClass, this.GetBusinessUnitType_PossibleParentsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>, WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(source => source.TransferTo, currentClass, this.GetBusinessUnitType_TransferToValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType> GetBusinessUnitTypeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitType>(this.GetBusinessUnitTypeProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnit> GetBusinessUnitValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnit>(this.GetBusinessUnitProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, System.DateTime?>> GetChildEntity_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, string>> GetChildEntity_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, string>> GetChildEntity_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, System.DateTime?>> GetChildEntity_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity>> GetChildEntityProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, System.DateTime?>(source => source.CreateDate, currentClass, this.GetChildEntity_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, string>(source => source.CreatedBy, currentClass, this.GetChildEntity_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, string>(source => source.ModifiedBy, currentClass, this.GetChildEntity_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetChildEntity_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity> GetChildEntityValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity>(this.GetChildEntityProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>>> GetClassA_ChildValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>, WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>();
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild> GetClassAChildValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA>> GetClassAProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>, WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>(source => source.Child, currentClass, this.GetClassA_ChildValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA> GetClassAValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassA>(this.GetClassAProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, System.DateTime?>> GetCoefficient1676_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, string>> GetCoefficient1676_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, string>> GetCoefficient1676_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, System.DateTime?>> GetCoefficient1676_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, decimal>> GetCoefficient1676_NormCoefficientValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Decimal.Create<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>(this.AvailableValues.GetAvailableRange<decimal>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>> GetCoefficient1676Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, System.DateTime?>(source => source.CreateDate, currentClass, this.GetCoefficient1676_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, string>(source => source.CreatedBy, currentClass, this.GetCoefficient1676_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, string>(source => source.ModifiedBy, currentClass, this.GetCoefficient1676_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetCoefficient1676_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676, decimal>(source => source.NormCoefficient, currentClass, this.GetCoefficient1676_NormCoefficientValidators(), this.GetClassMap<decimal>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676> GetCoefficient1676ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676>(this.GetCoefficient1676Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Address>>> GetCompanyLegalEntity_AddressesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Address>, WorkflowSampleSystem.Domain.Address>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>> GetCompanyLegalEntity_CodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity>(100);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.DateTime?>> GetCompanyLegalEntity_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>> GetCompanyLegalEntity_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>> GetCompanyLegalEntity_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.DateTime?>> GetCompanyLegalEntity_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>> GetCompanyLegalEntity_NameEnglishValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>> GetCompanyLegalEntity_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity>> GetCompanyLegalEntityProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Address>, WorkflowSampleSystem.Domain.Address>(source => source.Addresses, currentClass, this.GetCompanyLegalEntity_AddressesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Address>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(source => source.Code, currentClass, this.GetCompanyLegalEntity_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.DateTime?>(source => source.CreateDate, currentClass, this.GetCompanyLegalEntity_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(source => source.CreatedBy, currentClass, this.GetCompanyLegalEntity_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(source => source.ModifiedBy, currentClass, this.GetCompanyLegalEntity_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetCompanyLegalEntity_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(source => source.Name, currentClass, this.GetCompanyLegalEntity_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity, string>(source => source.NameEnglish, currentClass, this.GetCompanyLegalEntity_NameEnglishValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity> GetCompanyLegalEntityValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.CompanyLegalEntity>(this.GetCompanyLegalEntityProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>>> GetConcreteClassA_ChildValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>, WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA>> GetConcreteClassAProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>, WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>(source => source.Child, currentClass, this.GetConcreteClassA_ChildValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA> GetConcreteClassAValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA>(this.GetConcreteClassAProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, string>> GetCountry_CodeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Country, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, System.DateTime?>> GetCountry_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, string>> GetCountry_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, string>> GetCountry_CultureValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Country, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, string>> GetCountry_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, System.DateTime?>> GetCountry_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, string>> GetCountry_NameNativeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Country, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Country, string>> GetCountry_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Country>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Country, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Country>> GetCountryProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Country> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, string>(source => source.Code, currentClass, this.GetCountry_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, System.DateTime?>(source => source.CreateDate, currentClass, this.GetCountry_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, string>(source => source.CreatedBy, currentClass, this.GetCountry_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, string>(source => source.Culture, currentClass, this.GetCountry_CultureValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, string>(source => source.ModifiedBy, currentClass, this.GetCountry_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetCountry_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, string>(source => source.Name, currentClass, this.GetCountry_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Country, string>(source => source.NameNative, currentClass, this.GetCountry_NameNativeValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Country> GetCountryValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Country>(this.GetCountryProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Custom.DateModel> GetDateModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Models.Custom.DateModel>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_BirthDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeCellPhone>>> GetEmployee_CellPhonesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeCellPhone>, WorkflowSampleSystem.Domain.EmployeeCellPhone>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_DismissDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>> GetEmployee_EducationDurationValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePhoto>>> GetEmployee_EmployeePhotosValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePhoto>, WorkflowSampleSystem.Domain.EmployeePhoto, System.Tuple<WorkflowSampleSystem.Domain.EmployeePhotoType>>(source => new System.Tuple<WorkflowSampleSystem.Domain.EmployeePhotoType>(source.Type), "Type");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePhoto>, WorkflowSampleSystem.Domain.EmployeePhoto>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>>> GetEmployee_EmployeeToEmployeeLinksValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, long>> GetEmployee_ExternalIdValidators()
        {
            yield break;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_HireDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_InterphoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(25);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_LandlinephoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(40);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_LastActionDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_LoginValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(30);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.FioShort>> GetEmployee_NameEngValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.FioShort>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>> GetEmployee_NameNativeValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>> GetEmployee_NameRussianValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>>> GetEmployee_PersonalCellPhonesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_PersonalCellPhoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_PlannedHireDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>>> GetEmployee_SpecializationsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.Tuple<WorkflowSampleSystem.Domain.EmployeeSpecialization, WorkflowSampleSystem.Domain.Employee>>(source => new System.Tuple<WorkflowSampleSystem.Domain.EmployeeSpecialization, WorkflowSampleSystem.Domain.Employee>(source.Specialization, source.Employee), "Specialization, Employee");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime>> GetEmployee_ValidateVirtualPropValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.Create<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>> GetEmployee_WorkPeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.DateTime?>> GetEmployeeAndEmployeeSpecializationLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, string>> GetEmployeeAndEmployeeSpecializationLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, WorkflowSampleSystem.Domain.Employee>> GetEmployeeAndEmployeeSpecializationLink_EmployeeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, string>> GetEmployeeAndEmployeeSpecializationLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.DateTime?>> GetEmployeeAndEmployeeSpecializationLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, WorkflowSampleSystem.Domain.EmployeeSpecialization>> GetEmployeeAndEmployeeSpecializationLink_SpecializationValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, WorkflowSampleSystem.Domain.EmployeeSpecialization>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>> GetEmployeeAndEmployeeSpecializationLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeAndEmployeeSpecializationLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, string>(source => source.CreatedBy, currentClass, this.GetEmployeeAndEmployeeSpecializationLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, WorkflowSampleSystem.Domain.Employee>(source => source.Employee, currentClass, this.GetEmployeeAndEmployeeSpecializationLink_EmployeeValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeAndEmployeeSpecializationLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeAndEmployeeSpecializationLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink, WorkflowSampleSystem.Domain.EmployeeSpecialization>(source => source.Specialization, currentClass, this.GetEmployeeAndEmployeeSpecializationLink_SpecializationValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EmployeeSpecialization>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink> GetEmployeeAndEmployeeSpecializationLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(this.GetEmployeeAndEmployeeSpecializationLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>> GetEmployeeCellPhone_CityCodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone>(5);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>> GetEmployeeCellPhone_CountryCodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone>(3);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, System.DateTime?>> GetEmployeeCellPhone_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeCellPhone>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>> GetEmployeeCellPhone_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>> GetEmployeeCellPhone_FullNumberValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone>(18);
            yield return new Framework.Validation.NumberAlphabetValidator("+()");
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>> GetEmployeeCellPhone_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, System.DateTime?>> GetEmployeeCellPhone_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeCellPhone>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>> GetEmployeeCellPhone_NumberValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhone>(7);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>> GetEmployeeCellPhoneBase_CityCodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(5);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>> GetEmployeeCellPhoneBase_CountryCodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(3);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, System.DateTime?>> GetEmployeeCellPhoneBase_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>> GetEmployeeCellPhoneBase_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>> GetEmployeeCellPhoneBase_FullNumberValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(18);
            yield return new Framework.Validation.NumberAlphabetValidator("+()");
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>> GetEmployeeCellPhoneBase_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, System.DateTime?>> GetEmployeeCellPhoneBase_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>> GetEmployeeCellPhoneBase_NumberValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(7);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>> GetEmployeeCellPhoneBaseProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(source => source.CityCode, currentClass, this.GetEmployeeCellPhoneBase_CityCodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(source => source.CountryCode, currentClass, this.GetEmployeeCellPhoneBase_CountryCodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeCellPhoneBase_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(source => source.CreatedBy, currentClass, this.GetEmployeeCellPhoneBase_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(source => source.FullNumber, currentClass, this.GetEmployeeCellPhoneBase_FullNumberValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeCellPhoneBase_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeCellPhoneBase_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase, string>(source => source.Number, currentClass, this.GetEmployeeCellPhoneBase_NumberValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase> GetEmployeeCellPhoneBaseValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhoneBase>(this.GetEmployeeCellPhoneBaseProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone>> GetEmployeeCellPhoneProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(source => source.CityCode, currentClass, this.GetEmployeeCellPhone_CityCodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(source => source.CountryCode, currentClass, this.GetEmployeeCellPhone_CountryCodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeCellPhone_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(source => source.CreatedBy, currentClass, this.GetEmployeeCellPhone_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(source => source.FullNumber, currentClass, this.GetEmployeeCellPhone_FullNumberValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeCellPhone_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeCellPhone_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone, string>(source => source.Number, currentClass, this.GetEmployeeCellPhone_NumberValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone> GetEmployeeCellPhoneValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCellPhone>(this.GetEmployeeCellPhoneProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, string>> GetEmployeeComplexChangeModel_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, WorkflowSampleSystem.Domain.Employee>> GetEmployeeComplexChangeModel_PrimaryChangingObjectValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>>> GetEmployeeComplexChangeModel_SecondaryChangingObjectsValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>, WorkflowSampleSystem.Domain.Employee>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel>> GetEmployeeComplexChangeModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, string>(source => source.Email, currentClass, this.GetEmployeeComplexChangeModel_EmailValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, WorkflowSampleSystem.Domain.Employee>(source => source.PrimaryChangingObject, currentClass, this.GetEmployeeComplexChangeModel_PrimaryChangingObjectValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>, WorkflowSampleSystem.Domain.Employee>(source => source.SecondaryChangingObjects, currentClass, this.GetEmployeeComplexChangeModel_SecondaryChangingObjectsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel> GetEmployeeComplexChangeModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeComplexChangeModel>(this.GetEmployeeComplexChangeModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCustomEventModel, string>> GetEmployeeCustomEventModel_LoginValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeCustomEventModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomEventModel>> GetEmployeeCustomEventModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomEventModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomEventModel, string>(source => source.Login, currentClass, this.GetEmployeeCustomEventModel_LoginValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomEventModel> GetEmployeeCustomEventModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomEventModel>(this.GetEmployeeCustomEventModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel, WorkflowSampleSystem.Domain.Employee>> GetEmployeeCustomIntegrationSaveModel_SavingObjectValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel, WorkflowSampleSystem.Domain.Employee>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel>> GetEmployeeCustomIntegrationSaveModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel, WorkflowSampleSystem.Domain.Employee>(source => source.SavingObject, currentClass, this.GetEmployeeCustomIntegrationSaveModel_SavingObjectValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel> GetEmployeeCustomIntegrationSaveModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel>(this.GetEmployeeCustomIntegrationSaveModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel, WorkflowSampleSystem.Domain.Employee>> GetEmployeeEmailChangeModel_ChangingObjectValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel, string>> GetEmployeeEmailChangeModel_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel>> GetEmployeeEmailChangeModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel, WorkflowSampleSystem.Domain.Employee>(source => source.ChangingObject, currentClass, this.GetEmployeeEmailChangeModel_ChangingObjectValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel, string>(source => source.Email, currentClass, this.GetEmployeeEmailChangeModel_EmailValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel> GetEmployeeEmailChangeModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailChangeModel>(this.GetEmployeeEmailChangeModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>>> GetEmployeeEmailMassChangeModel_ChangingObjectsValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>, WorkflowSampleSystem.Domain.Employee>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel, string>> GetEmployeeEmailMassChangeModel_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel>> GetEmployeeEmailMassChangeModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel, System.Collections.Generic.List<WorkflowSampleSystem.Domain.Employee>, WorkflowSampleSystem.Domain.Employee>(source => source.ChangingObjects, currentClass, this.GetEmployeeEmailMassChangeModel_ChangingObjectsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel, string>(source => source.Email, currentClass, this.GetEmployeeEmailMassChangeModel_EmailValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel> GetEmployeeEmailMassChangeModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel>(this.GetEmployeeEmailMassChangeModelProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel> GetEmployeeFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, System.DateTime?>> GetEmployeeInformation_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeInformation>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, string>> GetEmployeeInformation_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeInformation>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, string>> GetEmployeeInformation_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeInformation>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, string>> GetEmployeeInformation_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeInformation>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, System.DateTime?>> GetEmployeeInformation_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeInformation>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, string>> GetEmployeeInformation_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeInformation>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeInformation, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeInformation, string>> GetEmployeeInformation_PersonalEmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeInformation>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation>> GetEmployeeInformationProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeInformation_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, string>(source => source.CreatedBy, currentClass, this.GetEmployeeInformation_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, string>(source => source.Email, currentClass, this.GetEmployeeInformation_EmailValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeInformation_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeInformation_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, string>(source => source.Name, currentClass, this.GetEmployeeInformation_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation, string>(source => source.PersonalEmail, currentClass, this.GetEmployeeInformation_PersonalEmailValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation> GetEmployeeInformationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeInformation>(this.GetEmployeeInformationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>> GetEmployeePersonalCellPhone_CityCodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(5);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>> GetEmployeePersonalCellPhone_CountryCodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(3);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.DateTime?>> GetEmployeePersonalCellPhone_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>> GetEmployeePersonalCellPhone_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>> GetEmployeePersonalCellPhone_FullNumberValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(18);
            yield return new Framework.Validation.NumberAlphabetValidator("+()");
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>> GetEmployeePersonalCellPhone_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.DateTime?>> GetEmployeePersonalCellPhone_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>> GetEmployeePersonalCellPhone_NumberValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(7);
            yield return new Framework.Validation.NumberAlphabetValidator(null);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>> GetEmployeePersonalCellPhoneProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(source => source.CityCode, currentClass, this.GetEmployeePersonalCellPhone_CityCodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(source => source.CountryCode, currentClass, this.GetEmployeePersonalCellPhone_CountryCodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeePersonalCellPhone_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(source => source.CreatedBy, currentClass, this.GetEmployeePersonalCellPhone_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(source => source.FullNumber, currentClass, this.GetEmployeePersonalCellPhone_FullNumberValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(source => source.ModifiedBy, currentClass, this.GetEmployeePersonalCellPhone_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeePersonalCellPhone_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone, string>(source => source.Number, currentClass, this.GetEmployeePersonalCellPhone_NumberValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone> GetEmployeePersonalCellPhoneValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(this.GetEmployeePersonalCellPhoneProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePhoto, string>> GetEmployeePhoto_ContentTypeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePhoto>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePhoto, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePhoto, System.DateTime?>> GetEmployeePhoto_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeePhoto>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePhoto, string>> GetEmployeePhoto_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePhoto>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePhoto, byte[]>> GetEmployeePhoto_DataValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePhoto, byte[]>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.MaxLengthValidator.BinaryMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePhoto>(1048576);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePhoto, string>> GetEmployeePhoto_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePhoto>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePhoto, System.DateTime?>> GetEmployeePhoto_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeePhoto>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto>> GetEmployeePhotoProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto, string>(source => source.ContentType, currentClass, this.GetEmployeePhoto_ContentTypeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeePhoto_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto, string>(source => source.CreatedBy, currentClass, this.GetEmployeePhoto_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto, byte[]>(source => source.Data, currentClass, this.GetEmployeePhoto_DataValidators(), this.GetClassMap<byte[]>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto, string>(source => source.ModifiedBy, currentClass, this.GetEmployeePhoto_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeePhoto_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto> GetEmployeePhotoValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeePhoto>(this.GetEmployeePhotoProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, System.DateTime?>> GetEmployeePosition_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeePosition>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, string>> GetEmployeePosition_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePosition>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, string>> GetEmployeePosition_EnglishNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePosition>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePosition, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, WorkflowSampleSystem.Domain.Location>> GetEmployeePosition_LocationValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePosition, WorkflowSampleSystem.Domain.Location>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, string>> GetEmployeePosition_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePosition>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, System.DateTime?>> GetEmployeePosition_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeePosition>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeePosition, string>> GetEmployeePosition_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeePosition>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeePosition, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition>> GetEmployeePositionProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeePosition> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeePosition_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, string>(source => source.CreatedBy, currentClass, this.GetEmployeePosition_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, string>(source => source.EnglishName, currentClass, this.GetEmployeePosition_EnglishNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, WorkflowSampleSystem.Domain.Location>(source => source.Location, currentClass, this.GetEmployeePosition_LocationValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Location>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, string>(source => source.ModifiedBy, currentClass, this.GetEmployeePosition_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeePosition_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeePosition, string>(source => source.Name, currentClass, this.GetEmployeePosition_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeePosition> GetEmployeePositionValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeePosition>(this.GetEmployeePositionProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Employee>> GetEmployeeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Employee> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.BirthDate, currentClass, this.GetEmployee_BirthDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeCellPhone>, WorkflowSampleSystem.Domain.EmployeeCellPhone>(source => source.CellPhones, currentClass, this.GetEmployee_CellPhonesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EmployeeCellPhone>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployee_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.CreatedBy, currentClass, this.GetEmployee_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.DismissDate, currentClass, this.GetEmployee_DismissDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>(source => source.EducationDuration, currentClass, this.GetEmployee_EducationDurationValidators(), this.GetClassMap<Framework.Core.Period>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Email, currentClass, this.GetEmployee_EmailValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePhoto>, WorkflowSampleSystem.Domain.EmployeePhoto>(source => source.EmployeePhotos, currentClass, this.GetEmployee_EmployeePhotosValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EmployeePhoto>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>, WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(source => source.EmployeeToEmployeeLinks, currentClass, this.GetEmployee_EmployeeToEmployeeLinksValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, long>(source => source.ExternalId, currentClass, this.GetEmployee_ExternalIdValidators(), this.GetClassMap<long>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.HireDate, currentClass, this.GetEmployee_HireDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Interphone, currentClass, this.GetEmployee_InterphoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Landlinephone, currentClass, this.GetEmployee_LandlinephoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.LastActionDate, currentClass, this.GetEmployee_LastActionDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Login, currentClass, this.GetEmployee_LoginValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.ModifiedBy, currentClass, this.GetEmployee_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployee_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.FioShort>(source => source.NameEng, currentClass, this.GetEmployee_NameEngValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.FioShort>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>(source => source.NameNative, currentClass, this.GetEmployee_NameNativeValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.Fio>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>(source => source.NameRussian, currentClass, this.GetEmployee_NameRussianValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.Fio>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.PersonalCellPhone, currentClass, this.GetEmployee_PersonalCellPhoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>, WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(source => source.PersonalCellPhones, currentClass, this.GetEmployee_PersonalCellPhonesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EmployeePersonalCellPhone>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.PlannedHireDate, currentClass, this.GetEmployee_PlannedHireDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>, WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(source => source.Specializations, currentClass, this.GetEmployee_SpecializationsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime>(source => source.ValidateVirtualProp, currentClass, this.GetEmployee_ValidateVirtualPropValidators(), this.GetClassMap<System.DateTime>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>(source => source.WorkPeriod, currentClass, this.GetEmployee_WorkPeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType, System.DateTime?>> GetEmployeeRegistrationType_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeRegistrationType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>> GetEmployeeRegistrationType_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>> GetEmployeeRegistrationType_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType, System.DateTime?>> GetEmployeeRegistrationType_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeRegistrationType>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>> GetEmployeeRegistrationType_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType>> GetEmployeeRegistrationTypeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeRegistrationType_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>(source => source.CreatedBy, currentClass, this.GetEmployeeRegistrationType_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeRegistrationType_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeRegistrationType_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType, string>(source => source.Name, currentClass, this.GetEmployeeRegistrationType_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType> GetEmployeeRegistrationTypeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRegistrationType>(this.GetEmployeeRegistrationTypeProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter, System.Guid>> GetEmployeeReportParameter_ReportIdValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter, System.Guid>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter>> GetEmployeeReportParameterProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter, System.Guid>(source => source.ReportId, currentClass, this.GetEmployeeReportParameter_ReportIdValidators(), this.GetClassMap<System.Guid>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter> GetEmployeeReportParameterValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter>(this.GetEmployeeReportParameterProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRole, System.DateTime?>> GetEmployeeRole_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeRole>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRole, string>> GetEmployeeRole_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRole>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRole, string>> GetEmployeeRole_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRole>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRole, System.DateTime?>> GetEmployeeRole_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeRole>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRole, string>> GetEmployeeRole_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRole>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeRole, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree, System.DateTime?>> GetEmployeeRoleDegree_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeRoleDegree>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>> GetEmployeeRoleDegree_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>> GetEmployeeRoleDegree_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree, System.DateTime?>> GetEmployeeRoleDegree_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeRoleDegree>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>> GetEmployeeRoleDegree_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree>> GetEmployeeRoleDegreeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeRoleDegree_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>(source => source.CreatedBy, currentClass, this.GetEmployeeRoleDegree_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeRoleDegree_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeRoleDegree_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree, string>(source => source.Name, currentClass, this.GetEmployeeRoleDegree_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree> GetEmployeeRoleDegreeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRoleDegree>(this.GetEmployeeRoleDegreeProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRole>> GetEmployeeRoleProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRole> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRole, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeRole_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRole, string>(source => source.CreatedBy, currentClass, this.GetEmployeeRole_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRole, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeRole_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRole, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeRole_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeRole, string>(source => source.Name, currentClass, this.GetEmployeeRole_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRole> GetEmployeeRoleValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRole>(this.GetEmployeeRoleProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRootFilterModel> GetEmployeeRootFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeRootFilterModel>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization, System.DateTime?>> GetEmployeeSpecialization_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeSpecialization>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>> GetEmployeeSpecialization_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>> GetEmployeeSpecialization_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization, System.DateTime?>> GetEmployeeSpecialization_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeSpecialization>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>> GetEmployeeSpecialization_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization>> GetEmployeeSpecializationProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeSpecialization_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>(source => source.CreatedBy, currentClass, this.GetEmployeeSpecialization_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeSpecialization_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeSpecialization_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization, string>(source => source.Name, currentClass, this.GetEmployeeSpecialization_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization> GetEmployeeSpecializationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeSpecialization>(this.GetEmployeeSpecializationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, System.DateTime?>> GetEmployeeToEmployeeLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, string>> GetEmployeeToEmployeeLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, string>> GetEmployeeToEmployeeLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, System.DateTime?>> GetEmployeeToEmployeeLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>> GetEmployeeToEmployeeLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployeeToEmployeeLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, string>(source => source.CreatedBy, currentClass, this.GetEmployeeToEmployeeLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, string>(source => source.ModifiedBy, currentClass, this.GetEmployeeToEmployeeLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployeeToEmployeeLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink> GetEmployeeToEmployeeLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EmployeeToEmployeeLink>(this.GetEmployeeToEmployeeLinkProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Employee> GetEmployeeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Employee>(this.GetEmployeeProperties, this.GetEmployeeValidators());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IClassValidator<WorkflowSampleSystem.Domain.Employee>> GetEmployeeValidators()
        {
            yield return new WorkflowSampleSystem.Domain.Validators.Employee.EmployeeValidator();
            yield return new Framework.DomainDriven.BLL.UniqueGroupDatabaseValidator<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid>(source => target => (source.Id != target.Id 
            && (source.Login == target.Login)), source => new object[] {
        source.Login}, "Login");
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example1, System.DateTime?>> GetExample1_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Example1>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example1, string>> GetExample1_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Example1>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example1, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Example2>>> GetExample1_Items2Validators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Example1, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Example2>, WorkflowSampleSystem.Domain.Example2>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example1, string>> GetExample1_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Example1>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example1, System.DateTime?>> GetExample1_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Example1>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Example1>> GetExample1Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Example1> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example1, System.DateTime?>(source => source.CreateDate, currentClass, this.GetExample1_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example1, string>(source => source.CreatedBy, currentClass, this.GetExample1_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Example1, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Example2>, WorkflowSampleSystem.Domain.Example2>(source => source.Items2, currentClass, this.GetExample1_Items2Validators(), this.GetClassMap<WorkflowSampleSystem.Domain.Example2>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example1, string>(source => source.ModifiedBy, currentClass, this.GetExample1_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example1, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetExample1_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Example1> GetExample1ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Example1>(this.GetExample1Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example2, System.DateTime?>> GetExample2_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Example2>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example2, string>> GetExample2_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Example2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example2, string>> GetExample2_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Example2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Example2, System.DateTime?>> GetExample2_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Example2>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Example2>> GetExample2Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Example2> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example2, System.DateTime?>(source => source.CreateDate, currentClass, this.GetExample2_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example2, string>(source => source.CreatedBy, currentClass, this.GetExample2_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example2, string>(source => source.ModifiedBy, currentClass, this.GetExample2_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Example2, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetExample2_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Example2> GetExample2ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Example2>(this.GetExample2Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.Fio, string>> GetFio_FirstNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.Fio>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.Fio, string>> GetFio_LastNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.Fio>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.Fio, string>> GetFio_MiddleNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.Fio>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio>> GetFioProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.Fio> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio, string>(source => source.FirstName, currentClass, this.GetFio_FirstNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio, string>(source => source.LastName, currentClass, this.GetFio_LastNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio, string>(source => source.MiddleName, currentClass, this.GetFio_MiddleNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.FioShort, string>> GetFioShort_FirstNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.FioShort>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.FioShort, string>> GetFioShort_LastNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.FioShort>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort>> GetFioShortProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort, string>(source => source.FirstName, currentClass, this.GetFioShort_FirstNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort, string>(source => source.LastName, currentClass, this.GetFioShort_LastNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort> GetFioShortValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort>(this.GetFioShortProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.Fio> GetFioValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Inline.Fio>(this.GetFioProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, System.Collections.Generic.List<System.Guid>>> GetGuidBasedFilterModel_BusinessUnitsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, System.Collections.Generic.List<System.Guid>, System.Guid>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, System.Collections.Generic.List<System.Guid>>> GetGuidBasedFilterModel_EmployeeLocationsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, System.Collections.Generic.List<System.Guid>, System.Guid>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, string>> GetGuidBasedFilterModel_SearchFilterValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel>> GetGuidBasedFilterModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, System.Collections.Generic.List<System.Guid>, System.Guid>(source => source.BusinessUnits, currentClass, this.GetGuidBasedFilterModel_BusinessUnitsValidators(), this.GetClassMap<System.Guid>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, System.Collections.Generic.List<System.Guid>, System.Guid>(source => source.EmployeeLocations, currentClass, this.GetGuidBasedFilterModel_EmployeeLocationsValidators(), this.GetClassMap<System.Guid>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel, string>(source => source.SearchFilter, currentClass, this.GetGuidBasedFilterModel_SearchFilterValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel> GetGuidBasedFilterModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel>(this.GetGuidBasedFilterModelProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel> GetHierarchicalBusinessUnitFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>>> GetHRDepartment_BusinessUnitHrDepartmentsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment, System.Tuple<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.Domain.HRDepartment>>(source => new System.Tuple<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.Domain.HRDepartment>(source.BusinessUnit, source.HRDepartment), "BusinessUnit, HRDepartment");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartment>>> GetHRDepartment_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartment>, WorkflowSampleSystem.Domain.HRDepartment>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_CodeNativeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(50);
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_CodeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(50);
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.CompanyLegalEntity>> GetHRDepartment_CompanyLegalEntityValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.CompanyLegalEntity>(Framework.Restriction.RequiredMode.Default);
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.CompanyLegalEntity>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>> GetHRDepartment_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>>> GetHRDepartment_EmployeePositionsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, System.Tuple<WorkflowSampleSystem.Domain.EmployeePosition, WorkflowSampleSystem.Domain.HRDepartment>>(source => new System.Tuple<WorkflowSampleSystem.Domain.EmployeePosition, WorkflowSampleSystem.Domain.HRDepartment>(source.EmployeePosition, source.HrDepartment), "EmployeePosition, HrDepartment");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Employee>> GetHRDepartment_HeadValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>>> GetHRDepartment_HrDepartmentRoleEmployeesValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, System.Tuple<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType>>(source => new System.Tuple<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType>(source.Employee, source.HRDepartmentEmployeeRoleType), "Employee, HRDepartmentEmployeeRoleType");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location>> GetHRDepartment_LocationValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>>> GetHRDepartment_ManagementUnitsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Tuple<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.ManagementUnit>>(source => new System.Tuple<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.ManagementUnit>(source.HRDepartment, source.ManagementUnit), "HRDepartment, ManagementUnit");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>> GetHRDepartment_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_NameNativeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, System.DateTime?>> GetHRDepartmentEmployeePosition_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, string>> GetHRDepartmentEmployeePosition_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, string>> GetHRDepartmentEmployeePosition_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, System.DateTime?>> GetHRDepartmentEmployeePosition_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>> GetHRDepartmentEmployeePositionProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, System.DateTime?>(source => source.CreateDate, currentClass, this.GetHRDepartmentEmployeePosition_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, string>(source => source.CreatedBy, currentClass, this.GetHRDepartmentEmployeePosition_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, string>(source => source.ModifiedBy, currentClass, this.GetHRDepartmentEmployeePosition_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetHRDepartmentEmployeePosition_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition> GetHRDepartmentEmployeePositionValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(this.GetHRDepartmentEmployeePositionProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment>> GetHRDepartmentProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartment> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>, WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(source => source.BusinessUnitHrDepartments, currentClass, this.GetHRDepartment_BusinessUnitHrDepartmentsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnitHrDepartment>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartment>, WorkflowSampleSystem.Domain.HRDepartment>(source => source.Children, currentClass, this.GetHRDepartment_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.HRDepartment>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.Code, currentClass, this.GetHRDepartment_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.CodeNative, currentClass, this.GetHRDepartment_CodeNativeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.CompanyLegalEntity>(source => source.CompanyLegalEntity, currentClass, this.GetHRDepartment_CompanyLegalEntityValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.CompanyLegalEntity>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>(source => source.CreateDate, currentClass, this.GetHRDepartment_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.CreatedBy, currentClass, this.GetHRDepartment_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>, WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(source => source.EmployeePositions, currentClass, this.GetHRDepartment_EmployeePositionsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Employee>(source => source.Head, currentClass, this.GetHRDepartment_HeadValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>, WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(source => source.HrDepartmentRoleEmployees, currentClass, this.GetHRDepartment_HrDepartmentRoleEmployeesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location>(source => source.Location, currentClass, this.GetHRDepartment_LocationValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Location>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(source => source.ManagementUnits, currentClass, this.GetHRDepartment_ManagementUnitsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.ModifiedBy, currentClass, this.GetHRDepartment_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetHRDepartment_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.Name, currentClass, this.GetHRDepartment_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.NameNative, currentClass, this.GetHRDepartment_NameNativeValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, System.DateTime?>> GetHRDepartmentRoleEmployee_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, string>> GetHRDepartmentRoleEmployee_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, WorkflowSampleSystem.Domain.Employee>> GetHRDepartmentRoleEmployee_EmployeeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType>> GetHRDepartmentRoleEmployee_HRDepartmentEmployeeRoleTypeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, string>> GetHRDepartmentRoleEmployee_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, System.DateTime?>> GetHRDepartmentRoleEmployee_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>> GetHRDepartmentRoleEmployeeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, System.DateTime?>(source => source.CreateDate, currentClass, this.GetHRDepartmentRoleEmployee_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, string>(source => source.CreatedBy, currentClass, this.GetHRDepartmentRoleEmployee_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, WorkflowSampleSystem.Domain.Employee>(source => source.Employee, currentClass, this.GetHRDepartmentRoleEmployee_EmployeeValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType>(source => source.HRDepartmentEmployeeRoleType, currentClass, this.GetHRDepartmentRoleEmployee_HRDepartmentEmployeeRoleTypeValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.HRDepartmentEmployeeRoleType>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, string>(source => source.ModifiedBy, currentClass, this.GetHRDepartmentRoleEmployee_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetHRDepartmentRoleEmployee_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee> GetHRDepartmentRoleEmployeeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee>(this.GetHRDepartmentRoleEmployeeProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartment> GetHRDepartmentValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.HRDepartment>(this.GetHRDepartmentProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, System.DateTime?>> GetIMRequest_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IMRequest>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, string>> GetIMRequest_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequest>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, string>> GetIMRequest_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequest>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, string>> GetIMRequest_MessageValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequest>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, string>> GetIMRequest_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequest>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, System.DateTime?>> GetIMRequest_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IMRequest>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, string>> GetIMRequest_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequest>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.IMRequest, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequest, WorkflowSampleSystem.Domain.IMRequestDetail>> GetIMRequest_OneToOneDetailValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.IMRequest, WorkflowSampleSystem.Domain.IMRequestDetail>(Framework.Restriction.RequiredMode.Default);
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.IMRequest, WorkflowSampleSystem.Domain.IMRequestDetail>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequestDetail, System.DateTime?>> GetIMRequestDetail_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IMRequestDetail>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequestDetail, string>> GetIMRequestDetail_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequestDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequestDetail, string>> GetIMRequestDetail_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IMRequestDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IMRequestDetail, System.DateTime?>> GetIMRequestDetail_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IMRequestDetail>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail>> GetIMRequestDetailProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail, System.DateTime?>(source => source.CreateDate, currentClass, this.GetIMRequestDetail_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail, string>(source => source.CreatedBy, currentClass, this.GetIMRequestDetail_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail, string>(source => source.ModifiedBy, currentClass, this.GetIMRequestDetail_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetIMRequestDetail_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail> GetIMRequestDetailValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.IMRequestDetail>(this.GetIMRequestDetailProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest>> GetIMRequestProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IMRequest> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, System.DateTime?>(source => source.CreateDate, currentClass, this.GetIMRequest_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, string>(source => source.CreatedBy, currentClass, this.GetIMRequest_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, string>(source => source.Email, currentClass, this.GetIMRequest_EmailValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, string>(source => source.Message, currentClass, this.GetIMRequest_MessageValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, string>(source => source.ModifiedBy, currentClass, this.GetIMRequest_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetIMRequest_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, string>(source => source.Name, currentClass, this.GetIMRequest_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IMRequest, WorkflowSampleSystem.Domain.IMRequestDetail>(source => source.OneToOneDetail, currentClass, this.GetIMRequest_OneToOneDetailValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.IMRequestDetail>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IMRequest> GetIMRequestValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.IMRequest>(this.GetIMRequestProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Information, System.DateTime?>> GetInformation_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Information>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Information, string>> GetInformation_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Information>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Information, string>> GetInformation_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Information>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Information, string>> GetInformation_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Information>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Information, System.DateTime?>> GetInformation_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Information>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Information, string>> GetInformation_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Information>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Information, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Information>> GetInformationProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Information> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Information, System.DateTime?>(source => source.CreateDate, currentClass, this.GetInformation_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Information, string>(source => source.CreatedBy, currentClass, this.GetInformation_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Information, string>(source => source.Email, currentClass, this.GetInformation_EmailValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Information, string>(source => source.ModifiedBy, currentClass, this.GetInformation_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Information, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetInformation_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Information, string>(source => source.Name, currentClass, this.GetInformation_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Information> GetInformationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Information>(this.GetInformationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Insurance, WorkflowSampleSystem.Domain.InsuranceDetail>> GetInsurance_DetailsValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Insurance, WorkflowSampleSystem.Domain.InsuranceDetail>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Insurance, decimal>> GetInsurance_TotalIncomeValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Decimal.Create<WorkflowSampleSystem.Domain.Insurance>(this.AvailableValues.GetAvailableRange<decimal>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, System.DateTime?>> GetInsuranceDetail_BirthDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, string>> GetInsuranceDetail_CellPhoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, decimal>> GetInsuranceDetail_CostValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Decimal.Create<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableRange<decimal>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, System.DateTime?>> GetInsuranceDetail_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, string>> GetInsuranceDetail_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, WorkflowSampleSystem.Domain.Inline.Fio>> GetInsuranceDetail_FioValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.InsuranceDetail, WorkflowSampleSystem.Domain.Inline.Fio>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, string>> GetInsuranceDetail_LandlinePhoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, string>> GetInsuranceDetail_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, System.DateTime?>> GetInsuranceDetail_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, string>> GetInsuranceDetail_RegistrationAddressValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.InsuranceDetail, string>> GetInsuranceDetail_ResidentalAddressValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.InsuranceDetail>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail>> GetInsuranceDetailProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, System.DateTime?>(source => source.BirthDate, currentClass, this.GetInsuranceDetail_BirthDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, string>(source => source.CellPhone, currentClass, this.GetInsuranceDetail_CellPhoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, decimal>(source => source.Cost, currentClass, this.GetInsuranceDetail_CostValidators(), this.GetClassMap<decimal>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, System.DateTime?>(source => source.CreateDate, currentClass, this.GetInsuranceDetail_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, string>(source => source.CreatedBy, currentClass, this.GetInsuranceDetail_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, WorkflowSampleSystem.Domain.Inline.Fio>(source => source.Fio, currentClass, this.GetInsuranceDetail_FioValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.Fio>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, string>(source => source.LandlinePhone, currentClass, this.GetInsuranceDetail_LandlinePhoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, string>(source => source.ModifiedBy, currentClass, this.GetInsuranceDetail_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetInsuranceDetail_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, string>(source => source.RegistrationAddress, currentClass, this.GetInsuranceDetail_RegistrationAddressValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail, string>(source => source.ResidentalAddress, currentClass, this.GetInsuranceDetail_ResidentalAddressValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail> GetInsuranceDetailValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.InsuranceDetail>(this.GetInsuranceDetailProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Insurance>> GetInsuranceProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Insurance> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Insurance, WorkflowSampleSystem.Domain.InsuranceDetail>(source => source.Details, currentClass, this.GetInsurance_DetailsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.InsuranceDetail>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Insurance, decimal>(source => source.TotalIncome, currentClass, this.GetInsurance_TotalIncomeValidators(), this.GetClassMap<decimal>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Insurance> GetInsuranceValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Insurance>(this.GetInsuranceProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.DateTime?>> GetIntegrationVersionContainer1_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, string>> GetIntegrationVersionContainer1_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, string>> GetIntegrationVersionContainer1_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.DateTime?>> GetIntegrationVersionContainer1_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, string>> GetIntegrationVersionContainer1_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel, string>> GetIntegrationVersionContainer1CustomIntegrationSaveModel_CustomNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel, WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>> GetIntegrationVersionContainer1CustomIntegrationSaveModel_SavingObjectValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel, WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel>> GetIntegrationVersionContainer1CustomIntegrationSaveModelProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel, string>(source => source.CustomName, currentClass, this.GetIntegrationVersionContainer1CustomIntegrationSaveModel_CustomNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel, WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(source => source.SavingObject, currentClass, this.GetIntegrationVersionContainer1CustomIntegrationSaveModel_SavingObjectValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel> GetIntegrationVersionContainer1CustomIntegrationSaveModelValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel>(this.GetIntegrationVersionContainer1CustomIntegrationSaveModelProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>> GetIntegrationVersionContainer1Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.DateTime?>(source => source.CreateDate, currentClass, this.GetIntegrationVersionContainer1_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, string>(source => source.CreatedBy, currentClass, this.GetIntegrationVersionContainer1_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, string>(source => source.ModifiedBy, currentClass, this.GetIntegrationVersionContainer1_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetIntegrationVersionContainer1_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1, string>(source => source.Name, currentClass, this.GetIntegrationVersionContainer1_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1> GetIntegrationVersionContainer1ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1>(this.GetIntegrationVersionContainer1Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.DateTime?>> GetIntegrationVersionContainer2_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, string>> GetIntegrationVersionContainer2_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, string>> GetIntegrationVersionContainer2_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.DateTime?>> GetIntegrationVersionContainer2_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, string>> GetIntegrationVersionContainer2_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>> GetIntegrationVersionContainer2Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.DateTime?>(source => source.CreateDate, currentClass, this.GetIntegrationVersionContainer2_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, string>(source => source.CreatedBy, currentClass, this.GetIntegrationVersionContainer2_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, string>(source => source.ModifiedBy, currentClass, this.GetIntegrationVersionContainer2_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetIntegrationVersionContainer2_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2, string>(source => source.Name, currentClass, this.GetIntegrationVersionContainer2_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2> GetIntegrationVersionContainer2ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2>(this.GetIntegrationVersionContainer2Properties);
        }
        
        protected override Framework.Validation.IClassValidationMap<TSource> GetInternalClassMap<TSource>()
        {
            if ((typeof(TSource) == typeof(WorkflowSampleSystem.CustomReports.Employee.EmployeeReportParameter)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeReportParameterValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Address)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetAddressValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.AnotherSqlParserTestObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetAnotherSqlParserTestObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnit)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitAncestorLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitAncestorLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitEmployeeRole)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitEmployeeRoleValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitHrDepartment)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitHrDepartmentValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitManagerCommissionLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitManagerCommissionLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitToAncestorChildViewValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitType)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitTypeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleFinancialProjectType)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitTypeLinkWithPossibleFinancialProjectTypeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithPossibleParent)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitTypeLinkWithPossibleParentValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitTypeLinkWithTransferTo)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitTypeLinkWithTransferToValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.CompanyLegalEntity)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetCompanyLegalEntityValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Country)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetCountryValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Employee)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeAndEmployeeSpecializationLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeAndEmployeeSpecializationLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeCellPhone)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeCellPhoneValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeCellPhoneBase)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeCellPhoneBaseValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeComplexChangeModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeComplexChangeModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeCustomEventModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeCustomEventModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeCustomIntegrationSaveModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeCustomIntegrationSaveModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeEmailChangeModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeEmailChangeModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeEmailMassChangeModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeEmailMassChangeModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeInformation)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeInformationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeePersonalCellPhone)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeePersonalCellPhoneValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeePhoto)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeePhotoValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeePosition)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeePositionValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeRegistrationType)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeRegistrationTypeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeRole)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeRoleValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeRoleDegree)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeRoleDegreeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeRootFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeRootFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeSpecialization)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeSpecializationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EmployeeToEmployeeLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeToEmployeeLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EnversBug1676.Coefficient1676)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetCoefficient1676ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EnversBug1676.Location1676)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetLocation1676ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetWorkingCalendar1676ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Example1)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetExample1ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Example2)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetExample2ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.HRDepartment)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetHRDepartmentValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.HRDepartmentEmployeePosition)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetHRDepartmentEmployeePositionValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.HRDepartmentRoleEmployee)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetHRDepartmentRoleEmployeeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.IMRequest)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetIMRequestValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.IMRequestDetail)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetIMRequestDetailValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Information)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetInformationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Insurance)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetInsuranceValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.InsuranceDetail)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetInsuranceDetailValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.IntegrationVersionContainer1CustomIntegrationSaveModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetIntegrationVersionContainer1CustomIntegrationSaveModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer1)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetIntegrationVersionContainer1ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.IntergrationVersions.IntegrationVersionContainer2)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetIntegrationVersionContainer2ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.LegalEntityBase)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetLegalEntityBaseValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Location)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetLocationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.ManagementUnit)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetManagementUnitValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.ManagementUnitAncestorLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetManagementUnitAncestorLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetManagementUnitAndBusinessUnitLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetManagementUnitAndHRDepartmentLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.ManagementUnitFluentMapping)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetManagementUnitFluentMappingValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetManagementUnitToAncestorChildViewValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Models.Custom.DateModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetDateModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Models.Filters.BusinessUnitProgramClassFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitProgramClassFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Models.Filters.EmployeeFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Models.Filters.GuidBasedFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetGuidBasedFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Models.Filters.HierarchicalBusinessUnitFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetHierarchicalBusinessUnitFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSingleEmployeeFilterModelValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.NamedLock)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetNamedLockValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Principal)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetPrincipalValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Project)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetProjectValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.RoleRoleDegreeLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetRoleRoleDegreeLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.SqlParserTestObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSqlParserTestObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.SqlParserTestObjContainer)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetSqlParserTestObjContainerValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestCustomContextSecurityObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestCustomContextSecurityObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestDefaultFieldsMappingObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestEmployeeFilter)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestEmployeeFilterValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestForceAbstract.ClassA)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetClassAValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestForceAbstract.ClassAChild)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetClassAChildValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestForceAbstract.ConcreteClassA)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetConcreteClassAValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestImmutableObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestImmutableObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestObjForNested)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestObjForNestedValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestObjForNestedBase)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestObjForNestedBaseValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestRootSecurityObj)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestRootSecurityObjValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestSecurityObjItem)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestSecurityObjItemValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestSecuritySubObjItemValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem2)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestSecuritySubObjItem2ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestSecuritySubObjItem3)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestSecuritySubObjItem3ValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.TestUnpersistentObject)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetTestUnpersistentObjectValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetParentEntityValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.UniqueByParent.ChildEntity)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetChildEntityValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Inline.Fio)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetFioValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Inline.FioShort)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetFioShortValidationMap()));
            }
            else
            {
                return Framework.Validation.ValidationMapExtensions.GetClassMap<TSource>(this._defaultValidatorMap);
            }
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Address>>> GetLegalEntityBase_AddressesValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.LegalEntityBase, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Address>, WorkflowSampleSystem.Domain.Address>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, System.DateTime?>> GetLegalEntityBase_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.LegalEntityBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, string>> GetLegalEntityBase_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.LegalEntityBase>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, string>> GetLegalEntityBase_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.LegalEntityBase>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, System.DateTime?>> GetLegalEntityBase_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.LegalEntityBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, string>> GetLegalEntityBase_NameEnglishValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.LegalEntityBase>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.LegalEntityBase, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.LegalEntityBase, string>> GetLegalEntityBase_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.LegalEntityBase>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.LegalEntityBase, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase>> GetLegalEntityBaseProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Address>, WorkflowSampleSystem.Domain.Address>(source => source.Addresses, currentClass, this.GetLegalEntityBase_AddressesValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Address>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, System.DateTime?>(source => source.CreateDate, currentClass, this.GetLegalEntityBase_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, string>(source => source.CreatedBy, currentClass, this.GetLegalEntityBase_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, string>(source => source.ModifiedBy, currentClass, this.GetLegalEntityBase_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetLegalEntityBase_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, string>(source => source.Name, currentClass, this.GetLegalEntityBase_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase, string>(source => source.NameEnglish, currentClass, this.GetLegalEntityBase_NameEnglishValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase> GetLegalEntityBaseValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.LegalEntityBase>(this.GetLegalEntityBaseProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Location>>> GetLocation_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Location, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Location>, WorkflowSampleSystem.Domain.Location>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, int>> GetLocation_CloseDateValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Location, int>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, int>> GetLocation_CodeValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Location, int>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, System.DateTime?>> GetLocation_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, string>> GetLocation_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, string>> GetLocation_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, System.DateTime?>> GetLocation_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, string>> GetLocation_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Location, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>>> GetLocation1676_CalendarValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.DateTime?>> GetLocation1676_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>> GetLocation1676_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>> GetLocation1676_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.DateTime?>> GetLocation1676_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>> GetLocation1676_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>> GetLocation1676Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>, WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(source => source.Calendar, currentClass, this.GetLocation1676_CalendarValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.DateTime?>(source => source.CreateDate, currentClass, this.GetLocation1676_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>(source => source.CreatedBy, currentClass, this.GetLocation1676_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>(source => source.ModifiedBy, currentClass, this.GetLocation1676_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetLocation1676_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676, string>(source => source.Name, currentClass, this.GetLocation1676_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676> GetLocation1676ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.Location1676>(this.GetLocation1676Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Location>> GetLocationProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Location> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Location, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Location>, WorkflowSampleSystem.Domain.Location>(source => source.Children, currentClass, this.GetLocation_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Location>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, int>(source => source.CloseDate, currentClass, this.GetLocation_CloseDateValidators(), this.GetClassMap<int>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, int>(source => source.Code, currentClass, this.GetLocation_CodeValidators(), this.GetClassMap<int>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, System.DateTime?>(source => source.CreateDate, currentClass, this.GetLocation_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, string>(source => source.CreatedBy, currentClass, this.GetLocation_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, string>(source => source.ModifiedBy, currentClass, this.GetLocation_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetLocation_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, string>(source => source.Name, currentClass, this.GetLocation_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Location> GetLocationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Location>(this.GetLocationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>>> GetManagementUnit_BusinessUnitsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.Tuple<WorkflowSampleSystem.Domain.ManagementUnit, WorkflowSampleSystem.Domain.BusinessUnit>>(source => new System.Tuple<WorkflowSampleSystem.Domain.ManagementUnit, WorkflowSampleSystem.Domain.BusinessUnit>(source.ManagementUnit, source.BusinessUnit), "ManagementUnit, BusinessUnit");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnit>>> GetManagementUnit_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnit>, WorkflowSampleSystem.Domain.ManagementUnit>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.DateTime?>> GetManagementUnit_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, string>> GetManagementUnit_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>>> GetManagementUnit_HRDepartmentsValidators()
        {
            yield return new Framework.Validation.UniqueCollectionValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.Tuple<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.ManagementUnit>>(source => new System.Tuple<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.ManagementUnit>(source.HRDepartment, source.ManagementUnit), "HRDepartment, ManagementUnit");
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, string>> GetManagementUnit_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, System.DateTime?>> GetManagementUnit_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, string>> GetManagementUnit_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnit>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.ManagementUnit, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnit, Framework.Core.Period>> GetManagementUnit_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.ManagementUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, System.DateTime?>> GetManagementUnitAncestorLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, string>> GetManagementUnitAncestorLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, string>> GetManagementUnitAncestorLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, System.DateTime?>> GetManagementUnitAncestorLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink>> GetManagementUnitAncestorLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetManagementUnitAncestorLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, string>(source => source.CreatedBy, currentClass, this.GetManagementUnitAncestorLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, string>(source => source.ModifiedBy, currentClass, this.GetManagementUnitAncestorLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetManagementUnitAncestorLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink> GetManagementUnitAncestorLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAncestorLink>(this.GetManagementUnitAncestorLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.Domain.BusinessUnit>> GetManagementUnitAndBusinessUnitLink_BusinessUnitValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.Domain.BusinessUnit>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.DateTime?>> GetManagementUnitAndBusinessUnitLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, string>> GetManagementUnitAndBusinessUnitLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.Domain.ManagementUnit>> GetManagementUnitAndBusinessUnitLink_ManagementUnitValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.Domain.ManagementUnit>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, string>> GetManagementUnitAndBusinessUnitLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.DateTime?>> GetManagementUnitAndBusinessUnitLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>> GetManagementUnitAndBusinessUnitLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.BusinessUnit, currentClass, this.GetManagementUnitAndBusinessUnitLink_BusinessUnitValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetManagementUnitAndBusinessUnitLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, string>(source => source.CreatedBy, currentClass, this.GetManagementUnitAndBusinessUnitLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, WorkflowSampleSystem.Domain.ManagementUnit>(source => source.ManagementUnit, currentClass, this.GetManagementUnitAndBusinessUnitLink_ManagementUnitValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, string>(source => source.ModifiedBy, currentClass, this.GetManagementUnitAndBusinessUnitLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetManagementUnitAndBusinessUnitLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink> GetManagementUnitAndBusinessUnitLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(this.GetManagementUnitAndBusinessUnitLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.DateTime?>> GetManagementUnitAndHRDepartmentLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, string>> GetManagementUnitAndHRDepartmentLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, string>> GetManagementUnitAndHRDepartmentLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.DateTime?>> GetManagementUnitAndHRDepartmentLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>> GetManagementUnitAndHRDepartmentLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetManagementUnitAndHRDepartmentLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, string>(source => source.CreatedBy, currentClass, this.GetManagementUnitAndHRDepartmentLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, string>(source => source.ModifiedBy, currentClass, this.GetManagementUnitAndHRDepartmentLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetManagementUnitAndHRDepartmentLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink> GetManagementUnitAndHRDepartmentLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(this.GetManagementUnitAndHRDepartmentLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>>> GetManagementUnitFluentMapping_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>, WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.DateTime?>> GetManagementUnitFluentMapping_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>> GetManagementUnitFluentMapping_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>> GetManagementUnitFluentMapping_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.DateTime?>> GetManagementUnitFluentMapping_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>> GetManagementUnitFluentMapping_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, Framework.Core.Period>> GetManagementUnitFluentMapping_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>> GetManagementUnitFluentMappingProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>, WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(source => source.Children, currentClass, this.GetManagementUnitFluentMapping_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.DateTime?>(source => source.CreateDate, currentClass, this.GetManagementUnitFluentMapping_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>(source => source.CreatedBy, currentClass, this.GetManagementUnitFluentMapping_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>(source => source.ModifiedBy, currentClass, this.GetManagementUnitFluentMapping_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetManagementUnitFluentMapping_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, string>(source => source.Name, currentClass, this.GetManagementUnitFluentMapping_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping, Framework.Core.Period>(source => source.Period, currentClass, this.GetManagementUnitFluentMapping_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping> GetManagementUnitFluentMappingValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitFluentMapping>(this.GetManagementUnitFluentMappingProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit>> GetManagementUnitProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnit> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>, WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(source => source.BusinessUnits, currentClass, this.GetManagementUnit_BusinessUnitsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnitAndBusinessUnitLink>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnit>, WorkflowSampleSystem.Domain.ManagementUnit>(source => source.Children, currentClass, this.GetManagementUnit_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, System.DateTime?>(source => source.CreateDate, currentClass, this.GetManagementUnit_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, string>(source => source.CreatedBy, currentClass, this.GetManagementUnit_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>, WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(source => source.HRDepartments, currentClass, this.GetManagementUnit_HRDepartmentsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.ManagementUnitAndHRDepartmentLink>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, string>(source => source.ModifiedBy, currentClass, this.GetManagementUnit_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetManagementUnit_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, string>(source => source.Name, currentClass, this.GetManagementUnit_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnit, Framework.Core.Period>(source => source.Period, currentClass, this.GetManagementUnit_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, System.DateTime?>> GetManagementUnitToAncestorChildView_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, string>> GetManagementUnitToAncestorChildView_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, string>> GetManagementUnitToAncestorChildView_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, System.DateTime?>> GetManagementUnitToAncestorChildView_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView>> GetManagementUnitToAncestorChildViewProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, System.DateTime?>(source => source.CreateDate, currentClass, this.GetManagementUnitToAncestorChildView_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, string>(source => source.CreatedBy, currentClass, this.GetManagementUnitToAncestorChildView_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, string>(source => source.ModifiedBy, currentClass, this.GetManagementUnitToAncestorChildView_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetManagementUnitToAncestorChildView_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView> GetManagementUnitToAncestorChildViewValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnitToAncestorChildView>(this.GetManagementUnitToAncestorChildViewProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnit> GetManagementUnitValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.ManagementUnit>(this.GetManagementUnitProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>> GetNamedLock_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, string>> GetNamedLock_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, string>> GetNamedLock_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>> GetNamedLock_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock>> GetNamedLockProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.NamedLock> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>(source => source.CreateDate, currentClass, this.GetNamedLock_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, string>(source => source.CreatedBy, currentClass, this.GetNamedLock_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, string>(source => source.ModifiedBy, currentClass, this.GetNamedLock_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetNamedLock_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.NamedLock> GetNamedLockValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.NamedLock>(this.GetNamedLockProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, System.DateTime?>> GetParentEntity_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, string>> GetParentEntity_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, string>> GetParentEntity_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, System.DateTime?>> GetParentEntity_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity>> GetParentEntityProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, System.DateTime?>(source => source.CreateDate, currentClass, this.GetParentEntity_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, string>(source => source.CreatedBy, currentClass, this.GetParentEntity_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, string>(source => source.ModifiedBy, currentClass, this.GetParentEntity_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetParentEntity_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity> GetParentEntityValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.UniqueByMaster.ParentEntity>(this.GetParentEntityProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Principal, System.DateTime?>> GetPrincipal_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Principal>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Principal, string>> GetPrincipal_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Principal>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Principal, string>> GetPrincipal_ExternalIdValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Principal>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Principal, string>> GetPrincipal_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Principal>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Principal, System.DateTime?>> GetPrincipal_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Principal>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Principal>> GetPrincipalProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Principal> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Principal, System.DateTime?>(source => source.CreateDate, currentClass, this.GetPrincipal_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Principal, string>(source => source.CreatedBy, currentClass, this.GetPrincipal_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Principal, string>(source => source.ExternalId, currentClass, this.GetPrincipal_ExternalIdValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Principal, string>(source => source.ModifiedBy, currentClass, this.GetPrincipal_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Principal, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetPrincipal_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Principal> GetPrincipalValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Principal>(this.GetPrincipalProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, WorkflowSampleSystem.Domain.BusinessUnit>> GetProject_BusinessUnitValidators()
        {
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Project, WorkflowSampleSystem.Domain.BusinessUnit>(Framework.Restriction.RequiredMode.Default), 2);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, string>> GetProject_CodeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Project>(80);
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Project, string>(Framework.Restriction.RequiredMode.Default), 2);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>> GetProject_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, string>> GetProject_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>> GetProject_EndDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, string>> GetProject_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>> GetProject_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>> GetProject_PlannedEndDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableRange<System.DateTime>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>> GetProject_StartDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Project>(this.AvailableValues.GetAvailableRange<System.DateTime>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Project, System.DateTime?>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Project>> GetProjectProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Project> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.BusinessUnit, currentClass, this.GetProject_BusinessUnitValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, string>(source => source.Code, currentClass, this.GetProject_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, System.DateTime?>(source => source.CreateDate, currentClass, this.GetProject_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, string>(source => source.CreatedBy, currentClass, this.GetProject_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, System.DateTime?>(source => source.EndDate, currentClass, this.GetProject_EndDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, string>(source => source.ModifiedBy, currentClass, this.GetProject_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetProject_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, System.DateTime?>(source => source.PlannedEndDate, currentClass, this.GetProject_PlannedEndDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Project, System.DateTime?>(source => source.StartDate, currentClass, this.GetProject_StartDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Project> GetProjectValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Project>(this.GetProjectProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, System.DateTime?>> GetRoleRoleDegreeLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, string>> GetRoleRoleDegreeLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, string>> GetRoleRoleDegreeLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, System.DateTime?>> GetRoleRoleDegreeLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>> GetRoleRoleDegreeLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetRoleRoleDegreeLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, string>(source => source.CreatedBy, currentClass, this.GetRoleRoleDegreeLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, string>(source => source.ModifiedBy, currentClass, this.GetRoleRoleDegreeLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetRoleRoleDegreeLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink> GetRoleRoleDegreeLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.RoleRoleDegreeLink>(this.GetRoleRoleDegreeLinkProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel> GetSingleEmployeeFilterModelValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Models.Filters.SingleEmployeeFilterModel>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObj, System.DateTime?>> GetSqlParserTestObj_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObj, string>> GetSqlParserTestObj_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObj, string>> GetSqlParserTestObj_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObj, System.DateTime?>> GetSqlParserTestObj_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObj, string>> GetSqlParserTestObj_NotNullColumnValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObj, string>> GetSqlParserTestObj_UniqueColumnValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.DateTime?>> GetSqlParserTestObjContainer_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, string>> GetSqlParserTestObjContainer_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, string>> GetSqlParserTestObjContainer_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.DateTime?>> GetSqlParserTestObjContainer_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>> GetSqlParserTestObjContainerProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.DateTime?>(source => source.CreateDate, currentClass, this.GetSqlParserTestObjContainer_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, string>(source => source.CreatedBy, currentClass, this.GetSqlParserTestObjContainer_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, string>(source => source.ModifiedBy, currentClass, this.GetSqlParserTestObjContainer_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetSqlParserTestObjContainer_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer> GetSqlParserTestObjContainerValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObjContainer>(this.GetSqlParserTestObjContainerProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj>> GetSqlParserTestObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj, System.DateTime?>(source => source.CreateDate, currentClass, this.GetSqlParserTestObj_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj, string>(source => source.CreatedBy, currentClass, this.GetSqlParserTestObj_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj, string>(source => source.ModifiedBy, currentClass, this.GetSqlParserTestObj_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetSqlParserTestObj_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj, string>(source => source.NotNullColumn, currentClass, this.GetSqlParserTestObj_NotNullColumnValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj, string>(source => source.UniqueColumn, currentClass, this.GetSqlParserTestObj_UniqueColumnValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj> GetSqlParserTestObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.SqlParserTestObj>(this.GetSqlParserTestObjProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.DateTime?>> GetTestCustomContextSecurityObj_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>> GetTestCustomContextSecurityObj_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>> GetTestCustomContextSecurityObj_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.DateTime?>> GetTestCustomContextSecurityObj_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>> GetTestCustomContextSecurityObj_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>> GetTestCustomContextSecurityObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestCustomContextSecurityObj_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>(source => source.CreatedBy, currentClass, this.GetTestCustomContextSecurityObj_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>(source => source.ModifiedBy, currentClass, this.GetTestCustomContextSecurityObj_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestCustomContextSecurityObj_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj, string>(source => source.Name, currentClass, this.GetTestCustomContextSecurityObj_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj> GetTestCustomContextSecurityObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestCustomContextSecurityObj>(this.GetTestCustomContextSecurityObjProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj, string>> GetTestDefaultFieldsMappingObj_StrValValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj>> GetTestDefaultFieldsMappingObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj, string>(source => source.StrVal, currentClass, this.GetTestDefaultFieldsMappingObj_StrValValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj> GetTestDefaultFieldsMappingObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestDefaultFieldsMappingObj>(this.GetTestDefaultFieldsMappingObjProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestEmployeeFilter> GetTestEmployeeFilterValidationMap()
        {
            return Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestEmployeeFilter>.Empty;
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, System.DateTime?>> GetTestImmutableObj_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestImmutableObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, string>> GetTestImmutableObj_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestImmutableObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, string>> GetTestImmutableObj_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestImmutableObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, System.DateTime?>> GetTestImmutableObj_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestImmutableObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, string>> GetTestImmutableObj_TestImmutablePrimitivePropertyValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestImmutableObj>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.DomainDriven.BLL.FixedPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, string, System.Guid>(source => source.TestImmutablePrimitiveProperty);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, WorkflowSampleSystem.Domain.Employee>> GetTestImmutableObj_TestImmutableRefPropertyValidators()
        {
            yield return new Framework.DomainDriven.BLL.FixedPropertyValidator<WorkflowSampleSystem.Domain.TestImmutableObj, WorkflowSampleSystem.Domain.Employee, System.Guid>(source => source.TestImmutableRefProperty);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj>> GetTestImmutableObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestImmutableObj_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj, string>(source => source.CreatedBy, currentClass, this.GetTestImmutableObj_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj, string>(source => source.ModifiedBy, currentClass, this.GetTestImmutableObj_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestImmutableObj_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj, string>(source => source.TestImmutablePrimitiveProperty, currentClass, this.GetTestImmutableObj_TestImmutablePrimitivePropertyValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj, WorkflowSampleSystem.Domain.Employee>(source => source.TestImmutableRefProperty, currentClass, this.GetTestImmutableObj_TestImmutableRefPropertyValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj> GetTestImmutableObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestImmutableObj>(this.GetTestImmutableObjProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObj, WorkflowSampleSystem.Domain.Inline.Fio>> GetTestObj_FSValidators()
        {
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(Framework.Validation.PropertyValidatorExtensions.ApplyCustomError(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestObj, WorkflowSampleSystem.Domain.Inline.Fio>(Framework.Restriction.RequiredMode.Default), "aaaa"), 2);
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.TestObj, WorkflowSampleSystem.Domain.Inline.Fio>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNested, System.DateTime?>> GetTestObjForNested_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestObjForNested>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNested, string>> GetTestObjForNested_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestObjForNested>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNested, string>> GetTestObjForNested_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestObjForNested>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNested, System.DateTime?>> GetTestObjForNested_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestObjForNested>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNested, string>> GetTestObjForNested_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestObjForNested>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestObjForNested, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNested, Framework.Core.Period>> GetTestObjForNested_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.TestObjForNested>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, System.DateTime?>> GetTestObjForNestedBase_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>> GetTestObjForNestedBase_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>> GetTestObjForNestedBase_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, System.DateTime?>> GetTestObjForNestedBase_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>> GetTestObjForNestedBase_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestObjForNestedBase, Framework.Core.Period>> GetTestObjForNestedBase_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase>> GetTestObjForNestedBaseProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestObjForNestedBase_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>(source => source.CreatedBy, currentClass, this.GetTestObjForNestedBase_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>(source => source.ModifiedBy, currentClass, this.GetTestObjForNestedBase_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestObjForNestedBase_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase, string>(source => source.Name, currentClass, this.GetTestObjForNestedBase_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase, Framework.Core.Period>(source => source.Period, currentClass, this.GetTestObjForNestedBase_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase> GetTestObjForNestedBaseValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestObjForNestedBase>(this.GetTestObjForNestedBaseProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested>> GetTestObjForNestedProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestObjForNested> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestObjForNested_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested, string>(source => source.CreatedBy, currentClass, this.GetTestObjForNested_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested, string>(source => source.ModifiedBy, currentClass, this.GetTestObjForNested_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestObjForNested_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested, string>(source => source.Name, currentClass, this.GetTestObjForNested_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObjForNested, Framework.Core.Period>(source => source.Period, currentClass, this.GetTestObjForNested_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestObjForNested> GetTestObjForNestedValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestObjForNested>(this.GetTestObjForNestedProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestObj>> GetTestObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestObj, WorkflowSampleSystem.Domain.Inline.Fio>(source => source.FS, currentClass, this.GetTestObj_FSValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.Fio>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestObj> GetTestObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestObj>(this.GetTestObjProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.DateTime?>> GetTestRootSecurityObj_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestRootSecurityObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>> GetTestRootSecurityObj_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecurityObjItem>>> GetTestRootSecurityObj_ItemsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecurityObjItem>, WorkflowSampleSystem.Domain.TestSecurityObjItem>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>> GetTestRootSecurityObj_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.DateTime?>> GetTestRootSecurityObj_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestRootSecurityObj>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>> GetTestRootSecurityObj_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj>> GetTestRootSecurityObjProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestRootSecurityObj_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>(source => source.CreatedBy, currentClass, this.GetTestRootSecurityObj_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecurityObjItem>, WorkflowSampleSystem.Domain.TestSecurityObjItem>(source => source.Items, currentClass, this.GetTestRootSecurityObj_ItemsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.TestSecurityObjItem>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>(source => source.ModifiedBy, currentClass, this.GetTestRootSecurityObj_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestRootSecurityObj_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj, string>(source => source.Name, currentClass, this.GetTestRootSecurityObj_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj> GetTestRootSecurityObjValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestRootSecurityObj>(this.GetTestRootSecurityObjProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.DateTime?>> GetTestSecurityObjItem_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecurityObjItem>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>> GetTestSecurityObjItem_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>>> GetTestSecurityObjItem_Items2Validators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>>> GetTestSecurityObjItem_Items3Validators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>>> GetTestSecurityObjItem_ItemsValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>, WorkflowSampleSystem.Domain.TestSecuritySubObjItem>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>> GetTestSecurityObjItem_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.DateTime?>> GetTestSecurityObjItem_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecurityObjItem>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>> GetTestSecurityObjItem_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem>> GetTestSecurityObjItemProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestSecurityObjItem_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>(source => source.CreatedBy, currentClass, this.GetTestSecurityObjItem_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>, WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(source => source.Items, currentClass, this.GetTestSecurityObjItem_ItemsValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>, WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(source => source.Items2, currentClass, this.GetTestSecurityObjItem_Items2Validators(), this.GetClassMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(true));
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>, WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(source => source.Items3, currentClass, this.GetTestSecurityObjItem_Items3Validators(), this.GetClassMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>(source => source.ModifiedBy, currentClass, this.GetTestSecurityObjItem_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestSecurityObjItem_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem, string>(source => source.Name, currentClass, this.GetTestSecurityObjItem_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem> GetTestSecurityObjItemValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestSecurityObjItem>(this.GetTestSecurityObjItemProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, System.DateTime?>> GetTestSecuritySubObjItem_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>> GetTestSecuritySubObjItem_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>> GetTestSecuritySubObjItem_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, System.DateTime?>> GetTestSecuritySubObjItem_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>> GetTestSecuritySubObjItem_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, System.DateTime?>> GetTestSecuritySubObjItem2_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>> GetTestSecuritySubObjItem2_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>> GetTestSecuritySubObjItem2_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, System.DateTime?>> GetTestSecuritySubObjItem2_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>> GetTestSecuritySubObjItem2_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>> GetTestSecuritySubObjItem2Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestSecuritySubObjItem2_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>(source => source.CreatedBy, currentClass, this.GetTestSecuritySubObjItem2_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>(source => source.ModifiedBy, currentClass, this.GetTestSecuritySubObjItem2_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestSecuritySubObjItem2_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2, string>(source => source.Name, currentClass, this.GetTestSecuritySubObjItem2_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2> GetTestSecuritySubObjItem2ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem2>(this.GetTestSecuritySubObjItem2Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, System.DateTime?>> GetTestSecuritySubObjItem3_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>> GetTestSecuritySubObjItem3_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>> GetTestSecuritySubObjItem3_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, System.DateTime?>> GetTestSecuritySubObjItem3_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>> GetTestSecuritySubObjItem3_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>> GetTestSecuritySubObjItem3Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestSecuritySubObjItem3_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>(source => source.CreatedBy, currentClass, this.GetTestSecuritySubObjItem3_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>(source => source.ModifiedBy, currentClass, this.GetTestSecuritySubObjItem3_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestSecuritySubObjItem3_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3, string>(source => source.Name, currentClass, this.GetTestSecuritySubObjItem3_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3> GetTestSecuritySubObjItem3ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem3>(this.GetTestSecuritySubObjItem3Properties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>> GetTestSecuritySubObjItemProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, System.DateTime?>(source => source.CreateDate, currentClass, this.GetTestSecuritySubObjItem_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>(source => source.CreatedBy, currentClass, this.GetTestSecuritySubObjItem_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>(source => source.ModifiedBy, currentClass, this.GetTestSecuritySubObjItem_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetTestSecuritySubObjItem_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem, string>(source => source.Name, currentClass, this.GetTestSecuritySubObjItem_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem> GetTestSecuritySubObjItemValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestSecuritySubObjItem>(this.GetTestSecuritySubObjItemProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.TestUnpersistentObject, string>> GetTestUnpersistentObject_Value1Validators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.TestUnpersistentObject>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.TestUnpersistentObject>> GetTestUnpersistentObjectProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestUnpersistentObject> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.TestUnpersistentObject, string>(source => source.Value1, currentClass, this.GetTestUnpersistentObject_Value1Validators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.TestUnpersistentObject> GetTestUnpersistentObjectValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.TestUnpersistentObject>(this.GetTestUnpersistentObjectProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.DateTime?>> GetWorkingCalendar1676_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>> GetWorkingCalendar1676_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>> GetWorkingCalendar1676_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.DateTime?>> GetWorkingCalendar1676_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>> GetWorkingCalendar1676_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>> GetWorkingCalendar1676Properties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.DateTime?>(source => source.CreateDate, currentClass, this.GetWorkingCalendar1676_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>(source => source.CreatedBy, currentClass, this.GetWorkingCalendar1676_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>(source => source.ModifiedBy, currentClass, this.GetWorkingCalendar1676_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetWorkingCalendar1676_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676, string>(source => source.Name, currentClass, this.GetWorkingCalendar1676_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676> GetWorkingCalendar1676ValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.EnversBug1676.WorkingCalendar1676>(this.GetWorkingCalendar1676Properties);
        }
    }
    
    public partial class WorkflowSampleSystemValidationMap : WorkflowSampleSystem.BLL.WorkflowSampleSystemValidationMapBase
    {
        
        public WorkflowSampleSystemValidationMap(Framework.Core.IDynamicSource extendedValidationData) : 
                base(extendedValidationData)
        {
        }
    }
}
