//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkflowSampleSystem.BLL
{
    
    
    public partial class WorkflowSampleSystemValidationMapBase : Framework.Validation.ValidationMapBase
    {
        
        private Framework.Validation.IValidationMap _defaultValidatorMap;
        
        protected WorkflowSampleSystemValidationMapBase(Framework.Core.IDynamicSource extendedValidationData) : 
                base(extendedValidationData)
        {
            this._defaultValidatorMap = new Framework.Validation.ValidationMap(extendedValidationData);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnit>>> GetBusinessUnit_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnit>, WorkflowSampleSystem.Domain.BusinessUnit>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>> GetBusinessUnit_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>> GetBusinessUnit_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.BusinessUnit, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnit, Framework.Core.Period>> GetBusinessUnit_PeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.BusinessUnit>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>> GetBusinessUnitAncestorLink_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>> GetBusinessUnitAncestorLink_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>> GetBusinessUnitAncestorLink_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>> GetBusinessUnitAncestorLink_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>> GetBusinessUnitAncestorLinkProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitAncestorLink_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitAncestorLink_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitAncestorLink_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitAncestorLink_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink> GetBusinessUnitAncestorLinkValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitAncestorLink>(this.GetBusinessUnitAncestorLinkProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit>> GetBusinessUnitProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnit> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.BusinessUnit>, WorkflowSampleSystem.Domain.BusinessUnit>(source => source.Children, currentClass, this.GetBusinessUnit_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.BusinessUnit>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnit_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnit_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnit_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnit_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, string>(source => source.Name, currentClass, this.GetBusinessUnit_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnit, Framework.Core.Period>(source => source.Period, currentClass, this.GetBusinessUnit_PeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>> GetBusinessUnitToAncestorChildView_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>> GetBusinessUnitToAncestorChildView_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>> GetBusinessUnitToAncestorChildView_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>> GetBusinessUnitToAncestorChildView_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>> GetBusinessUnitToAncestorChildViewProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>(source => source.CreateDate, currentClass, this.GetBusinessUnitToAncestorChildView_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>(source => source.CreatedBy, currentClass, this.GetBusinessUnitToAncestorChildView_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, string>(source => source.ModifiedBy, currentClass, this.GetBusinessUnitToAncestorChildView_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetBusinessUnitToAncestorChildView_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView> GetBusinessUnitToAncestorChildViewValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView>(this.GetBusinessUnitToAncestorChildViewProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnit> GetBusinessUnitValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.BusinessUnit>(this.GetBusinessUnitProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_BirthDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_DismissDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>> GetEmployee_EducationDurationValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_EmailValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_HireDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_InterphoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(25);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_LandlinephoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(40);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_LastActionDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_LoginValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(30);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.FioShort>> GetEmployee_NameEngValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.FioShort>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>> GetEmployee_NameNativeValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>> GetEmployee_NameRussianValidators()
        {
            yield return new Framework.Validation.DeepSingleValidator<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, string>> GetEmployee_PersonalCellPhoneValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime?>> GetEmployee_PlannedHireDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, System.DateTime>> GetEmployee_ValidateVirtualPropValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.Create<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>> GetEmployee_WorkPeriodValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.Period.Create<WorkflowSampleSystem.Domain.Employee>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Employee>> GetEmployeeProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Employee> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.BirthDate, currentClass, this.GetEmployee_BirthDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.CreateDate, currentClass, this.GetEmployee_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.CreatedBy, currentClass, this.GetEmployee_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.DismissDate, currentClass, this.GetEmployee_DismissDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>(source => source.EducationDuration, currentClass, this.GetEmployee_EducationDurationValidators(), this.GetClassMap<Framework.Core.Period>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Email, currentClass, this.GetEmployee_EmailValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.HireDate, currentClass, this.GetEmployee_HireDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Interphone, currentClass, this.GetEmployee_InterphoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Landlinephone, currentClass, this.GetEmployee_LandlinephoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.LastActionDate, currentClass, this.GetEmployee_LastActionDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.Login, currentClass, this.GetEmployee_LoginValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.ModifiedBy, currentClass, this.GetEmployee_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetEmployee_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.FioShort>(source => source.NameEng, currentClass, this.GetEmployee_NameEngValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.FioShort>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>(source => source.NameNative, currentClass, this.GetEmployee_NameNativeValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.Fio>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.Domain.Inline.Fio>(source => source.NameRussian, currentClass, this.GetEmployee_NameRussianValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Inline.Fio>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, string>(source => source.PersonalCellPhone, currentClass, this.GetEmployee_PersonalCellPhoneValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime?>(source => source.PlannedHireDate, currentClass, this.GetEmployee_PlannedHireDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, System.DateTime>(source => source.ValidateVirtualProp, currentClass, this.GetEmployee_ValidateVirtualPropValidators(), this.GetClassMap<System.DateTime>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Employee, Framework.Core.Period>(source => source.WorkPeriod, currentClass, this.GetEmployee_WorkPeriodValidators(), this.GetClassMap<Framework.Core.Period>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Employee> GetEmployeeValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Employee>(this.GetEmployeeProperties, this.GetEmployeeValidators());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IClassValidator<WorkflowSampleSystem.Domain.Employee>> GetEmployeeValidators()
        {
            yield return new Framework.DomainDriven.BLL.UniqueGroupDatabaseValidator<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid>(source => target => (source.Id != target.Id 
            && (source.Login == target.Login)), source => new object[] {
        source.Login}, "Login");
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.Fio, string>> GetFio_FirstNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.Fio>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.Fio, string>> GetFio_LastNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.Fio>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.Fio, string>> GetFio_MiddleNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.Fio>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio>> GetFioProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.Fio> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio, string>(source => source.FirstName, currentClass, this.GetFio_FirstNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio, string>(source => source.LastName, currentClass, this.GetFio_LastNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.Fio, string>(source => source.MiddleName, currentClass, this.GetFio_MiddleNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.FioShort, string>> GetFioShort_FirstNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.FioShort>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Inline.FioShort, string>> GetFioShort_LastNameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Inline.FioShort>(50);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort>> GetFioShortProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort, string>(source => source.FirstName, currentClass, this.GetFioShort_FirstNameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort, string>(source => source.LastName, currentClass, this.GetFioShort_LastNameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort> GetFioShortValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Inline.FioShort>(this.GetFioShortProperties);
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Inline.Fio> GetFioValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Inline.Fio>(this.GetFioProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartment>>> GetHRDepartment_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartment>, WorkflowSampleSystem.Domain.HRDepartment>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_CodeNativeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(50);
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_CodeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(50);
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>> GetHRDepartment_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Employee>> GetHRDepartment_HeadValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Employee>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location>> GetHRDepartment_LocationValidators()
        {
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>> GetHRDepartment_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_NameNativeValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
            yield return Framework.Validation.PropertyValidatorExtensions.ApplyCustomOperationContext(new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default), 9);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.HRDepartment, string>> GetHRDepartment_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.HRDepartment>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.HRDepartment, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment>> GetHRDepartmentProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartment> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.HRDepartment>, WorkflowSampleSystem.Domain.HRDepartment>(source => source.Children, currentClass, this.GetHRDepartment_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.HRDepartment>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.Code, currentClass, this.GetHRDepartment_CodeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.CodeNative, currentClass, this.GetHRDepartment_CodeNativeValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>(source => source.CreateDate, currentClass, this.GetHRDepartment_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.CreatedBy, currentClass, this.GetHRDepartment_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Employee>(source => source.Head, currentClass, this.GetHRDepartment_HeadValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Employee>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.Domain.Location>(source => source.Location, currentClass, this.GetHRDepartment_LocationValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Location>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.ModifiedBy, currentClass, this.GetHRDepartment_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetHRDepartment_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.Name, currentClass, this.GetHRDepartment_NameValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.HRDepartment, string>(source => source.NameNative, currentClass, this.GetHRDepartment_NameNativeValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.HRDepartment> GetHRDepartmentValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.HRDepartment>(this.GetHRDepartmentProperties);
        }
        
        protected override Framework.Validation.IClassValidationMap<TSource> GetInternalClassMap<TSource>()
        {
            if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnit)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitAncestorLink)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitAncestorLinkValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.BusinessUnitToAncestorChildView)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetBusinessUnitToAncestorChildViewValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Employee)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetEmployeeValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.HRDepartment)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetHRDepartmentValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Location)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetLocationValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.NamedLock)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetNamedLockValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Inline.Fio)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetFioValidationMap()));
            }
            else if ((typeof(TSource) == typeof(WorkflowSampleSystem.Domain.Inline.FioShort)))
            {
                return ((Framework.Validation.IClassValidationMap<TSource>)(this.GetFioShortValidationMap()));
            }
            else
            {
                return Framework.Validation.ValidationMapExtensions.GetClassMap<TSource>(this._defaultValidatorMap);
            }
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Location>>> GetLocation_ChildrenValidators()
        {
            yield return new Framework.Validation.DeepCollectionValidator<WorkflowSampleSystem.Domain.Location, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Location>, WorkflowSampleSystem.Domain.Location>();
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, System.DateTime?>> GetLocation_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, string>> GetLocation_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, string>> GetLocation_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, System.DateTime?>> GetLocation_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.Location, string>> GetLocation_NameValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.Location>(this.AvailableValues.GetAvailableSize<string>());
            yield return new Framework.Validation.RequiredValidator<WorkflowSampleSystem.Domain.Location, string>(Framework.Restriction.RequiredMode.Default);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.Location>> GetLocationProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Location> currentClass)
        {
            yield return new Framework.Validation.CollectionPropertyValidationMap<WorkflowSampleSystem.Domain.Location, System.Collections.Generic.IEnumerable<WorkflowSampleSystem.Domain.Location>, WorkflowSampleSystem.Domain.Location>(source => source.Children, currentClass, this.GetLocation_ChildrenValidators(), this.GetClassMap<WorkflowSampleSystem.Domain.Location>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, System.DateTime?>(source => source.CreateDate, currentClass, this.GetLocation_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, string>(source => source.CreatedBy, currentClass, this.GetLocation_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, string>(source => source.ModifiedBy, currentClass, this.GetLocation_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetLocation_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.Location, string>(source => source.Name, currentClass, this.GetLocation_NameValidators(), this.GetClassMap<string>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.Location> GetLocationValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.Location>(this.GetLocationProperties);
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>> GetNamedLock_CreateDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, string>> GetNamedLock_CreatedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, string>> GetNamedLock_ModifiedByValidators()
        {
            yield return new Framework.Validation.MaxLengthValidator.StringMaxLengthValidator<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableSize<string>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidator<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>> GetNamedLock_ModifyDateValidators()
        {
            yield return Framework.Validation.RangePropertyValidatorHelper.DateTime.CreateNullable<WorkflowSampleSystem.Domain.NamedLock>(this.AvailableValues.GetAvailableRange<System.DateTime>());
        }
        
        protected virtual System.Collections.Generic.IEnumerable<Framework.Validation.IPropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock>> GetNamedLockProperties(Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.NamedLock> currentClass)
        {
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>(source => source.CreateDate, currentClass, this.GetNamedLock_CreateDateValidators(), this.GetClassMap<System.DateTime?>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, string>(source => source.CreatedBy, currentClass, this.GetNamedLock_CreatedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, string>(source => source.ModifiedBy, currentClass, this.GetNamedLock_ModifiedByValidators(), this.GetClassMap<string>(true));
            yield return new Framework.Validation.SinglePropertyValidationMap<WorkflowSampleSystem.Domain.NamedLock, System.DateTime?>(source => source.ModifyDate, currentClass, this.GetNamedLock_ModifyDateValidators(), this.GetClassMap<System.DateTime?>(true));
        }
        
        protected virtual Framework.Validation.IClassValidationMap<WorkflowSampleSystem.Domain.NamedLock> GetNamedLockValidationMap()
        {
            return new Framework.Validation.ClassValidationMap<WorkflowSampleSystem.Domain.NamedLock>(this.GetNamedLockProperties);
        }
    }
    
    public partial class WorkflowSampleSystemValidationMap : WorkflowSampleSystem.BLL.WorkflowSampleSystemValidationMapBase
    {
        
        public WorkflowSampleSystemValidationMap(Framework.Core.IDynamicSource extendedValidationData) : 
                base(extendedValidationData)
        {
        }
    }
}
