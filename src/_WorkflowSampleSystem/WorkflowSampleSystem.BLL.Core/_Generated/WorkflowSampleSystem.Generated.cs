//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkflowSampleSystem.BLL
{
    
    
    #region 
	static
    public class WorkflowSampleSystemSecurityOperation
    {
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _approveWorkflowOperation = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ApproveWorkflowOperation);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _approvingWorkflowOperation = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ApprovingWorkflowOperation);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _businessUnitView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView, Framework.HierarchicalExpand.HierarchicalExpandType.All);
        
        private static Framework.SecuritySystem.DisabledSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _disabled = new Framework.SecuritySystem.DisabledSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>();
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeEdit = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _employeeView = new Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView, Framework.HierarchicalExpand.HierarchicalExpandType.Children);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _hRDepartmentEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _hRDepartmentView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _locationEdit = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _locationView = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView);
        
        private static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> _systemIntegration = new Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration);
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ApproveWorkflowOperation
        {
            get
            {
                return _approveWorkflowOperation;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> ApprovingWorkflowOperation
        {
            get
            {
                return _approvingWorkflowOperation;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitEdit
        {
            get
            {
                return _businessUnitEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> BusinessUnitView
        {
            get
            {
                return _businessUnitView;
            }
        }
        
        public static Framework.SecuritySystem.DisabledSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> Disabled
        {
            get
            {
                return _disabled;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeEdit
        {
            get
            {
                return _employeeEdit;
            }
        }
        
        public static Framework.SecuritySystem.ContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> EmployeeView
        {
            get
            {
                return _employeeView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> HRDepartmentEdit
        {
            get
            {
                return _hRDepartmentEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> HRDepartmentView
        {
            get
            {
                return _hRDepartmentView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> LocationEdit
        {
            get
            {
                return _locationEdit;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> LocationView
        {
            get
            {
                return _locationView;
            }
        }
        
        public static Framework.SecuritySystem.NonContextSecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> SystemIntegration
        {
            get
            {
                return _systemIntegration;
            }
        }
        
        public static Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetByCode(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode code)
        {
            if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.Disabled;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.EmployeeEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.BusinessUnitEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.HRDepartmentView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.HRDepartmentEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.LocationView;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.LocationEdit;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.SystemIntegration))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.SystemIntegration;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ApproveWorkflowOperation))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ApproveWorkflowOperation;
            }
            else if ((code == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.ApprovingWorkflowOperation))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.ApprovingWorkflowOperation;
            }
            else
            {
                throw new System.ArgumentOutOfRangeException("code");
            }
        }
        
        public static Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetByMode<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode mode)
            where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        {
            WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode securityOperationCode = WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetCodeByMode<TDomainObject>(mode);
            if ((securityOperationCode == WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled))
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.Disabled;
            }
            else
            {
                return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetByCode(securityOperationCode);
            }
        }
        
        public static WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode GetCodeByMode(System.Type domainType, Framework.SecuritySystem.BLLSecurityMode mode)
        {
            if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.BusinessUnit) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.BusinessUnit) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.BusinessUnitEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Employee) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Employee) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.EmployeeEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.HRDepartment) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.HRDepartment) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.HRDepartmentEdit;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.View) && (typeof(WorkflowSampleSystem.Domain.Location) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationView;
            }
            else if ((mode == Framework.SecuritySystem.BLLSecurityMode.Edit) && (typeof(WorkflowSampleSystem.Domain.Location) == domainType))
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.LocationEdit;
            }
            else
            {
                return WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode.Disabled;
            }
        }
        
        private static WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode GetCodeByMode<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode mode)
            where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        {
            return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetCodeByMode(typeof(TDomainObject), mode);
        }
    }
    #endregion
    
    public partial class WorkflowSampleSystemSecurityPath<TDomainObject> : Framework.SecuritySystem.SecurityPathWrapper<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
    {
        
        private WorkflowSampleSystemSecurityPath(Framework.SecuritySystem.SecurityPath<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> securityPath) : 
                base(securityPath)
        {
        }
        
        public static implicit operator WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<TDomainObject> (Framework.SecuritySystem.SecurityPath<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, TDomainObject, System.Guid> securityPath)
        {
            return new WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<TDomainObject>(securityPath);
        }
    }
    
    public partial class WorkflowSampleSystemBLLContext : Framework.DomainDriven.BLL.Security.SecurityBLLBaseContext<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.DomainObjectBase, System.Guid, WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>>>, WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext
    {
        
        Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.IDefaultBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>> Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.IDefaultBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid>>>.Logics
        {
            get
            {
                return this.Logics;
            }
        }
        
        Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>> Framework.DomainDriven.BLL.IBLLFactoryContainerContext<Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>>>.Logics
        {
            get
            {
                return this.Logics;
            }
        }
        
        public override Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetSecurityOperation(WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode securityOperationCode)
        {
            return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetByCode(securityOperationCode);
        }
        
        public override Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> GetSecurityOperation<TDomainObject>(Framework.SecuritySystem.BLLSecurityMode securitMode)
        {
            return WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityOperation.GetByMode<TDomainObject>(securitMode);
        }
    }
    
    public partial interface IWorkflowSampleSystemBLLContext : Framework.DomainDriven.BLL.Security.IAccessDeniedExceptionServiceContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase>, Framework.DomainDriven.BLL.Security.ISecurityServiceContainer<WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityService>, Framework.DomainDriven.BLL.IBLLFactoryContainerContext<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer>, Framework.DomainDriven.IFetchServiceContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, Framework.DomainDriven.FetchBuildRule>, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        new WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLFactoryContainer Logics
        {
            get;
        }
    }
    
    public partial class DomainBLLBase<TDomainObject, TOperation> : Framework.DomainDriven.BLL.DefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.DomainObjectBase, TDomainObject, System.Guid, TOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        where TOperation :  struct, System.Enum
    {
        
        public DomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, specificationEvaluator)
        {
        }
    }
    
    public abstract partial class SecurityDomainBLLBase<TDomainObject, TOperation> : Framework.DomainDriven.BLL.Security.DefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.DomainObjectBase, TDomainObject, System.Guid, TOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
        where TOperation :  struct, System.Enum
    {
        
        protected SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, specificationEvaluator)
        {
        }
        
        protected SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityOperation, nuSpec.Abstraction.ISpecificationEvaluator specificationEvaluator = null) : 
                base(context, securityOperation, specificationEvaluator)
        {
        }
    }
    
    public partial class DomainBLLBase<TDomainObject> : WorkflowSampleSystem.BLL.DomainBLLBase<TDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
    {
        
        public DomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public partial class SecurityDomainBLLBase<TDomainObject> : WorkflowSampleSystem.BLL.SecurityDomainBLLBase<TDomainObject, Framework.DomainDriven.BLL.BLLBaseOperation>
        where TDomainObject : WorkflowSampleSystem.Domain.PersistentDomainObjectBase
    {
        
        public SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public SecurityDomainBLLBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context, Framework.SecuritySystem.ISecurityProvider<TDomainObject> securityOperation) : 
                base(context, securityOperation)
        {
        }
    }
    
    public partial class WorkflowSampleSystemSecurityService : WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityServiceBase, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityService
    {
        
        public WorkflowSampleSystemSecurityService(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
    }
    
    public abstract partial class WorkflowSampleSystemSecurityServiceBase : Framework.DomainDriven.BLL.Security.RootSecurityService<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        protected WorkflowSampleSystemSecurityServiceBase(WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext context) : 
                base(context)
        {
        }
        
        public static void Register(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.BusinessUnit, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemBusinessUnitSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Employee, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemEmployeeSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.HRDepartment, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemHRDepartmentSecurityService>(serviceCollection);
            Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped<Framework.SecuritySystem.IDomainSecurityService<WorkflowSampleSystem.Domain.Location, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.WorkflowSampleSystemLocationSecurityService>(serviceCollection);
        }
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnit> GetBusinessUnitSecurityPath();
        
        public abstract WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.Employee> GetEmployeeSecurityPath();
    }
    
    public partial interface IWorkflowSampleSystemSecurityService : Framework.DomainDriven.BLL.Security.IRootSecurityService<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer
    {
    }
    
    public partial interface IWorkflowSampleSystemSecurityPathContainer
    {
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.BusinessUnit> GetBusinessUnitSecurityPath();
        
        WorkflowSampleSystem.BLL.WorkflowSampleSystemSecurityPath<WorkflowSampleSystem.Domain.Employee> GetEmployeeSecurityPath();
    }
    
    public partial class WorkflowSampleSystemBusinessUnitSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemBusinessUnitSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetBusinessUnitSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemEmployeeSecurityService : Framework.SecuritySystem.ContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        private WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer;
        
        public WorkflowSampleSystemEmployeeSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem, Framework.SecuritySystem.Rules.Builders.ISecurityExpressionBuilderFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, System.Guid> securityExpressionBuilderFactory, WorkflowSampleSystem.BLL.IWorkflowSampleSystemSecurityPathContainer securityPathContainer) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem, securityExpressionBuilderFactory)
        {
            this.securityPathContainer = securityPathContainer;
        }
        
        protected override Framework.SecuritySystem.SecurityPathBase<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid> GetSecurityPath()
        {
            return this.securityPathContainer.GetEmployeeSecurityPath();
        }
    }
    
    public partial class WorkflowSampleSystemHRDepartmentSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.HRDepartment, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemHRDepartmentSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial class WorkflowSampleSystemLocationSecurityService : Framework.SecuritySystem.NonContextDomainSecurityService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Location, System.Guid, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>
    {
        
        public WorkflowSampleSystemLocationSecurityService(Framework.SecuritySystem.IAccessDeniedExceptionService<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> accessDeniedExceptionService, Framework.SecuritySystem.IDisabledSecurityProviderContainer<WorkflowSampleSystem.Domain.PersistentDomainObjectBase> disabledSecurityProviderContainer, Framework.SecuritySystem.ISecurityOperationResolver<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode> securityOperationResolver, Framework.SecuritySystem.IAuthorizationSystem<System.Guid> authorizationSystem) : 
                base(accessDeniedExceptionService, disabledSecurityProviderContainer, securityOperationResolver, authorizationSystem)
        {
        }
    }
    
    public partial interface IWorkflowSampleSystemBLLFactoryContainer : Framework.DomainDriven.BLL.IBLLFactoryContainer<Framework.DomainDriven.BLL.Security.IDefaultSecurityBLLFactory<WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode, System.Guid>>
    {
        
        WorkflowSampleSystem.BLL.IBusinessUnitBLL BusinessUnit
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IBusinessUnitBLLFactory BusinessUnitFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeBLL Employee
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IEmployeeBLLFactory EmployeeFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IHRDepartmentBLL HRDepartment
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.IHRDepartmentBLLFactory HRDepartmentFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ILocationBLL Location
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.ILocationBLLFactory LocationFactory
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.INamedLockBLL NamedLock
        {
            get;
        }
        
        WorkflowSampleSystem.BLL.INamedLockBLLFactory NamedLockFactory
        {
            get;
        }
    }
    
    public partial interface IBusinessUnitBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.BusinessUnit, System.Guid>
    {
    }
    
    public partial interface IBusinessUnitBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.BusinessUnit>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IBusinessUnitBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IEmployeeBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Employee, System.Guid>
    {
    }
    
    public partial interface IEmployeeBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Employee>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IEmployeeBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface IHRDepartmentBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.HRDepartment, System.Guid>
    {
    }
    
    public partial interface IHRDepartmentBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.HRDepartment>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.IHRDepartmentBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface ILocationBLL : Framework.DomainDriven.BLL.Security.IDefaultSecurityDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.Location, System.Guid>
    {
    }
    
    public partial interface ILocationBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.Location>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.SecurityOperation<WorkflowSampleSystem.WorkflowSampleSystemSecurityOperationCode>>, Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.ILocationBLL, Framework.SecuritySystem.BLLSecurityMode>
    {
    }
    
    public partial interface INamedLockBLL : Framework.DomainDriven.BLL.IDefaultDomainBLLBase<WorkflowSampleSystem.BLL.IWorkflowSampleSystemBLLContext, WorkflowSampleSystem.Domain.PersistentDomainObjectBase, WorkflowSampleSystem.Domain.NamedLock, System.Guid>
    {
    }
    
    public partial interface INamedLockBLLFactory : Framework.DomainDriven.BLL.Security.ISecurityBLLFactory<WorkflowSampleSystem.BLL.INamedLockBLL, Framework.SecuritySystem.ISecurityProvider<WorkflowSampleSystem.Domain.NamedLock>>
    {
    }
}
