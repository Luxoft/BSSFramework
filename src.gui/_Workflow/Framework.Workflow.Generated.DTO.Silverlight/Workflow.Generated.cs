//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.Workflow.Generated.DTO
{
    
    
    public partial interface IWorkflowClientDTOMappingService
    {
        
        void MapBaseAuditPersistentToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBaseAuditPersistentToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapBasePersistentToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource);
        
        void MapFullToStrictForAvailableCommandFilterModel(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO currentSource);
        
        void MapFullToStrictForAvailableTaskInstanceMainFilterModel(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO currentSource);
        
        void MapFullToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.CommandFullDTO currentSource);
        
        void MapFullToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventFullDTO currentSource);
        
        void MapFullToStrictForCommandEventRootFilterModel(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.CommandMetadataFullDTO currentSource);
        
        void MapFullToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.CommandParameterFullDTO currentSource);
        
        void MapFullToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO currentSource);
        
        void MapFullToStrictForCommandRootFilterModel(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateFullDTO currentSource);
        
        void MapFullToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO currentSource);
        
        void MapFullToStrictForConditionStateRootFilterModel(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForDomainTypeRootFilterModel(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForEventRootFilterModel(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForExecuteCommandRequest(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO currentSource);
        
        void MapFullToStrictForExecuteCommandRequestParameter(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO currentSource);
        
        void MapFullToStrictForGraphvizFormat(Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO target, Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO currentSource);
        
        void MapFullToStrictForGroupExecuteCommandRequest(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO currentSource);
        
        void MapFullToStrictForMassExecuteCommandRequest(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO currentSource);
        
        void MapFullToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFullDTO currentSource);
        
        void MapFullToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO currentSource);
        
        void MapFullToStrictForParallelStateRootFilterModel(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO currentSource);
        
        void MapFullToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.RoleFullDTO currentSource);
        
        void MapFullToStrictForRoleRootFilterModel(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO currentSource);
        
        void MapFullToStrictForStartWorkflowDomainObjectConditionRootFilterModel(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForStartWorkflowRequest(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO currentSource);
        
        void MapFullToStrictForStartWorkflowRequestParameter(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO currentSource);
        
        void MapFullToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.StateFullDTO currentSource);
        
        void MapFullToStrictForStateBaseRootFilterModel(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO currentSource);
        
        void MapFullToStrictForStateRootFilterModel(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO currentSource);
        
        void MapFullToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.TaskFullDTO currentSource);
        
        void MapFullToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO currentSource);
        
        void MapFullToStrictForTaskInstanceRootFilterModel(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.TaskMetadataFullDTO currentSource);
        
        void MapFullToStrictForTaskRootFilterModel(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionFullDTO currentSource);
        
        void MapFullToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionActionFullDTO currentSource);
        
        void MapFullToStrictForTransitionRootFilterModel(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowFullDTO currentSource);
        
        void MapFullToStrictForWorkflowCreateModel(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO currentSource);
        
        void MapFullToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO currentSource);
        
        void MapFullToStrictForWorkflowInstanceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO currentSource);
        
        void MapFullToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO currentSource);
        
        void MapFullToStrictForWorkflowLambdaRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO currentSource);
        
        void MapFullToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO currentSource);
        
        void MapFullToStrictForWorkflowRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO currentSource);
        
        void MapFullToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO currentSource);
        
        void MapFullToStrictForWorkflowSourceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO currentSource);
        
        void MapRichToStrictForAvailableCommandFilterModel(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO currentSource);
        
        void MapRichToStrictForAvailableTaskInstanceMainFilterModel(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO currentSource);
        
        void MapRichToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.CommandRichDTO currentSource);
        
        void MapRichToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRichDTO currentSource);
        
        void MapRichToStrictForCommandEventRootFilterModel(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.CommandMetadataRichDTO currentSource);
        
        void MapRichToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.CommandParameterRichDTO currentSource);
        
        void MapRichToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO currentSource);
        
        void MapRichToStrictForCommandRootFilterModel(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRichDTO currentSource);
        
        void MapRichToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO currentSource);
        
        void MapRichToStrictForConditionStateRootFilterModel(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForDomainTypeRootFilterModel(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForEventRootFilterModel(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForExecuteCommandRequest(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO currentSource);
        
        void MapRichToStrictForExecuteCommandRequestParameter(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO currentSource);
        
        void MapRichToStrictForGraphvizFormat(Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO target, Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO currentSource);
        
        void MapRichToStrictForGroupExecuteCommandRequest(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO currentSource);
        
        void MapRichToStrictForMassExecuteCommandRequest(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO currentSource);
        
        void MapRichToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRichDTO currentSource);
        
        void MapRichToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO currentSource);
        
        void MapRichToStrictForParallelStateRootFilterModel(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO currentSource);
        
        void MapRichToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.RoleRichDTO currentSource);
        
        void MapRichToStrictForRoleRootFilterModel(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO currentSource);
        
        void MapRichToStrictForStartWorkflowDomainObjectConditionRootFilterModel(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForStartWorkflowRequest(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO currentSource);
        
        void MapRichToStrictForStartWorkflowRequestParameter(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO currentSource);
        
        void MapRichToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.StateRichDTO currentSource);
        
        void MapRichToStrictForStateBaseRootFilterModel(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO currentSource);
        
        void MapRichToStrictForStateRootFilterModel(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO currentSource);
        
        void MapRichToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.TaskRichDTO currentSource);
        
        void MapRichToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO currentSource);
        
        void MapRichToStrictForTaskInstanceRootFilterModel(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.TaskMetadataRichDTO currentSource);
        
        void MapRichToStrictForTaskRootFilterModel(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRichDTO currentSource);
        
        void MapRichToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionActionRichDTO currentSource);
        
        void MapRichToStrictForTransitionRootFilterModel(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRichDTO currentSource);
        
        void MapRichToStrictForWorkflowCreateModel(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO currentSource);
        
        void MapRichToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO currentSource);
        
        void MapRichToStrictForWorkflowInstanceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO currentSource);
        
        void MapRichToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO currentSource);
        
        void MapRichToStrictForWorkflowLambdaRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO currentSource);
        
        void MapRichToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO currentSource);
        
        void MapRichToStrictForWorkflowRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO currentSource);
        
        void MapRichToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO currentSource);
        
        void MapRichToStrictForWorkflowSourceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO currentSource);
        
        void MapSimpleToStrictForAvailableCommandFilterModel(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForAvailableTaskInstanceMainFilterModel(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.CommandSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommandEventRootFilterModel(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO currentSource);
        
        void MapSimpleToStrictForCommandRootFilterModel(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO currentSource);
        
        void MapSimpleToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO currentSource);
        
        void MapSimpleToStrictForConditionStateRootFilterModel(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForDomainTypeRootFilterModel(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForEventRootFilterModel(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForExecuteCommandRequest(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO currentSource);
        
        void MapSimpleToStrictForExecuteCommandRequestParameter(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO currentSource);
        
        void MapSimpleToStrictForGraphvizFormat(Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO target, Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO currentSource);
        
        void MapSimpleToStrictForGroupExecuteCommandRequest(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO currentSource);
        
        void MapSimpleToStrictForMassExecuteCommandRequest(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO currentSource);
        
        void MapSimpleToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO currentSource);
        
        void MapSimpleToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO currentSource);
        
        void MapSimpleToStrictForParallelStateRootFilterModel(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO currentSource);
        
        void MapSimpleToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.RoleSimpleDTO currentSource);
        
        void MapSimpleToStrictForRoleRootFilterModel(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO currentSource);
        
        void MapSimpleToStrictForStartWorkflowDomainObjectConditionRootFilterModel(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForStartWorkflowRequest(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO currentSource);
        
        void MapSimpleToStrictForStartWorkflowRequestParameter(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO currentSource);
        
        void MapSimpleToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.StateSimpleDTO currentSource);
        
        void MapSimpleToStrictForStateBaseRootFilterModel(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO currentSource);
        
        void MapSimpleToStrictForStateRootFilterModel(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO currentSource);
        
        void MapSimpleToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.TaskSimpleDTO currentSource);
        
        void MapSimpleToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO currentSource);
        
        void MapSimpleToStrictForTaskInstanceRootFilterModel(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO currentSource);
        
        void MapSimpleToStrictForTaskRootFilterModel(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionSimpleDTO currentSource);
        
        void MapSimpleToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO currentSource);
        
        void MapSimpleToStrictForTransitionRootFilterModel(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowCreateModel(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowInstanceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowLambdaRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO currentSource);
        
        void MapSimpleToStrictForWorkflowSourceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO currentSource);
    }
    
    public abstract partial class WorkflowClientPrimitiveDTOMappingServiceBase : Framework.Persistent.ClientDTOMappingServiceBase, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService
    {
        
        public virtual void MapBaseAuditPersistentToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Active = currentSource.Active;
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBaseAuditPersistentToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Version = currentSource.Version;
        }
        
        public virtual void MapBasePersistentToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapBasePersistentToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.BasePersistentDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Id = currentSource.Id;
        }
        
        public virtual void MapFullToStrictForAvailableCommandFilterModel(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.TaskInstance, null))
            {
                target.TaskInstance = currentSource.TaskInstance.Identity;
            }
            else
            {
                target.TaskInstance = Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForAvailableTaskInstanceMainFilterModel(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.SourceType, null))
            {
                target.SourceType = currentSource.SourceType.Identity;
            }
            else
            {
                target.SourceType = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.CommandFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ExecuteAction, null))
            {
                target.ExecuteAction = currentSource.ExecuteAction.Identity;
            }
            else
            {
                target.ExecuteAction = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForCommandEventRootFilterModel(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.CommandMetadataFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.CommandParameterFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Type, null))
            {
                target.Type = currentSource.Type.Identity;
            }
            else
            {
                target.Type = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Role, null))
            {
                target.Role = currentSource.Role.Identity;
            }
            else
            {
                target.Role = Framework.Workflow.Generated.DTO.RoleIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForCommandRootFilterModel(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Condition, null))
            {
                target.Condition = currentSource.Condition.Identity;
            }
            else
            {
                target.Condition = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForConditionStateRootFilterModel(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForDomainTypeRootFilterModel(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.TargetSystem, null))
            {
                target.TargetSystem = currentSource.TargetSystem.Identity;
            }
            else
            {
                target.TargetSystem = Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForEventRootFilterModel(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForExecuteCommandRequest(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Command, null))
            {
                target.Command = currentSource.Command.Identity;
            }
            else
            {
                target.Command = Framework.Workflow.Generated.DTO.CommandIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.TaskInstance, null))
            {
                target.TaskInstance = currentSource.TaskInstance.Identity;
            }
            else
            {
                target.TaskInstance = Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForExecuteCommandRequestParameter(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Definition, null))
            {
                target.Definition = currentSource.Definition.Identity;
            }
            else
            {
                target.Definition = Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForGraphvizFormat(Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO target, Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForGroupExecuteCommandRequest(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Command, null))
            {
                target.Command = currentSource.Command.Identity;
            }
            else
            {
                target.Command = Framework.Workflow.Generated.DTO.CommandIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForMassExecuteCommandRequest(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Condition, null))
            {
                target.Condition = currentSource.Condition.Identity;
            }
            else
            {
                target.Condition = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForParallelStateRootFilterModel(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Factory, null))
            {
                target.Factory = currentSource.Factory.Identity;
            }
            else
            {
                target.Factory = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.SubWorkflow, null))
            {
                target.SubWorkflow = currentSource.SubWorkflow.Identity;
            }
            else
            {
                target.SubWorkflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.RoleFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.CustomSecurityProvider, null))
            {
                target.CustomSecurityProvider = currentSource.CustomSecurityProvider.Identity;
            }
            else
            {
                target.CustomSecurityProvider = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForRoleRootFilterModel(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Condition, null))
            {
                target.Condition = currentSource.Condition.Identity;
            }
            else
            {
                target.Condition = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Factory, null))
            {
                target.Factory = currentSource.Factory.Identity;
            }
            else
            {
                target.Factory = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStartWorkflowDomainObjectConditionRootFilterModel(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStartWorkflowRequest(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStartWorkflowRequestParameter(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Definition, null))
            {
                target.Definition = currentSource.Definition.Identity;
            }
            else
            {
                target.Definition = Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.StateFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForStateBaseRootFilterModel(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Condition, null))
            {
                target.Condition = currentSource.Condition.Identity;
            }
            else
            {
                target.Condition = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStateRootFilterModel(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Condition, null))
            {
                target.Condition = currentSource.Condition.Identity;
            }
            else
            {
                target.Condition = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.TaskFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForTaskInstanceRootFilterModel(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.WorkflowDefinition, null))
            {
                target.WorkflowDefinition = currentSource.WorkflowDefinition.Identity;
            }
            else
            {
                target.WorkflowDefinition = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.WorkflowInstance, null))
            {
                target.WorkflowInstance = currentSource.WorkflowInstance.Identity;
            }
            else
            {
                target.WorkflowInstance = Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.TaskMetadataFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForTaskRootFilterModel(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.To, null))
            {
                target.To = currentSource.To.Identity;
            }
            else
            {
                target.To = Framework.Workflow.Generated.DTO.StateBaseIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.TriggerEvent, null))
            {
                target.TriggerEvent = currentSource.TriggerEvent.Identity;
            }
            else
            {
                target.TriggerEvent = Framework.Workflow.Generated.DTO.EventIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionActionFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Action, null))
            {
                target.Action = currentSource.Action.Identity;
            }
            else
            {
                target.Action = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForTransitionRootFilterModel(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ActiveCondition, null))
            {
                target.ActiveCondition = currentSource.ActiveCondition.Identity;
            }
            else
            {
                target.ActiveCondition = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflowCreateModel(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForWorkflowInstanceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Definition, null))
            {
                target.Definition = currentSource.Definition.Identity;
            }
            else
            {
                target.Definition = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.DomainType, null))
            {
                target.DomainType = currentSource.DomainType.Identity;
            }
            else
            {
                target.DomainType = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForWorkflowLambdaRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapFullToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Type, null))
            {
                target.Type = currentSource.Type.Identity;
            }
            else
            {
                target.Type = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflowRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Owner, null))
            {
                target.Owner = currentSource.Owner.Identity;
            }
            else
            {
                target.Owner = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Elements, null))
            {
                target.Elements = currentSource.Elements.Identity;
            }
            else
            {
                target.Elements = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Path, null))
            {
                target.Path = currentSource.Path.Identity;
            }
            else
            {
                target.Path = Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Type, null))
            {
                target.Type = currentSource.Type.Identity;
            }
            else
            {
                target.Type = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapFullToStrictForWorkflowSourceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.SourceType, null))
            {
                target.SourceType = currentSource.SourceType.Identity;
            }
            else
            {
                target.SourceType = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.Workflow, null))
            {
                target.Workflow = currentSource.Workflow.Identity;
            }
            else
            {
                target.Workflow = Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.Empty;
            }
            if (!object.ReferenceEquals(currentSource.WorkflowType, null))
            {
                target.WorkflowType = currentSource.WorkflowType.Identity;
            }
            else
            {
                target.WorkflowType = Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.Empty;
            }
        }
        
        public virtual void MapRichToStrictForAvailableCommandFilterModel(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForAvailableTaskInstanceMainFilterModel(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.CommandRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Event, null))
            {
                target.Event = new Framework.Workflow.Generated.DTO.CommandEventStrictDTO(currentSource.Event);
            }
            else
            {
                target.Event = null;
            }
            if (!object.ReferenceEquals(currentSource.Metadatas, null))
            {
                target.Metadatas = Framework.Core.EnumerableExtensions.ToList(currentSource.Metadatas, commandMetadata => new Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO(commandMetadata));
            }
            if (!object.ReferenceEquals(currentSource.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(currentSource.Parameters, commandParameter => new Framework.Workflow.Generated.DTO.CommandParameterStrictDTO(commandParameter));
            }
            if (!object.ReferenceEquals(currentSource.RoleAccesses, null))
            {
                target.RoleAccesses = Framework.Core.EnumerableExtensions.ToList(currentSource.RoleAccesses, commandRoleAccess => new Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO(commandRoleAccess));
            }
        }
        
        public virtual void MapRichToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCommandEventRootFilterModel(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.CommandMetadataRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.CommandParameterRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForCommandRootFilterModel(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.FalseEvent, null))
            {
                target.FalseEvent = new Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO(currentSource.FalseEvent);
            }
            else
            {
                target.FalseEvent = null;
            }
            if (!object.ReferenceEquals(currentSource.TrueEvent, null))
            {
                target.TrueEvent = new Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO(currentSource.TrueEvent);
            }
            else
            {
                target.TrueEvent = null;
            }
        }
        
        public virtual void MapRichToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForConditionStateRootFilterModel(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForDomainTypeRootFilterModel(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForEventRootFilterModel(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForExecuteCommandRequest(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(currentSource.Parameters, executeCommandRequestParameter => new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO(executeCommandRequestParameter));
            }
        }
        
        public virtual void MapRichToStrictForExecuteCommandRequestParameter(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForGraphvizFormat(Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO target, Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForGroupExecuteCommandRequest(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(currentSource.Parameters, executeCommandRequestParameter => new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO(executeCommandRequestParameter));
            }
            if (!object.ReferenceEquals(currentSource.TaskInstances, null))
            {
                target.TaskInstances = Framework.Core.EnumerableExtensions.ToList(currentSource.TaskInstances, taskInstance => taskInstance.Identity);
            }
        }
        
        public virtual void MapRichToStrictForMassExecuteCommandRequest(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Groups, null))
            {
                target.Groups = Framework.Core.EnumerableExtensions.ToList(currentSource.Groups, groupExecuteCommandRequest => new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO(groupExecuteCommandRequest));
            }
        }
        
        public virtual void MapRichToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.FinalEvents, null))
            {
                target.FinalEvents = Framework.Core.EnumerableExtensions.ToList(currentSource.FinalEvents, parallelStateFinalEvent => new Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO(parallelStateFinalEvent));
            }
            if (!object.ReferenceEquals(currentSource.StartItems, null))
            {
                target.StartItems = Framework.Core.EnumerableExtensions.ToList(currentSource.StartItems, parallelStateStartItem => new Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO(parallelStateStartItem));
            }
        }
        
        public virtual void MapRichToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForParallelStateRootFilterModel(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.RoleRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForRoleRootFilterModel(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForStartWorkflowDomainObjectConditionRootFilterModel(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForStartWorkflowRequest(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(currentSource.Parameters, startWorkflowRequestParameter => new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO(startWorkflowRequestParameter));
            }
        }
        
        public virtual void MapRichToStrictForStartWorkflowRequestParameter(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.StateRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.DomainObjectEvents, null))
            {
                target.DomainObjectEvents = Framework.Core.EnumerableExtensions.ToList(currentSource.DomainObjectEvents, stateDomainObjectEvent => new Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO(stateDomainObjectEvent));
            }
            if (!object.ReferenceEquals(currentSource.Tasks, null))
            {
                target.Tasks = Framework.Core.EnumerableExtensions.ToList(currentSource.Tasks, task => new Framework.Workflow.Generated.DTO.TaskStrictDTO(task));
            }
            if (!object.ReferenceEquals(currentSource.TimeoutEvents, null))
            {
                target.TimeoutEvents = Framework.Core.EnumerableExtensions.ToList(currentSource.TimeoutEvents, stateTimeoutEvent => new Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO(stateTimeoutEvent));
            }
        }
        
        public virtual void MapRichToStrictForStateBaseRootFilterModel(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForStateRootFilterModel(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.TaskRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Commands, null))
            {
                target.Commands = Framework.Core.EnumerableExtensions.ToList(currentSource.Commands, command => new Framework.Workflow.Generated.DTO.CommandStrictDTO(command));
            }
            if (!object.ReferenceEquals(currentSource.Metadatas, null))
            {
                target.Metadatas = Framework.Core.EnumerableExtensions.ToList(currentSource.Metadatas, taskMetadata => new Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO(taskMetadata));
            }
        }
        
        public virtual void MapRichToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTaskInstanceRootFilterModel(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.TaskMetadataRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTaskRootFilterModel(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.PostActions, null))
            {
                target.PostActions = Framework.Core.EnumerableExtensions.ToList(currentSource.PostActions, transitionAction => new Framework.Workflow.Generated.DTO.TransitionActionStrictDTO(transitionAction));
            }
        }
        
        public virtual void MapRichToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionActionRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForTransitionRootFilterModel(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.ConditionStates, null))
            {
                target.ConditionStates = Framework.Core.EnumerableExtensions.ToList(currentSource.ConditionStates, conditionState => new Framework.Workflow.Generated.DTO.ConditionStateStrictDTO(conditionState));
            }
            if (!object.ReferenceEquals(currentSource.Lambdas, null))
            {
                target.Lambdas = Framework.Core.EnumerableExtensions.ToList(currentSource.Lambdas, workflowLambda => new Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO(workflowLambda));
            }
            if (!object.ReferenceEquals(currentSource.Metadatas, null))
            {
                target.Metadatas = Framework.Core.EnumerableExtensions.ToList(currentSource.Metadatas, workflowMetadata => new Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO(workflowMetadata));
            }
            if (!object.ReferenceEquals(currentSource.ParallelStates, null))
            {
                target.ParallelStates = Framework.Core.EnumerableExtensions.ToList(currentSource.ParallelStates, parallelState => new Framework.Workflow.Generated.DTO.ParallelStateStrictDTO(parallelState));
            }
            if (!object.ReferenceEquals(currentSource.Parameters, null))
            {
                target.Parameters = Framework.Core.EnumerableExtensions.ToList(currentSource.Parameters, workflowParameter => new Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO(workflowParameter));
            }
            if (!object.ReferenceEquals(currentSource.Roles, null))
            {
                target.Roles = Framework.Core.EnumerableExtensions.ToList(currentSource.Roles, role => new Framework.Workflow.Generated.DTO.RoleStrictDTO(role));
            }
            if (!object.ReferenceEquals(currentSource.Sources, null))
            {
                target.Sources = Framework.Core.EnumerableExtensions.ToList(currentSource.Sources, workflowSource => new Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO(workflowSource));
            }
            if (!object.ReferenceEquals(currentSource.StartConditions, null))
            {
                target.StartConditions = Framework.Core.EnumerableExtensions.ToList(currentSource.StartConditions, startWorkflowDomainObjectCondition => new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO(startWorkflowDomainObjectCondition));
            }
            if (!object.ReferenceEquals(currentSource.States, null))
            {
                target.States = Framework.Core.EnumerableExtensions.ToList(currentSource.States, state => new Framework.Workflow.Generated.DTO.StateStrictDTO(state));
            }
            if (!object.ReferenceEquals(currentSource.SubWorkflows, null))
            {
                target.SubWorkflows = Framework.Core.EnumerableExtensions.ToList(currentSource.SubWorkflows, workflow => new Framework.Workflow.Generated.DTO.WorkflowStrictDTO(workflow));
            }
            if (!object.ReferenceEquals(currentSource.Transitions, null))
            {
                target.Transitions = Framework.Core.EnumerableExtensions.ToList(currentSource.Transitions, transition => new Framework.Workflow.Generated.DTO.TransitionStrictDTO(transition));
            }
        }
        
        public virtual void MapRichToStrictForWorkflowCreateModel(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            if (!object.ReferenceEquals(currentSource.Watchers, null))
            {
                target.Watchers = Framework.Core.EnumerableExtensions.ToList(currentSource.Watchers, workflowInstanceWatcher => new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO(workflowInstanceWatcher));
            }
        }
        
        public virtual void MapRichToStrictForWorkflowInstanceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowLambdaRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapRichToStrictForWorkflowSourceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForAvailableCommandFilterModel(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForAvailableTaskInstanceMainFilterModel(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.DomainObjectId = currentSource.DomainObjectId;
        }
        
        public virtual void MapSimpleToStrictForCommand(Framework.Workflow.Generated.DTO.CommandStrictDTO target, Framework.Workflow.Generated.DTO.CommandSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.OrderIndex = currentSource.OrderIndex;
        }
        
        public virtual void MapSimpleToStrictForCommandEvent(Framework.Workflow.Generated.DTO.CommandEventStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
        }
        
        public virtual void MapSimpleToStrictForCommandEventRootFilterModel(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForCommandMetadata(Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO target, Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForCommandParameter(Framework.Workflow.Generated.DTO.CommandParameterStrictDTO target, Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AllowNull = currentSource.AllowNull;
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForCommandRoleAccess(Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO target, Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForCommandRootFilterModel(Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForConditionState(Framework.Workflow.Generated.DTO.ConditionStateStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AutoSetStatePropertyName = currentSource.AutoSetStatePropertyName;
            target.AutoSetStatePropertyValue = currentSource.AutoSetStatePropertyValue;
            target.Description = currentSource.Description;
            target.IsInitial = currentSource.IsInitial;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForConditionStateEvent(Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
        }
        
        public virtual void MapSimpleToStrictForConditionStateRootFilterModel(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForDomainTypeRootFilterModel(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.IncludeBaseTargetSystem = currentSource.IncludeBaseTargetSystem;
            target.IsSource = currentSource.IsSource;
        }
        
        public virtual void MapSimpleToStrictForEventRootFilterModel(Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForExecuteCommandRequest(Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForExecuteCommandRequestParameter(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForGraphvizFormat(Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO target, Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForGroupExecuteCommandRequest(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForMassExecuteCommandRequest(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO target, Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForParallelState(Framework.Workflow.Generated.DTO.ParallelStateStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AutoSetStatePropertyName = currentSource.AutoSetStatePropertyName;
            target.AutoSetStatePropertyValue = currentSource.AutoSetStatePropertyValue;
            target.Description = currentSource.Description;
            target.IsInitial = currentSource.IsInitial;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForParallelStateFinalEvent(Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.OrderIndex = currentSource.OrderIndex;
        }
        
        public virtual void MapSimpleToStrictForParallelStateRootFilterModel(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForParallelStateStartItem(Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO target, Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForRole(Framework.Workflow.Generated.DTO.RoleStrictDTO target, Framework.Workflow.Generated.DTO.RoleSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.SecurityOperationId = currentSource.SecurityOperationId;
        }
        
        public virtual void MapSimpleToStrictForRoleRootFilterModel(Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForStartWorkflowDomainObjectCondition(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForStartWorkflowDomainObjectConditionRootFilterModel(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForStartWorkflowRequest(Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForStartWorkflowRequestParameter(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO target, Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForState(Framework.Workflow.Generated.DTO.StateStrictDTO target, Framework.Workflow.Generated.DTO.StateSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AutoSetStatePropertyName = currentSource.AutoSetStatePropertyName;
            target.AutoSetStatePropertyValue = currentSource.AutoSetStatePropertyValue;
            target.Description = currentSource.Description;
            target.IsFinal = currentSource.IsFinal;
            target.IsInitial = currentSource.IsInitial;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForStateBaseRootFilterModel(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForStateDomainObjectEvent(Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO target, Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForStateRootFilterModel(Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForStateTimeoutEvent(Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO target, Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForTask(Framework.Workflow.Generated.DTO.TaskStrictDTO target, Framework.Workflow.Generated.DTO.TaskSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForTaskInstance(Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForTaskInstanceRootFilterModel(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AssignedToMe = currentSource.AssignedToMe;
            target.DomainObjectId = currentSource.DomainObjectId;
            target.IsAvailable = currentSource.IsAvailable;
        }
        
        public virtual void MapSimpleToStrictForTaskMetadata(Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO target, Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForTaskRootFilterModel(Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForTransition(Framework.Workflow.Generated.DTO.TransitionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForTransitionAction(Framework.Workflow.Generated.DTO.TransitionActionStrictDTO target, Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.OrderIndex = currentSource.OrderIndex;
        }
        
        public virtual void MapSimpleToStrictForTransitionRootFilterModel(Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForWorkflow(Framework.Workflow.Generated.DTO.WorkflowStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AutoRemoveWithDomainObject = currentSource.AutoRemoveWithDomainObject;
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForWorkflowCreateModel(Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForWorkflowInstance(Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForWorkflowInstanceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.DomainObjectId = currentSource.DomainObjectId;
            target.IsActive = currentSource.IsActive;
            target.IsFinal = currentSource.IsFinal;
        }
        
        public virtual void MapSimpleToStrictForWorkflowInstanceWatcher(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Login = currentSource.Login;
        }
        
        public virtual void MapSimpleToStrictForWorkflowLambda(Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForWorkflowLambdaRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
        
        public virtual void MapSimpleToStrictForWorkflowMetadata(Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
            target.Value = currentSource.Value;
        }
        
        public virtual void MapSimpleToStrictForWorkflowParameter(Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.AllowNull = currentSource.AllowNull;
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForWorkflowRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.IsRoot = currentSource.IsRoot;
        }
        
        public virtual void MapSimpleToStrictForWorkflowSource(Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
            target.Description = currentSource.Description;
            target.Name = currentSource.Name;
        }
        
        public virtual void MapSimpleToStrictForWorkflowSourceRootFilterModel(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO target, Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO currentSource)
        {
            if (object.ReferenceEquals(target, null))
            {
                throw new System.ArgumentNullException("target");
            }
            if (object.ReferenceEquals(currentSource, null))
            {
                throw new System.ArgumentNullException("currentSource");
            }
        }
    }
    
    public partial class WorkflowClientPrimitiveDTOMappingService : Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingServiceBase
    {
        
        private static Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService _default = new Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService();
        
        public static Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService Default
        {
            get
            {
                return Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService._default;
            }
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct CommandIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.CommandIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.CommandIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CommandIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CommandIdentityDTO(Framework.Workflow.Generated.DTO.CommandSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.CommandIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.CommandIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.CommandIdentityDTO identity1, Framework.Workflow.Generated.DTO.CommandIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.CommandIdentityDTO identity1, Framework.Workflow.Generated.DTO.CommandIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.CommandIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.CommandIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.CommandIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct CommandParameterIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public CommandParameterIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public CommandParameterIdentityDTO(Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO identity1, Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO identity1, Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct ConditionStateIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ConditionStateIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ConditionStateIdentityDTO(Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO identity1, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO identity1, Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct DomainTypeIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public DomainTypeIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public DomainTypeIdentityDTO(Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO identity1, Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO identity1, Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct EventIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.EventIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.EventIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.EventIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public EventIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public EventIdentityDTO(Framework.Workflow.Generated.DTO.EventSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.EventIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.EventIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.EventIdentityDTO identity1, Framework.Workflow.Generated.DTO.EventIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.EventIdentityDTO identity1, Framework.Workflow.Generated.DTO.EventIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.EventIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.EventIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.EventIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct ParallelStateIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public ParallelStateIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public ParallelStateIdentityDTO(Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO identity1, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO identity1, Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct RoleIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.RoleIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.RoleIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.RoleIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public RoleIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public RoleIdentityDTO(Framework.Workflow.Generated.DTO.RoleSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.RoleIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.RoleIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.RoleIdentityDTO identity1, Framework.Workflow.Generated.DTO.RoleIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.RoleIdentityDTO identity1, Framework.Workflow.Generated.DTO.RoleIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.RoleIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.RoleIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.RoleIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct StartWorkflowDomainObjectConditionIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public StartWorkflowDomainObjectConditionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public StartWorkflowDomainObjectConditionIdentityDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO identity1, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO identity1, Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct StateIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.StateIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.StateIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.StateIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public StateIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public StateIdentityDTO(Framework.Workflow.Generated.DTO.StateSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.StateIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.StateIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.StateIdentityDTO identity1, Framework.Workflow.Generated.DTO.StateIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.StateIdentityDTO identity1, Framework.Workflow.Generated.DTO.StateIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.StateIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.StateIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.StateIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct StateBaseIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.StateBaseIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.StateBaseIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public StateBaseIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public StateBaseIdentityDTO(Framework.Workflow.Generated.DTO.StateBaseSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.StateBaseIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.StateBaseIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.StateBaseIdentityDTO identity1, Framework.Workflow.Generated.DTO.StateBaseIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.StateBaseIdentityDTO identity1, Framework.Workflow.Generated.DTO.StateBaseIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.StateBaseIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.StateBaseIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.StateBaseIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct TargetSystemIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TargetSystemIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TargetSystemIdentityDTO(Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO identity1, Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO identity1, Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct TaskIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.TaskIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.TaskIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TaskIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TaskIdentityDTO(Framework.Workflow.Generated.DTO.TaskSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.TaskIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.TaskIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.TaskIdentityDTO identity1, Framework.Workflow.Generated.DTO.TaskIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.TaskIdentityDTO identity1, Framework.Workflow.Generated.DTO.TaskIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.TaskIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.TaskIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.TaskIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct TransitionIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.TransitionIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.TransitionIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TransitionIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TransitionIdentityDTO(Framework.Workflow.Generated.DTO.TransitionSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.TransitionIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.TransitionIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.TransitionIdentityDTO identity1, Framework.Workflow.Generated.DTO.TransitionIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.TransitionIdentityDTO identity1, Framework.Workflow.Generated.DTO.TransitionIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.TransitionIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.TransitionIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.TransitionIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct WorkflowIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.WorkflowIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.WorkflowIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkflowIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkflowIdentityDTO(Framework.Workflow.Generated.DTO.WorkflowSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.WorkflowIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.WorkflowIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.WorkflowIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.WorkflowIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.WorkflowIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.WorkflowIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct WorkflowLambdaIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkflowLambdaIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkflowLambdaIdentityDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct WorkflowParameterIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkflowParameterIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkflowParameterIdentityDTO(Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct WorkflowSourceIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkflowSourceIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkflowSourceIdentityDTO(Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct StateInstanceIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public StateInstanceIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public StateInstanceIdentityDTO(Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO identity1, Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO identity1, Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct TaskInstanceIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public TaskInstanceIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public TaskInstanceIdentityDTO(Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO identity1, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO identity1, Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public struct WorkflowInstanceIdentityDTO : System.IEquatable<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        private static Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO EmptyField = new Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO(System.Guid.Empty);
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        public WorkflowInstanceIdentityDTO(System.Guid id)
        {
            this.Id = id;
        }
        
        public WorkflowInstanceIdentityDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO source)
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
            this.Id = source.Id;
        }
        
        public static Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO Empty
        {
            get
            {
                return Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO.EmptyField;
            }
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public static bool operator !=(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO identity2)
        {
            return !(identity1 == identity2);
        }
        
        public static bool operator ==(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO identity1, Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO identity2)
        {
            return identity1.Equals(identity2);
        }
        
        public override bool Equals(object other)
        {
            return !object.ReferenceEquals(other, null) && (typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO) == other.GetType()) && this.Equals(((Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO)(other)));
        }
        
        public bool Equals(Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO other)
        {
            return (this.Id == other.Id);
        }
        
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
        
        public override string ToString()
        {
            return this.Id.ToString();
        }
    }
    
    public partial interface IBaseAbstractDTO : System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged, Framework.Reactive.IBaseRaiseObject
    {
    }
    
    public partial interface IBasePersistentDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        System.Guid Id
        {
            get;
            set;
        }
    }
    
    public partial interface IBaseAuditPersistentDTO : Framework.Workflow.Generated.DTO.IBasePersistentDTO
    {
        
        bool Active
        {
            get;
            set;
        }
        
        System.DateTime? CreateDate
        {
            get;
            set;
        }
        
        string CreatedBy
        {
            get;
            set;
        }
        
        string ModifiedBy
        {
            get;
            set;
        }
        
        System.DateTime? ModifyDate
        {
            get;
            set;
        }
        
        long Version
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public abstract partial class BaseAbstractDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        public BaseAbstractDTO(Framework.Workflow.Generated.DTO.IBaseAbstractDTO source) : 
                this()
        {
            if (object.ReferenceEquals(source, null))
            {
                throw new System.ArgumentNullException("source");
            }
        }
        
        System.ComponentModel.PropertyChangedEventHandler Framework.Reactive.IBaseRaiseObject.PropertyChanged
        {
            get
            {
                return this.PropertyChanged;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if (!object.ReferenceEquals(propertyChanged, null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        protected void RaisePropertyChanging(string propertyName)
        {
            System.ComponentModel.PropertyChangingEventHandler propertyChanging = this.PropertyChanging;
            if (!object.ReferenceEquals(propertyChanging, null))
            {
                propertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }
    
    [Framework.Persistent.TargetSystemAttribute("3a6857b1-e35d-48c8-8375-a34901213552")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public abstract partial class BasePersistentDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IBasePersistentDTO
    {
        
        private System.Guid _id;
        
        protected BasePersistentDTO()
        {
        }
        
        public BasePersistentDTO(Framework.Workflow.Generated.DTO.IBasePersistentDTO source) : 
                this(source, true)
        {
        }
        
        public BasePersistentDTO(Framework.Workflow.Generated.DTO.IBasePersistentDTO source, bool copyId) : 
                base(source)
        {
            if (copyId)
            {
                this.Id = source.Id;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this._id;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._id, newValue))
                {
                    base.RaisePropertyChanging("Id");
                    this._id = newValue;
                    base.RaisePropertyChanged("Id");
                }
            }
        }
        
        public bool IsNew
        {
            get
            {
                return (default(System.Guid) == this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public abstract partial class BaseAuditPersistentDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        private bool _active = true;
        
        private System.DateTime? _createDate;
        
        private string _createdBy;
        
        private string _modifiedBy;
        
        private System.DateTime? _modifyDate;
        
        private long _version;
        
        protected BaseAuditPersistentDTO()
        {
        }
        
        public BaseAuditPersistentDTO(Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO source) : 
                this(source, true)
        {
        }
        
        public BaseAuditPersistentDTO(Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Active = source.Active;
            this.CreateDate = source.CreateDate;
            this.CreatedBy = source.CreatedBy;
            this.ModifiedBy = source.ModifiedBy;
            this.ModifyDate = source.ModifyDate;
            this.Version = source.Version;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this._active;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._active, newValue))
                {
                    base.RaisePropertyChanging("Active");
                    this._active = newValue;
                    base.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? CreateDate
        {
            get
            {
                return this._createDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._createDate, newValue))
                {
                    base.RaisePropertyChanging("CreateDate");
                    this._createDate = newValue;
                    base.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._createdBy);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._createdBy, newValue))
                {
                    base.RaisePropertyChanging("CreatedBy");
                    this._createdBy = newValue;
                    base.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._modifiedBy);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._modifiedBy, newValue))
                {
                    base.RaisePropertyChanging("ModifiedBy");
                    this._modifiedBy = newValue;
                    base.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime? ModifyDate
        {
            get
            {
                return this._modifyDate;
            }
            set
            {
                System.DateTime? newValue;
                newValue = value;
                if (!object.Equals(this._modifyDate, newValue))
                {
                    base.RaisePropertyChanging("ModifyDate");
                    this._modifyDate = newValue;
                    base.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version
        {
            get
            {
                return this._version;
            }
            set
            {
                long newValue;
                newValue = value;
                if (!object.Equals(this._version, newValue))
                {
                    base.RaisePropertyChanging("Version");
                    this._version = newValue;
                    base.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO))]
    public partial class GraphvizFormatSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IGraphvizFormatSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO>
    {
        
        public GraphvizFormatSimpleDTO()
        {
        }
        
        public GraphvizFormatSimpleDTO(Framework.Workflow.Generated.DTO.IGraphvizFormatSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO))]
    public partial class GraphvizFormatFullDTO : Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO, Framework.Workflow.Generated.DTO.IGraphvizFormatFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO>
    {
        
        public GraphvizFormatFullDTO()
        {
        }
        
        public GraphvizFormatFullDTO(Framework.Workflow.Generated.DTO.IGraphvizFormatFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class GraphvizFormatRichDTO : Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO, Framework.Workflow.Generated.DTO.IGraphvizFormatRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO>
    {
        
        public GraphvizFormatRichDTO()
        {
        }
        
        public GraphvizFormatRichDTO(Framework.Workflow.Generated.DTO.IGraphvizFormatRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.GraphvizFormatStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class GraphvizFormatStrictDTO
    {
        
        public GraphvizFormatStrictDTO()
        {
        }
        
        public GraphvizFormatStrictDTO(Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForGraphvizFormat(this, source);
        }
        
        public GraphvizFormatStrictDTO(Framework.Workflow.Generated.DTO.GraphvizFormatRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public GraphvizFormatStrictDTO(Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForGraphvizFormat(this, source);
        }
        
        public GraphvizFormatStrictDTO(Framework.Workflow.Generated.DTO.GraphvizFormatFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public GraphvizFormatStrictDTO(Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForGraphvizFormat(this, source);
        }
        
        public GraphvizFormatStrictDTO(Framework.Workflow.Generated.DTO.GraphvizFormatSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IGraphvizFormatSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IGraphvizFormatFullDTO : Framework.Workflow.Generated.DTO.IGraphvizFormatSimpleDTO
    {
    }
    
    public partial interface IGraphvizFormatRichDTO : Framework.Workflow.Generated.DTO.IGraphvizFormatFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO))]
    public partial class AvailableCommandFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO>
    {
        
        public AvailableCommandFilterModelSimpleDTO()
        {
        }
        
        public AvailableCommandFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO))]
    public partial class AvailableCommandFilterModelFullDTO : Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO _taskInstance;
        
        public AvailableCommandFilterModelFullDTO()
        {
        }
        
        public AvailableCommandFilterModelFullDTO(Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelFullDTO source) : 
                base(source)
        {
            this.TaskInstance = source.TaskInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO TaskInstance
        {
            get
            {
                return this._taskInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._taskInstance, newValue))
                {
                    base.RaisePropertyChanging("TaskInstance");
                    this._taskInstance = newValue;
                    base.RaisePropertyChanged("TaskInstance");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class AvailableCommandFilterModelRichDTO : Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO, Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO>
    {
        
        public AvailableCommandFilterModelRichDTO()
        {
        }
        
        public AvailableCommandFilterModelRichDTO(Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.AvailableCommandFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class AvailableCommandFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO TaskInstance;
        
        public AvailableCommandFilterModelStrictDTO()
        {
        }
        
        public AvailableCommandFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAvailableCommandFilterModel(this, source);
        }
        
        public AvailableCommandFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AvailableCommandFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAvailableCommandFilterModel(this, source);
        }
        
        public AvailableCommandFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AvailableCommandFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAvailableCommandFilterModel(this, source);
        }
        
        public AvailableCommandFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableCommandFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IAvailableCommandFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IAvailableCommandFilterModelFullDTO : Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO TaskInstance
        {
            get;
            set;
        }
    }
    
    public partial interface IAvailableCommandFilterModelRichDTO : Framework.Workflow.Generated.DTO.IAvailableCommandFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO))]
    public partial class AvailableTaskInstanceMainFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO>
    {
        
        private System.Guid _domainObjectId;
        
        public AvailableTaskInstanceMainFilterModelSimpleDTO()
        {
        }
        
        public AvailableTaskInstanceMainFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelSimpleDTO source) : 
                base(source)
        {
            this.DomainObjectId = source.DomainObjectId;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectId, newValue))
                {
                    base.RaisePropertyChanging("DomainObjectId");
                    this._domainObjectId = newValue;
                    base.RaisePropertyChanged("DomainObjectId");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO))]
    public partial class AvailableTaskInstanceMainFilterModelFullDTO : Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _sourceType;
        
        public AvailableTaskInstanceMainFilterModelFullDTO()
        {
        }
        
        public AvailableTaskInstanceMainFilterModelFullDTO(Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelFullDTO source) : 
                base(source)
        {
            this.SourceType = source.SourceType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO SourceType
        {
            get
            {
                return this._sourceType;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._sourceType, newValue))
                {
                    base.RaisePropertyChanging("SourceType");
                    this._sourceType = newValue;
                    base.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class AvailableTaskInstanceMainFilterModelRichDTO : Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO, Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO>
    {
        
        public AvailableTaskInstanceMainFilterModelRichDTO()
        {
        }
        
        public AvailableTaskInstanceMainFilterModelRichDTO(Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class AvailableTaskInstanceMainFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO SourceType;
        
        public AvailableTaskInstanceMainFilterModelStrictDTO()
        {
        }
        
        public AvailableTaskInstanceMainFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForAvailableTaskInstanceMainFilterModel(this, source);
        }
        
        public AvailableTaskInstanceMainFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AvailableTaskInstanceMainFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForAvailableTaskInstanceMainFilterModel(this, source);
        }
        
        public AvailableTaskInstanceMainFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public AvailableTaskInstanceMainFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForAvailableTaskInstanceMainFilterModel(this, source);
        }
        
        public AvailableTaskInstanceMainFilterModelStrictDTO(Framework.Workflow.Generated.DTO.AvailableTaskInstanceMainFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IAvailableTaskInstanceMainFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        System.Guid DomainObjectId
        {
            get;
            set;
        }
    }
    
    public partial interface IAvailableTaskInstanceMainFilterModelFullDTO : Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO SourceType
        {
            get;
            set;
        }
    }
    
    public partial interface IAvailableTaskInstanceMainFilterModelRichDTO : Framework.Workflow.Generated.DTO.IAvailableTaskInstanceMainFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO))]
    public partial class CommandEventRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO>
    {
        
        public CommandEventRootFilterModelSimpleDTO()
        {
        }
        
        public CommandEventRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO))]
    public partial class CommandEventRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public CommandEventRootFilterModelFullDTO()
        {
        }
        
        public CommandEventRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandEventRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO>
    {
        
        public CommandEventRootFilterModelRichDTO()
        {
        }
        
        public CommandEventRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandEventRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public CommandEventRootFilterModelStrictDTO()
        {
        }
        
        public CommandEventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommandEventRootFilterModel(this, source);
        }
        
        public CommandEventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandEventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommandEventRootFilterModel(this, source);
        }
        
        public CommandEventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandEventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommandEventRootFilterModel(this, source);
        }
        
        public CommandEventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ICommandEventRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ICommandEventRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandEventRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ICommandEventRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO))]
    public partial class CommandRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.ICommandRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO>
    {
        
        public CommandRootFilterModelSimpleDTO()
        {
        }
        
        public CommandRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.ICommandRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO))]
    public partial class CommandRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.ICommandRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public CommandRootFilterModelFullDTO()
        {
        }
        
        public CommandRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.ICommandRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.ICommandRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO>
    {
        
        public CommandRootFilterModelRichDTO()
        {
        }
        
        public CommandRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.ICommandRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public CommandRootFilterModelStrictDTO()
        {
        }
        
        public CommandRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommandRootFilterModel(this, source);
        }
        
        public CommandRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommandRootFilterModel(this, source);
        }
        
        public CommandRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommandRootFilterModel(this, source);
        }
        
        public CommandRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.CommandRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ICommandRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ICommandRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ICommandRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ICommandRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO))]
    public partial class ConditionStateRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO>
    {
        
        public ConditionStateRootFilterModelSimpleDTO()
        {
        }
        
        public ConditionStateRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO))]
    public partial class ConditionStateRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public ConditionStateRootFilterModelFullDTO()
        {
        }
        
        public ConditionStateRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ConditionStateRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO>
    {
        
        public ConditionStateRootFilterModelRichDTO()
        {
        }
        
        public ConditionStateRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ConditionStateRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public ConditionStateRootFilterModelStrictDTO()
        {
        }
        
        public ConditionStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForConditionStateRootFilterModel(this, source);
        }
        
        public ConditionStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ConditionStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForConditionStateRootFilterModel(this, source);
        }
        
        public ConditionStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ConditionStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForConditionStateRootFilterModel(this, source);
        }
        
        public ConditionStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IConditionStateRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IConditionStateRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IConditionStateRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IConditionStateRootFilterModelFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRichDTO))]
    public partial class CommandSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ICommandSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.CommandIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.CommandSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private int _orderIndex;
        
        public CommandSimpleDTO()
        {
        }
        
        public CommandSimpleDTO(Framework.Workflow.Generated.DTO.ICommandSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CommandSimpleDTO(Framework.Workflow.Generated.DTO.ICommandSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.OrderIndex = source.OrderIndex;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.CommandIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex
        {
            get
            {
                return this._orderIndex;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._orderIndex, newValue))
                {
                    base.RaisePropertyChanging("OrderIndex");
                    this._orderIndex = newValue;
                    base.RaisePropertyChanged("OrderIndex");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.CommandSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRichDTO))]
    public partial class CommandFullDTO : Framework.Workflow.Generated.DTO.CommandSimpleDTO, Framework.Workflow.Generated.DTO.ICommandFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _executeAction;
        
        private Framework.Workflow.Generated.DTO.StateSimpleDTO _state;
        
        private Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        private Framework.Workflow.Generated.DTO.TaskSimpleDTO _task;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public CommandFullDTO()
        {
        }
        
        public CommandFullDTO(Framework.Workflow.Generated.DTO.ICommandFullDTO source) : 
                this(source, true)
        {
        }
        
        public CommandFullDTO(Framework.Workflow.Generated.DTO.ICommandFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ExecuteAction = source.ExecuteAction;
            this.State = source.State;
            this.TargetSystem = source.TargetSystem;
            this.Task = source.Task;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO ExecuteAction
        {
            get
            {
                return this._executeAction;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._executeAction, newValue))
                {
                    base.RaisePropertyChanging("ExecuteAction");
                    this._executeAction = newValue;
                    base.RaisePropertyChanged("ExecuteAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateSimpleDTO State
        {
            get
            {
                return this._state;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._state, newValue))
                {
                    base.RaisePropertyChanging("State");
                    this._state = newValue;
                    base.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._targetSystem, newValue))
                {
                    base.RaisePropertyChanging("TargetSystem");
                    this._targetSystem = newValue;
                    base.RaisePropertyChanged("TargetSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TaskSimpleDTO Task
        {
            get
            {
                return this._task;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TaskSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._task, newValue))
                {
                    base.RaisePropertyChanging("Task");
                    this._task = newValue;
                    base.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandRichDTO : Framework.Workflow.Generated.DTO.CommandFullDTO, Framework.Workflow.Generated.DTO.ICommandRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandParameterRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandEventRichDTO _event;
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO> _metadatas = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandParameterRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO> _roleAccesses = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO>();
        
        public CommandRichDTO()
        {
        }
        
        public CommandRichDTO(Framework.Workflow.Generated.DTO.ICommandRichDTO source) : 
                this(source, true)
        {
        }
        
        public CommandRichDTO(Framework.Workflow.Generated.DTO.ICommandRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Event = source.Event;
            if (!object.ReferenceEquals(source.Metadatas, null))
            {
                this.Metadatas = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Metadatas, commandMetadata => commandMetadata.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, commandParameter => commandParameter.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.RoleAccesses, null))
            {
                this.RoleAccesses = Framework.Core.EnumerableExtensions.ToObservableCollection(source.RoleAccesses, commandRoleAccess => commandRoleAccess.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO>.Details
        {
            get
            {
                return this.Metadatas;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.CommandParameterRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandParameterRichDTO>.Details
        {
            get
            {
                return this.Parameters;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO>.Details
        {
            get
            {
                return this.RoleAccesses;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.CommandEventRichDTO Event
        {
            get
            {
                return this._event;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandEventRichDTO newValue;
                newValue = value;
                if (!object.Equals(this._event, newValue))
                {
                    base.RaisePropertyChanging("Event");
                    this._event = newValue;
                    base.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO> Metadatas
        {
            get
            {
                return this._metadatas;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._metadatas, newValue))
                {
                    base.RaisePropertyChanging("Metadatas");
                    this._metadatas = newValue;
                    base.RaisePropertyChanged("Metadatas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO> RoleAccesses
        {
            get
            {
                return this._roleAccesses;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._roleAccesses, newValue))
                {
                    base.RaisePropertyChanging("RoleAccesses");
                    this._roleAccesses = newValue;
                    base.RaisePropertyChanged("RoleAccesses");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.CommandIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandEventStrictDTO Event;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO ExecuteAction;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO> Metadatas = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandParameterStrictDTO> Parameters = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandParameterStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO> RoleAccesses = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CommandStrictDTO()
        {
        }
        
        public CommandStrictDTO(Framework.Workflow.Generated.DTO.CommandRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommand(this, source);
        }
        
        public CommandStrictDTO(Framework.Workflow.Generated.DTO.CommandRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandStrictDTO(Framework.Workflow.Generated.DTO.CommandFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommand(this, source);
        }
        
        public CommandStrictDTO(Framework.Workflow.Generated.DTO.CommandFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandStrictDTO(Framework.Workflow.Generated.DTO.CommandSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommand(this, source);
        }
        
        public CommandStrictDTO(Framework.Workflow.Generated.DTO.CommandSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCommand(this, source);
        }
        
        private CommandStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCommand(this, source);
        }
        
        private CommandStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.CommandIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ICommandSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        int OrderIndex
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandFullDTO : Framework.Workflow.Generated.DTO.ICommandSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO ExecuteAction
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateSimpleDTO State
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.TaskSimpleDTO Task
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandRichDTO : Framework.Workflow.Generated.DTO.ICommandFullDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandEventRichDTO Event
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO> Metadatas
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandParameterRichDTO> Parameters
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO> RoleAccesses
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandEventFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandEventRichDTO))]
    public partial class CommandEventSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ICommandEventSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.CommandEventSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public CommandEventSimpleDTO()
        {
        }
        
        public CommandEventSimpleDTO(Framework.Workflow.Generated.DTO.ICommandEventSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CommandEventSimpleDTO(Framework.Workflow.Generated.DTO.ICommandEventSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandEventSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandEventSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandEventSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.CommandEventSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandEventRichDTO))]
    public partial class CommandEventFullDTO : Framework.Workflow.Generated.DTO.CommandEventSimpleDTO, Framework.Workflow.Generated.DTO.ICommandEventFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandEventFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public CommandEventFullDTO()
        {
        }
        
        public CommandEventFullDTO(Framework.Workflow.Generated.DTO.ICommandEventFullDTO source) : 
                this(source, true)
        {
        }
        
        public CommandEventFullDTO(Framework.Workflow.Generated.DTO.ICommandEventFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Owner = source.Owner;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandEventFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandEventFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandEventRichDTO : Framework.Workflow.Generated.DTO.CommandEventFullDTO, Framework.Workflow.Generated.DTO.ICommandEventRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandEventRichDTO>
    {
        
        public CommandEventRichDTO()
        {
        }
        
        public CommandEventRichDTO(Framework.Workflow.Generated.DTO.ICommandEventRichDTO source) : 
                this(source, true)
        {
        }
        
        public CommandEventRichDTO(Framework.Workflow.Generated.DTO.ICommandEventRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandEventRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandEventRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandEventStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CommandEventStrictDTO()
        {
        }
        
        public CommandEventStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandEventFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommandEvent(this, source);
        }
        
        public CommandEventStrictDTO(Framework.Workflow.Generated.DTO.CommandEventRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandEventStrictDTO(Framework.Workflow.Generated.DTO.CommandEventFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandEventSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommandEvent(this, source);
        }
        
        public CommandEventStrictDTO(Framework.Workflow.Generated.DTO.CommandEventFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandEventStrictDTO(Framework.Workflow.Generated.DTO.CommandEventSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommandEvent(this, source);
        }
        
        public CommandEventStrictDTO(Framework.Workflow.Generated.DTO.CommandEventSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCommandEvent(this, source);
        }
        
        private CommandEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCommandEvent(this, source);
        }
        
        private CommandEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface ICommandEventSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandEventFullDTO : Framework.Workflow.Generated.DTO.ICommandEventSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandEventRichDTO : Framework.Workflow.Generated.DTO.ICommandEventFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandMetadataFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandMetadataRichDTO))]
    public partial class CommandMetadataSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ICommandMetadataSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private string _value;
        
        public CommandMetadataSimpleDTO()
        {
        }
        
        public CommandMetadataSimpleDTO(Framework.Workflow.Generated.DTO.ICommandMetadataSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CommandMetadataSimpleDTO(Framework.Workflow.Generated.DTO.ICommandMetadataSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandMetadataRichDTO))]
    public partial class CommandMetadataFullDTO : Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO, Framework.Workflow.Generated.DTO.ICommandMetadataFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandMetadataFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _command;
        
        public CommandMetadataFullDTO()
        {
        }
        
        public CommandMetadataFullDTO(Framework.Workflow.Generated.DTO.ICommandMetadataFullDTO source) : 
                this(source, true)
        {
        }
        
        public CommandMetadataFullDTO(Framework.Workflow.Generated.DTO.ICommandMetadataFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Command = source.Command;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get
            {
                return this._command;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._command, newValue))
                {
                    base.RaisePropertyChanging("Command");
                    this._command = newValue;
                    base.RaisePropertyChanged("Command");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandMetadataFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandMetadataFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandMetadataFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandMetadataRichDTO : Framework.Workflow.Generated.DTO.CommandMetadataFullDTO, Framework.Workflow.Generated.DTO.ICommandMetadataRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandMetadataRichDTO>
    {
        
        public CommandMetadataRichDTO()
        {
        }
        
        public CommandMetadataRichDTO(Framework.Workflow.Generated.DTO.ICommandMetadataRichDTO source) : 
                this(source, true)
        {
        }
        
        public CommandMetadataRichDTO(Framework.Workflow.Generated.DTO.ICommandMetadataRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandMetadataRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandMetadataRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandMetadataRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandMetadataStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandMetadataStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CommandMetadataStrictDTO()
        {
        }
        
        public CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.CommandMetadataRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandMetadataFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommandMetadata(this, source);
        }
        
        public CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.CommandMetadataRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.CommandMetadataFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommandMetadata(this, source);
        }
        
        public CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.CommandMetadataFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommandMetadata(this, source);
        }
        
        public CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.CommandMetadataSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCommandMetadata(this, source);
        }
        
        private CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCommandMetadata(this, source);
        }
        
        private CommandMetadataStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface ICommandMetadataSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandMetadataFullDTO : Framework.Workflow.Generated.DTO.ICommandMetadataSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandMetadataRichDTO : Framework.Workflow.Generated.DTO.ICommandMetadataFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandParameterRichDTO))]
    public partial class CommandParameterSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ICommandParameterSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO>
    {
        
        private bool _allowNull;
        
        private string _description;
        
        private bool _isReadOnly;
        
        private string _name;
        
        public CommandParameterSimpleDTO()
        {
        }
        
        public CommandParameterSimpleDTO(Framework.Workflow.Generated.DTO.ICommandParameterSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CommandParameterSimpleDTO(Framework.Workflow.Generated.DTO.ICommandParameterSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AllowNull = source.AllowNull;
            this.Description = source.Description;
            this.IsReadOnly = source.IsReadOnly;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNull
        {
            get
            {
                return this._allowNull;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._allowNull, newValue))
                {
                    base.RaisePropertyChanging("AllowNull");
                    this._allowNull = newValue;
                    base.RaisePropertyChanged("AllowNull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly
        {
            get
            {
                return this._isReadOnly;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isReadOnly, newValue))
                {
                    base.RaisePropertyChanging("IsReadOnly");
                    this._isReadOnly = newValue;
                    base.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandParameterRichDTO))]
    public partial class CommandParameterFullDTO : Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO, Framework.Workflow.Generated.DTO.ICommandParameterFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandParameterFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _command;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _type;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public CommandParameterFullDTO()
        {
        }
        
        public CommandParameterFullDTO(Framework.Workflow.Generated.DTO.ICommandParameterFullDTO source) : 
                this(source, true)
        {
        }
        
        public CommandParameterFullDTO(Framework.Workflow.Generated.DTO.ICommandParameterFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Command = source.Command;
            this.Type = source.Type;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get
            {
                return this._command;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._command, newValue))
                {
                    base.RaisePropertyChanging("Command");
                    this._command = newValue;
                    base.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandParameterFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandParameterFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandParameterRichDTO : Framework.Workflow.Generated.DTO.CommandParameterFullDTO, Framework.Workflow.Generated.DTO.ICommandParameterRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandParameterRichDTO>
    {
        
        public CommandParameterRichDTO()
        {
        }
        
        public CommandParameterRichDTO(Framework.Workflow.Generated.DTO.ICommandParameterRichDTO source) : 
                this(source, true)
        {
        }
        
        public CommandParameterRichDTO(Framework.Workflow.Generated.DTO.ICommandParameterRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandParameterRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandParameterRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandParameterStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNull;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO Type;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CommandParameterStrictDTO()
        {
        }
        
        public CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.CommandParameterRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandParameterFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommandParameter(this, source);
        }
        
        public CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.CommandParameterRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.CommandParameterFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommandParameter(this, source);
        }
        
        public CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.CommandParameterFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommandParameter(this, source);
        }
        
        public CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCommandParameter(this, source);
        }
        
        private CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCommandParameter(this, source);
        }
        
        private CommandParameterStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ICommandParameterSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool AllowNull
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool IsReadOnly
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandParameterFullDTO : Framework.Workflow.Generated.DTO.ICommandParameterSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandParameterRichDTO : Framework.Workflow.Generated.DTO.ICommandParameterFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO))]
    public partial class CommandRoleAccessSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ICommandRoleAccessSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO>
    {
        
        public CommandRoleAccessSimpleDTO()
        {
        }
        
        public CommandRoleAccessSimpleDTO(Framework.Workflow.Generated.DTO.ICommandRoleAccessSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public CommandRoleAccessSimpleDTO(Framework.Workflow.Generated.DTO.ICommandRoleAccessSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO))]
    public partial class CommandRoleAccessFullDTO : Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO, Framework.Workflow.Generated.DTO.ICommandRoleAccessFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _command;
        
        private Framework.Workflow.Generated.DTO.RoleSimpleDTO _role;
        
        public CommandRoleAccessFullDTO()
        {
        }
        
        public CommandRoleAccessFullDTO(Framework.Workflow.Generated.DTO.ICommandRoleAccessFullDTO source) : 
                this(source, true)
        {
        }
        
        public CommandRoleAccessFullDTO(Framework.Workflow.Generated.DTO.ICommandRoleAccessFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Command = source.Command;
            this.Role = source.Role;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get
            {
                return this._command;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._command, newValue))
                {
                    base.RaisePropertyChanging("Command");
                    this._command = newValue;
                    base.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.RoleSimpleDTO Role
        {
            get
            {
                return this._role;
            }
            set
            {
                Framework.Workflow.Generated.DTO.RoleSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._role, newValue))
                {
                    base.RaisePropertyChanging("Role");
                    this._role = newValue;
                    base.RaisePropertyChanged("Role");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandRoleAccessRichDTO : Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO, Framework.Workflow.Generated.DTO.ICommandRoleAccessRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO>
    {
        
        public CommandRoleAccessRichDTO()
        {
        }
        
        public CommandRoleAccessRichDTO(Framework.Workflow.Generated.DTO.ICommandRoleAccessRichDTO source) : 
                this(source, true)
        {
        }
        
        public CommandRoleAccessRichDTO(Framework.Workflow.Generated.DTO.ICommandRoleAccessRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.CommandRoleAccessStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class CommandRoleAccessStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.RoleIdentityDTO Role;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public CommandRoleAccessStrictDTO()
        {
        }
        
        public CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForCommandRoleAccess(this, source);
        }
        
        public CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.CommandRoleAccessRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForCommandRoleAccess(this, source);
        }
        
        public CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.CommandRoleAccessFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForCommandRoleAccess(this, source);
        }
        
        public CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.CommandRoleAccessSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForCommandRoleAccess(this, source);
        }
        
        private CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForCommandRoleAccess(this, source);
        }
        
        private CommandRoleAccessStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface ICommandRoleAccessSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface ICommandRoleAccessFullDTO : Framework.Workflow.Generated.DTO.ICommandRoleAccessSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.RoleSimpleDTO Role
        {
            get;
            set;
        }
    }
    
    public partial interface ICommandRoleAccessRichDTO : Framework.Workflow.Generated.DTO.ICommandRoleAccessFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateRichDTO))]
    public partial class ConditionStateSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IConditionStateSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO>
    {
        
        private string _autoSetStatePropertyName;
        
        private string _autoSetStatePropertyValue;
        
        private string _description;
        
        private bool _isInitial;
        
        private string _name;
        
        private Framework.Workflow.Generated.DTO.StateType _type;
        
        public ConditionStateSimpleDTO()
        {
        }
        
        public ConditionStateSimpleDTO(Framework.Workflow.Generated.DTO.IConditionStateSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ConditionStateSimpleDTO(Framework.Workflow.Generated.DTO.IConditionStateSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AutoSetStatePropertyName = source.AutoSetStatePropertyName;
            this.AutoSetStatePropertyValue = source.AutoSetStatePropertyValue;
            this.Description = source.Description;
            this.IsInitial = source.IsInitial;
            this.Name = source.Name;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyName, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyName");
                    this._autoSetStatePropertyName = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyValue);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyValue, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyValue");
                    this._autoSetStatePropertyValue = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial
        {
            get
            {
                return this._isInitial;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isInitial, newValue))
                {
                    base.RaisePropertyChanging("IsInitial");
                    this._isInitial = newValue;
                    base.RaisePropertyChanged("IsInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ConditionStateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateRichDTO))]
    public partial class ConditionStateFullDTO : Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO, Framework.Workflow.Generated.DTO.IConditionStateFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _condition;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public ConditionStateFullDTO()
        {
        }
        
        public ConditionStateFullDTO(Framework.Workflow.Generated.DTO.IConditionStateFullDTO source) : 
                this(source, true)
        {
        }
        
        public ConditionStateFullDTO(Framework.Workflow.Generated.DTO.IConditionStateFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Condition = source.Condition;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._condition, newValue))
                {
                    base.RaisePropertyChanging("Condition");
                    this._condition = newValue;
                    base.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ConditionStateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ConditionStateRichDTO : Framework.Workflow.Generated.DTO.ConditionStateFullDTO, Framework.Workflow.Generated.DTO.IConditionStateRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateRichDTO>
    {
        
        private Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO _falseEvent;
        
        private Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO _trueEvent;
        
        public ConditionStateRichDTO()
        {
        }
        
        public ConditionStateRichDTO(Framework.Workflow.Generated.DTO.IConditionStateRichDTO source) : 
                this(source, true)
        {
        }
        
        public ConditionStateRichDTO(Framework.Workflow.Generated.DTO.IConditionStateRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.FalseEvent = source.FalseEvent;
            this.TrueEvent = source.TrueEvent;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO FalseEvent
        {
            get
            {
                return this._falseEvent;
            }
            set
            {
                Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO newValue;
                newValue = value;
                if (!object.Equals(this._falseEvent, newValue))
                {
                    base.RaisePropertyChanging("FalseEvent");
                    this._falseEvent = newValue;
                    base.RaisePropertyChanged("FalseEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO TrueEvent
        {
            get
            {
                return this._trueEvent;
            }
            set
            {
                Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO newValue;
                newValue = value;
                if (!object.Equals(this._trueEvent, newValue))
                {
                    base.RaisePropertyChanging("TrueEvent");
                    this._trueEvent = newValue;
                    base.RaisePropertyChanged("TrueEvent");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ConditionStateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ConditionStateStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Condition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO FalseEvent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO TrueEvent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ConditionStateStrictDTO()
        {
        }
        
        public ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ConditionStateFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForConditionState(this, source);
        }
        
        public ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForConditionState(this, source);
        }
        
        public ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForConditionState(this, source);
        }
        
        public ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForConditionState(this, source);
        }
        
        private ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForConditionState(this, source);
        }
        
        private ConditionStateStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.ConditionStateIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IConditionStateSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string AutoSetStatePropertyName
        {
            get;
            set;
        }
        
        string AutoSetStatePropertyValue
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool IsInitial
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IConditionStateFullDTO : Framework.Workflow.Generated.DTO.IConditionStateSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IConditionStateRichDTO : Framework.Workflow.Generated.DTO.IConditionStateFullDTO
    {
        
        Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO FalseEvent
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO TrueEvent
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO))]
    public partial class ConditionStateEventSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IConditionStateEventSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO>
    {
        
        private string _description;
        
        private bool _isTrue;
        
        private string _name;
        
        public ConditionStateEventSimpleDTO()
        {
        }
        
        public ConditionStateEventSimpleDTO(Framework.Workflow.Generated.DTO.IConditionStateEventSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ConditionStateEventSimpleDTO(Framework.Workflow.Generated.DTO.IConditionStateEventSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.IsTrue = source.IsTrue;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrue
        {
            get
            {
                return this._isTrue;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isTrue, newValue))
                {
                    base.RaisePropertyChanging("IsTrue");
                    this._isTrue = newValue;
                    base.RaisePropertyChanged("IsTrue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO))]
    public partial class ConditionStateEventFullDTO : Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO, Framework.Workflow.Generated.DTO.IConditionStateEventFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public ConditionStateEventFullDTO()
        {
        }
        
        public ConditionStateEventFullDTO(Framework.Workflow.Generated.DTO.IConditionStateEventFullDTO source) : 
                this(source, true)
        {
        }
        
        public ConditionStateEventFullDTO(Framework.Workflow.Generated.DTO.IConditionStateEventFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Owner = source.Owner;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ConditionStateEventRichDTO : Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO, Framework.Workflow.Generated.DTO.IConditionStateEventRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO>
    {
        
        public ConditionStateEventRichDTO()
        {
        }
        
        public ConditionStateEventRichDTO(Framework.Workflow.Generated.DTO.IConditionStateEventRichDTO source) : 
                this(source, true)
        {
        }
        
        public ConditionStateEventRichDTO(Framework.Workflow.Generated.DTO.IConditionStateEventRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ConditionStateEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ConditionStateEventStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ConditionStateEventStrictDTO()
        {
        }
        
        public ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForConditionStateEvent(this, source);
        }
        
        public ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateEventRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForConditionStateEvent(this, source);
        }
        
        public ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateEventFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForConditionStateEvent(this, source);
        }
        
        public ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.ConditionStateEventSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForConditionStateEvent(this, source);
        }
        
        private ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForConditionStateEvent(this, source);
        }
        
        private ConditionStateEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IConditionStateEventSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        bool IsTrue
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IConditionStateEventFullDTO : Framework.Workflow.Generated.DTO.IConditionStateEventSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.ConditionStateSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IConditionStateEventRichDTO : Framework.Workflow.Generated.DTO.IConditionStateEventFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class DomainTypeSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IDomainTypeSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO>
    {
        
        private string _description;
        
        private string _fullTypeName;
        
        private string _name;
        
        private string _nameSpace;
        
        private Framework.Workflow.Generated.DTO.DomainTypeRole _role;
        
        public DomainTypeSimpleDTO()
        {
        }
        
        public DomainTypeSimpleDTO(Framework.Workflow.Generated.DTO.IDomainTypeSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public DomainTypeSimpleDTO(Framework.Workflow.Generated.DTO.IDomainTypeSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.FullTypeName = source.FullTypeName;
            this.Name = source.Name;
            this.NameSpace = source.NameSpace;
            this.Role = source.Role;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullTypeName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._fullTypeName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._fullTypeName, newValue))
                {
                    base.RaisePropertyChanging("FullTypeName");
                    this._fullTypeName = newValue;
                    base.RaisePropertyChanged("FullTypeName");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string NameSpace
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._nameSpace);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._nameSpace, newValue))
                {
                    base.RaisePropertyChanging("NameSpace");
                    this._nameSpace = newValue;
                    base.RaisePropertyChanged("NameSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeRole Role
        {
            get
            {
                return this._role;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeRole newValue;
                newValue = value;
                if (!object.Equals(this._role, newValue))
                {
                    base.RaisePropertyChanging("Role");
                    this._role = newValue;
                    base.RaisePropertyChanged("Role");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    public partial interface IDomainTypeSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string FullTypeName
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string NameSpace
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeRole Role
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class EventSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IEventSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.EventSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.EventIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.EventSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public EventSimpleDTO()
        {
        }
        
        public EventSimpleDTO(Framework.Workflow.Generated.DTO.IEventSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public EventSimpleDTO(Framework.Workflow.Generated.DTO.IEventSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.EventIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.EventIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.EventSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.EventSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.EventSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.EventSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.EventSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.EventSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.EventSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    public partial interface IEventSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateRichDTO))]
    public partial class ParallelStateSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IParallelStateSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO>
    {
        
        private string _autoSetStatePropertyName;
        
        private string _autoSetStatePropertyValue;
        
        private string _description;
        
        private bool _isInitial;
        
        private string _name;
        
        private Framework.Workflow.Generated.DTO.StateType _type;
        
        public ParallelStateSimpleDTO()
        {
        }
        
        public ParallelStateSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AutoSetStatePropertyName = source.AutoSetStatePropertyName;
            this.AutoSetStatePropertyValue = source.AutoSetStatePropertyValue;
            this.Description = source.Description;
            this.IsInitial = source.IsInitial;
            this.Name = source.Name;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyName, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyName");
                    this._autoSetStatePropertyName = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyValue);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyValue, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyValue");
                    this._autoSetStatePropertyValue = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial
        {
            get
            {
                return this._isInitial;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isInitial, newValue))
                {
                    base.RaisePropertyChanging("IsInitial");
                    this._isInitial = newValue;
                    base.RaisePropertyChanged("IsInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ParallelStateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateRichDTO))]
    public partial class ParallelStateFullDTO : Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO, Framework.Workflow.Generated.DTO.IParallelStateFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public ParallelStateFullDTO()
        {
        }
        
        public ParallelStateFullDTO(Framework.Workflow.Generated.DTO.IParallelStateFullDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateFullDTO(Framework.Workflow.Generated.DTO.IParallelStateFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateRichDTO : Framework.Workflow.Generated.DTO.ParallelStateFullDTO, Framework.Workflow.Generated.DTO.IParallelStateRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO> _finalEvents = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO> _startItems = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO>();
        
        public ParallelStateRichDTO()
        {
        }
        
        public ParallelStateRichDTO(Framework.Workflow.Generated.DTO.IParallelStateRichDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateRichDTO(Framework.Workflow.Generated.DTO.IParallelStateRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.FinalEvents, null))
            {
                this.FinalEvents = Framework.Core.EnumerableExtensions.ToObservableCollection(source.FinalEvents, parallelStateFinalEvent => parallelStateFinalEvent.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.StartItems, null))
            {
                this.StartItems = Framework.Core.EnumerableExtensions.ToObservableCollection(source.StartItems, parallelStateStartItem => parallelStateStartItem.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO>.Details
        {
            get
            {
                return this.FinalEvents;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO>.Details
        {
            get
            {
                return this.StartItems;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO> FinalEvents
        {
            get
            {
                return this._finalEvents;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._finalEvents, newValue))
                {
                    base.RaisePropertyChanging("FinalEvents");
                    this._finalEvents = newValue;
                    base.RaisePropertyChanged("FinalEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO> StartItems
        {
            get
            {
                return this._startItems;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._startItems, newValue))
                {
                    base.RaisePropertyChanging("StartItems");
                    this._startItems = newValue;
                    base.RaisePropertyChanged("StartItems");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO> FinalEvents = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO> StartItems = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ParallelStateStrictDTO()
        {
        }
        
        public ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForParallelState(this, source);
        }
        
        public ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForParallelState(this, source);
        }
        
        public ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForParallelState(this, source);
        }
        
        public ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForParallelState(this, source);
        }
        
        private ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForParallelState(this, source);
        }
        
        private ParallelStateStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.ParallelStateIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IParallelStateSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string AutoSetStatePropertyName
        {
            get;
            set;
        }
        
        string AutoSetStatePropertyValue
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool IsInitial
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IParallelStateFullDTO : Framework.Workflow.Generated.DTO.IParallelStateSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IParallelStateRichDTO : Framework.Workflow.Generated.DTO.IParallelStateFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO> FinalEvents
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO> StartItems
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO))]
    public partial class ParallelStateFinalEventSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IParallelStateFinalEventSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private int _orderIndex;
        
        public ParallelStateFinalEventSimpleDTO()
        {
        }
        
        public ParallelStateFinalEventSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateFinalEventSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateFinalEventSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateFinalEventSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.OrderIndex = source.OrderIndex;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex
        {
            get
            {
                return this._orderIndex;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._orderIndex, newValue))
                {
                    base.RaisePropertyChanging("OrderIndex");
                    this._orderIndex = newValue;
                    base.RaisePropertyChanged("OrderIndex");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO))]
    public partial class ParallelStateFinalEventFullDTO : Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO, Framework.Workflow.Generated.DTO.IParallelStateFinalEventFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _condition;
        
        private Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public ParallelStateFinalEventFullDTO()
        {
        }
        
        public ParallelStateFinalEventFullDTO(Framework.Workflow.Generated.DTO.IParallelStateFinalEventFullDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateFinalEventFullDTO(Framework.Workflow.Generated.DTO.IParallelStateFinalEventFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Condition = source.Condition;
            this.Owner = source.Owner;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._condition, newValue))
                {
                    base.RaisePropertyChanging("Condition");
                    this._condition = newValue;
                    base.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateFinalEventRichDTO : Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO, Framework.Workflow.Generated.DTO.IParallelStateFinalEventRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO>
    {
        
        public ParallelStateFinalEventRichDTO()
        {
        }
        
        public ParallelStateFinalEventRichDTO(Framework.Workflow.Generated.DTO.IParallelStateFinalEventRichDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateFinalEventRichDTO(Framework.Workflow.Generated.DTO.IParallelStateFinalEventRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateFinalEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateFinalEventStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Condition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ParallelStateFinalEventStrictDTO()
        {
        }
        
        public ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForParallelStateFinalEvent(this, source);
        }
        
        public ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFinalEventRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForParallelStateFinalEvent(this, source);
        }
        
        public ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFinalEventFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForParallelStateFinalEvent(this, source);
        }
        
        public ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateFinalEventSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForParallelStateFinalEvent(this, source);
        }
        
        private ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForParallelStateFinalEvent(this, source);
        }
        
        private ParallelStateFinalEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IParallelStateFinalEventSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        int OrderIndex
        {
            get;
            set;
        }
    }
    
    public partial interface IParallelStateFinalEventFullDTO : Framework.Workflow.Generated.DTO.IParallelStateFinalEventSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IParallelStateFinalEventRichDTO : Framework.Workflow.Generated.DTO.IParallelStateFinalEventFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO))]
    public partial class ParallelStateStartItemSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IParallelStateStartItemSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO>
    {
        
        public ParallelStateStartItemSimpleDTO()
        {
        }
        
        public ParallelStateStartItemSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateStartItemSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateStartItemSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateStartItemSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO))]
    public partial class ParallelStateStartItemFullDTO : Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO, Framework.Workflow.Generated.DTO.IParallelStateStartItemFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _factory;
        
        private Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO _state;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _subWorkflow;
        
        public ParallelStateStartItemFullDTO()
        {
        }
        
        public ParallelStateStartItemFullDTO(Framework.Workflow.Generated.DTO.IParallelStateStartItemFullDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateStartItemFullDTO(Framework.Workflow.Generated.DTO.IParallelStateStartItemFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Factory = source.Factory;
            this.State = source.State;
            this.SubWorkflow = source.SubWorkflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Factory
        {
            get
            {
                return this._factory;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._factory, newValue))
                {
                    base.RaisePropertyChanging("Factory");
                    this._factory = newValue;
                    base.RaisePropertyChanged("Factory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO State
        {
            get
            {
                return this._state;
            }
            set
            {
                Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._state, newValue))
                {
                    base.RaisePropertyChanging("State");
                    this._state = newValue;
                    base.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO SubWorkflow
        {
            get
            {
                return this._subWorkflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._subWorkflow, newValue))
                {
                    base.RaisePropertyChanging("SubWorkflow");
                    this._subWorkflow = newValue;
                    base.RaisePropertyChanged("SubWorkflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateStartItemRichDTO : Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO, Framework.Workflow.Generated.DTO.IParallelStateStartItemRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO>
    {
        
        public ParallelStateStartItemRichDTO()
        {
        }
        
        public ParallelStateStartItemRichDTO(Framework.Workflow.Generated.DTO.IParallelStateStartItemRichDTO source) : 
                this(source, true)
        {
        }
        
        public ParallelStateStartItemRichDTO(Framework.Workflow.Generated.DTO.IParallelStateStartItemRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateStartItemStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateStartItemStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Factory;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO SubWorkflow;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public ParallelStateStartItemStrictDTO()
        {
        }
        
        public ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForParallelStateStartItem(this, source);
        }
        
        public ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateStartItemRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForParallelStateStartItem(this, source);
        }
        
        public ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateStartItemFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForParallelStateStartItem(this, source);
        }
        
        public ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateStartItemSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForParallelStateStartItem(this, source);
        }
        
        private ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForParallelStateStartItem(this, source);
        }
        
        private ParallelStateStartItemStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IParallelStateStartItemSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IParallelStateStartItemFullDTO : Framework.Workflow.Generated.DTO.IParallelStateStartItemSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Factory
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.ParallelStateSimpleDTO State
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO SubWorkflow
        {
            get;
            set;
        }
    }
    
    public partial interface IParallelStateStartItemRichDTO : Framework.Workflow.Generated.DTO.IParallelStateStartItemFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.RoleFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.RoleRichDTO))]
    public partial class RoleSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IRoleSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.RoleSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.RoleIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.RoleSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private System.Guid _securityOperationId;
        
        public RoleSimpleDTO()
        {
        }
        
        public RoleSimpleDTO(Framework.Workflow.Generated.DTO.IRoleSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public RoleSimpleDTO(Framework.Workflow.Generated.DTO.IRoleSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.SecurityOperationId = source.SecurityOperationId;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.RoleIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.RoleIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute("Security")]
        public System.Guid SecurityOperationId
        {
            get
            {
                return this._securityOperationId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._securityOperationId, newValue))
                {
                    base.RaisePropertyChanging("SecurityOperationId");
                    this._securityOperationId = newValue;
                    base.RaisePropertyChanged("SecurityOperationId");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.RoleSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.RoleSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.RoleSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.RoleSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.RoleSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.RoleSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.RoleSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.RoleStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.RoleStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.RoleRichDTO))]
    public partial class RoleFullDTO : Framework.Workflow.Generated.DTO.RoleSimpleDTO, Framework.Workflow.Generated.DTO.IRoleFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.RoleFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _customSecurityProvider;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public RoleFullDTO()
        {
        }
        
        public RoleFullDTO(Framework.Workflow.Generated.DTO.IRoleFullDTO source) : 
                this(source, true)
        {
        }
        
        public RoleFullDTO(Framework.Workflow.Generated.DTO.IRoleFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CustomSecurityProvider = source.CustomSecurityProvider;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute("Security")]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO CustomSecurityProvider
        {
            get
            {
                return this._customSecurityProvider;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._customSecurityProvider, newValue))
                {
                    base.RaisePropertyChanging("CustomSecurityProvider");
                    this._customSecurityProvider = newValue;
                    base.RaisePropertyChanged("CustomSecurityProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.RoleFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.RoleFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.RoleFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.RoleFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.RoleFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.RoleFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.RoleStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.RoleStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class RoleRichDTO : Framework.Workflow.Generated.DTO.RoleFullDTO, Framework.Workflow.Generated.DTO.IRoleRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.RoleRichDTO>
    {
        
        public RoleRichDTO()
        {
        }
        
        public RoleRichDTO(Framework.Workflow.Generated.DTO.IRoleRichDTO source) : 
                this(source, true)
        {
        }
        
        public RoleRichDTO(Framework.Workflow.Generated.DTO.IRoleRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.RoleRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.RoleRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.RoleRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.RoleRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.RoleStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.RoleStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class RoleStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.RoleIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO CustomSecurityProvider;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SecurityOperationId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public RoleStrictDTO()
        {
        }
        
        public RoleStrictDTO(Framework.Workflow.Generated.DTO.RoleRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.RoleFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForRole(this, source);
        }
        
        public RoleStrictDTO(Framework.Workflow.Generated.DTO.RoleRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RoleStrictDTO(Framework.Workflow.Generated.DTO.RoleFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.RoleSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForRole(this, source);
        }
        
        public RoleStrictDTO(Framework.Workflow.Generated.DTO.RoleFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RoleStrictDTO(Framework.Workflow.Generated.DTO.RoleSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForRole(this, source);
        }
        
        public RoleStrictDTO(Framework.Workflow.Generated.DTO.RoleSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private RoleStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForRole(this, source);
        }
        
        private RoleStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private RoleStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForRole(this, source);
        }
        
        private RoleStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.RoleIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.RoleIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IRoleSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        System.Guid SecurityOperationId
        {
            get;
            set;
        }
    }
    
    public partial interface IRoleFullDTO : Framework.Workflow.Generated.DTO.IRoleSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO CustomSecurityProvider
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IRoleRichDTO : Framework.Workflow.Generated.DTO.IRoleFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO))]
    public partial class StartWorkflowDomainObjectConditionSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>
    {
        
        public StartWorkflowDomainObjectConditionSimpleDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionSimpleDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public StartWorkflowDomainObjectConditionSimpleDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO(this.Id);
            }
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO))]
    public partial class StartWorkflowDomainObjectConditionFullDTO : Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO, Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _condition;
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _factory;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StartWorkflowDomainObjectConditionFullDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionFullDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionFullDTO source) : 
                this(source, true)
        {
        }
        
        public StartWorkflowDomainObjectConditionFullDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Condition = source.Condition;
            this.Factory = source.Factory;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._condition, newValue))
                {
                    base.RaisePropertyChanging("Condition");
                    this._condition = newValue;
                    base.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Factory
        {
            get
            {
                return this._factory;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._factory, newValue))
                {
                    base.RaisePropertyChanging("Factory");
                    this._factory = newValue;
                    base.RaisePropertyChanged("Factory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowDomainObjectConditionRichDTO : Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO, Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>
    {
        
        public StartWorkflowDomainObjectConditionRichDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionRichDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRichDTO source) : 
                this(source, true)
        {
        }
        
        public StartWorkflowDomainObjectConditionRichDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowDomainObjectConditionStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Condition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Factory;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public StartWorkflowDomainObjectConditionStrictDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStartWorkflowDomainObjectCondition(this, source);
        }
        
        public StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStartWorkflowDomainObjectCondition(this, source);
        }
        
        public StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStartWorkflowDomainObjectCondition(this, source);
        }
        
        public StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForStartWorkflowDomainObjectCondition(this, source);
        }
        
        private StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForStartWorkflowDomainObjectCondition(this, source);
        }
        
        private StartWorkflowDomainObjectConditionStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IStartWorkflowDomainObjectConditionSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IStartWorkflowDomainObjectConditionFullDTO : Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Factory
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStartWorkflowDomainObjectConditionRichDTO : Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateRichDTO))]
    public partial class StateSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IStateSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.StateIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.StateSimpleDTO>
    {
        
        private string _autoSetStatePropertyName;
        
        private string _autoSetStatePropertyValue;
        
        private string _description;
        
        private bool _isFinal;
        
        private bool _isInitial;
        
        private string _name;
        
        private Framework.Workflow.Generated.DTO.StateType _type;
        
        public StateSimpleDTO()
        {
        }
        
        public StateSimpleDTO(Framework.Workflow.Generated.DTO.IStateSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public StateSimpleDTO(Framework.Workflow.Generated.DTO.IStateSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AutoSetStatePropertyName = source.AutoSetStatePropertyName;
            this.AutoSetStatePropertyValue = source.AutoSetStatePropertyValue;
            this.Description = source.Description;
            this.IsFinal = source.IsFinal;
            this.IsInitial = source.IsInitial;
            this.Name = source.Name;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyName, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyName");
                    this._autoSetStatePropertyName = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyValue);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyValue, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyValue");
                    this._autoSetStatePropertyValue = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.StateIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinal
        {
            get
            {
                return this._isFinal;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isFinal, newValue))
                {
                    base.RaisePropertyChanging("IsFinal");
                    this._isFinal = newValue;
                    base.RaisePropertyChanged("IsFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial
        {
            get
            {
                return this._isInitial;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isInitial, newValue))
                {
                    base.RaisePropertyChanging("IsInitial");
                    this._isInitial = newValue;
                    base.RaisePropertyChanged("IsInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.StateSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.StateSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateRichDTO))]
    public partial class StateFullDTO : Framework.Workflow.Generated.DTO.StateSimpleDTO, Framework.Workflow.Generated.DTO.IStateFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StateFullDTO()
        {
        }
        
        public StateFullDTO(Framework.Workflow.Generated.DTO.IStateFullDTO source) : 
                this(source, true)
        {
        }
        
        public StateFullDTO(Framework.Workflow.Generated.DTO.IStateFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateRichDTO : Framework.Workflow.Generated.DTO.StateFullDTO, Framework.Workflow.Generated.DTO.IStateRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TaskRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO> _domainObjectEvents = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskRichDTO> _tasks = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO> _timeoutEvents = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO>();
        
        public StateRichDTO()
        {
        }
        
        public StateRichDTO(Framework.Workflow.Generated.DTO.IStateRichDTO source) : 
                this(source, true)
        {
        }
        
        public StateRichDTO(Framework.Workflow.Generated.DTO.IStateRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.DomainObjectEvents, null))
            {
                this.DomainObjectEvents = Framework.Core.EnumerableExtensions.ToObservableCollection(source.DomainObjectEvents, stateDomainObjectEvent => stateDomainObjectEvent.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Tasks, null))
            {
                this.Tasks = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Tasks, task => task.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.TimeoutEvents, null))
            {
                this.TimeoutEvents = Framework.Core.EnumerableExtensions.ToObservableCollection(source.TimeoutEvents, stateTimeoutEvent => stateTimeoutEvent.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO>.Details
        {
            get
            {
                return this.DomainObjectEvents;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.TaskRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TaskRichDTO>.Details
        {
            get
            {
                return this.Tasks;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO>.Details
        {
            get
            {
                return this.TimeoutEvents;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO> DomainObjectEvents
        {
            get
            {
                return this._domainObjectEvents;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectEvents, newValue))
                {
                    base.RaisePropertyChanging("DomainObjectEvents");
                    this._domainObjectEvents = newValue;
                    base.RaisePropertyChanged("DomainObjectEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskRichDTO> Tasks
        {
            get
            {
                return this._tasks;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._tasks, newValue))
                {
                    base.RaisePropertyChanging("Tasks");
                    this._tasks = newValue;
                    base.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO> TimeoutEvents
        {
            get
            {
                return this._timeoutEvents;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._timeoutEvents, newValue))
                {
                    base.RaisePropertyChanging("TimeoutEvents");
                    this._timeoutEvents = newValue;
                    base.RaisePropertyChanged("TimeoutEvents");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.StateIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO> DomainObjectEvents = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinal;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TaskStrictDTO> Tasks = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TaskStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO> TimeoutEvents = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public StateStrictDTO()
        {
        }
        
        public StateStrictDTO(Framework.Workflow.Generated.DTO.StateRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForState(this, source);
        }
        
        public StateStrictDTO(Framework.Workflow.Generated.DTO.StateRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateStrictDTO(Framework.Workflow.Generated.DTO.StateFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForState(this, source);
        }
        
        public StateStrictDTO(Framework.Workflow.Generated.DTO.StateFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateStrictDTO(Framework.Workflow.Generated.DTO.StateSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForState(this, source);
        }
        
        public StateStrictDTO(Framework.Workflow.Generated.DTO.StateSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StateStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForState(this, source);
        }
        
        private StateStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StateStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForState(this, source);
        }
        
        private StateStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.StateIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IStateSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string AutoSetStatePropertyName
        {
            get;
            set;
        }
        
        string AutoSetStatePropertyValue
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool IsFinal
        {
            get;
            set;
        }
        
        bool IsInitial
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IStateFullDTO : Framework.Workflow.Generated.DTO.IStateSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateRichDTO : Framework.Workflow.Generated.DTO.IStateFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO> DomainObjectEvents
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskRichDTO> Tasks
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO> TimeoutEvents
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateBaseFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateBaseRichDTO))]
    public partial class StateBaseSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IStateBaseSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.StateBaseIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.StateBaseSimpleDTO>
    {
        
        private string _autoSetStatePropertyName;
        
        private string _autoSetStatePropertyValue;
        
        private string _description;
        
        private bool _isInitial;
        
        private string _name;
        
        private Framework.Workflow.Generated.DTO.StateType _type;
        
        public StateBaseSimpleDTO()
        {
        }
        
        public StateBaseSimpleDTO(Framework.Workflow.Generated.DTO.IStateBaseSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public StateBaseSimpleDTO(Framework.Workflow.Generated.DTO.IStateBaseSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AutoSetStatePropertyName = source.AutoSetStatePropertyName;
            this.AutoSetStatePropertyValue = source.AutoSetStatePropertyValue;
            this.Description = source.Description;
            this.IsInitial = source.IsInitial;
            this.Name = source.Name;
            this.Type = source.Type;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyName
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyName);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyName, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyName");
                    this._autoSetStatePropertyName = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoSetStatePropertyValue
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._autoSetStatePropertyValue);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._autoSetStatePropertyValue, newValue))
                {
                    base.RaisePropertyChanging("AutoSetStatePropertyValue");
                    this._autoSetStatePropertyValue = newValue;
                    base.RaisePropertyChanged("AutoSetStatePropertyValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateBaseIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.StateBaseIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial
        {
            get
            {
                return this._isInitial;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isInitial, newValue))
                {
                    base.RaisePropertyChanging("IsInitial");
                    this._isInitial = newValue;
                    base.RaisePropertyChanged("IsInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateType newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateBaseSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.StateBaseSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateBaseRichDTO))]
    public partial class StateBaseFullDTO : Framework.Workflow.Generated.DTO.StateBaseSimpleDTO, Framework.Workflow.Generated.DTO.IStateBaseFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateBaseFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StateBaseFullDTO()
        {
        }
        
        public StateBaseFullDTO(Framework.Workflow.Generated.DTO.IStateBaseFullDTO source) : 
                this(source, true)
        {
        }
        
        public StateBaseFullDTO(Framework.Workflow.Generated.DTO.IStateBaseFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateBaseFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateBaseFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateBaseRichDTO : Framework.Workflow.Generated.DTO.StateBaseFullDTO, Framework.Workflow.Generated.DTO.IStateBaseRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateBaseRichDTO>
    {
        
        public StateBaseRichDTO()
        {
        }
        
        public StateBaseRichDTO(Framework.Workflow.Generated.DTO.IStateBaseRichDTO source) : 
                this(source, true)
        {
        }
        
        public StateBaseRichDTO(Framework.Workflow.Generated.DTO.IStateBaseRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.StateBaseRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRichDTO(this);
        }
    }
    
    public partial interface IStateBaseSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string AutoSetStatePropertyName
        {
            get;
            set;
        }
        
        string AutoSetStatePropertyValue
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool IsInitial
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateType Type
        {
            get;
            set;
        }
    }
    
    public partial interface IStateBaseFullDTO : Framework.Workflow.Generated.DTO.IStateBaseSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateBaseRichDTO : Framework.Workflow.Generated.DTO.IStateBaseFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO))]
    public partial class StateDomainObjectEventSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IStateDomainObjectEventSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public StateDomainObjectEventSimpleDTO()
        {
        }
        
        public StateDomainObjectEventSimpleDTO(Framework.Workflow.Generated.DTO.IStateDomainObjectEventSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public StateDomainObjectEventSimpleDTO(Framework.Workflow.Generated.DTO.IStateDomainObjectEventSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO))]
    public partial class StateDomainObjectEventFullDTO : Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO, Framework.Workflow.Generated.DTO.IStateDomainObjectEventFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _condition;
        
        private Framework.Workflow.Generated.DTO.StateSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StateDomainObjectEventFullDTO()
        {
        }
        
        public StateDomainObjectEventFullDTO(Framework.Workflow.Generated.DTO.IStateDomainObjectEventFullDTO source) : 
                this(source, true)
        {
        }
        
        public StateDomainObjectEventFullDTO(Framework.Workflow.Generated.DTO.IStateDomainObjectEventFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Condition = source.Condition;
            this.Owner = source.Owner;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._condition, newValue))
                {
                    base.RaisePropertyChanging("Condition");
                    this._condition = newValue;
                    base.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateDomainObjectEventRichDTO : Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO, Framework.Workflow.Generated.DTO.IStateDomainObjectEventRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO>
    {
        
        public StateDomainObjectEventRichDTO()
        {
        }
        
        public StateDomainObjectEventRichDTO(Framework.Workflow.Generated.DTO.IStateDomainObjectEventRichDTO source) : 
                this(source, true)
        {
        }
        
        public StateDomainObjectEventRichDTO(Framework.Workflow.Generated.DTO.IStateDomainObjectEventRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateDomainObjectEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateDomainObjectEventStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Condition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public StateDomainObjectEventStrictDTO()
        {
        }
        
        public StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStateDomainObjectEvent(this, source);
        }
        
        public StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.StateDomainObjectEventRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStateDomainObjectEvent(this, source);
        }
        
        public StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.StateDomainObjectEventFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStateDomainObjectEvent(this, source);
        }
        
        public StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.StateDomainObjectEventSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForStateDomainObjectEvent(this, source);
        }
        
        private StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForStateDomainObjectEvent(this, source);
        }
        
        private StateDomainObjectEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IStateDomainObjectEventSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IStateDomainObjectEventFullDTO : Framework.Workflow.Generated.DTO.IStateDomainObjectEventSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateDomainObjectEventRichDTO : Framework.Workflow.Generated.DTO.IStateDomainObjectEventFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO))]
    public partial class StateTimeoutEventSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IStateTimeoutEventSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public StateTimeoutEventSimpleDTO()
        {
        }
        
        public StateTimeoutEventSimpleDTO(Framework.Workflow.Generated.DTO.IStateTimeoutEventSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public StateTimeoutEventSimpleDTO(Framework.Workflow.Generated.DTO.IStateTimeoutEventSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO))]
    public partial class StateTimeoutEventFullDTO : Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO, Framework.Workflow.Generated.DTO.IStateTimeoutEventFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _condition;
        
        private Framework.Workflow.Generated.DTO.StateSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StateTimeoutEventFullDTO()
        {
        }
        
        public StateTimeoutEventFullDTO(Framework.Workflow.Generated.DTO.IStateTimeoutEventFullDTO source) : 
                this(source, true)
        {
        }
        
        public StateTimeoutEventFullDTO(Framework.Workflow.Generated.DTO.IStateTimeoutEventFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Condition = source.Condition;
            this.Owner = source.Owner;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._condition, newValue))
                {
                    base.RaisePropertyChanging("Condition");
                    this._condition = newValue;
                    base.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateTimeoutEventRichDTO : Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO, Framework.Workflow.Generated.DTO.IStateTimeoutEventRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO>
    {
        
        public StateTimeoutEventRichDTO()
        {
        }
        
        public StateTimeoutEventRichDTO(Framework.Workflow.Generated.DTO.IStateTimeoutEventRichDTO source) : 
                this(source, true)
        {
        }
        
        public StateTimeoutEventRichDTO(Framework.Workflow.Generated.DTO.IStateTimeoutEventRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateTimeoutEventStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateTimeoutEventStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Condition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public StateTimeoutEventStrictDTO()
        {
        }
        
        public StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStateTimeoutEvent(this, source);
        }
        
        public StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.StateTimeoutEventRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStateTimeoutEvent(this, source);
        }
        
        public StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.StateTimeoutEventFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStateTimeoutEvent(this, source);
        }
        
        public StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.StateTimeoutEventSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForStateTimeoutEvent(this, source);
        }
        
        private StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForStateTimeoutEvent(this, source);
        }
        
        private StateTimeoutEventStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IStateTimeoutEventSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IStateTimeoutEventFullDTO : Framework.Workflow.Generated.DTO.IStateTimeoutEventSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Condition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateTimeoutEventRichDTO : Framework.Workflow.Generated.DTO.IStateTimeoutEventFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TargetSystemSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITargetSystemSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO>
    {
        
        private string _description;
        
        private bool _isBase;
        
        private bool _isMain;
        
        private string _name;
        
        public TargetSystemSimpleDTO()
        {
        }
        
        public TargetSystemSimpleDTO(Framework.Workflow.Generated.DTO.ITargetSystemSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TargetSystemSimpleDTO(Framework.Workflow.Generated.DTO.ITargetSystemSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.IsBase = source.IsBase;
            this.IsMain = source.IsMain;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBase
        {
            get
            {
                return this._isBase;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isBase, newValue))
                {
                    base.RaisePropertyChanging("IsBase");
                    this._isBase = newValue;
                    base.RaisePropertyChanged("IsBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isMain, newValue))
                {
                    base.RaisePropertyChanging("IsMain");
                    this._isMain = newValue;
                    base.RaisePropertyChanged("IsMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    public partial interface ITargetSystemSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        bool IsBase
        {
            get;
            set;
        }
        
        bool IsMain
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskRichDTO))]
    public partial class TaskSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITaskSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TaskIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.TaskSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public TaskSimpleDTO()
        {
        }
        
        public TaskSimpleDTO(Framework.Workflow.Generated.DTO.ITaskSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TaskSimpleDTO(Framework.Workflow.Generated.DTO.ITaskSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TaskIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TaskSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.TaskSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TaskSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TaskStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskRichDTO))]
    public partial class TaskFullDTO : Framework.Workflow.Generated.DTO.TaskSimpleDTO, Framework.Workflow.Generated.DTO.ITaskFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.StateSimpleDTO _state;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public TaskFullDTO()
        {
        }
        
        public TaskFullDTO(Framework.Workflow.Generated.DTO.ITaskFullDTO source) : 
                this(source, true)
        {
        }
        
        public TaskFullDTO(Framework.Workflow.Generated.DTO.ITaskFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.State = source.State;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateSimpleDTO State
        {
            get
            {
                return this._state;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._state, newValue))
                {
                    base.RaisePropertyChanging("State");
                    this._state = newValue;
                    base.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TaskFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskRichDTO : Framework.Workflow.Generated.DTO.TaskFullDTO, Framework.Workflow.Generated.DTO.ITaskRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRichDTO> _commands = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO> _metadatas = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO>();
        
        public TaskRichDTO()
        {
        }
        
        public TaskRichDTO(Framework.Workflow.Generated.DTO.ITaskRichDTO source) : 
                this(source, true)
        {
        }
        
        public TaskRichDTO(Framework.Workflow.Generated.DTO.ITaskRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Commands, null))
            {
                this.Commands = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Commands, command => command.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Metadatas, null))
            {
                this.Metadatas = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Metadatas, taskMetadata => taskMetadata.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRichDTO> Commands
        {
            get
            {
                return this._commands;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._commands, newValue))
                {
                    base.RaisePropertyChanging("Commands");
                    this._commands = newValue;
                    base.RaisePropertyChanged("Commands");
                }
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.CommandRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.CommandRichDTO>.Details
        {
            get
            {
                return this.Commands;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO>.Details
        {
            get
            {
                return this.Metadatas;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO> Metadatas
        {
            get
            {
                return this._metadatas;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._metadatas, newValue))
                {
                    base.RaisePropertyChanging("Metadatas");
                    this._metadatas = newValue;
                    base.RaisePropertyChanged("Metadatas");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TaskRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TaskIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandStrictDTO> Commands = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.CommandStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO> Metadatas = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TaskStrictDTO()
        {
        }
        
        public TaskStrictDTO(Framework.Workflow.Generated.DTO.TaskRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTask(this, source);
        }
        
        public TaskStrictDTO(Framework.Workflow.Generated.DTO.TaskRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskStrictDTO(Framework.Workflow.Generated.DTO.TaskFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTask(this, source);
        }
        
        public TaskStrictDTO(Framework.Workflow.Generated.DTO.TaskFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskStrictDTO(Framework.Workflow.Generated.DTO.TaskSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTask(this, source);
        }
        
        public TaskStrictDTO(Framework.Workflow.Generated.DTO.TaskSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TaskStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTask(this, source);
        }
        
        private TaskStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TaskStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTask(this, source);
        }
        
        private TaskStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TaskIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ITaskSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskFullDTO : Framework.Workflow.Generated.DTO.ITaskSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.StateSimpleDTO State
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskRichDTO : Framework.Workflow.Generated.DTO.ITaskFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.CommandRichDTO> Commands
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO> Metadatas
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskMetadataFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskMetadataRichDTO))]
    public partial class TaskMetadataSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITaskMetadataSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private string _value;
        
        public TaskMetadataSimpleDTO()
        {
        }
        
        public TaskMetadataSimpleDTO(Framework.Workflow.Generated.DTO.ITaskMetadataSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TaskMetadataSimpleDTO(Framework.Workflow.Generated.DTO.ITaskMetadataSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskMetadataRichDTO))]
    public partial class TaskMetadataFullDTO : Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO, Framework.Workflow.Generated.DTO.ITaskMetadataFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskMetadataFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.TaskSimpleDTO _task;
        
        public TaskMetadataFullDTO()
        {
        }
        
        public TaskMetadataFullDTO(Framework.Workflow.Generated.DTO.ITaskMetadataFullDTO source) : 
                this(source, true)
        {
        }
        
        public TaskMetadataFullDTO(Framework.Workflow.Generated.DTO.ITaskMetadataFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Task = source.Task;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TaskSimpleDTO Task
        {
            get
            {
                return this._task;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TaskSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._task, newValue))
                {
                    base.RaisePropertyChanging("Task");
                    this._task = newValue;
                    base.RaisePropertyChanged("Task");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskMetadataFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskMetadataFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskMetadataFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskMetadataRichDTO : Framework.Workflow.Generated.DTO.TaskMetadataFullDTO, Framework.Workflow.Generated.DTO.ITaskMetadataRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskMetadataRichDTO>
    {
        
        public TaskMetadataRichDTO()
        {
        }
        
        public TaskMetadataRichDTO(Framework.Workflow.Generated.DTO.ITaskMetadataRichDTO source) : 
                this(source, true)
        {
        }
        
        public TaskMetadataRichDTO(Framework.Workflow.Generated.DTO.ITaskMetadataRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.TaskMetadataRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskMetadataRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskMetadataRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskMetadataStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskMetadataStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TaskMetadataStrictDTO()
        {
        }
        
        public TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.TaskMetadataRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskMetadataFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTaskMetadata(this, source);
        }
        
        public TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.TaskMetadataRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.TaskMetadataFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTaskMetadata(this, source);
        }
        
        public TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.TaskMetadataFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTaskMetadata(this, source);
        }
        
        public TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.TaskMetadataSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTaskMetadata(this, source);
        }
        
        private TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTaskMetadata(this, source);
        }
        
        private TaskMetadataStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface ITaskMetadataSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskMetadataFullDTO : Framework.Workflow.Generated.DTO.ITaskMetadataSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.TaskSimpleDTO Task
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskMetadataRichDTO : Framework.Workflow.Generated.DTO.ITaskMetadataFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionRichDTO))]
    public partial class TransitionSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITransitionSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.TransitionSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public TransitionSimpleDTO()
        {
        }
        
        public TransitionSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TransitionIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TransitionSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.TransitionSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TransitionSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TransitionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionRichDTO))]
    public partial class TransitionFullDTO : Framework.Workflow.Generated.DTO.TransitionSimpleDTO, Framework.Workflow.Generated.DTO.ITransitionFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.StateBaseSimpleDTO _from;
        
        private Framework.Workflow.Generated.DTO.StateBaseSimpleDTO _to;
        
        private Framework.Workflow.Generated.DTO.EventSimpleDTO _triggerEvent;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public TransitionFullDTO()
        {
        }
        
        public TransitionFullDTO(Framework.Workflow.Generated.DTO.ITransitionFullDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionFullDTO(Framework.Workflow.Generated.DTO.ITransitionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.From = source.From;
            this.To = source.To;
            this.TriggerEvent = source.TriggerEvent;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO From
        {
            get
            {
                return this._from;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateBaseSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._from, newValue))
                {
                    base.RaisePropertyChanging("From");
                    this._from = newValue;
                    base.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO To
        {
            get
            {
                return this._to;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateBaseSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._to, newValue))
                {
                    base.RaisePropertyChanging("To");
                    this._to = newValue;
                    base.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute("Event")]
        public Framework.Workflow.Generated.DTO.EventSimpleDTO TriggerEvent
        {
            get
            {
                return this._triggerEvent;
            }
            set
            {
                Framework.Workflow.Generated.DTO.EventSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._triggerEvent, newValue))
                {
                    base.RaisePropertyChanging("TriggerEvent");
                    this._triggerEvent = newValue;
                    base.RaisePropertyChanged("TriggerEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TransitionFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TransitionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionRichDTO : Framework.Workflow.Generated.DTO.TransitionFullDTO, Framework.Workflow.Generated.DTO.ITransitionRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TransitionActionRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionActionRichDTO> _postActions = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionActionRichDTO>();
        
        public TransitionRichDTO()
        {
        }
        
        public TransitionRichDTO(Framework.Workflow.Generated.DTO.ITransitionRichDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionRichDTO(Framework.Workflow.Generated.DTO.ITransitionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.PostActions, null))
            {
                this.PostActions = Framework.Core.EnumerableExtensions.ToObservableCollection(source.PostActions, transitionAction => transitionAction.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.TransitionActionRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TransitionActionRichDTO>.Details
        {
            get
            {
                return this.PostActions;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionActionRichDTO> PostActions
        {
            get
            {
                return this._postActions;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionActionRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._postActions, newValue))
                {
                    base.RaisePropertyChanging("PostActions");
                    this._postActions = newValue;
                    base.RaisePropertyChanged("PostActions");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TransitionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TransitionIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TransitionActionStrictDTO> PostActions = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TransitionActionStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateBaseIdentityDTO To;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.EventIdentityDTO TriggerEvent;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TransitionStrictDTO()
        {
        }
        
        public TransitionStrictDTO(Framework.Workflow.Generated.DTO.TransitionRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TransitionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTransition(this, source);
        }
        
        public TransitionStrictDTO(Framework.Workflow.Generated.DTO.TransitionRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TransitionStrictDTO(Framework.Workflow.Generated.DTO.TransitionFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TransitionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTransition(this, source);
        }
        
        public TransitionStrictDTO(Framework.Workflow.Generated.DTO.TransitionFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TransitionStrictDTO(Framework.Workflow.Generated.DTO.TransitionSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTransition(this, source);
        }
        
        public TransitionStrictDTO(Framework.Workflow.Generated.DTO.TransitionSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TransitionStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTransition(this, source);
        }
        
        private TransitionStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TransitionStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTransition(this, source);
        }
        
        private TransitionStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TransitionIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ITransitionSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface ITransitionFullDTO : Framework.Workflow.Generated.DTO.ITransitionSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.StateBaseSimpleDTO From
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateBaseSimpleDTO To
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.EventSimpleDTO TriggerEvent
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ITransitionRichDTO : Framework.Workflow.Generated.DTO.ITransitionFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionActionRichDTO> PostActions
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionActionFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionActionRichDTO))]
    public partial class TransitionActionSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITransitionActionSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO>
    {
        
        private int _orderIndex;
        
        public TransitionActionSimpleDTO()
        {
        }
        
        public TransitionActionSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionActionSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionActionSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionActionSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.OrderIndex = source.OrderIndex;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex
        {
            get
            {
                return this._orderIndex;
            }
            set
            {
                int newValue;
                newValue = value;
                if (!object.Equals(this._orderIndex, newValue))
                {
                    base.RaisePropertyChanging("OrderIndex");
                    this._orderIndex = newValue;
                    base.RaisePropertyChanged("OrderIndex");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TransitionActionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionActionRichDTO))]
    public partial class TransitionActionFullDTO : Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO, Framework.Workflow.Generated.DTO.ITransitionActionFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionActionFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _action;
        
        private Framework.Workflow.Generated.DTO.TransitionSimpleDTO _transition;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public TransitionActionFullDTO()
        {
        }
        
        public TransitionActionFullDTO(Framework.Workflow.Generated.DTO.ITransitionActionFullDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionActionFullDTO(Framework.Workflow.Generated.DTO.ITransitionActionFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Action = source.Action;
            this.Transition = source.Transition;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Action
        {
            get
            {
                return this._action;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._action, newValue))
                {
                    base.RaisePropertyChanging("Action");
                    this._action = newValue;
                    base.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TransitionSimpleDTO Transition
        {
            get
            {
                return this._transition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TransitionSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._transition, newValue))
                {
                    base.RaisePropertyChanging("Transition");
                    this._transition = newValue;
                    base.RaisePropertyChanged("Transition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionActionFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionActionFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionActionFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TransitionActionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionActionRichDTO : Framework.Workflow.Generated.DTO.TransitionActionFullDTO, Framework.Workflow.Generated.DTO.ITransitionActionRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionActionRichDTO>
    {
        
        public TransitionActionRichDTO()
        {
        }
        
        public TransitionActionRichDTO(Framework.Workflow.Generated.DTO.ITransitionActionRichDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionActionRichDTO(Framework.Workflow.Generated.DTO.ITransitionActionRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.TransitionActionRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionActionRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionActionRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TransitionActionStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionActionStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionActionStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Action;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TransitionActionStrictDTO()
        {
        }
        
        public TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.TransitionActionRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TransitionActionFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTransitionAction(this, source);
        }
        
        public TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.TransitionActionRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.TransitionActionFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTransitionAction(this, source);
        }
        
        public TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.TransitionActionFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTransitionAction(this, source);
        }
        
        public TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.TransitionActionSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTransitionAction(this, source);
        }
        
        private TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTransitionAction(this, source);
        }
        
        private TransitionActionStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface ITransitionActionSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        int OrderIndex
        {
            get;
            set;
        }
    }
    
    public partial interface ITransitionActionFullDTO : Framework.Workflow.Generated.DTO.ITransitionActionSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Action
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.TransitionSimpleDTO Transition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ITransitionActionRichDTO : Framework.Workflow.Generated.DTO.ITransitionActionFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowRichDTO))]
    public partial class WorkflowSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.WorkflowSimpleDTO>
    {
        
        private bool _autoRemoveWithDomainObject;
        
        private string _description;
        
        private bool _hasAttachments;
        
        private bool _isValid;
        
        private string _name;
        
        private string _validationError;
        
        public WorkflowSimpleDTO()
        {
        }
        
        public WorkflowSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AutoRemoveWithDomainObject = source.AutoRemoveWithDomainObject;
            this.Description = source.Description;
            this.HasAttachments = source.HasAttachments;
            this.IsValid = source.IsValid;
            this.Name = source.Name;
            this.ValidationError = source.ValidationError;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoRemoveWithDomainObject
        {
            get
            {
                return this._autoRemoveWithDomainObject;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._autoRemoveWithDomainObject, newValue))
                {
                    base.RaisePropertyChanging("AutoRemoveWithDomainObject");
                    this._autoRemoveWithDomainObject = newValue;
                    base.RaisePropertyChanged("AutoRemoveWithDomainObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAttachments
        {
            get
            {
                return this._hasAttachments;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._hasAttachments, newValue))
                {
                    base.RaisePropertyChanging("HasAttachments");
                    this._hasAttachments = newValue;
                    base.RaisePropertyChanged("HasAttachments");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid
        {
            get
            {
                return this._isValid;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isValid, newValue))
                {
                    base.RaisePropertyChanging("IsValid");
                    this._isValid = newValue;
                    base.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string ValidationError
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._validationError);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._validationError, newValue))
                {
                    base.RaisePropertyChanging("ValidationError");
                    this._validationError = newValue;
                    base.RaisePropertyChanged("ValidationError");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.WorkflowSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowRichDTO))]
    public partial class WorkflowFullDTO : Framework.Workflow.Generated.DTO.WorkflowSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _activeCondition;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        public WorkflowFullDTO()
        {
        }
        
        public WorkflowFullDTO(Framework.Workflow.Generated.DTO.IWorkflowFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowFullDTO(Framework.Workflow.Generated.DTO.IWorkflowFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.ActiveCondition = source.ActiveCondition;
            this.DomainType = source.DomainType;
            this.Owner = source.Owner;
            this.TargetSystem = source.TargetSystem;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO ActiveCondition
        {
            get
            {
                return this._activeCondition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._activeCondition, newValue))
                {
                    base.RaisePropertyChanging("ActiveCondition");
                    this._activeCondition = newValue;
                    base.RaisePropertyChanged("ActiveCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._targetSystem, newValue))
                {
                    base.RaisePropertyChanging("TargetSystem");
                    this._targetSystem = newValue;
                    base.RaisePropertyChanged("TargetSystem");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowRichDTO : Framework.Workflow.Generated.DTO.WorkflowFullDTO, Framework.Workflow.Generated.DTO.IWorkflowRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ConditionStateRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ParallelStateRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.RoleRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TransitionRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateRichDTO> _conditionStates = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> _lambdas = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO> _metadatas = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateRichDTO> _parallelStates = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO> _roles = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> _sources = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> _startConditions = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateRichDTO> _states = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowRichDTO> _subWorkflows = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionRichDTO> _transitions = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionRichDTO>();
        
        public WorkflowRichDTO()
        {
        }
        
        public WorkflowRichDTO(Framework.Workflow.Generated.DTO.IWorkflowRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowRichDTO(Framework.Workflow.Generated.DTO.IWorkflowRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.ConditionStates, null))
            {
                this.ConditionStates = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ConditionStates, conditionState => conditionState.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Lambdas, null))
            {
                this.Lambdas = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Lambdas, workflowLambda => workflowLambda.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Metadatas, null))
            {
                this.Metadatas = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Metadatas, workflowMetadata => workflowMetadata.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.ParallelStates, null))
            {
                this.ParallelStates = Framework.Core.EnumerableExtensions.ToObservableCollection(source.ParallelStates, parallelState => parallelState.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, workflowParameter => workflowParameter.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Roles, null))
            {
                this.Roles = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Roles, role => role.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Sources, null))
            {
                this.Sources = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Sources, workflowSource => workflowSource.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.StartConditions, null))
            {
                this.StartConditions = Framework.Core.EnumerableExtensions.ToObservableCollection(source.StartConditions, startWorkflowDomainObjectCondition => startWorkflowDomainObjectCondition.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.States, null))
            {
                this.States = Framework.Core.EnumerableExtensions.ToObservableCollection(source.States, state => state.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.SubWorkflows, null))
            {
                this.SubWorkflows = Framework.Core.EnumerableExtensions.ToObservableCollection(source.SubWorkflows, workflow => workflow.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Transitions, null))
            {
                this.Transitions = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Transitions, transition => transition.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateRichDTO> ConditionStates
        {
            get
            {
                return this._conditionStates;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._conditionStates, newValue))
                {
                    base.RaisePropertyChanging("ConditionStates");
                    this._conditionStates = newValue;
                    base.RaisePropertyChanged("ConditionStates");
                }
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.ConditionStateRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ConditionStateRichDTO>.Details
        {
            get
            {
                return this.ConditionStates;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>.Details
        {
            get
            {
                return this.Lambdas;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO>.Details
        {
            get
            {
                return this.Metadatas;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.ParallelStateRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ParallelStateRichDTO>.Details
        {
            get
            {
                return this.ParallelStates;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO>.Details
        {
            get
            {
                return this.Parameters;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.RoleRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.RoleRichDTO>.Details
        {
            get
            {
                return this.Roles;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>.Details
        {
            get
            {
                return this.Sources;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO>.Details
        {
            get
            {
                return this.StartConditions;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.StateRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateRichDTO>.Details
        {
            get
            {
                return this.States;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowRichDTO>.Details
        {
            get
            {
                return this.SubWorkflows;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.TransitionRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TransitionRichDTO>.Details
        {
            get
            {
                return this.Transitions;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> Lambdas
        {
            get
            {
                return this._lambdas;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._lambdas, newValue))
                {
                    base.RaisePropertyChanging("Lambdas");
                    this._lambdas = newValue;
                    base.RaisePropertyChanged("Lambdas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO> Metadatas
        {
            get
            {
                return this._metadatas;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._metadatas, newValue))
                {
                    base.RaisePropertyChanging("Metadatas");
                    this._metadatas = newValue;
                    base.RaisePropertyChanged("Metadatas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateRichDTO> ParallelStates
        {
            get
            {
                return this._parallelStates;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parallelStates, newValue))
                {
                    base.RaisePropertyChanging("ParallelStates");
                    this._parallelStates = newValue;
                    base.RaisePropertyChanged("ParallelStates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        [Framework.Restriction.UniqueGroupAttribute("Security")]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO> Roles
        {
            get
            {
                return this._roles;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._roles, newValue))
                {
                    base.RaisePropertyChanging("Roles");
                    this._roles = newValue;
                    base.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> Sources
        {
            get
            {
                return this._sources;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._sources, newValue))
                {
                    base.RaisePropertyChanging("Sources");
                    this._sources = newValue;
                    base.RaisePropertyChanged("Sources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> StartConditions
        {
            get
            {
                return this._startConditions;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._startConditions, newValue))
                {
                    base.RaisePropertyChanging("StartConditions");
                    this._startConditions = newValue;
                    base.RaisePropertyChanged("StartConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateRichDTO> States
        {
            get
            {
                return this._states;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._states, newValue))
                {
                    base.RaisePropertyChanging("States");
                    this._states = newValue;
                    base.RaisePropertyChanged("States");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowRichDTO> SubWorkflows
        {
            get
            {
                return this._subWorkflows;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._subWorkflows, newValue))
                {
                    base.RaisePropertyChanging("SubWorkflows");
                    this._subWorkflows = newValue;
                    base.RaisePropertyChanged("SubWorkflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionRichDTO> Transitions
        {
            get
            {
                return this._transitions;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._transitions, newValue))
                {
                    base.RaisePropertyChanging("Transitions");
                    this._transitions = newValue;
                    base.RaisePropertyChanged("Transitions");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO ActiveCondition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoRemoveWithDomainObject;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO> ConditionStates = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ConditionStateStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO> Lambdas = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO> Metadatas = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO> ParallelStates = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ParallelStateStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO> Parameters = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.RoleStrictDTO> Roles = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.RoleStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO> Sources = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO> StartConditions = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StateStrictDTO> States = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StateStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowStrictDTO> SubWorkflows = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TransitionStrictDTO> Transitions = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TransitionStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public WorkflowStrictDTO()
        {
        }
        
        public WorkflowStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflow(this, source);
        }
        
        public WorkflowStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowStrictDTO(Framework.Workflow.Generated.DTO.WorkflowFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflow(this, source);
        }
        
        public WorkflowStrictDTO(Framework.Workflow.Generated.DTO.WorkflowFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflow(this, source);
        }
        
        public WorkflowStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflow(this, source);
        }
        
        private WorkflowStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflow(this, source);
        }
        
        private WorkflowStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IWorkflowSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool AutoRemoveWithDomainObject
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        bool HasAttachments
        {
            get;
            set;
        }
        
        bool IsValid
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string ValidationError
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowFullDTO : Framework.Workflow.Generated.DTO.IWorkflowSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO ActiveCondition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowRichDTO : Framework.Workflow.Generated.DTO.IWorkflowFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ConditionStateRichDTO> ConditionStates
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO> Lambdas
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO> Metadatas
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ParallelStateRichDTO> ParallelStates
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO> Parameters
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.RoleRichDTO> Roles
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO> Sources
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRichDTO> StartConditions
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateRichDTO> States
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowRichDTO> SubWorkflows
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionRichDTO> Transitions
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO))]
    public partial class WorkflowLambdaSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowLambdaSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private string _value;
        
        public WorkflowLambdaSimpleDTO()
        {
        }
        
        public WorkflowLambdaSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowLambdaSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO))]
    public partial class WorkflowLambdaFullDTO : Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowLambdaFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public WorkflowLambdaFullDTO()
        {
        }
        
        public WorkflowLambdaFullDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowLambdaFullDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowLambdaRichDTO : Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO, Framework.Workflow.Generated.DTO.IWorkflowLambdaRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO>
    {
        
        public WorkflowLambdaRichDTO()
        {
        }
        
        public WorkflowLambdaRichDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowLambdaRichDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowLambdaStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public WorkflowLambdaStrictDTO()
        {
        }
        
        public WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowLambda(this, source);
        }
        
        public WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowLambda(this, source);
        }
        
        public WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowLambda(this, source);
        }
        
        public WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflowLambda(this, source);
        }
        
        private WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflowLambda(this, source);
        }
        
        private WorkflowLambdaStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IWorkflowLambdaSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowLambdaFullDTO : Framework.Workflow.Generated.DTO.IWorkflowLambdaSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowLambdaRichDTO : Framework.Workflow.Generated.DTO.IWorkflowLambdaFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO))]
    public partial class WorkflowMetadataSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowMetadataSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        private string _value;
        
        public WorkflowMetadataSimpleDTO()
        {
        }
        
        public WorkflowMetadataSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowMetadataSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowMetadataSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowMetadataSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO))]
    public partial class WorkflowMetadataFullDTO : Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowMetadataFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public WorkflowMetadataFullDTO()
        {
        }
        
        public WorkflowMetadataFullDTO(Framework.Workflow.Generated.DTO.IWorkflowMetadataFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowMetadataFullDTO(Framework.Workflow.Generated.DTO.IWorkflowMetadataFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowMetadataRichDTO : Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO, Framework.Workflow.Generated.DTO.IWorkflowMetadataRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO>
    {
        
        public WorkflowMetadataRichDTO()
        {
        }
        
        public WorkflowMetadataRichDTO(Framework.Workflow.Generated.DTO.IWorkflowMetadataRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowMetadataRichDTO(Framework.Workflow.Generated.DTO.IWorkflowMetadataRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowMetadataStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowMetadataStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public WorkflowMetadataStrictDTO()
        {
        }
        
        public WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowMetadata(this, source);
        }
        
        public WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.WorkflowMetadataRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowMetadata(this, source);
        }
        
        public WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.WorkflowMetadataFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowMetadata(this, source);
        }
        
        public WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.WorkflowMetadataSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflowMetadata(this, source);
        }
        
        private WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflowMetadata(this, source);
        }
        
        private WorkflowMetadataStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IWorkflowMetadataSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowMetadataFullDTO : Framework.Workflow.Generated.DTO.IWorkflowMetadataSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowMetadataRichDTO : Framework.Workflow.Generated.DTO.IWorkflowMetadataFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO))]
    public partial class WorkflowParameterSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowParameterSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO>
    {
        
        private bool _allowNull;
        
        private string _description;
        
        private string _name;
        
        public WorkflowParameterSimpleDTO()
        {
        }
        
        public WorkflowParameterSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowParameterSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowParameterSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowParameterSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.AllowNull = source.AllowNull;
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNull
        {
            get
            {
                return this._allowNull;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._allowNull, newValue))
                {
                    base.RaisePropertyChanging("AllowNull");
                    this._allowNull = newValue;
                    base.RaisePropertyChanged("AllowNull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO))]
    public partial class WorkflowParameterFullDTO : Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowParameterFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _type;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public WorkflowParameterFullDTO()
        {
        }
        
        public WorkflowParameterFullDTO(Framework.Workflow.Generated.DTO.IWorkflowParameterFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowParameterFullDTO(Framework.Workflow.Generated.DTO.IWorkflowParameterFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Type = source.Type;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowParameterRichDTO : Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO, Framework.Workflow.Generated.DTO.IWorkflowParameterRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO>
    {
        
        public WorkflowParameterRichDTO()
        {
        }
        
        public WorkflowParameterRichDTO(Framework.Workflow.Generated.DTO.IWorkflowParameterRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowParameterRichDTO(Framework.Workflow.Generated.DTO.IWorkflowParameterRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowParameterStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNull;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO Type;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public WorkflowParameterStrictDTO()
        {
        }
        
        public WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowParameter(this, source);
        }
        
        public WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.WorkflowParameterRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowParameter(this, source);
        }
        
        public WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.WorkflowParameterFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowParameter(this, source);
        }
        
        public WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflowParameter(this, source);
        }
        
        private WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflowParameter(this, source);
        }
        
        private WorkflowParameterStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IWorkflowParameterSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool AllowNull
        {
            get;
            set;
        }
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowParameterFullDTO : Framework.Workflow.Generated.DTO.IWorkflowParameterSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowParameterRichDTO : Framework.Workflow.Generated.DTO.IWorkflowParameterFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO))]
    public partial class WorkflowSourceSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowSourceSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO>
    {
        
        private string _description;
        
        private string _name;
        
        public WorkflowSourceSimpleDTO()
        {
        }
        
        public WorkflowSourceSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowSourceSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO))]
    public partial class WorkflowSourceFullDTO : Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowSourceFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _elements;
        
        private Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO _path;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _type;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _workflowType;
        
        public WorkflowSourceFullDTO()
        {
        }
        
        public WorkflowSourceFullDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowSourceFullDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Elements = source.Elements;
            this.Path = source.Path;
            this.Type = source.Type;
            this.Workflow = source.Workflow;
            this.WorkflowType = source.WorkflowType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Elements
        {
            get
            {
                return this._elements;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._elements, newValue))
                {
                    base.RaisePropertyChanging("Elements");
                    this._elements = newValue;
                    base.RaisePropertyChanged("Elements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Path
        {
            get
            {
                return this._path;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._path, newValue))
                {
                    base.RaisePropertyChanging("Path");
                    this._path = newValue;
                    base.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO WorkflowType
        {
            get
            {
                return this._workflowType;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowType, newValue))
                {
                    base.RaisePropertyChanging("WorkflowType");
                    this._workflowType = newValue;
                    base.RaisePropertyChanged("WorkflowType");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowSourceRichDTO : Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO, Framework.Workflow.Generated.DTO.IWorkflowSourceRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO>
    {
        
        public WorkflowSourceRichDTO()
        {
        }
        
        public WorkflowSourceRichDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowSourceRichDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowSourceStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Elements;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowLambdaIdentityDTO Path;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO Type;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public WorkflowSourceStrictDTO()
        {
        }
        
        public WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowSource(this, source);
        }
        
        public WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowSource(this, source);
        }
        
        public WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowSource(this, source);
        }
        
        public WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflowSource(this, source);
        }
        
        private WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflowSource(this, source);
        }
        
        private WorkflowSourceStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IWorkflowSourceSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowSourceFullDTO : Framework.Workflow.Generated.DTO.IWorkflowSourceSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Elements
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowLambdaSimpleDTO Path
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO WorkflowType
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowSourceRichDTO : Framework.Workflow.Generated.DTO.IWorkflowSourceFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO))]
    public partial class DomainTypeRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO>
    {
        
        private bool _includeBaseTargetSystem = true;
        
        private bool? _isSource;
        
        public DomainTypeRootFilterModelSimpleDTO()
        {
        }
        
        public DomainTypeRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.IncludeBaseTargetSystem = source.IncludeBaseTargetSystem;
            this.IsSource = source.IsSource;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeBaseTargetSystem
        {
            get
            {
                return this._includeBaseTargetSystem;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._includeBaseTargetSystem, newValue))
                {
                    base.RaisePropertyChanging("IncludeBaseTargetSystem");
                    this._includeBaseTargetSystem = newValue;
                    base.RaisePropertyChanged("IncludeBaseTargetSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsSource
        {
            get
            {
                return this._isSource;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isSource, newValue))
                {
                    base.RaisePropertyChanging("IsSource");
                    this._isSource = newValue;
                    base.RaisePropertyChanged("IsSource");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO))]
    public partial class DomainTypeRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO _targetSystem;
        
        public DomainTypeRootFilterModelFullDTO()
        {
        }
        
        public DomainTypeRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelFullDTO source) : 
                base(source)
        {
            this.TargetSystem = source.TargetSystem;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._targetSystem, newValue))
                {
                    base.RaisePropertyChanging("TargetSystem");
                    this._targetSystem = newValue;
                    base.RaisePropertyChanged("TargetSystem");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class DomainTypeRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO>
    {
        
        public DomainTypeRootFilterModelRichDTO()
        {
        }
        
        public DomainTypeRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class DomainTypeRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeBaseTargetSystem = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsSource;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TargetSystemIdentityDTO TargetSystem;
        
        public DomainTypeRootFilterModelStrictDTO()
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForDomainTypeRootFilterModel(this, source);
        }
        
        public DomainTypeRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.DomainTypeRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IDomainTypeRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        bool IncludeBaseTargetSystem
        {
            get;
            set;
        }
        
        bool? IsSource
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.TargetSystemSimpleDTO TargetSystem
        {
            get;
            set;
        }
    }
    
    public partial interface IDomainTypeRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IDomainTypeRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO))]
    public partial class EventRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IEventRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO>
    {
        
        public EventRootFilterModelSimpleDTO()
        {
        }
        
        public EventRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IEventRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO))]
    public partial class EventRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IEventRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public EventRootFilterModelFullDTO()
        {
        }
        
        public EventRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IEventRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class EventRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IEventRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO>
    {
        
        public EventRootFilterModelRichDTO()
        {
        }
        
        public EventRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IEventRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.EventRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class EventRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public EventRootFilterModelStrictDTO()
        {
        }
        
        public EventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForEventRootFilterModel(this, source);
        }
        
        public EventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.EventRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForEventRootFilterModel(this, source);
        }
        
        public EventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.EventRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public EventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForEventRootFilterModel(this, source);
        }
        
        public EventRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.EventRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IEventRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IEventRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IEventRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IEventRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IEventRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO))]
    public partial class ExecuteCommandRequestSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IExecuteCommandRequestSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO>
    {
        
        public ExecuteCommandRequestSimpleDTO()
        {
        }
        
        public ExecuteCommandRequestSimpleDTO(Framework.Workflow.Generated.DTO.IExecuteCommandRequestSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO))]
    public partial class ExecuteCommandRequestFullDTO : Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO, Framework.Workflow.Generated.DTO.IExecuteCommandRequestFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _command;
        
        private Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO _taskInstance;
        
        public ExecuteCommandRequestFullDTO()
        {
        }
        
        public ExecuteCommandRequestFullDTO(Framework.Workflow.Generated.DTO.IExecuteCommandRequestFullDTO source) : 
                base(source)
        {
            this.Command = source.Command;
            this.TaskInstance = source.TaskInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get
            {
                return this._command;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._command, newValue))
                {
                    base.RaisePropertyChanging("Command");
                    this._command = newValue;
                    base.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO TaskInstance
        {
            get
            {
                return this._taskInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._taskInstance, newValue))
                {
                    base.RaisePropertyChanging("TaskInstance");
                    this._taskInstance = newValue;
                    base.RaisePropertyChanged("TaskInstance");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ExecuteCommandRequestRichDTO : Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO, Framework.Workflow.Generated.DTO.IExecuteCommandRequestRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO>();
        
        public ExecuteCommandRequestRichDTO()
        {
        }
        
        public ExecuteCommandRequestRichDTO(Framework.Workflow.Generated.DTO.IExecuteCommandRequestRichDTO source) : 
                base(source)
        {
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, executeCommandRequestParameter => executeCommandRequestParameter.Clone());
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ExecuteCommandRequestStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandIdentityDTO Command;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO> Parameters = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO TaskInstance;
        
        public ExecuteCommandRequestStrictDTO()
        {
        }
        
        public ExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExecuteCommandRequest(this, source);
        }
        
        public ExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExecuteCommandRequest(this, source);
        }
        
        public ExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExecuteCommandRequest(this, source);
        }
        
        public ExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IExecuteCommandRequestSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IExecuteCommandRequestFullDTO : Framework.Workflow.Generated.DTO.IExecuteCommandRequestSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO TaskInstance
        {
            get;
            set;
        }
    }
    
    public partial interface IExecuteCommandRequestRichDTO : Framework.Workflow.Generated.DTO.IExecuteCommandRequestFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> Parameters
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO))]
    public partial class ExecuteCommandRequestParameterSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO>
    {
        
        private string _value;
        
        public ExecuteCommandRequestParameterSimpleDTO()
        {
        }
        
        public ExecuteCommandRequestParameterSimpleDTO(Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterSimpleDTO source) : 
                base(source)
        {
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO))]
    public partial class ExecuteCommandRequestParameterFullDTO : Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO, Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO _definition;
        
        public ExecuteCommandRequestParameterFullDTO()
        {
        }
        
        public ExecuteCommandRequestParameterFullDTO(Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterFullDTO source) : 
                base(source)
        {
            this.Definition = source.Definition;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ExecuteCommandRequestParameterRichDTO : Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO, Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO>
    {
        
        public ExecuteCommandRequestParameterRichDTO()
        {
        }
        
        public ExecuteCommandRequestParameterRichDTO(Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ExecuteCommandRequestParameterStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO Definition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        public ExecuteCommandRequestParameterStrictDTO()
        {
        }
        
        public ExecuteCommandRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForExecuteCommandRequestParameter(this, source);
        }
        
        public ExecuteCommandRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExecuteCommandRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForExecuteCommandRequestParameter(this, source);
        }
        
        public ExecuteCommandRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ExecuteCommandRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForExecuteCommandRequestParameter(this, source);
        }
        
        public ExecuteCommandRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IExecuteCommandRequestParameterSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IExecuteCommandRequestParameterFullDTO : Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO Definition
        {
            get;
            set;
        }
    }
    
    public partial interface IExecuteCommandRequestParameterRichDTO : Framework.Workflow.Generated.DTO.IExecuteCommandRequestParameterFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO))]
    public partial class GroupExecuteCommandRequestSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO>
    {
        
        public GroupExecuteCommandRequestSimpleDTO()
        {
        }
        
        public GroupExecuteCommandRequestSimpleDTO(Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO))]
    public partial class GroupExecuteCommandRequestFullDTO : Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO, Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _command;
        
        public GroupExecuteCommandRequestFullDTO()
        {
        }
        
        public GroupExecuteCommandRequestFullDTO(Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestFullDTO source) : 
                base(source)
        {
            this.Command = source.Command;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get
            {
                return this._command;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._command, newValue))
                {
                    base.RaisePropertyChanging("Command");
                    this._command = newValue;
                    base.RaisePropertyChanged("Command");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class GroupExecuteCommandRequestRichDTO : Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO, Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO> _taskInstances = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO>();
        
        public GroupExecuteCommandRequestRichDTO()
        {
        }
        
        public GroupExecuteCommandRequestRichDTO(Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestRichDTO source) : 
                base(source)
        {
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, executeCommandRequestParameter => executeCommandRequestParameter.Clone());
            }
            if (!object.ReferenceEquals(source.TaskInstances, null))
            {
                this.TaskInstances = Framework.Core.EnumerableExtensions.ToObservableCollection(source.TaskInstances, taskInstance => taskInstance.Clone());
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO> TaskInstances
        {
            get
            {
                return this._taskInstances;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO> newValue;
                newValue = value;
                if (!object.Equals(this._taskInstances, newValue))
                {
                    base.RaisePropertyChanging("TaskInstances");
                    this._taskInstances = newValue;
                    base.RaisePropertyChanged("TaskInstances");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class GroupExecuteCommandRequestStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.CommandIdentityDTO Command;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO> Parameters = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO> TaskInstances = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>();
        
        public GroupExecuteCommandRequestStrictDTO()
        {
        }
        
        public GroupExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForGroupExecuteCommandRequest(this, source);
        }
        
        public GroupExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public GroupExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForGroupExecuteCommandRequest(this, source);
        }
        
        public GroupExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public GroupExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForGroupExecuteCommandRequest(this, source);
        }
        
        public GroupExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IGroupExecuteCommandRequestSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IGroupExecuteCommandRequestFullDTO : Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Command
        {
            get;
            set;
        }
    }
    
    public partial interface IGroupExecuteCommandRequestRichDTO : Framework.Workflow.Generated.DTO.IGroupExecuteCommandRequestFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecuteCommandRequestParameterRichDTO> Parameters
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO> TaskInstances
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO))]
    public partial class MassExecuteCommandRequestSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO>
    {
        
        public MassExecuteCommandRequestSimpleDTO()
        {
        }
        
        public MassExecuteCommandRequestSimpleDTO(Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO))]
    public partial class MassExecuteCommandRequestFullDTO : Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO, Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO>
    {
        
        public MassExecuteCommandRequestFullDTO()
        {
        }
        
        public MassExecuteCommandRequestFullDTO(Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MassExecuteCommandRequestRichDTO : Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO, Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO> _groups = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO>();
        
        public MassExecuteCommandRequestRichDTO()
        {
        }
        
        public MassExecuteCommandRequestRichDTO(Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestRichDTO source) : 
                base(source)
        {
            if (!object.ReferenceEquals(source.Groups, null))
            {
                this.Groups = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Groups, groupExecuteCommandRequest => groupExecuteCommandRequest.Clone());
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO> Groups
        {
            get
            {
                return this._groups;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._groups, newValue))
                {
                    base.RaisePropertyChanging("Groups");
                    this._groups = newValue;
                    base.RaisePropertyChanged("Groups");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.MassExecuteCommandRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MassExecuteCommandRequestStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO> Groups = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestStrictDTO>();
        
        public MassExecuteCommandRequestStrictDTO()
        {
        }
        
        public MassExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForMassExecuteCommandRequest(this, source);
        }
        
        public MassExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public MassExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForMassExecuteCommandRequest(this, source);
        }
        
        public MassExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public MassExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForMassExecuteCommandRequest(this, source);
        }
        
        public MassExecuteCommandRequestStrictDTO(Framework.Workflow.Generated.DTO.MassExecuteCommandRequestSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IMassExecuteCommandRequestSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IMassExecuteCommandRequestFullDTO : Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestSimpleDTO
    {
    }
    
    public partial interface IMassExecuteCommandRequestRichDTO : Framework.Workflow.Generated.DTO.IMassExecuteCommandRequestFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.GroupExecuteCommandRequestRichDTO> Groups
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO))]
    public partial class ParallelStateRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO>
    {
        
        public ParallelStateRootFilterModelSimpleDTO()
        {
        }
        
        public ParallelStateRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO))]
    public partial class ParallelStateRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public ParallelStateRootFilterModelFullDTO()
        {
        }
        
        public ParallelStateRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO>
    {
        
        public ParallelStateRootFilterModelRichDTO()
        {
        }
        
        public ParallelStateRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ParallelStateRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public ParallelStateRootFilterModelStrictDTO()
        {
        }
        
        public ParallelStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForParallelStateRootFilterModel(this, source);
        }
        
        public ParallelStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForParallelStateRootFilterModel(this, source);
        }
        
        public ParallelStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public ParallelStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForParallelStateRootFilterModel(this, source);
        }
        
        public ParallelStateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.ParallelStateRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IParallelStateRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IParallelStateRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IParallelStateRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IParallelStateRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniAvailableTaskInstanceGroupProjectionDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceGroupItemProjectionDTO> Items;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.MiniTaskProjectionDTO Task;
        
        public MiniAvailableTaskInstanceGroupProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniAvailableTaskInstanceGroupItemProjectionDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] CommandsIdents;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Path;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniTaskInstanceProjectionDTO> TaskInstances;
        
        public MiniAvailableTaskInstanceGroupItemProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniAvailableTaskInstanceWorkflowGroupProjectionDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniAvailableTaskInstanceGroupProjectionDTO> Items;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.MiniWorkflowSourceProjectionDTO Source;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.MiniWorkflowProjectionDTO Workflow;
        
        public MiniAvailableTaskInstanceWorkflowGroupProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniCommandProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.CommandIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniCommandMetadataProjectionDTO> Metadatas;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderIndex;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniCommandParameterProjectionDTO> Parameters;
        
        public MiniCommandProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.CommandIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniCommandMetadataProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        public MiniCommandMetadataProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniCommandParameterProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public MiniCommandParameterProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.CommandParameterIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniTaskProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TaskIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniCommandProjectionDTO> Commands;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniTaskMetadataProjectionDTO> Metadatas;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName;
        
        public MiniTaskProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.TaskIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TaskIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniTaskInstanceProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowInstanceName;
        
        public MiniTaskInstanceProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniTaskMetadataProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        public MiniTaskMetadataProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniWorkflowProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.VisualDomainTypeProjectionDTO DomainType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.MiniWorkflowMetadataProjectionDTO> Metadatas;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid? OwnerId;
        
        public MiniWorkflowProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniWorkflowMetadataProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        public MiniWorkflowMetadataProjectionDTO()
        {
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class MiniWorkflowSourceProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.VisualDomainTypeProjectionDTO Type;
        
        public MiniWorkflowSourceProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowSourceIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class VisualDomainTypeProjectionDTO : Framework.Workflow.Generated.DTO.BasePersistentDTO, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name;
        
        public VisualDomainTypeProjectionDTO()
        {
        }
        
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO(this.Id);
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO))]
    public partial class RoleRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IRoleRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO>
    {
        
        public RoleRootFilterModelSimpleDTO()
        {
        }
        
        public RoleRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IRoleRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO))]
    public partial class RoleRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IRoleRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public RoleRootFilterModelFullDTO()
        {
        }
        
        public RoleRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IRoleRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class RoleRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IRoleRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO>
    {
        
        public RoleRootFilterModelRichDTO()
        {
        }
        
        public RoleRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IRoleRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.RoleRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class RoleRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public RoleRootFilterModelStrictDTO()
        {
        }
        
        public RoleRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForRoleRootFilterModel(this, source);
        }
        
        public RoleRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.RoleRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RoleRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForRoleRootFilterModel(this, source);
        }
        
        public RoleRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.RoleRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public RoleRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForRoleRootFilterModel(this, source);
        }
        
        public RoleRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.RoleRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IRoleRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IRoleRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IRoleRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IRoleRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IRoleRootFilterModelFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO))]
    public partial class ExecutedCommandSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IExecutedCommandSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO>
    {
        
        public ExecutedCommandSimpleDTO()
        {
        }
        
        public ExecutedCommandSimpleDTO(Framework.Workflow.Generated.DTO.IExecutedCommandSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ExecutedCommandSimpleDTO(Framework.Workflow.Generated.DTO.IExecutedCommandSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO))]
    public partial class ExecutedCommandFullDTO : Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO, Framework.Workflow.Generated.DTO.IExecutedCommandFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.CommandSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO _task;
        
        public ExecutedCommandFullDTO()
        {
        }
        
        public ExecutedCommandFullDTO(Framework.Workflow.Generated.DTO.IExecutedCommandFullDTO source) : 
                this(source, true)
        {
        }
        
        public ExecutedCommandFullDTO(Framework.Workflow.Generated.DTO.IExecutedCommandFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Definition = source.Definition;
            this.Task = source.Task;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.CommandSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO Task
        {
            get
            {
                return this._task;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._task, newValue))
                {
                    base.RaisePropertyChanging("Task");
                    this._task = newValue;
                    base.RaisePropertyChanged("Task");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ExecutedCommandRichDTO : Framework.Workflow.Generated.DTO.ExecutedCommandFullDTO, Framework.Workflow.Generated.DTO.IExecutedCommandRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO>();
        
        public ExecutedCommandRichDTO()
        {
        }
        
        public ExecutedCommandRichDTO(Framework.Workflow.Generated.DTO.IExecutedCommandRichDTO source) : 
                this(source, true)
        {
        }
        
        public ExecutedCommandRichDTO(Framework.Workflow.Generated.DTO.IExecutedCommandRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, executedCommandParameter => executedCommandParameter.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO>.Details
        {
            get
            {
                return this.Parameters;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO(this);
        }
    }
    
    public partial interface IExecutedCommandSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface IExecutedCommandFullDTO : Framework.Workflow.Generated.DTO.IExecutedCommandSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.CommandSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO Task
        {
            get;
            set;
        }
    }
    
    public partial interface IExecutedCommandRichDTO : Framework.Workflow.Generated.DTO.IExecutedCommandFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO> Parameters
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO))]
    public partial class ExecutedCommandParameterSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IExecutedCommandParameterSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO>
    {
        
        private string _value;
        
        public ExecutedCommandParameterSimpleDTO()
        {
        }
        
        public ExecutedCommandParameterSimpleDTO(Framework.Workflow.Generated.DTO.IExecutedCommandParameterSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public ExecutedCommandParameterSimpleDTO(Framework.Workflow.Generated.DTO.IExecutedCommandParameterSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO))]
    public partial class ExecutedCommandParameterFullDTO : Framework.Workflow.Generated.DTO.ExecutedCommandParameterSimpleDTO, Framework.Workflow.Generated.DTO.IExecutedCommandParameterFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO _command;
        
        private Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _type;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflowInstance;
        
        public ExecutedCommandParameterFullDTO()
        {
        }
        
        public ExecutedCommandParameterFullDTO(Framework.Workflow.Generated.DTO.IExecutedCommandParameterFullDTO source) : 
                this(source, true)
        {
        }
        
        public ExecutedCommandParameterFullDTO(Framework.Workflow.Generated.DTO.IExecutedCommandParameterFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Command = source.Command;
            this.Definition = source.Definition;
            this.Type = source.Type;
            this.WorkflowInstance = source.WorkflowInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO Command
        {
            get
            {
                return this._command;
            }
            set
            {
                Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._command, newValue))
                {
                    base.RaisePropertyChanging("Command");
                    this._command = newValue;
                    base.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get
            {
                return this._workflowInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowInstance, newValue))
                {
                    base.RaisePropertyChanging("WorkflowInstance");
                    this._workflowInstance = newValue;
                    base.RaisePropertyChanged("WorkflowInstance");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class ExecutedCommandParameterRichDTO : Framework.Workflow.Generated.DTO.ExecutedCommandParameterFullDTO, Framework.Workflow.Generated.DTO.IExecutedCommandParameterRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO>
    {
        
        public ExecutedCommandParameterRichDTO()
        {
        }
        
        public ExecutedCommandParameterRichDTO(Framework.Workflow.Generated.DTO.IExecutedCommandParameterRichDTO source) : 
                this(source, true)
        {
        }
        
        public ExecutedCommandParameterRichDTO(Framework.Workflow.Generated.DTO.IExecutedCommandParameterRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.ExecutedCommandParameterRichDTO(this);
        }
    }
    
    public partial interface IExecutedCommandParameterSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IExecutedCommandParameterFullDTO : Framework.Workflow.Generated.DTO.IExecutedCommandParameterSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.ExecutedCommandSimpleDTO Command
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.CommandParameterSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get;
            set;
        }
    }
    
    public partial interface IExecutedCommandParameterRichDTO : Framework.Workflow.Generated.DTO.IExecutedCommandParameterFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateInstanceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateInstanceRichDTO))]
    public partial class StateInstanceSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IStateInstanceSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO>
    {
        
        private bool _isAvailable;
        
        public StateInstanceSimpleDTO()
        {
        }
        
        public StateInstanceSimpleDTO(Framework.Workflow.Generated.DTO.IStateInstanceSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public StateInstanceSimpleDTO(Framework.Workflow.Generated.DTO.IStateInstanceSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.IsAvailable = source.IsAvailable;
        }
        
        public Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.StateInstanceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable
        {
            get
            {
                return this._isAvailable;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isAvailable, newValue))
                {
                    base.RaisePropertyChanging("IsAvailable");
                    this._isAvailable = newValue;
                    base.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateInstanceRichDTO))]
    public partial class StateInstanceFullDTO : Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO, Framework.Workflow.Generated.DTO.IStateInstanceFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateInstanceFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.StateBaseSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflow;
        
        public StateInstanceFullDTO()
        {
        }
        
        public StateInstanceFullDTO(Framework.Workflow.Generated.DTO.IStateInstanceFullDTO source) : 
                this(source, true)
        {
        }
        
        public StateInstanceFullDTO(Framework.Workflow.Generated.DTO.IStateInstanceFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Definition = source.Definition;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateBaseSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateInstanceFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateInstanceFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateInstanceFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateInstanceRichDTO : Framework.Workflow.Generated.DTO.StateInstanceFullDTO, Framework.Workflow.Generated.DTO.IStateInstanceRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateInstanceRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> _tasks = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>();
        
        public StateInstanceRichDTO()
        {
        }
        
        public StateInstanceRichDTO(Framework.Workflow.Generated.DTO.IStateInstanceRichDTO source) : 
                this(source, true)
        {
        }
        
        public StateInstanceRichDTO(Framework.Workflow.Generated.DTO.IStateInstanceRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Tasks, null))
            {
                this.Tasks = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Tasks, taskInstance => taskInstance.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>.Details
        {
            get
            {
                return this.Tasks;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> Tasks
        {
            get
            {
                return this._tasks;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._tasks, newValue))
                {
                    base.RaisePropertyChanging("Tasks");
                    this._tasks = newValue;
                    base.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.StateInstanceRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateInstanceRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateInstanceRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateInstanceRichDTO(this);
        }
    }
    
    public partial interface IStateInstanceSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool IsAvailable
        {
            get;
            set;
        }
    }
    
    public partial interface IStateInstanceFullDTO : Framework.Workflow.Generated.DTO.IStateInstanceSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.StateBaseSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateInstanceRichDTO : Framework.Workflow.Generated.DTO.IStateInstanceFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO> Tasks
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskInstanceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskInstanceRichDTO))]
    public partial class TaskInstanceSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITaskInstanceSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>
    {
        
        private bool _isAvailable;
        
        public TaskInstanceSimpleDTO()
        {
        }
        
        public TaskInstanceSimpleDTO(Framework.Workflow.Generated.DTO.ITaskInstanceSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TaskInstanceSimpleDTO(Framework.Workflow.Generated.DTO.ITaskInstanceSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.IsAvailable = source.IsAvailable;
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable
        {
            get
            {
                return this._isAvailable;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isAvailable, newValue))
                {
                    base.RaisePropertyChanging("IsAvailable");
                    this._isAvailable = newValue;
                    base.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskInstanceRichDTO))]
    public partial class TaskInstanceFullDTO : Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO, Framework.Workflow.Generated.DTO.ITaskInstanceFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskInstanceFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.TaskSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO _state;
        
        private Framework.Workflow.Generated.DTO.StateBaseSimpleDTO _stateDefinition;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflow;
        
        public TaskInstanceFullDTO()
        {
        }
        
        public TaskInstanceFullDTO(Framework.Workflow.Generated.DTO.ITaskInstanceFullDTO source) : 
                this(source, true)
        {
        }
        
        public TaskInstanceFullDTO(Framework.Workflow.Generated.DTO.ITaskInstanceFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Definition = source.Definition;
            this.State = source.State;
            this.StateDefinition = source.StateDefinition;
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.TaskSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TaskSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO State
        {
            get
            {
                return this._state;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._state, newValue))
                {
                    base.RaisePropertyChanging("State");
                    this._state = newValue;
                    base.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO StateDefinition
        {
            get
            {
                return this._stateDefinition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateBaseSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._stateDefinition, newValue))
                {
                    base.RaisePropertyChanging("StateDefinition");
                    this._stateDefinition = newValue;
                    base.RaisePropertyChanged("StateDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskInstanceRichDTO : Framework.Workflow.Generated.DTO.TaskInstanceFullDTO, Framework.Workflow.Generated.DTO.ITaskInstanceRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskInstanceRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO> _commands = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO>();
        
        public TaskInstanceRichDTO()
        {
        }
        
        public TaskInstanceRichDTO(Framework.Workflow.Generated.DTO.ITaskInstanceRichDTO source) : 
                this(source, true)
        {
        }
        
        public TaskInstanceRichDTO(Framework.Workflow.Generated.DTO.ITaskInstanceRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Commands, null))
            {
                this.Commands = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Commands, executedCommand => executedCommand.Clone(copyId));
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO> Commands
        {
            get
            {
                return this._commands;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._commands, newValue))
                {
                    base.RaisePropertyChanging("Commands");
                    this._commands = newValue;
                    base.RaisePropertyChanged("Commands");
                }
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO>.Details
        {
            get
            {
                return this.Commands;
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskInstanceStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public TaskInstanceStrictDTO()
        {
        }
        
        public TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskInstanceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTaskInstance(this, source);
        }
        
        public TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTaskInstance(this, source);
        }
        
        public TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTaskInstance(this, source);
        }
        
        public TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForTaskInstance(this, source);
        }
        
        private TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForTaskInstance(this, source);
        }
        
        private TaskInstanceStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.TaskInstanceIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface ITaskInstanceSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        bool IsAvailable
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskInstanceFullDTO : Framework.Workflow.Generated.DTO.ITaskInstanceSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.TaskSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO State
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateBaseSimpleDTO StateDefinition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskInstanceRichDTO : Framework.Workflow.Generated.DTO.ITaskInstanceFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.ExecutedCommandRichDTO> Commands
        {
            get;
            set;
        }
    }
    
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO))]
    public partial class TransitionInstanceSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.ITransitionInstanceSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO>
    {
        
        public TransitionInstanceSimpleDTO()
        {
        }
        
        public TransitionInstanceSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionInstanceSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionInstanceSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionInstanceSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO))]
    public partial class TransitionInstanceFullDTO : Framework.Workflow.Generated.DTO.TransitionInstanceSimpleDTO, Framework.Workflow.Generated.DTO.ITransitionInstanceFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.TransitionSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO _from;
        
        private Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO _to;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflowInstance;
        
        public TransitionInstanceFullDTO()
        {
        }
        
        public TransitionInstanceFullDTO(Framework.Workflow.Generated.DTO.ITransitionInstanceFullDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionInstanceFullDTO(Framework.Workflow.Generated.DTO.ITransitionInstanceFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Definition = source.Definition;
            this.From = source.From;
            this.To = source.To;
            this.WorkflowInstance = source.WorkflowInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.TransitionSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.TransitionSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO From
        {
            get
            {
                return this._from;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._from, newValue))
                {
                    base.RaisePropertyChanging("From");
                    this._from = newValue;
                    base.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO To
        {
            get
            {
                return this._to;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._to, newValue))
                {
                    base.RaisePropertyChanging("To");
                    this._to = newValue;
                    base.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get
            {
                return this._workflowInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowInstance, newValue))
                {
                    base.RaisePropertyChanging("WorkflowInstance");
                    this._workflowInstance = newValue;
                    base.RaisePropertyChanged("WorkflowInstance");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionInstanceRichDTO : Framework.Workflow.Generated.DTO.TransitionInstanceFullDTO, Framework.Workflow.Generated.DTO.ITransitionInstanceRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO>
    {
        
        public TransitionInstanceRichDTO()
        {
        }
        
        public TransitionInstanceRichDTO(Framework.Workflow.Generated.DTO.ITransitionInstanceRichDTO source) : 
                this(source, true)
        {
        }
        
        public TransitionInstanceRichDTO(Framework.Workflow.Generated.DTO.ITransitionInstanceRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO(this);
        }
    }
    
    public partial interface ITransitionInstanceSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
    }
    
    public partial interface ITransitionInstanceFullDTO : Framework.Workflow.Generated.DTO.ITransitionInstanceSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.TransitionSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO From
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO To
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get;
            set;
        }
    }
    
    public partial interface ITransitionInstanceRichDTO : Framework.Workflow.Generated.DTO.ITransitionInstanceFullDTO
    {
    }
    
    [Framework.Workflow.WorkflowEditDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowEdit)]
    [Framework.Workflow.WorkflowViewDomainObjectAttribute(Framework.Workflow.WorkflowSecurityOperationCode.WorkflowView)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO))]
    public partial class WorkflowInstanceSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>, Framework.Persistent.IVisualIdentityObject, System.IComparable<Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO>
    {
        
        private string _description;
        
        private System.Guid _domainObjectId;
        
        private bool _isAborted;
        
        private bool _isFinished;
        
        private string _name;
        
        public WorkflowInstanceSimpleDTO()
        {
        }
        
        public WorkflowInstanceSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Description = source.Description;
            this.DomainObjectId = source.DomainObjectId;
            this.IsAborted = source.IsAborted;
            this.IsFinished = source.IsFinished;
            this.Name = source.Name;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Description
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._description);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._description, newValue))
                {
                    base.RaisePropertyChanging("Description");
                    this._description = newValue;
                    base.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectId, newValue))
                {
                    base.RaisePropertyChanging("DomainObjectId");
                    this._domainObjectId = newValue;
                    base.RaisePropertyChanged("DomainObjectId");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO(this.Id);
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAborted
        {
            get
            {
                return this._isAborted;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isAborted, newValue))
                {
                    base.RaisePropertyChanging("IsAborted");
                    this._isAborted = newValue;
                    base.RaisePropertyChanged("IsAborted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished
        {
            get
            {
                return this._isFinished;
            }
            set
            {
                bool newValue;
                newValue = value;
                if (!object.Equals(this._isFinished, newValue))
                {
                    base.RaisePropertyChanging("IsFinished");
                    this._isFinished = newValue;
                    base.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Name
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._name);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._name, newValue))
                {
                    base.RaisePropertyChanging("Name");
                    this._name = newValue;
                    base.RaisePropertyChanged("Name");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO(this);
        }
        
        public int CompareTo(Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO other)
        {
            return this.Name.CompareTo(other.Name);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO(this);
        }
        
        public override string ToString()
        {
            return this.Name;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO))]
    public partial class WorkflowInstanceFullDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO _currentState;
        
        private Framework.Workflow.Generated.DTO.StateBaseSimpleDTO _currentStateDefinition;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _owner;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _ownerDefinition;
        
        private Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO _ownerState;
        
        public WorkflowInstanceFullDTO()
        {
        }
        
        public WorkflowInstanceFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.CurrentState = source.CurrentState;
            this.CurrentStateDefinition = source.CurrentStateDefinition;
            this.Definition = source.Definition;
            this.Owner = source.Owner;
            this.OwnerDefinition = source.OwnerDefinition;
            this.OwnerState = source.OwnerState;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO CurrentState
        {
            get
            {
                return this._currentState;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._currentState, newValue))
                {
                    base.RaisePropertyChanging("CurrentState");
                    this._currentState = newValue;
                    base.RaisePropertyChanged("CurrentState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateBaseSimpleDTO CurrentStateDefinition
        {
            get
            {
                return this._currentStateDefinition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateBaseSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._currentStateDefinition, newValue))
                {
                    base.RaisePropertyChanging("CurrentStateDefinition");
                    this._currentStateDefinition = newValue;
                    base.RaisePropertyChanged("CurrentStateDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO OwnerDefinition
        {
            get
            {
                return this._ownerDefinition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._ownerDefinition, newValue))
                {
                    base.RaisePropertyChanging("OwnerDefinition");
                    this._ownerDefinition = newValue;
                    base.RaisePropertyChanged("OwnerDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO OwnerState
        {
            get
            {
                return this._ownerState;
            }
            set
            {
                Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._ownerState, newValue))
                {
                    base.RaisePropertyChanging("OwnerState");
                    this._ownerState = newValue;
                    base.RaisePropertyChanged("OwnerState");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceRichDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateInstanceRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO>, Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceRichDTO> _states = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO> _transitions = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO>();
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO> _watchers = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO>();
        
        public WorkflowInstanceRichDTO()
        {
        }
        
        public WorkflowInstanceRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceRichDTO source, bool copyId) : 
                base(source, copyId)
        {
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, workflowInstanceParameter => workflowInstanceParameter.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.States, null))
            {
                this.States = Framework.Core.EnumerableExtensions.ToObservableCollection(source.States, stateInstance => stateInstance.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Transitions, null))
            {
                this.Transitions = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Transitions, transitionInstance => transitionInstance.Clone(copyId));
            }
            if (!object.ReferenceEquals(source.Watchers, null))
            {
                this.Watchers = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Watchers, workflowInstanceWatcher => workflowInstanceWatcher.Clone(copyId));
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO>.Details
        {
            get
            {
                return this.Parameters;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.StateInstanceRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.StateInstanceRichDTO>.Details
        {
            get
            {
                return this.States;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO>.Details
        {
            get
            {
                return this.Transitions;
            }
        }
        
        System.Collections.Generic.ICollection<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO> Framework.Persistent.IMaster<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO>.Details
        {
            get
            {
                return this.Watchers;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceRichDTO> States
        {
            get
            {
                return this._states;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._states, newValue))
                {
                    base.RaisePropertyChanging("States");
                    this._states = newValue;
                    base.RaisePropertyChanged("States");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO> Transitions
        {
            get
            {
                return this._transitions;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._transitions, newValue))
                {
                    base.RaisePropertyChanging("Transitions");
                    this._transitions = newValue;
                    base.RaisePropertyChanged("Transitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO> Watchers
        {
            get
            {
                return this._watchers;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._watchers, newValue))
                {
                    base.RaisePropertyChanging("Watchers");
                    this._watchers = newValue;
                    base.RaisePropertyChanged("Watchers");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>, Framework.Persistent.IIdentityObjectContainer<Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO> Watchers = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO>();
        
        public WorkflowInstanceStrictDTO()
        {
        }
        
        public WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowInstance(this, source);
        }
        
        public WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowInstance(this, source);
        }
        
        public WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowInstance(this, source);
        }
        
        public WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflowInstance(this, source);
        }
        
        private WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflowInstance(this, source);
        }
        
        private WorkflowInstanceStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO Identity
        {
            get
            {
                return new Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO(this.Id);
            }
        }
    }
    
    public partial interface IWorkflowInstanceSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Description
        {
            get;
            set;
        }
        
        System.Guid DomainObjectId
        {
            get;
            set;
        }
        
        bool IsAborted
        {
            get;
            set;
        }
        
        bool IsFinished
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceFullDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO CurrentState
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateBaseSimpleDTO CurrentStateDefinition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO Owner
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO OwnerDefinition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.StateInstanceSimpleDTO OwnerState
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceRichDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO> Parameters
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StateInstanceRichDTO> States
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.TransitionInstanceRichDTO> Transitions
        {
            get;
            set;
        }
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO> Watchers
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO))]
    public partial class WorkflowInstanceParameterSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO>
    {
        
        private string _value;
        
        public WorkflowInstanceParameterSimpleDTO()
        {
        }
        
        public WorkflowInstanceParameterSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceParameterSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO))]
    public partial class WorkflowInstanceParameterFullDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceParameterSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _type;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflowInstance;
        
        public WorkflowInstanceParameterFullDTO()
        {
        }
        
        public WorkflowInstanceParameterFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceParameterFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Definition = source.Definition;
            this.Type = source.Type;
            this.WorkflowInstance = source.WorkflowInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get
            {
                return this._type;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._type, newValue))
                {
                    base.RaisePropertyChanging("Type");
                    this._type = newValue;
                    base.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get
            {
                return this._workflowInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowInstance, newValue))
                {
                    base.RaisePropertyChanging("WorkflowInstance");
                    this._workflowInstance = newValue;
                    base.RaisePropertyChanged("WorkflowInstance");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceParameterRichDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceParameterFullDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO>
    {
        
        public WorkflowInstanceParameterRichDTO()
        {
        }
        
        public WorkflowInstanceParameterRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceParameterRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceParameterRichDTO(this);
        }
    }
    
    public partial interface IWorkflowInstanceParameterSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceParameterFullDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO Type
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceParameterRichDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceParameterFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO))]
    public partial class WorkflowInstanceWatcherSimpleDTO : Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO>
    {
        
        private string _login;
        
        public WorkflowInstanceWatcherSimpleDTO()
        {
        }
        
        public WorkflowInstanceWatcherSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherSimpleDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceWatcherSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherSimpleDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.Login = source.Login;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public string Login
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._login);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._login, newValue))
                {
                    base.RaisePropertyChanging("Login");
                    this._login = newValue;
                    base.RaisePropertyChanged("Login");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO))]
    public partial class WorkflowInstanceWatcherFullDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflowInstance;
        
        public WorkflowInstanceWatcherFullDTO()
        {
        }
        
        public WorkflowInstanceWatcherFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherFullDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceWatcherFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherFullDTO source, bool copyId) : 
                base(source, copyId)
        {
            this.WorkflowInstance = source.WorkflowInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get
            {
                return this._workflowInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowInstance, newValue))
                {
                    base.RaisePropertyChanging("WorkflowInstance");
                    this._workflowInstance = newValue;
                    base.RaisePropertyChanged("WorkflowInstance");
                }
            }
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceWatcherRichDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO>
    {
        
        public WorkflowInstanceWatcherRichDTO()
        {
        }
        
        public WorkflowInstanceWatcherRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherRichDTO source) : 
                this(source, true)
        {
        }
        
        public WorkflowInstanceWatcherRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherRichDTO source, bool copyId) : 
                base(source, copyId)
        {
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO Clone(bool copyId)
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO(this, copyId);
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceWatcherStrictDTO : Framework.Persistent.IIdentityObject<System.Guid>
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version;
        
        public WorkflowInstanceWatcherStrictDTO()
        {
        }
        
        public WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowInstanceWatcher(this, source);
        }
        
        public WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowInstanceWatcher(this, source);
        }
        
        public WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowInstanceWatcher(this, source);
        }
        
        public WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceWatcherSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.BasePersistentDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBaseAuditPersistentToStrictForWorkflowInstanceWatcher(this, source);
        }
        
        private WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.BaseAuditPersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        private WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapBasePersistentToStrictForWorkflowInstanceWatcher(this, source);
        }
        
        private WorkflowInstanceWatcherStrictDTO(Framework.Workflow.Generated.DTO.BasePersistentDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        System.Guid Framework.Persistent.IIdentityObject<System.Guid>.Id
        {
            get
            {
                return this.Id;
            }
        }
    }
    
    public partial interface IWorkflowInstanceWatcherSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAuditPersistentDTO
    {
        
        string Login
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceWatcherFullDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceWatcherRichDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceWatcherFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO))]
    public partial class StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO>
    {
        
        public StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO))]
    public partial class StartWorkflowDomainObjectConditionRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StartWorkflowDomainObjectConditionRootFilterModelFullDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowDomainObjectConditionRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO>
    {
        
        public StartWorkflowDomainObjectConditionRootFilterModelRichDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowDomainObjectConditionRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO()
        {
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStartWorkflowDomainObjectConditionRootFilterModel(this, source);
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStartWorkflowDomainObjectConditionRootFilterModel(this, source);
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStartWorkflowDomainObjectConditionRootFilterModel(this, source);
        }
        
        public StartWorkflowDomainObjectConditionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowDomainObjectConditionRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IStartWorkflowDomainObjectConditionRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IStartWorkflowDomainObjectConditionRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStartWorkflowDomainObjectConditionRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IStartWorkflowDomainObjectConditionRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO))]
    public partial class StartWorkflowRequestSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IStartWorkflowRequestSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO>
    {
        
        public StartWorkflowRequestSimpleDTO()
        {
        }
        
        public StartWorkflowRequestSimpleDTO(Framework.Workflow.Generated.DTO.IStartWorkflowRequestSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO))]
    public partial class StartWorkflowRequestFullDTO : Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO, Framework.Workflow.Generated.DTO.IStartWorkflowRequestFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StartWorkflowRequestFullDTO()
        {
        }
        
        public StartWorkflowRequestFullDTO(Framework.Workflow.Generated.DTO.IStartWorkflowRequestFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowRequestRichDTO : Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO, Framework.Workflow.Generated.DTO.IStartWorkflowRequestRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO>
    {
        
        private System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO> _parameters = new System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO>();
        
        public StartWorkflowRequestRichDTO()
        {
        }
        
        public StartWorkflowRequestRichDTO(Framework.Workflow.Generated.DTO.IStartWorkflowRequestRichDTO source) : 
                base(source)
        {
            if (!object.ReferenceEquals(source.Parameters, null))
            {
                this.Parameters = Framework.Core.EnumerableExtensions.ToObservableCollection(source.Parameters, startWorkflowRequestParameter => startWorkflowRequestParameter.Clone());
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueGroupAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO> Parameters
        {
            get
            {
                return this._parameters;
            }
            set
            {
                System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO> newValue;
                newValue = value;
                if (!object.Equals(this._parameters, newValue))
                {
                    base.RaisePropertyChanging("Parameters");
                    this._parameters = newValue;
                    base.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowRequestStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO> Parameters = new System.Collections.Generic.List<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO>();
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public StartWorkflowRequestStrictDTO()
        {
        }
        
        public StartWorkflowRequestStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStartWorkflowRequest(this, source);
        }
        
        public StartWorkflowRequestStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowRequestStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStartWorkflowRequest(this, source);
        }
        
        public StartWorkflowRequestStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowRequestStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStartWorkflowRequest(this, source);
        }
        
        public StartWorkflowRequestStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IStartWorkflowRequestSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IStartWorkflowRequestFullDTO : Framework.Workflow.Generated.DTO.IStartWorkflowRequestSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStartWorkflowRequestRichDTO : Framework.Workflow.Generated.DTO.IStartWorkflowRequestFullDTO
    {
        
        System.Collections.ObjectModel.ObservableCollection<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO> Parameters
        {
            get;
            set;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO))]
    public partial class StartWorkflowRequestParameterSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO>
    {
        
        private string _value;
        
        public StartWorkflowRequestParameterSimpleDTO()
        {
        }
        
        public StartWorkflowRequestParameterSimpleDTO(Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterSimpleDTO source) : 
                base(source)
        {
            this.Value = source.Value;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.MaxLengthAttribute()]
        public string Value
        {
            get
            {
                return Framework.Core.StringExtensions.TrimNull(this._value);
            }
            set
            {
                string newValue;
                newValue = Framework.Core.StringExtensions.TrimNull(value);
                if (!object.Equals(this._value, newValue))
                {
                    base.RaisePropertyChanging("Value");
                    this._value = newValue;
                    base.RaisePropertyChanged("Value");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO))]
    public partial class StartWorkflowRequestParameterFullDTO : Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO, Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO _definition;
        
        public StartWorkflowRequestParameterFullDTO()
        {
        }
        
        public StartWorkflowRequestParameterFullDTO(Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterFullDTO source) : 
                base(source)
        {
            this.Definition = source.Definition;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        [Framework.Restriction.RequiredAttribute()]
        [Framework.Restriction.UniqueElementAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowRequestParameterRichDTO : Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO, Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO>
    {
        
        public StartWorkflowRequestParameterRichDTO()
        {
        }
        
        public StartWorkflowRequestParameterRichDTO(Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StartWorkflowRequestParameterStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowParameterIdentityDTO Definition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value;
        
        public StartWorkflowRequestParameterStrictDTO()
        {
        }
        
        public StartWorkflowRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStartWorkflowRequestParameter(this, source);
        }
        
        public StartWorkflowRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStartWorkflowRequestParameter(this, source);
        }
        
        public StartWorkflowRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StartWorkflowRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStartWorkflowRequestParameter(this, source);
        }
        
        public StartWorkflowRequestParameterStrictDTO(Framework.Workflow.Generated.DTO.StartWorkflowRequestParameterSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IStartWorkflowRequestParameterSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        string Value
        {
            get;
            set;
        }
    }
    
    public partial interface IStartWorkflowRequestParameterFullDTO : Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowParameterSimpleDTO Definition
        {
            get;
            set;
        }
    }
    
    public partial interface IStartWorkflowRequestParameterRichDTO : Framework.Workflow.Generated.DTO.IStartWorkflowRequestParameterFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO))]
    public partial class StateBaseRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO>
    {
        
        public StateBaseRootFilterModelSimpleDTO()
        {
        }
        
        public StateBaseRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO))]
    public partial class StateBaseRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StateBaseRootFilterModelFullDTO()
        {
        }
        
        public StateBaseRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateBaseRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO>
    {
        
        public StateBaseRootFilterModelRichDTO()
        {
        }
        
        public StateBaseRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateBaseRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateBaseRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public StateBaseRootFilterModelStrictDTO()
        {
        }
        
        public StateBaseRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStateBaseRootFilterModel(this, source);
        }
        
        public StateBaseRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateBaseRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStateBaseRootFilterModel(this, source);
        }
        
        public StateBaseRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateBaseRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStateBaseRootFilterModel(this, source);
        }
        
        public StateBaseRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateBaseRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IStateBaseRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IStateBaseRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateBaseRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IStateBaseRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO))]
    public partial class StateRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IStateRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO>
    {
        
        public StateRootFilterModelSimpleDTO()
        {
        }
        
        public StateRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IStateRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO))]
    public partial class StateRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IStateRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public StateRootFilterModelFullDTO()
        {
        }
        
        public StateRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IStateRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IStateRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO>
    {
        
        public StateRootFilterModelRichDTO()
        {
        }
        
        public StateRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IStateRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.StateRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class StateRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public StateRootFilterModelStrictDTO()
        {
        }
        
        public StateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForStateRootFilterModel(this, source);
        }
        
        public StateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForStateRootFilterModel(this, source);
        }
        
        public StateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public StateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForStateRootFilterModel(this, source);
        }
        
        public StateRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.StateRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IStateRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IStateRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IStateRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IStateRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IStateRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO))]
    public partial class TaskInstanceRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO>
    {
        
        private bool? _assignedToMe;
        
        private System.Guid _domainObjectId;
        
        private bool? _isAvailable = true;
        
        public TaskInstanceRootFilterModelSimpleDTO()
        {
        }
        
        public TaskInstanceRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.AssignedToMe = source.AssignedToMe;
            this.DomainObjectId = source.DomainObjectId;
            this.IsAvailable = source.IsAvailable;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? AssignedToMe
        {
            get
            {
                return this._assignedToMe;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._assignedToMe, newValue))
                {
                    base.RaisePropertyChanging("AssignedToMe");
                    this._assignedToMe = newValue;
                    base.RaisePropertyChanged("AssignedToMe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectId, newValue))
                {
                    base.RaisePropertyChanging("DomainObjectId");
                    this._domainObjectId = newValue;
                    base.RaisePropertyChanged("DomainObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsAvailable
        {
            get
            {
                return this._isAvailable;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isAvailable, newValue))
                {
                    base.RaisePropertyChanging("IsAvailable");
                    this._isAvailable = newValue;
                    base.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO))]
    public partial class TaskInstanceRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflowDefinition;
        
        private Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO _workflowInstance;
        
        public TaskInstanceRootFilterModelFullDTO()
        {
        }
        
        public TaskInstanceRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelFullDTO source) : 
                base(source)
        {
            this.WorkflowDefinition = source.WorkflowDefinition;
            this.WorkflowInstance = source.WorkflowInstance;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO WorkflowDefinition
        {
            get
            {
                return this._workflowDefinition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowDefinition, newValue))
                {
                    base.RaisePropertyChanging("WorkflowDefinition");
                    this._workflowDefinition = newValue;
                    base.RaisePropertyChanged("WorkflowDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get
            {
                return this._workflowInstance;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowInstance, newValue))
                {
                    base.RaisePropertyChanging("WorkflowInstance");
                    this._workflowInstance = newValue;
                    base.RaisePropertyChanged("WorkflowInstance");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskInstanceRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO>
    {
        
        public TaskInstanceRootFilterModelRichDTO()
        {
        }
        
        public TaskInstanceRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskInstanceRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? AssignedToMe;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsAvailable = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO WorkflowDefinition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowInstanceIdentityDTO WorkflowInstance;
        
        public TaskInstanceRootFilterModelStrictDTO()
        {
        }
        
        public TaskInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTaskInstanceRootFilterModel(this, source);
        }
        
        public TaskInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTaskInstanceRootFilterModel(this, source);
        }
        
        public TaskInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTaskInstanceRootFilterModel(this, source);
        }
        
        public TaskInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskInstanceRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ITaskInstanceRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        bool? AssignedToMe
        {
            get;
            set;
        }
        
        System.Guid DomainObjectId
        {
            get;
            set;
        }
        
        bool? IsAvailable
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskInstanceRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO WorkflowDefinition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowInstanceSimpleDTO WorkflowInstance
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskInstanceRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ITaskInstanceRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO))]
    public partial class TaskRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.ITaskRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO>
    {
        
        public TaskRootFilterModelSimpleDTO()
        {
        }
        
        public TaskRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.ITaskRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO))]
    public partial class TaskRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.ITaskRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public TaskRootFilterModelFullDTO()
        {
        }
        
        public TaskRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.ITaskRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.ITaskRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO>
    {
        
        public TaskRootFilterModelRichDTO()
        {
        }
        
        public TaskRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.ITaskRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TaskRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TaskRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public TaskRootFilterModelStrictDTO()
        {
        }
        
        public TaskRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTaskRootFilterModel(this, source);
        }
        
        public TaskRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTaskRootFilterModel(this, source);
        }
        
        public TaskRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TaskRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTaskRootFilterModel(this, source);
        }
        
        public TaskRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TaskRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ITaskRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ITaskRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ITaskRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ITaskRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ITaskRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO))]
    public partial class TransitionRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.ITransitionRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO>
    {
        
        public TransitionRootFilterModelSimpleDTO()
        {
        }
        
        public TransitionRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.ITransitionRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO))]
    public partial class TransitionRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.ITransitionRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public TransitionRootFilterModelFullDTO()
        {
        }
        
        public TransitionRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.ITransitionRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.ITransitionRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO>
    {
        
        public TransitionRootFilterModelRichDTO()
        {
        }
        
        public TransitionRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.ITransitionRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.TransitionRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class TransitionRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public TransitionRootFilterModelStrictDTO()
        {
        }
        
        public TransitionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForTransitionRootFilterModel(this, source);
        }
        
        public TransitionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TransitionRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TransitionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForTransitionRootFilterModel(this, source);
        }
        
        public TransitionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TransitionRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public TransitionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForTransitionRootFilterModel(this, source);
        }
        
        public TransitionRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.TransitionRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface ITransitionRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface ITransitionRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.ITransitionRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface ITransitionRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.ITransitionRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO))]
    public partial class WorkflowCreateModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IWorkflowCreateModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO>
    {
        
        public WorkflowCreateModelSimpleDTO()
        {
        }
        
        public WorkflowCreateModelSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowCreateModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO))]
    public partial class WorkflowCreateModelFullDTO : Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowCreateModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO>
    {
        
        public WorkflowCreateModelFullDTO()
        {
        }
        
        public WorkflowCreateModelFullDTO(Framework.Workflow.Generated.DTO.IWorkflowCreateModelFullDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowCreateModelRichDTO : Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO, Framework.Workflow.Generated.DTO.IWorkflowCreateModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO>
    {
        
        public WorkflowCreateModelRichDTO()
        {
        }
        
        public WorkflowCreateModelRichDTO(Framework.Workflow.Generated.DTO.IWorkflowCreateModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowCreateModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowCreateModelStrictDTO
    {
        
        public WorkflowCreateModelStrictDTO()
        {
        }
        
        public WorkflowCreateModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowCreateModel(this, source);
        }
        
        public WorkflowCreateModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowCreateModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowCreateModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowCreateModel(this, source);
        }
        
        public WorkflowCreateModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowCreateModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowCreateModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowCreateModel(this, source);
        }
        
        public WorkflowCreateModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowCreateModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IWorkflowCreateModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IWorkflowCreateModelFullDTO : Framework.Workflow.Generated.DTO.IWorkflowCreateModelSimpleDTO
    {
    }
    
    public partial interface IWorkflowCreateModelRichDTO : Framework.Workflow.Generated.DTO.IWorkflowCreateModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO))]
    public partial class WorkflowInstanceRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO>
    {
        
        private System.Guid _domainObjectId;
        
        private bool? _isActive;
        
        private bool? _isFinal;
        
        public WorkflowInstanceRootFilterModelSimpleDTO()
        {
        }
        
        public WorkflowInstanceRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.DomainObjectId = source.DomainObjectId;
            this.IsActive = source.IsActive;
            this.IsFinal = source.IsFinal;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId
        {
            get
            {
                return this._domainObjectId;
            }
            set
            {
                System.Guid newValue;
                newValue = value;
                if (!object.Equals(this._domainObjectId, newValue))
                {
                    base.RaisePropertyChanging("DomainObjectId");
                    this._domainObjectId = newValue;
                    base.RaisePropertyChanged("DomainObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isActive, newValue))
                {
                    base.RaisePropertyChanging("IsActive");
                    this._isActive = newValue;
                    base.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsFinal
        {
            get
            {
                return this._isFinal;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isFinal, newValue))
                {
                    base.RaisePropertyChanging("IsFinal");
                    this._isFinal = newValue;
                    base.RaisePropertyChanged("IsFinal");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO))]
    public partial class WorkflowInstanceRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _definition;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _domainType;
        
        public WorkflowInstanceRootFilterModelFullDTO()
        {
        }
        
        public WorkflowInstanceRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Definition = source.Definition;
            this.DomainType = source.DomainType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._definition, newValue))
                {
                    base.RaisePropertyChanging("Definition");
                    this._definition = newValue;
                    base.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get
            {
                return this._domainType;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._domainType, newValue))
                {
                    base.RaisePropertyChanging("DomainType");
                    this._domainType = newValue;
                    base.RaisePropertyChanged("DomainType");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO>
    {
        
        public WorkflowInstanceRootFilterModelRichDTO()
        {
        }
        
        public WorkflowInstanceRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowInstanceRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Definition;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DomainObjectId;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO DomainType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsActive;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsFinal;
        
        public WorkflowInstanceRootFilterModelStrictDTO()
        {
        }
        
        public WorkflowInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowInstanceRootFilterModel(this, source);
        }
        
        public WorkflowInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowInstanceRootFilterModel(this, source);
        }
        
        public WorkflowInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowInstanceRootFilterModel(this, source);
        }
        
        public WorkflowInstanceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowInstanceRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IWorkflowInstanceRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        System.Guid DomainObjectId
        {
            get;
            set;
        }
        
        bool? IsActive
        {
            get;
            set;
        }
        
        bool? IsFinal
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Definition
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO DomainType
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowInstanceRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IWorkflowInstanceRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO))]
    public partial class WorkflowLambdaRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO>
    {
        
        public WorkflowLambdaRootFilterModelSimpleDTO()
        {
        }
        
        public WorkflowLambdaRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO))]
    public partial class WorkflowLambdaRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        public WorkflowLambdaRootFilterModelFullDTO()
        {
        }
        
        public WorkflowLambdaRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Workflow = source.Workflow;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowLambdaRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO>
    {
        
        public WorkflowLambdaRootFilterModelRichDTO()
        {
        }
        
        public WorkflowLambdaRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowLambdaRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        public WorkflowLambdaRootFilterModelStrictDTO()
        {
        }
        
        public WorkflowLambdaRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowLambdaRootFilterModel(this, source);
        }
        
        public WorkflowLambdaRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowLambdaRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowLambdaRootFilterModel(this, source);
        }
        
        public WorkflowLambdaRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowLambdaRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowLambdaRootFilterModel(this, source);
        }
        
        public WorkflowLambdaRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowLambdaRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IWorkflowLambdaRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IWorkflowLambdaRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowLambdaRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IWorkflowLambdaRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO))]
    public partial class WorkflowRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO>
    {
        
        private bool? _isRoot = true;
        
        public WorkflowRootFilterModelSimpleDTO()
        {
        }
        
        public WorkflowRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelSimpleDTO source) : 
                base(source)
        {
            this.IsRoot = source.IsRoot;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsRoot
        {
            get
            {
                return this._isRoot;
            }
            set
            {
                bool? newValue;
                newValue = value;
                if (!object.Equals(this._isRoot, newValue))
                {
                    base.RaisePropertyChanging("IsRoot");
                    this._isRoot = newValue;
                    base.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO))]
    public partial class WorkflowRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _owner;
        
        public WorkflowRootFilterModelFullDTO()
        {
        }
        
        public WorkflowRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelFullDTO source) : 
                base(source)
        {
            this.Owner = source.Owner;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._owner, newValue))
                {
                    base.RaisePropertyChanging("Owner");
                    this._owner = newValue;
                    base.RaisePropertyChanged("Owner");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO>
    {
        
        public WorkflowRootFilterModelRichDTO()
        {
        }
        
        public WorkflowRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool? IsRoot = true;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Owner;
        
        public WorkflowRootFilterModelStrictDTO()
        {
        }
        
        public WorkflowRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowRootFilterModel(this, source);
        }
        
        public WorkflowRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowRootFilterModel(this, source);
        }
        
        public WorkflowRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowRootFilterModel(this, source);
        }
        
        public WorkflowRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IWorkflowRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
        
        bool? IsRoot
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Owner
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IWorkflowRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO))]
    public partial class WorkflowSourceRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.BaseAbstractDTO, Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelSimpleDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO>
    {
        
        public WorkflowSourceRootFilterModelSimpleDTO()
        {
        }
        
        public WorkflowSourceRootFilterModelSimpleDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelSimpleDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO ToSimple()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO(this);
        }
        
        public virtual Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO))]
    public partial class WorkflowSourceRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO, Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelFullDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO>
    {
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _sourceType;
        
        private Framework.Workflow.Generated.DTO.WorkflowSimpleDTO _workflow;
        
        private Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO _workflowType;
        
        public WorkflowSourceRootFilterModelFullDTO()
        {
        }
        
        public WorkflowSourceRootFilterModelFullDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelFullDTO source) : 
                base(source)
        {
            this.SourceType = source.SourceType;
            this.Workflow = source.Workflow;
            this.WorkflowType = source.WorkflowType;
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO SourceType
        {
            get
            {
                return this._sourceType;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._sourceType, newValue))
                {
                    base.RaisePropertyChanging("SourceType");
                    this._sourceType = newValue;
                    base.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get
            {
                return this._workflow;
            }
            set
            {
                Framework.Workflow.Generated.DTO.WorkflowSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflow, newValue))
                {
                    base.RaisePropertyChanging("Workflow");
                    this._workflow = newValue;
                    base.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO WorkflowType
        {
            get
            {
                return this._workflowType;
            }
            set
            {
                Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO newValue;
                newValue = value;
                if (!object.Equals(this._workflowType, newValue))
                {
                    base.RaisePropertyChanging("WorkflowType");
                    this._workflowType = newValue;
                    base.RaisePropertyChanged("WorkflowType");
                }
            }
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO ToFull()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowSourceRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO, Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelRichDTO, System.ICloneable<Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO>
    {
        
        public WorkflowSourceRootFilterModelRichDTO()
        {
        }
        
        public WorkflowSourceRootFilterModelRichDTO(Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelRichDTO source) : 
                base(source)
        {
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone();
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO Clone()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO(this);
        }
        
        public new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO ToRich()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO(this);
        }
        
        public override Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO ToStrict()
        {
            return new Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelStrictDTO(this);
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Workflow")]
    public partial class WorkflowSourceRootFilterModelStrictDTO
    {
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO SourceType;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.WorkflowIdentityDTO Workflow;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Framework.Workflow.Generated.DTO.DomainTypeIdentityDTO WorkflowType;
        
        public WorkflowSourceRootFilterModelStrictDTO()
        {
        }
        
        public WorkflowSourceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapRichToStrictForWorkflowSourceRootFilterModel(this, source);
        }
        
        public WorkflowSourceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelRichDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowSourceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService) : 
                this(((Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO)(source)), mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapFullToStrictForWorkflowSourceRootFilterModel(this, source);
        }
        
        public WorkflowSourceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelFullDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
        
        public WorkflowSourceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO source, Framework.Workflow.Generated.DTO.IWorkflowClientDTOMappingService mappingService)
        {
            if (object.ReferenceEquals(mappingService, null))
            {
                throw new System.ArgumentNullException("mappingService");
            }
            mappingService.MapSimpleToStrictForWorkflowSourceRootFilterModel(this, source);
        }
        
        public WorkflowSourceRootFilterModelStrictDTO(Framework.Workflow.Generated.DTO.WorkflowSourceRootFilterModelSimpleDTO source) : 
                this(source, Framework.Workflow.Generated.DTO.WorkflowClientPrimitiveDTOMappingService.Default)
        {
        }
    }
    
    public partial interface IWorkflowSourceRootFilterModelSimpleDTO : Framework.Workflow.Generated.DTO.IBaseAbstractDTO
    {
    }
    
    public partial interface IWorkflowSourceRootFilterModelFullDTO : Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelSimpleDTO
    {
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO SourceType
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.WorkflowSimpleDTO Workflow
        {
            get;
            set;
        }
        
        Framework.Workflow.Generated.DTO.DomainTypeSimpleDTO WorkflowType
        {
            get;
            set;
        }
    }
    
    public partial interface IWorkflowSourceRootFilterModelRichDTO : Framework.Workflow.Generated.DTO.IWorkflowSourceRootFilterModelFullDTO
    {
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Graphviz")]
    public enum GraphvizFormat : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bmp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gif = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jpeg = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pdf = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Png = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Svg = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SvgZ = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tiff = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vml = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VmlZ = 9,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Workflow.Domain.Definition")]
    public enum DomainTypeRole : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Domain = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primitive = 0,
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/Framework.Workflow.Domain.Definition")]
    public enum StateType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Condition = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Main = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Parallel = 2,
    }
}
